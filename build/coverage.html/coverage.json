{"/home/travis/build/npmtest/node-npmtest-react-relay/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":33}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_react_relay */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - init-after","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - init-after","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - init-after","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/lib.npmtest_react_relay.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/lib.npmtest_react_relay.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":56}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":62}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_react_relay */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_react_relay = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_react_relay = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":55}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":69},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-react-relay && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_react_relay */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_react_relay","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // init-after","    // run browser js-env code - init-after","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - init-after","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_react_relay.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_react_relay.rollup.js'] =","            local.assetsDict['/assets.npmtest_react_relay.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_react_relay.__dirname + '/lib.npmtest_react_relay.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/Relay.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/Relay.js","s":{"1":2,"2":2,"3":1,"4":4,"5":2,"6":2,"7":2,"8":0},"b":{"1":[2,2],"2":[4,4],"3":[2,0],"4":[2,2]},"f":{"1":4},"fnMap":{"1":{"name":"_interopRequireDefault","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":37}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":81}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":68}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":97}},"4":{"start":{"line":19,"column":39},"end":{"line":19,"column":95}},"5":{"start":{"line":21,"column":0},"end":{"line":23,"column":1}},"6":{"start":{"line":22,"column":2},"end":{"line":22,"column":235}},"7":{"start":{"line":27,"column":0},"end":{"line":27,"column":107}},"8":{"start":{"line":29,"column":0},"end":{"line":32,"column":3}}},"branchMap":{"1":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":70},"end":{"line":19,"column":73}},{"start":{"line":19,"column":76},"end":{"line":19,"column":94}}]},"2":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":46},"end":{"line":19,"column":49}},{"start":{"line":19,"column":53},"end":{"line":19,"column":67}}]},"3":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":0},"end":{"line":21,"column":0}},{"start":{"line":21,"column":0},"end":{"line":21,"column":0}}]},"4":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":30},"end":{"line":22,"column":72}},{"start":{"line":22,"column":76},"end":{"line":22,"column":96}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule Relay"," * "," */","","'use strict';","","var _extends3 = _interopRequireDefault(require('babel-runtime/helpers/extends'));","","var _promise2 = _interopRequireDefault(require('fbjs/lib/Promise'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","if (process.env.NODE_ENV !== 'production') {","  require('fbjs/lib/warning')(typeof _promise2['default'] === 'function' && Array.prototype.find, 'Relay relies on polyfills for ES6 features in older browsers. ' + 'Babel provides a good one: https://babeljs.io/docs/usage/polyfill/');","}","","// By default, assume that GraphQL is served at `/graphql` on the same domain.","// To override, use `Relay.injectNetworkLayer`.","require('./RelayStore').injectDefaultNetworkLayer(new (require('./RelayDefaultNetworkLayer'))('/graphql'));","","module.exports = (0, _extends3['default'])({}, require('./RelayPublic'), {","  // Expose the default network layer to allow convenient re-configuration.","  DefaultNetworkLayer: require('./RelayDefaultNetworkLayer')","});"],"l":{"15":2,"17":2,"19":4,"21":2,"22":2,"27":2,"29":0}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayStore.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayStore.js","s":{"1":6},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":55}}},"branchMap":{},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayStore"," * "," */","","'use strict';","","module.exports = new (require('./RelayEnvironment'))();"],"l":{"15":6}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayEnvironment.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayEnvironment.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":6,"7":6,"8":6,"9":0,"10":0,"11":1,"12":0,"13":1,"14":0,"15":1,"16":0,"17":1,"18":0,"19":1,"20":0,"21":1,"22":0,"23":1,"24":0,"25":1,"26":0,"27":1,"28":0,"29":1,"30":0,"31":1,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":1,"51":0,"52":1,"53":0,"54":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":1,"64":0,"65":0,"66":1,"67":1},"b":{"1":[1,0],"2":[1,1],"3":[0,6],"4":[0,0],"5":[0,0]},"f":{"1":1,"2":1,"3":6,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":37}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":23},"end":{"line":33,"column":35}}},"3":{"name":"RelayEnvironment","line":34,"loc":{"start":{"line":34,"column":2},"end":{"line":34,"column":39}}},"4":{"name":"getStoreData","line":48,"loc":{"start":{"line":48,"column":44},"end":{"line":48,"column":68}}},"5":{"name":"injectDefaultNetworkLayer","line":57,"loc":{"start":{"line":57,"column":57},"end":{"line":57,"column":106}}},"6":{"name":"injectNetworkLayer","line":61,"loc":{"start":{"line":61,"column":50},"end":{"line":61,"column":92}}},"7":{"name":"injectQueryTracker","line":70,"loc":{"start":{"line":70,"column":50},"end":{"line":70,"column":92}}},"8":{"name":"addNetworkSubscriber","line":74,"loc":{"start":{"line":74,"column":52},"end":{"line":74,"column":115}}},"9":{"name":"injectTaskScheduler","line":78,"loc":{"start":{"line":78,"column":51},"end":{"line":78,"column":91}}},"10":{"name":"injectCacheManager","line":82,"loc":{"start":{"line":82,"column":50},"end":{"line":82,"column":92}}},"11":{"name":"primeCache","line":92,"loc":{"start":{"line":92,"column":42},"end":{"line":92,"column":82}}},"12":{"name":"forceFetch","line":102,"loc":{"start":{"line":102,"column":42},"end":{"line":102,"column":82}}},"13":{"name":"read","line":111,"loc":{"start":{"line":111,"column":36},"end":{"line":111,"column":73}}},"14":{"name":"readAll","line":120,"loc":{"start":{"line":120,"column":39},"end":{"line":120,"column":80}}},"15":{"name":"(anonymous_15)","line":123,"loc":{"start":{"line":123,"column":23},"end":{"line":123,"column":41}}},"16":{"name":"readQuery","line":135,"loc":{"start":{"line":135,"column":41},"end":{"line":135,"column":75}}},"17":{"name":"(anonymous_17)","line":141,"loc":{"start":{"line":141,"column":42},"end":{"line":141,"column":58}}},"18":{"name":"observe","line":160,"loc":{"start":{"line":160,"column":39},"end":{"line":160,"column":74}}},"19":{"name":"getFragmentResolver","line":173,"loc":{"start":{"line":173,"column":51},"end":{"line":173,"column":98}}},"20":{"name":"applyUpdate","line":183,"loc":{"start":{"line":183,"column":43},"end":{"line":183,"column":85}}},"21":{"name":"commitUpdate","line":194,"loc":{"start":{"line":194,"column":44},"end":{"line":194,"column":87}}},"22":{"name":"(anonymous_22)","line":199,"loc":{"start":{"line":199,"column":15},"end":{"line":199,"column":27}}},"23":{"name":"update","line":215,"loc":{"start":{"line":215,"column":38},"end":{"line":215,"column":75}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":97}},"3":{"start":{"line":17,"column":39},"end":{"line":17,"column":95}},"4":{"start":{"line":33,"column":0},"end":{"line":221,"column":4}},"5":{"start":{"line":34,"column":2},"end":{"line":41,"column":3}},"6":{"start":{"line":35,"column":4},"end":{"line":35,"column":61}},"7":{"start":{"line":37,"column":4},"end":{"line":37,"column":82}},"8":{"start":{"line":38,"column":4},"end":{"line":38,"column":104}},"9":{"start":{"line":39,"column":4},"end":{"line":39,"column":51}},"10":{"start":{"line":40,"column":4},"end":{"line":40,"column":53}},"11":{"start":{"line":48,"column":2},"end":{"line":50,"column":4}},"12":{"start":{"line":49,"column":4},"end":{"line":49,"column":27}},"13":{"start":{"line":57,"column":2},"end":{"line":59,"column":4}},"14":{"start":{"line":58,"column":4},"end":{"line":58,"column":80}},"15":{"start":{"line":61,"column":2},"end":{"line":63,"column":4}},"16":{"start":{"line":62,"column":4},"end":{"line":62,"column":73}},"17":{"start":{"line":70,"column":2},"end":{"line":72,"column":4}},"18":{"start":{"line":71,"column":4},"end":{"line":71,"column":53}},"19":{"start":{"line":74,"column":2},"end":{"line":76,"column":4}},"20":{"start":{"line":75,"column":4},"end":{"line":75,"column":99}},"21":{"start":{"line":78,"column":2},"end":{"line":80,"column":4}},"22":{"start":{"line":79,"column":4},"end":{"line":79,"column":51}},"23":{"start":{"line":82,"column":2},"end":{"line":84,"column":4}},"24":{"start":{"line":83,"column":4},"end":{"line":83,"column":53}},"25":{"start":{"line":92,"column":2},"end":{"line":94,"column":4}},"26":{"start":{"line":93,"column":4},"end":{"line":93,"column":68}},"27":{"start":{"line":102,"column":2},"end":{"line":104,"column":4}},"28":{"start":{"line":103,"column":4},"end":{"line":103,"column":75}},"29":{"start":{"line":111,"column":2},"end":{"line":113,"column":4}},"30":{"start":{"line":112,"column":4},"end":{"line":112,"column":88}},"31":{"start":{"line":120,"column":2},"end":{"line":126,"column":4}},"32":{"start":{"line":121,"column":4},"end":{"line":121,"column":21}},"33":{"start":{"line":123,"column":4},"end":{"line":125,"column":7}},"34":{"start":{"line":124,"column":6},"end":{"line":124,"column":91}},"35":{"start":{"line":135,"column":2},"end":{"line":152,"column":4}},"36":{"start":{"line":136,"column":4},"end":{"line":136,"column":22}},"37":{"start":{"line":138,"column":4},"end":{"line":138,"column":55}},"38":{"start":{"line":139,"column":4},"end":{"line":139,"column":42}},"39":{"start":{"line":140,"column":4},"end":{"line":140,"column":21}},"40":{"start":{"line":141,"column":4},"end":{"line":150,"column":7}},"41":{"start":{"line":142,"column":6},"end":{"line":142,"column":53}},"42":{"start":{"line":144,"column":6},"end":{"line":144,"column":24}},"43":{"start":{"line":145,"column":6},"end":{"line":145,"column":72}},"44":{"start":{"line":146,"column":6},"end":{"line":148,"column":7}},"45":{"start":{"line":147,"column":8},"end":{"line":147,"column":50}},"46":{"start":{"line":149,"column":6},"end":{"line":149,"column":25}},"47":{"start":{"line":151,"column":4},"end":{"line":151,"column":19}},"48":{"start":{"line":160,"column":2},"end":{"line":162,"column":4}},"49":{"start":{"line":161,"column":4},"end":{"line":161,"column":92}},"50":{"start":{"line":173,"column":2},"end":{"line":175,"column":4}},"51":{"start":{"line":174,"column":4},"end":{"line":174,"column":91}},"52":{"start":{"line":183,"column":2},"end":{"line":186,"column":4}},"53":{"start":{"line":184,"column":4},"end":{"line":184,"column":35}},"54":{"start":{"line":185,"column":4},"end":{"line":185,"column":103}},"55":{"start":{"line":194,"column":2},"end":{"line":206,"column":4}},"56":{"start":{"line":195,"column":4},"end":{"line":195,"column":60}},"57":{"start":{"line":198,"column":4},"end":{"line":198,"column":50}},"58":{"start":{"line":199,"column":4},"end":{"line":204,"column":7}},"59":{"start":{"line":200,"column":6},"end":{"line":202,"column":7}},"60":{"start":{"line":201,"column":8},"end":{"line":201,"column":15}},"61":{"start":{"line":203,"column":6},"end":{"line":203,"column":27}},"62":{"start":{"line":205,"column":4},"end":{"line":205,"column":23}},"63":{"start":{"line":215,"column":2},"end":{"line":218,"column":4}},"64":{"start":{"line":216,"column":4},"end":{"line":216,"column":159}},"65":{"start":{"line":217,"column":4},"end":{"line":217,"column":43}},"66":{"start":{"line":220,"column":2},"end":{"line":220,"column":26}},"67":{"start":{"line":223,"column":0},"end":{"line":223,"column":34}}},"branchMap":{"1":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":70},"end":{"line":17,"column":73}},{"start":{"line":17,"column":76},"end":{"line":17,"column":94}}]},"2":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":46},"end":{"line":17,"column":49}},{"start":{"line":17,"column":53},"end":{"line":17,"column":67}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":37,"column":34},"end":{"line":37,"column":43}},{"start":{"line":37,"column":46},"end":{"line":37,"column":81}}]},"4":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":6},"end":{"line":146,"column":6}},{"start":{"line":146,"column":6},"end":{"line":146,"column":6}}]},"5":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":6},"end":{"line":200,"column":6}},{"start":{"line":200,"column":6},"end":{"line":200,"column":6}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayEnvironment"," * "," */","","'use strict';","","var _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","/**"," * @public"," *"," * `RelayEnvironment` is the public API for Relay core. Each instance provides"," * an isolated environment with:"," * - Methods for fetching and updating data."," * - An in-memory cache of fetched data."," * - A configurable network layer for resolving queries/mutations."," * - A configurable task scheduler to control when internal tasks are executed."," *"," * No data or configuration is shared between instances. We recommend creating"," * one `RelayEnvironment` instance per user: client apps may share a single"," * instance, server apps may create one instance per HTTP request."," */","var RelayEnvironment = function () {","  function RelayEnvironment(storeData) {","    (0, _classCallCheck3['default'])(this, RelayEnvironment);","","    this._storeData = storeData ? storeData : new (require('./RelayStoreData'))();","    this._storeData.getChangeEmitter().injectBatchingStrategy(require('./relayUnstableBatchedUpdates'));","    this.applyUpdate = this.applyUpdate.bind(this);","    this.commitUpdate = this.commitUpdate.bind(this);","  }","","  /**","   * @internal","   */","","","  RelayEnvironment.prototype.getStoreData = function getStoreData() {","    return this._storeData;","  };","","  /**","   * @internal","   */","","","  RelayEnvironment.prototype.injectDefaultNetworkLayer = function injectDefaultNetworkLayer(networkLayer) {","    this._storeData.getNetworkLayer().injectDefaultImplementation(networkLayer);","  };","","  RelayEnvironment.prototype.injectNetworkLayer = function injectNetworkLayer(networkLayer) {","    this._storeData.getNetworkLayer().injectImplementation(networkLayer);","  };","","  /**","   * @internal","   */","","","  RelayEnvironment.prototype.injectQueryTracker = function injectQueryTracker(queryTracker) {","    this._storeData.injectQueryTracker(queryTracker);","  };","","  RelayEnvironment.prototype.addNetworkSubscriber = function addNetworkSubscriber(queryCallback, mutationCallback) {","    return this._storeData.getNetworkLayer().addNetworkSubscriber(queryCallback, mutationCallback);","  };","","  RelayEnvironment.prototype.injectTaskScheduler = function injectTaskScheduler(scheduler) {","    this._storeData.injectTaskScheduler(scheduler);","  };","","  RelayEnvironment.prototype.injectCacheManager = function injectCacheManager(cacheManager) {","    this._storeData.injectCacheManager(cacheManager);","  };","","  /**","   * Primes the store by sending requests for any missing data that would be","   * required to satisfy the supplied set of queries.","   */","","","  RelayEnvironment.prototype.primeCache = function primeCache(querySet, callback) {","    return this._storeData.getQueryRunner().run(querySet, callback);","  };","","  /**","   * Forces the supplied set of queries to be fetched and written to the store.","   * Any data that previously satisfied the queries will be overwritten.","   */","","","  RelayEnvironment.prototype.forceFetch = function forceFetch(querySet, callback) {","    return this._storeData.getQueryRunner().forceFetch(querySet, callback);","  };","","  /**","   * Reads query data anchored at the supplied data ID.","   */","","","  RelayEnvironment.prototype.read = function read(node, dataID, options) {","    return require('./readRelayQueryData')(this._storeData, node, dataID, options).data;","  };","","  /**","   * Reads query data anchored at the supplied data IDs.","   */","","","  RelayEnvironment.prototype.readAll = function readAll(node, dataIDs, options) {","    var _this = this;","","    return dataIDs.map(function (dataID) {","      return require('./readRelayQueryData')(_this._storeData, node, dataID, options).data;","    });","  };","","  /**","   * Reads query data, where each element in the result array corresponds to a","   * root call argument. If the root call has no arguments, the result array","   * will contain exactly one element.","   */","","","  RelayEnvironment.prototype.readQuery = function readQuery(root, options) {","    var _this2 = this;","","    var queuedStore = this._storeData.getQueuedStore();","    var storageKey = root.getStorageKey();","    var results = [];","    require('./forEachRootCallArg')(root, function (_ref) {","      var identifyingArgKey = _ref.identifyingArgKey;","","      var data = void 0;","      var dataID = queuedStore.getDataID(storageKey, identifyingArgKey);","      if (dataID != null) {","        data = _this2.read(root, dataID, options);","      }","      results.push(data);","    });","    return results;","  };","","  /**","   * Reads and subscribes to query data anchored at the supplied data ID. The","   * returned observable emits updates as the data changes over time.","   */","","","  RelayEnvironment.prototype.observe = function observe(fragment, dataID) {","    return new (require('./RelayQueryResultObservable'))(this._storeData, fragment, dataID);","  };","","  /**","   * @internal","   *","   * Returns a fragment \"resolver\" - a subscription to the results of a fragment","   * and a means to access the latest results. This is a transitional API and","   * not recommended for general use.","   */","","","  RelayEnvironment.prototype.getFragmentResolver = function getFragmentResolver(fragment, onNext) {","    return new (require('./GraphQLStoreQueryResolver'))(this._storeData, fragment, onNext);","  };","","  /**","   * Adds an update to the store without committing it. The returned","   * RelayMutationTransaction can be committed or rolled back at a later time.","   */","","","  RelayEnvironment.prototype.applyUpdate = function applyUpdate(mutation, callbacks) {","    mutation.bindEnvironment(this);","    return this._storeData.getMutationQueue().createTransaction(mutation, callbacks).applyOptimistic();","  };","","  /**","   * Adds an update to the store and commits it immediately. Returns","   * the RelayMutationTransaction.","   */","","","  RelayEnvironment.prototype.commitUpdate = function commitUpdate(mutation, callbacks) {","    var transaction = this.applyUpdate(mutation, callbacks);","    // The idea here is to defer the call to `commit()` to give the optimistic","    // mutation time to flush out to the UI before starting the commit work.","    var preCommitStatus = transaction.getStatus();","    setTimeout(function () {","      if (transaction.getStatus() !== preCommitStatus) {","        return;","      }","      transaction.commit();","    });","    return transaction;","  };","","  /**","   * @deprecated","   *","   * Method renamed to commitUpdate","   */","","","  RelayEnvironment.prototype.update = function update(mutation, callbacks) {","    require('fbjs/lib/warning')(false, '`Relay.Store.update` is deprecated. Please use' + ' `Relay.Store.commitUpdate` or `Relay.Store.applyUpdate` instead.');","    this.commitUpdate(mutation, callbacks);","  };","","  return RelayEnvironment;","}();","","module.exports = RelayEnvironment;"],"l":{"15":1,"17":1,"33":1,"34":1,"35":6,"37":6,"38":6,"39":0,"40":0,"48":1,"49":0,"57":1,"58":0,"61":1,"62":0,"70":1,"71":0,"74":1,"75":0,"78":1,"79":0,"82":1,"83":0,"92":1,"93":0,"102":1,"103":0,"111":1,"112":0,"120":1,"121":0,"123":0,"124":0,"135":1,"136":0,"138":0,"139":0,"140":0,"141":0,"142":0,"144":0,"145":0,"146":0,"147":0,"149":0,"151":0,"160":1,"161":0,"173":1,"174":0,"183":1,"184":0,"185":0,"194":1,"195":0,"198":0,"199":0,"200":0,"201":0,"203":0,"205":0,"215":1,"216":0,"217":0,"220":1,"223":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayStoreData.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayStoreData.js","s":{"1":1,"2":1,"3":1,"4":1,"5":3,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":6,"14":6,"15":6,"16":6,"17":6,"18":6,"19":6,"20":6,"21":6,"22":6,"23":6,"24":6,"25":6,"26":6,"27":6,"28":6,"29":6,"30":6,"31":6,"32":6,"33":6,"34":6,"35":6,"36":6,"37":6,"38":6,"39":1,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":0,"47":1,"48":0,"49":1,"50":0,"51":1,"52":0,"53":1,"54":0,"55":1,"56":0,"57":1,"58":0,"59":0,"60":1,"61":0,"62":0,"63":1,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":1,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":1,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":1,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":1,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":1,"119":0,"120":0,"121":0,"122":0,"123":0,"124":1,"125":0,"126":1,"127":0,"128":1,"129":0,"130":0,"131":0,"132":0,"133":1,"134":0,"135":1,"136":0,"137":1,"138":0,"139":1,"140":0,"141":1,"142":0,"143":1,"144":0,"145":1,"146":0,"147":1,"148":0,"149":1,"150":0,"151":1,"152":0,"153":1,"154":6,"155":1,"156":0,"157":1,"158":0,"159":1,"160":0,"161":1,"162":0,"163":1,"164":0,"165":1,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":1,"176":0,"177":1,"178":0,"179":1,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":1,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":1,"194":1,"195":0,"196":0,"197":0,"198":0,"199":0,"200":1,"201":1},"b":{"1":[3,0],"2":[3,3],"3":[0,6],"4":[6,0],"5":[0,6],"6":[6,0],"7":[0,6],"8":[6,0],"9":[0,6],"10":[6,0],"11":[0,6],"12":[6,0],"13":[0,6],"14":[6,0],"15":[0,6],"16":[6,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0,0],"27":[0,0],"28":[0,0],"29":[0,0]},"f":{"1":3,"2":1,"3":6,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":6,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":37}}},"2":{"name":"(anonymous_2)","line":51,"loc":{"start":{"line":51,"column":21},"end":{"line":51,"column":33}}},"3":{"name":"RelayStoreData","line":52,"loc":{"start":{"line":52,"column":2},"end":{"line":52,"column":28}}},"4":{"name":"initializeGarbageCollector","line":89,"loc":{"start":{"line":89,"column":56},"end":{"line":89,"column":103}}},"5":{"name":"injectQueryTracker","line":108,"loc":{"start":{"line":108,"column":48},"end":{"line":108,"column":90}}},"6":{"name":"injectTaskScheduler","line":118,"loc":{"start":{"line":118,"column":49},"end":{"line":118,"column":89}}},"7":{"name":"injectCacheManager","line":128,"loc":{"start":{"line":128,"column":48},"end":{"line":128,"column":90}}},"8":{"name":"clearCacheManager","line":132,"loc":{"start":{"line":132,"column":47},"end":{"line":132,"column":76}}},"9":{"name":"hasCacheManager","line":136,"loc":{"start":{"line":136,"column":45},"end":{"line":136,"column":72}}},"10":{"name":"getCacheManager","line":140,"loc":{"start":{"line":140,"column":45},"end":{"line":140,"column":72}}},"11":{"name":"hasOptimisticUpdate","line":149,"loc":{"start":{"line":149,"column":49},"end":{"line":149,"column":86}}},"12":{"name":"getClientMutationIDs","line":161,"loc":{"start":{"line":161,"column":50},"end":{"line":161,"column":88}}},"13":{"name":"restoreQueriesFromCache","line":173,"loc":{"start":{"line":173,"column":53},"end":{"line":173,"column":106}}},"14":{"name":"onSuccess","line":181,"loc":{"start":{"line":181,"column":17},"end":{"line":181,"column":38}}},"15":{"name":"onFailure","line":186,"loc":{"start":{"line":186,"column":17},"end":{"line":186,"column":38}}},"16":{"name":"restoreFragmentFromCache","line":201,"loc":{"start":{"line":201,"column":54},"end":{"line":201,"column":123}}},"17":{"name":"onSuccess","line":209,"loc":{"start":{"line":209,"column":17},"end":{"line":209,"column":38}}},"18":{"name":"onFailure","line":214,"loc":{"start":{"line":214,"column":17},"end":{"line":214,"column":38}}},"19":{"name":"handleQueryPayload","line":227,"loc":{"start":{"line":227,"column":48},"end":{"line":227,"column":104}}},"20":{"name":"handleFragmentPayload","line":244,"loc":{"start":{"line":244,"column":51},"end":{"line":244,"column":127}}},"21":{"name":"handleUpdatePayload","line":262,"loc":{"start":{"line":262,"column":49},"end":{"line":262,"column":104}}},"22":{"name":"buildFragmentQueryForDataID","line":292,"loc":{"start":{"line":292,"column":57},"end":{"line":292,"column":112}}},"23":{"name":"getNodeData","line":309,"loc":{"start":{"line":309,"column":41},"end":{"line":309,"column":64}}},"24":{"name":"getQueuedData","line":313,"loc":{"start":{"line":313,"column":43},"end":{"line":313,"column":68}}},"25":{"name":"clearQueuedData","line":317,"loc":{"start":{"line":317,"column":45},"end":{"line":317,"column":72}}},"26":{"name":"(anonymous_26)","line":320,"loc":{"start":{"line":320,"column":59},"end":{"line":320,"column":77}}},"27":{"name":"getCachedData","line":326,"loc":{"start":{"line":326,"column":43},"end":{"line":326,"column":68}}},"28":{"name":"getGarbageCollector","line":330,"loc":{"start":{"line":330,"column":49},"end":{"line":330,"column":80}}},"29":{"name":"getMutationQueue","line":334,"loc":{"start":{"line":334,"column":46},"end":{"line":334,"column":74}}},"30":{"name":"getNetworkLayer","line":338,"loc":{"start":{"line":338,"column":45},"end":{"line":338,"column":72}}},"31":{"name":"getCachedStore","line":347,"loc":{"start":{"line":347,"column":44},"end":{"line":347,"column":70}}},"32":{"name":"getQueuedStore","line":356,"loc":{"start":{"line":356,"column":44},"end":{"line":356,"column":70}}},"33":{"name":"getRecordStore","line":365,"loc":{"start":{"line":365,"column":44},"end":{"line":365,"column":70}}},"34":{"name":"getRecordWriter","line":374,"loc":{"start":{"line":374,"column":45},"end":{"line":374,"column":72}}},"35":{"name":"getQueryTracker","line":379,"loc":{"start":{"line":379,"column":45},"end":{"line":379,"column":72}}},"36":{"name":"getQueryRunner","line":383,"loc":{"start":{"line":383,"column":44},"end":{"line":383,"column":70}}},"37":{"name":"getChangeEmitter","line":387,"loc":{"start":{"line":387,"column":46},"end":{"line":387,"column":74}}},"38":{"name":"getRangeData","line":391,"loc":{"start":{"line":391,"column":42},"end":{"line":391,"column":66}}},"39":{"name":"getPendingQueryTracker","line":395,"loc":{"start":{"line":395,"column":52},"end":{"line":395,"column":86}}},"40":{"name":"getTaskQueue","line":399,"loc":{"start":{"line":399,"column":42},"end":{"line":399,"column":66}}},"41":{"name":"getRootCallData","line":411,"loc":{"start":{"line":411,"column":45},"end":{"line":411,"column":72}}},"42":{"name":"_isStoreDataEmpty","line":415,"loc":{"start":{"line":415,"column":47},"end":{"line":415,"column":76}}},"43":{"name":"_handleChangedAndNewDataIDs","line":425,"loc":{"start":{"line":425,"column":57},"end":{"line":425,"column":105}}},"44":{"name":"(anonymous_44)","line":431,"loc":{"start":{"line":431,"column":27},"end":{"line":431,"column":41}}},"45":{"name":"(anonymous_45)","line":437,"loc":{"start":{"line":437,"column":27},"end":{"line":437,"column":41}}},"46":{"name":"_getRecordWriterForMutation","line":443,"loc":{"start":{"line":443,"column":57},"end":{"line":443,"column":96}}},"47":{"name":"getRecordWriterForOptimisticMutation","line":448,"loc":{"start":{"line":448,"column":66},"end":{"line":448,"column":130}}},"48":{"name":"toJSON","line":454,"loc":{"start":{"line":454,"column":36},"end":{"line":454,"column":54}}},"49":{"name":"getRecordsWithoutPaths","line":458,"loc":{"start":{"line":458,"column":33},"end":{"line":458,"column":76}}},"50":{"name":"(anonymous_50)","line":459,"loc":{"start":{"line":459,"column":54},"end":{"line":459,"column":72}}},"51":{"name":"fromJSON","line":476,"loc":{"start":{"line":476,"column":28},"end":{"line":476,"column":51}}},"52":{"name":"deserializeRecordRanges","line":502,"loc":{"start":{"line":502,"column":0},"end":{"line":502,"column":42}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":81}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":95}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":82}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":97}},"5":{"start":{"line":21,"column":39},"end":{"line":21,"column":95}},"6":{"start":{"line":23,"column":0},"end":{"line":25,"column":71}},"7":{"start":{"line":27,"column":0},"end":{"line":27,"column":82}},"8":{"start":{"line":29,"column":0},"end":{"line":33,"column":56}},"9":{"start":{"line":35,"column":0},"end":{"line":38,"column":3}},"10":{"start":{"line":39,"column":0},"end":{"line":42,"column":3}},"11":{"start":{"line":51,"column":0},"end":{"line":494,"column":4}},"12":{"start":{"line":52,"column":2},"end":{"line":80,"column":3}},"13":{"start":{"line":53,"column":4},"end":{"line":53,"column":95}},"14":{"start":{"line":54,"column":4},"end":{"line":54,"column":99}},"15":{"start":{"line":55,"column":4},"end":{"line":55,"column":95}},"16":{"start":{"line":56,"column":4},"end":{"line":56,"column":89}},"17":{"start":{"line":57,"column":4},"end":{"line":57,"column":93}},"18":{"start":{"line":58,"column":4},"end":{"line":58,"column":94}},"19":{"start":{"line":59,"column":4},"end":{"line":59,"column":132}},"20":{"start":{"line":60,"column":4},"end":{"line":60,"column":59}},"21":{"start":{"line":62,"column":4},"end":{"line":62,"column":30}},"22":{"start":{"line":63,"column":4},"end":{"line":63,"column":40}},"23":{"start":{"line":64,"column":4},"end":{"line":64,"column":48}},"24":{"start":{"line":65,"column":4},"end":{"line":65,"column":194}},"25":{"start":{"line":66,"column":4},"end":{"line":66,"column":82}},"26":{"start":{"line":67,"column":4},"end":{"line":67,"column":70}},"27":{"start":{"line":68,"column":4},"end":{"line":68,"column":64}},"28":{"start":{"line":69,"column":4},"end":{"line":69,"column":38}},"29":{"start":{"line":70,"column":4},"end":{"line":70,"column":82}},"30":{"start":{"line":71,"column":4},"end":{"line":71,"column":68}},"31":{"start":{"line":72,"column":4},"end":{"line":72,"column":64}},"32":{"start":{"line":73,"column":4},"end":{"line":73,"column":40}},"33":{"start":{"line":74,"column":4},"end":{"line":74,"column":224}},"34":{"start":{"line":75,"column":4},"end":{"line":75,"column":28}},"35":{"start":{"line":76,"column":4},"end":{"line":76,"column":126}},"36":{"start":{"line":77,"column":4},"end":{"line":77,"column":32}},"37":{"start":{"line":78,"column":4},"end":{"line":78,"column":36}},"38":{"start":{"line":79,"column":4},"end":{"line":79,"column":58}},"39":{"start":{"line":89,"column":2},"end":{"line":96,"column":4}},"40":{"start":{"line":90,"column":4},"end":{"line":90,"column":120}},"41":{"start":{"line":91,"column":4},"end":{"line":91,"column":52}},"42":{"start":{"line":92,"column":4},"end":{"line":92,"column":142}},"43":{"start":{"line":93,"column":4},"end":{"line":95,"column":5}},"44":{"start":{"line":94,"column":6},"end":{"line":94,"column":89}},"45":{"start":{"line":108,"column":2},"end":{"line":110,"column":4}},"46":{"start":{"line":109,"column":4},"end":{"line":109,"column":38}},"47":{"start":{"line":118,"column":2},"end":{"line":120,"column":4}},"48":{"start":{"line":119,"column":4},"end":{"line":119,"column":47}},"49":{"start":{"line":128,"column":2},"end":{"line":130,"column":4}},"50":{"start":{"line":129,"column":4},"end":{"line":129,"column":38}},"51":{"start":{"line":132,"column":2},"end":{"line":134,"column":4}},"52":{"start":{"line":133,"column":4},"end":{"line":133,"column":30}},"53":{"start":{"line":136,"column":2},"end":{"line":138,"column":4}},"54":{"start":{"line":137,"column":4},"end":{"line":137,"column":32}},"55":{"start":{"line":140,"column":2},"end":{"line":142,"column":4}},"56":{"start":{"line":141,"column":4},"end":{"line":141,"column":30}},"57":{"start":{"line":149,"column":2},"end":{"line":152,"column":4}},"58":{"start":{"line":150,"column":4},"end":{"line":150,"column":62}},"59":{"start":{"line":151,"column":4},"end":{"line":151,"column":61}},"60":{"start":{"line":161,"column":2},"end":{"line":164,"column":4}},"61":{"start":{"line":162,"column":4},"end":{"line":162,"column":62}},"62":{"start":{"line":163,"column":4},"end":{"line":163,"column":62}},"63":{"start":{"line":173,"column":2},"end":{"line":192,"column":4}},"64":{"start":{"line":174,"column":4},"end":{"line":174,"column":21}},"65":{"start":{"line":176,"column":4},"end":{"line":176,"column":42}},"66":{"start":{"line":177,"column":4},"end":{"line":177,"column":153}},"67":{"start":{"line":178,"column":4},"end":{"line":178,"column":64}},"68":{"start":{"line":179,"column":4},"end":{"line":179,"column":89}},"69":{"start":{"line":180,"column":4},"end":{"line":191,"column":7}},"70":{"start":{"line":182,"column":8},"end":{"line":182,"column":72}},"71":{"start":{"line":183,"column":8},"end":{"line":183,"column":23}},"72":{"start":{"line":184,"column":8},"end":{"line":184,"column":53}},"73":{"start":{"line":187,"column":8},"end":{"line":187,"column":72}},"74":{"start":{"line":188,"column":8},"end":{"line":188,"column":23}},"75":{"start":{"line":189,"column":8},"end":{"line":189,"column":53}},"76":{"start":{"line":201,"column":2},"end":{"line":220,"column":4}},"77":{"start":{"line":202,"column":4},"end":{"line":202,"column":22}},"78":{"start":{"line":204,"column":4},"end":{"line":204,"column":42}},"79":{"start":{"line":205,"column":4},"end":{"line":205,"column":154}},"80":{"start":{"line":206,"column":4},"end":{"line":206,"column":64}},"81":{"start":{"line":207,"column":4},"end":{"line":207,"column":97}},"82":{"start":{"line":208,"column":4},"end":{"line":219,"column":7}},"83":{"start":{"line":210,"column":8},"end":{"line":210,"column":73}},"84":{"start":{"line":211,"column":8},"end":{"line":211,"column":23}},"85":{"start":{"line":212,"column":8},"end":{"line":212,"column":53}},"86":{"start":{"line":215,"column":8},"end":{"line":215,"column":73}},"87":{"start":{"line":216,"column":8},"end":{"line":216,"column":23}},"88":{"start":{"line":217,"column":8},"end":{"line":217,"column":53}},"89":{"start":{"line":227,"column":2},"end":{"line":237,"column":4}},"90":{"start":{"line":228,"column":4},"end":{"line":228,"column":91}},"91":{"start":{"line":229,"column":4},"end":{"line":229,"column":64}},"92":{"start":{"line":230,"column":4},"end":{"line":233,"column":7}},"93":{"start":{"line":234,"column":4},"end":{"line":234,"column":64}},"94":{"start":{"line":235,"column":4},"end":{"line":235,"column":67}},"95":{"start":{"line":236,"column":4},"end":{"line":236,"column":20}},"96":{"start":{"line":244,"column":2},"end":{"line":255,"column":4}},"97":{"start":{"line":245,"column":4},"end":{"line":245,"column":94}},"98":{"start":{"line":246,"column":4},"end":{"line":246,"column":64}},"99":{"start":{"line":247,"column":4},"end":{"line":250,"column":7}},"100":{"start":{"line":251,"column":4},"end":{"line":251,"column":66}},"101":{"start":{"line":252,"column":4},"end":{"line":252,"column":57}},"102":{"start":{"line":253,"column":4},"end":{"line":253,"column":67}},"103":{"start":{"line":254,"column":4},"end":{"line":254,"column":20}},"104":{"start":{"line":262,"column":2},"end":{"line":284,"column":4}},"105":{"start":{"line":263,"column":4},"end":{"line":264,"column":53}},"106":{"start":{"line":266,"column":4},"end":{"line":266,"column":92}},"107":{"start":{"line":267,"column":4},"end":{"line":267,"column":64}},"108":{"start":{"line":268,"column":4},"end":{"line":268,"column":30}},"109":{"start":{"line":269,"column":4},"end":{"line":275,"column":5}},"110":{"start":{"line":270,"column":6},"end":{"line":270,"column":57}},"111":{"start":{"line":271,"column":6},"end":{"line":271,"column":190}},"112":{"start":{"line":272,"column":6},"end":{"line":272,"column":81}},"113":{"start":{"line":274,"column":6},"end":{"line":274,"column":56}},"114":{"start":{"line":276,"column":4},"end":{"line":280,"column":7}},"115":{"start":{"line":281,"column":4},"end":{"line":281,"column":131}},"116":{"start":{"line":282,"column":4},"end":{"line":282,"column":67}},"117":{"start":{"line":283,"column":4},"end":{"line":283,"column":20}},"118":{"start":{"line":292,"column":2},"end":{"line":307,"column":4}},"119":{"start":{"line":293,"column":4},"end":{"line":297,"column":5}},"120":{"start":{"line":294,"column":6},"end":{"line":294,"column":97}},"121":{"start":{"line":295,"column":6},"end":{"line":295,"column":147}},"122":{"start":{"line":296,"column":6},"end":{"line":296,"column":85}},"123":{"start":{"line":300,"column":4},"end":{"line":306,"column":18}},"124":{"start":{"line":309,"column":2},"end":{"line":311,"column":4}},"125":{"start":{"line":310,"column":4},"end":{"line":310,"column":25}},"126":{"start":{"line":313,"column":2},"end":{"line":315,"column":4}},"127":{"start":{"line":314,"column":4},"end":{"line":314,"column":31}},"128":{"start":{"line":317,"column":2},"end":{"line":324,"column":4}},"129":{"start":{"line":318,"column":4},"end":{"line":318,"column":22}},"130":{"start":{"line":320,"column":4},"end":{"line":323,"column":7}},"131":{"start":{"line":321,"column":6},"end":{"line":321,"column":40}},"132":{"start":{"line":322,"column":6},"end":{"line":322,"column":54}},"133":{"start":{"line":326,"column":2},"end":{"line":328,"column":4}},"134":{"start":{"line":327,"column":4},"end":{"line":327,"column":31}},"135":{"start":{"line":330,"column":2},"end":{"line":332,"column":4}},"136":{"start":{"line":331,"column":4},"end":{"line":331,"column":34}},"137":{"start":{"line":334,"column":2},"end":{"line":336,"column":4}},"138":{"start":{"line":335,"column":4},"end":{"line":335,"column":31}},"139":{"start":{"line":338,"column":2},"end":{"line":340,"column":4}},"140":{"start":{"line":339,"column":4},"end":{"line":339,"column":30}},"141":{"start":{"line":347,"column":2},"end":{"line":349,"column":4}},"142":{"start":{"line":348,"column":4},"end":{"line":348,"column":29}},"143":{"start":{"line":356,"column":2},"end":{"line":358,"column":4}},"144":{"start":{"line":357,"column":4},"end":{"line":357,"column":29}},"145":{"start":{"line":365,"column":2},"end":{"line":367,"column":4}},"146":{"start":{"line":366,"column":4},"end":{"line":366,"column":29}},"147":{"start":{"line":374,"column":2},"end":{"line":377,"column":4}},"148":{"start":{"line":375,"column":4},"end":{"line":376,"column":89}},"149":{"start":{"line":379,"column":2},"end":{"line":381,"column":4}},"150":{"start":{"line":380,"column":4},"end":{"line":380,"column":30}},"151":{"start":{"line":383,"column":2},"end":{"line":385,"column":4}},"152":{"start":{"line":384,"column":4},"end":{"line":384,"column":29}},"153":{"start":{"line":387,"column":2},"end":{"line":389,"column":4}},"154":{"start":{"line":388,"column":4},"end":{"line":388,"column":31}},"155":{"start":{"line":391,"column":2},"end":{"line":393,"column":4}},"156":{"start":{"line":392,"column":4},"end":{"line":392,"column":27}},"157":{"start":{"line":395,"column":2},"end":{"line":397,"column":4}},"158":{"start":{"line":396,"column":4},"end":{"line":396,"column":37}},"159":{"start":{"line":399,"column":2},"end":{"line":401,"column":4}},"160":{"start":{"line":400,"column":4},"end":{"line":400,"column":27}},"161":{"start":{"line":411,"column":2},"end":{"line":413,"column":4}},"162":{"start":{"line":412,"column":4},"end":{"line":412,"column":29}},"163":{"start":{"line":415,"column":2},"end":{"line":417,"column":4}},"164":{"start":{"line":416,"column":4},"end":{"line":416,"column":182}},"165":{"start":{"line":425,"column":2},"end":{"line":441,"column":4}},"166":{"start":{"line":426,"column":4},"end":{"line":426,"column":22}},"167":{"start":{"line":428,"column":4},"end":{"line":428,"column":67}},"168":{"start":{"line":429,"column":4},"end":{"line":429,"column":67}},"169":{"start":{"line":430,"column":4},"end":{"line":430,"column":36}},"170":{"start":{"line":431,"column":4},"end":{"line":433,"column":7}},"171":{"start":{"line":432,"column":6},"end":{"line":432,"column":60}},"172":{"start":{"line":437,"column":4},"end":{"line":440,"column":7}},"173":{"start":{"line":438,"column":6},"end":{"line":438,"column":28}},"174":{"start":{"line":439,"column":6},"end":{"line":439,"column":53}},"175":{"start":{"line":443,"column":2},"end":{"line":446,"column":4}},"176":{"start":{"line":444,"column":4},"end":{"line":445,"column":92}},"177":{"start":{"line":448,"column":2},"end":{"line":452,"column":4}},"178":{"start":{"line":449,"column":4},"end":{"line":451,"column":22}},"179":{"start":{"line":454,"column":2},"end":{"line":474,"column":4}},"180":{"start":{"line":458,"column":4},"end":{"line":464,"column":6}},"181":{"start":{"line":459,"column":6},"end":{"line":463,"column":9}},"182":{"start":{"line":460,"column":8},"end":{"line":460,"column":63}},"183":{"start":{"line":461,"column":8},"end":{"line":461,"column":69}},"184":{"start":{"line":462,"column":8},"end":{"line":462,"column":26}},"185":{"start":{"line":466,"column":4},"end":{"line":473,"column":6}},"186":{"start":{"line":476,"column":2},"end":{"line":491,"column":4}},"187":{"start":{"line":477,"column":4},"end":{"line":477,"column":79}},"188":{"start":{"line":478,"column":4},"end":{"line":483,"column":40}},"189":{"start":{"line":486,"column":4},"end":{"line":486,"column":43}},"190":{"start":{"line":487,"column":4},"end":{"line":487,"column":43}},"191":{"start":{"line":488,"column":4},"end":{"line":488,"column":37}},"192":{"start":{"line":490,"column":4},"end":{"line":490,"column":115}},"193":{"start":{"line":493,"column":2},"end":{"line":493,"column":24}},"194":{"start":{"line":502,"column":0},"end":{"line":510,"column":1}},"195":{"start":{"line":503,"column":2},"end":{"line":509,"column":3}},"196":{"start":{"line":504,"column":4},"end":{"line":504,"column":31}},"197":{"start":{"line":505,"column":4},"end":{"line":505,"column":33}},"198":{"start":{"line":506,"column":4},"end":{"line":508,"column":5}},"199":{"start":{"line":507,"column":6},"end":{"line":507,"column":67}},"200":{"start":{"line":512,"column":0},"end":{"line":515,"column":3}},"201":{"start":{"line":517,"column":0},"end":{"line":517,"column":32}}},"branchMap":{"1":{"line":21,"type":"cond-expr","locations":[{"start":{"line":21,"column":70},"end":{"line":21,"column":73}},{"start":{"line":21,"column":76},"end":{"line":21,"column":94}}]},"2":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":46},"end":{"line":21,"column":49}},{"start":{"line":21,"column":53},"end":{"line":21,"column":67}}]},"3":{"line":53,"type":"cond-expr","locations":[{"start":{"line":53,"column":77},"end":{"line":53,"column":89}},{"start":{"line":53,"column":92},"end":{"line":53,"column":94}}]},"4":{"line":53,"type":"binary-expr","locations":[{"start":{"line":53,"column":24},"end":{"line":53,"column":44}},{"start":{"line":53,"column":48},"end":{"line":53,"column":74}}]},"5":{"line":54,"type":"cond-expr","locations":[{"start":{"line":54,"column":81},"end":{"line":54,"column":93}},{"start":{"line":54,"column":96},"end":{"line":54,"column":98}}]},"6":{"line":54,"type":"binary-expr","locations":[{"start":{"line":54,"column":28},"end":{"line":54,"column":48}},{"start":{"line":54,"column":52},"end":{"line":54,"column":78}}]},"7":{"line":55,"type":"cond-expr","locations":[{"start":{"line":55,"column":77},"end":{"line":55,"column":89}},{"start":{"line":55,"column":92},"end":{"line":55,"column":94}}]},"8":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":24},"end":{"line":55,"column":44}},{"start":{"line":55,"column":48},"end":{"line":55,"column":74}}]},"9":{"line":56,"type":"cond-expr","locations":[{"start":{"line":56,"column":71},"end":{"line":56,"column":83}},{"start":{"line":56,"column":86},"end":{"line":56,"column":88}}]},"10":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":18},"end":{"line":56,"column":38}},{"start":{"line":56,"column":42},"end":{"line":56,"column":68}}]},"11":{"line":57,"type":"cond-expr","locations":[{"start":{"line":57,"column":75},"end":{"line":57,"column":87}},{"start":{"line":57,"column":90},"end":{"line":57,"column":92}}]},"12":{"line":57,"type":"binary-expr","locations":[{"start":{"line":57,"column":22},"end":{"line":57,"column":42}},{"start":{"line":57,"column":46},"end":{"line":57,"column":72}}]},"13":{"line":58,"type":"cond-expr","locations":[{"start":{"line":58,"column":76},"end":{"line":58,"column":88}},{"start":{"line":58,"column":91},"end":{"line":58,"column":93}}]},"14":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":23},"end":{"line":58,"column":43}},{"start":{"line":58,"column":47},"end":{"line":58,"column":73}}]},"15":{"line":59,"type":"cond-expr","locations":[{"start":{"line":59,"column":73},"end":{"line":59,"column":85}},{"start":{"line":59,"column":88},"end":{"line":59,"column":131}}]},"16":{"line":59,"type":"binary-expr","locations":[{"start":{"line":59,"column":20},"end":{"line":59,"column":40}},{"start":{"line":59,"column":44},"end":{"line":59,"column":70}}]},"17":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":4},"end":{"line":93,"column":4}},{"start":{"line":93,"column":4},"end":{"line":93,"column":4}}]},"18":{"line":184,"type":"binary-expr","locations":[{"start":{"line":184,"column":8},"end":{"line":184,"column":27}},{"start":{"line":184,"column":31},"end":{"line":184,"column":52}}]},"19":{"line":189,"type":"binary-expr","locations":[{"start":{"line":189,"column":8},"end":{"line":189,"column":27}},{"start":{"line":189,"column":31},"end":{"line":189,"column":52}}]},"20":{"line":212,"type":"binary-expr","locations":[{"start":{"line":212,"column":8},"end":{"line":212,"column":27}},{"start":{"line":212,"column":31},"end":{"line":212,"column":52}}]},"21":{"line":217,"type":"binary-expr","locations":[{"start":{"line":217,"column":8},"end":{"line":217,"column":27}},{"start":{"line":217,"column":31},"end":{"line":217,"column":52}}]},"22":{"line":269,"type":"if","locations":[{"start":{"line":269,"column":4},"end":{"line":269,"column":4}},{"start":{"line":269,"column":4},"end":{"line":269,"column":4}}]},"23":{"line":293,"type":"if","locations":[{"start":{"line":293,"column":4},"end":{"line":293,"column":4}},{"start":{"line":293,"column":4},"end":{"line":293,"column":4}}]},"24":{"line":300,"type":"binary-expr","locations":[{"start":{"line":300,"column":46},"end":{"line":300,"column":69}},{"start":{"line":300,"column":73},"end":{"line":300,"column":87}}]},"25":{"line":376,"type":"cond-expr","locations":[{"start":{"line":376,"column":45},"end":{"line":376,"column":80}},{"start":{"line":376,"column":83},"end":{"line":376,"column":87}}]},"26":{"line":416,"type":"binary-expr","locations":[{"start":{"line":416,"column":11},"end":{"line":416,"column":61}},{"start":{"line":416,"column":65},"end":{"line":416,"column":121}},{"start":{"line":416,"column":125},"end":{"line":416,"column":181}}]},"27":{"line":438,"type":"binary-expr","locations":[{"start":{"line":438,"column":6},"end":{"line":438,"column":8}},{"start":{"line":438,"column":12},"end":{"line":438,"column":27}}]},"28":{"line":445,"type":"cond-expr","locations":[{"start":{"line":445,"column":45},"end":{"line":445,"column":83}},{"start":{"line":445,"column":86},"end":{"line":445,"column":90}}]},"29":{"line":506,"type":"if","locations":[{"start":{"line":506,"column":4},"end":{"line":506,"column":4}},{"start":{"line":506,"column":4},"end":{"line":506,"column":4}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayStoreData"," * "," */","","'use strict';","","var _extends3 = _interopRequireDefault(require('babel-runtime/helpers/extends'));","","var _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));","","var _keys2 = _interopRequireDefault(require('babel-runtime/core-js/object/keys'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","var _require = require('./restoreRelayCacheData'),","    restoreFragmentDataFromCache = _require.restoreFragmentDataFromCache,","    restoreQueriesDataFromCache = _require.restoreQueriesDataFromCache;","","var CLIENT_MUTATION_ID = require('./RelayConnectionInterface').CLIENT_MUTATION_ID;","","var ID = require('./RelayNodeInterface').ID,","    ID_TYPE = require('./RelayNodeInterface').ID_TYPE,","    NODE = require('./RelayNodeInterface').NODE,","    NODE_TYPE = require('./RelayNodeInterface').NODE_TYPE,","    TYPENAME = require('./RelayNodeInterface').TYPENAME;","","var idField = require('./RelayQuery').Field.build({","  fieldName: ID,","  type: 'String'","});","var typeField = require('./RelayQuery').Field.build({","  fieldName: TYPENAME,","  type: 'String'","});","","/**"," * @internal"," *"," * Wraps the data caches and associated metadata tracking objects used by"," * GraphQLStore/RelayStore."," */","","var RelayStoreData = function () {","  function RelayStoreData() {","    var cachedRecords = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};","    var cachedRootCallMap = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};","    var queuedRecords = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};","    var records = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};","    var rootCallMap = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};","    var nodeRangeMap = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};","    var rangeData = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : new (require('./GraphQLStoreRangeUtils'))();","    (0, _classCallCheck3['default'])(this, RelayStoreData);","","    this._cacheManager = null;","    this._cachedRecords = cachedRecords;","    this._cachedRootCallMap = cachedRootCallMap;","    this._cachedStore = new (require('./RelayRecordStore'))({ cachedRecords: cachedRecords, records: records }, { cachedRootCallMap: cachedRootCallMap, rootCallMap: rootCallMap }, nodeRangeMap);","    this._changeEmitter = new (require('./GraphQLStoreChangeEmitter'))(rangeData);","    this._mutationQueue = new (require('./RelayMutationQueue'))(this);","    this._networkLayer = new (require('./RelayNetworkLayer'))();","    this._nodeRangeMap = nodeRangeMap;","    this._pendingQueryTracker = new (require('./RelayPendingQueryTracker'))(this);","    this._queryRunner = new (require('./GraphQLQueryRunner'))(this);","    this._queryTracker = new (require('./RelayQueryTracker'))();","    this._queuedRecords = queuedRecords;","    this._queuedStore = new (require('./RelayRecordStore'))({ cachedRecords: cachedRecords, queuedRecords: queuedRecords, records: records }, { cachedRootCallMap: cachedRootCallMap, rootCallMap: rootCallMap }, nodeRangeMap);","    this._records = records;","    this._recordStore = new (require('./RelayRecordStore'))({ records: records }, { rootCallMap: rootCallMap }, nodeRangeMap);","    this._rangeData = rangeData;","    this._rootCallMap = rootCallMap;","    this._taskQueue = new (require('./RelayTaskQueue'))();","  }","","  /**","   * Creates a garbage collector for this instance. After initialization all","   * newly added DataIDs will be registered in the created garbage collector.","   * This will show a warning if data has already been added to the instance.","   */","","","  RelayStoreData.prototype.initializeGarbageCollector = function initializeGarbageCollector(scheduler) {","    require('fbjs/lib/invariant')(!this._garbageCollector, 'RelayStoreData: Garbage collector is already initialized.');","    var shouldInitialize = this._isStoreDataEmpty();","    require('fbjs/lib/warning')(shouldInitialize, 'RelayStoreData: Garbage collection can only be initialized when no ' + 'data is present.');","    if (shouldInitialize) {","      this._garbageCollector = new (require('./RelayGarbageCollector'))(this, scheduler);","    }","  };","","  /**","   * @internal","   *","   * Sets/clears the query tracker.","   *","   * @warning Do not use this unless your application uses only","   * `RelayGraphQLMutation` for mutations.","   */","","","  RelayStoreData.prototype.injectQueryTracker = function injectQueryTracker(queryTracker) {","    this._queryTracker = queryTracker;","  };","","  /**","   * Sets/clears the scheduling function used by the internal task queue to","   * schedule units of work for execution.","   */","","","  RelayStoreData.prototype.injectTaskScheduler = function injectTaskScheduler(scheduler) {","    this._taskQueue.injectScheduler(scheduler);","  };","","  /**","   * Sets/clears the cache manager that is used to cache changes written to","   * the store.","   */","","","  RelayStoreData.prototype.injectCacheManager = function injectCacheManager(cacheManager) {","    this._cacheManager = cacheManager;","  };","","  RelayStoreData.prototype.clearCacheManager = function clearCacheManager() {","    this._cacheManager = null;","  };","","  RelayStoreData.prototype.hasCacheManager = function hasCacheManager() {","    return !!this._cacheManager;","  };","","  RelayStoreData.prototype.getCacheManager = function getCacheManager() {","    return this._cacheManager;","  };","","  /**","   * Returns whether a given record is affected by an optimistic update.","   */","","","  RelayStoreData.prototype.hasOptimisticUpdate = function hasOptimisticUpdate(dataID) {","    dataID = this.getRangeData().getCanonicalClientID(dataID);","    return this.getQueuedStore().hasOptimisticUpdate(dataID);","  };","","  /**","   * Returns a list of client mutation IDs for queued mutations whose optimistic","   * updates are affecting the record corresponding the given dataID. Returns","   * null if the record isn't affected by any optimistic updates.","   */","","","  RelayStoreData.prototype.getClientMutationIDs = function getClientMutationIDs(dataID) {","    dataID = this.getRangeData().getCanonicalClientID(dataID);","    return this.getQueuedStore().getClientMutationIDs(dataID);","  };","","  /**","   * Restores data for queries incrementally from cache.","   * It calls onSuccess when all the data has been loaded into memory.","   * It calls onFailure when some data is unabled to be satisfied from cache.","   */","","","  RelayStoreData.prototype.restoreQueriesFromCache = function restoreQueriesFromCache(queries, callbacks) {","    var _this = this;","","    var cacheManager = this._cacheManager;","    require('fbjs/lib/invariant')(cacheManager, 'RelayStoreData: `restoreQueriesFromCache` should only be called ' + 'when cache manager is available.');","    var changeTracker = new (require('./RelayChangeTracker'))();","    var profile = require('./RelayProfiler').profile('RelayStoreData.readFromDiskCache');","    return restoreQueriesDataFromCache(queries, this._queuedStore, this._cachedRecords, this._cachedRootCallMap, this._garbageCollector, cacheManager, changeTracker, {","      onSuccess: function onSuccess() {","        _this._handleChangedAndNewDataIDs(changeTracker.getChangeSet());","        profile.stop();","        callbacks.onSuccess && callbacks.onSuccess();","      },","      onFailure: function onFailure() {","        _this._handleChangedAndNewDataIDs(changeTracker.getChangeSet());","        profile.stop();","        callbacks.onFailure && callbacks.onFailure();","      }","    });","  };","","  /**","   * Restores data for a fragment incrementally from cache.","   * It calls onSuccess when all the data has been loaded into memory.","   * It calls onFailure when some data is unabled to be satisfied from cache.","   */","","","  RelayStoreData.prototype.restoreFragmentFromCache = function restoreFragmentFromCache(dataID, fragment, path, callbacks) {","    var _this2 = this;","","    var cacheManager = this._cacheManager;","    require('fbjs/lib/invariant')(cacheManager, 'RelayStoreData: `restoreFragmentFromCache` should only be called when ' + 'cache manager is available.');","    var changeTracker = new (require('./RelayChangeTracker'))();","    var profile = require('./RelayProfiler').profile('RelayStoreData.readFragmentFromDiskCache');","    return restoreFragmentDataFromCache(dataID, fragment, path, this._queuedStore, this._cachedRecords, this._cachedRootCallMap, this._garbageCollector, cacheManager, changeTracker, {","      onSuccess: function onSuccess() {","        _this2._handleChangedAndNewDataIDs(changeTracker.getChangeSet());","        profile.stop();","        callbacks.onSuccess && callbacks.onSuccess();","      },","      onFailure: function onFailure() {","        _this2._handleChangedAndNewDataIDs(changeTracker.getChangeSet());","        profile.stop();","        callbacks.onFailure && callbacks.onFailure();","      }","    });","  };","","  /**","   * Write the results of a query into the base record store.","   */","","","  RelayStoreData.prototype.handleQueryPayload = function handleQueryPayload(query, payload, forceIndex) {","    var profiler = require('./RelayProfiler').profile('RelayStoreData.handleQueryPayload');","    var changeTracker = new (require('./RelayChangeTracker'))();","    var writer = new (require('./RelayQueryWriter'))(this._queuedStore, this.getRecordWriter(), this._queryTracker, changeTracker, {","      forceIndex: forceIndex,","      updateTrackedQueries: true","    });","    require('./writeRelayQueryPayload')(writer, query, payload);","    this._handleChangedAndNewDataIDs(changeTracker.getChangeSet());","    profiler.stop();","  };","","  /**","   * Write the result of a fragment into the base record store.","   */","","","  RelayStoreData.prototype.handleFragmentPayload = function handleFragmentPayload(dataID, fragment, path, payload, forceIndex) {","    var profiler = require('./RelayProfiler').profile('RelayStoreData.handleFragmentPayload');","    var changeTracker = new (require('./RelayChangeTracker'))();","    var writer = new (require('./RelayQueryWriter'))(this._queuedStore, this.getRecordWriter(), this._queryTracker, changeTracker, {","      forceIndex: forceIndex,","      updateTrackedQueries: true","    });","    writer.createRecordIfMissing(fragment, dataID, path, payload);","    writer.writePayload(fragment, dataID, payload, path);","    this._handleChangedAndNewDataIDs(changeTracker.getChangeSet());","    profiler.stop();","  };","","  /**","   * Write the results of an update into the base record store.","   */","","","  RelayStoreData.prototype.handleUpdatePayload = function handleUpdatePayload(operation, payload, _ref) {","    var configs = _ref.configs,","        isOptimisticUpdate = _ref.isOptimisticUpdate;","","    var profiler = require('./RelayProfiler').profile('RelayStoreData.handleUpdatePayload');","    var changeTracker = new (require('./RelayChangeTracker'))();","    var recordWriter = void 0;","    if (isOptimisticUpdate) {","      var clientMutationID = payload[CLIENT_MUTATION_ID];","      require('fbjs/lib/invariant')(typeof clientMutationID === 'string', 'RelayStoreData.handleUpdatePayload(): Expected optimistic payload ' + 'to have a valid `%s`.', CLIENT_MUTATION_ID);","      recordWriter = this.getRecordWriterForOptimisticMutation(clientMutationID);","    } else {","      recordWriter = this._getRecordWriterForMutation();","    }","    var writer = new (require('./RelayQueryWriter'))(this._queuedStore, recordWriter, this._queryTracker, changeTracker, {","      forceIndex: require('./generateForceIndex')(),","      isOptimisticUpdate: isOptimisticUpdate,","      updateTrackedQueries: false","    });","    require('./writeRelayUpdatePayload')(writer, operation, payload, { configs: configs, isOptimisticUpdate: isOptimisticUpdate });","    this._handleChangedAndNewDataIDs(changeTracker.getChangeSet());","    profiler.stop();","  };","","  /**","   * Given a query fragment and a data ID, returns a root query that applies","   * the fragment to the object specified by the data ID.","   */","","","  RelayStoreData.prototype.buildFragmentQueryForDataID = function buildFragmentQueryForDataID(fragment, dataID) {","    if (require('./RelayRecord').isClientID(dataID)) {","      var path = this._queuedStore.getPathToRecord(this._rangeData.getCanonicalClientID(dataID));","      require('fbjs/lib/invariant')(path, 'RelayStoreData.buildFragmentQueryForDataID(): Cannot refetch ' + 'record `%s` without a path.', dataID);","      return require('./RelayQueryPath').getQuery(this._cachedStore, path, fragment);","    }","    // Fragment fields cannot be spread directly into the root because they","    // may not exist on the `Node` type.","    return require('./RelayQuery').Root.build(fragment.getDebugName() || 'UnknownQuery', NODE, dataID, [idField, typeField, fragment], {","      identifyingArgName: ID,","      identifyingArgType: ID_TYPE,","      isAbstract: true,","      isDeferred: false,","      isPlural: false","    }, NODE_TYPE);","  };","","  RelayStoreData.prototype.getNodeData = function getNodeData() {","    return this._records;","  };","","  RelayStoreData.prototype.getQueuedData = function getQueuedData() {","    return this._queuedRecords;","  };","","  RelayStoreData.prototype.clearQueuedData = function clearQueuedData() {","    var _this3 = this;","","    require('fbjs/lib/forEachObject')(this._queuedRecords, function (_, key) {","      delete _this3._queuedRecords[key];","      _this3._changeEmitter.broadcastChangeForID(key);","    });","  };","","  RelayStoreData.prototype.getCachedData = function getCachedData() {","    return this._cachedRecords;","  };","","  RelayStoreData.prototype.getGarbageCollector = function getGarbageCollector() {","    return this._garbageCollector;","  };","","  RelayStoreData.prototype.getMutationQueue = function getMutationQueue() {","    return this._mutationQueue;","  };","","  RelayStoreData.prototype.getNetworkLayer = function getNetworkLayer() {","    return this._networkLayer;","  };","","  /**","   * Get the record store with only the cached and base data (no queued data).","   */","","","  RelayStoreData.prototype.getCachedStore = function getCachedStore() {","    return this._cachedStore;","  };","","  /**","   * Get the record store with full data (cached, base, queued).","   */","","","  RelayStoreData.prototype.getQueuedStore = function getQueuedStore() {","    return this._queuedStore;","  };","","  /**","   * Get the record store with only the base data (no queued/cached data).","   */","","","  RelayStoreData.prototype.getRecordStore = function getRecordStore() {","    return this._recordStore;","  };","","  /**","   * Get the record writer for the base data.","   */","","","  RelayStoreData.prototype.getRecordWriter = function getRecordWriter() {","    return new (require('./RelayRecordWriter'))(this._records, this._rootCallMap, false, // isOptimistic","    this._nodeRangeMap, this._cacheManager ? this._cacheManager.getQueryWriter() : null);","  };","","  RelayStoreData.prototype.getQueryTracker = function getQueryTracker() {","    return this._queryTracker;","  };","","  RelayStoreData.prototype.getQueryRunner = function getQueryRunner() {","    return this._queryRunner;","  };","","  RelayStoreData.prototype.getChangeEmitter = function getChangeEmitter() {","    return this._changeEmitter;","  };","","  RelayStoreData.prototype.getRangeData = function getRangeData() {","    return this._rangeData;","  };","","  RelayStoreData.prototype.getPendingQueryTracker = function getPendingQueryTracker() {","    return this._pendingQueryTracker;","  };","","  RelayStoreData.prototype.getTaskQueue = function getTaskQueue() {","    return this._taskQueue;","  };","","  /**","   * @deprecated","   *","   * Used temporarily by GraphQLStore, but all updates to this object are now","   * handled through a `RelayRecordStore` instance.","   */","","","  RelayStoreData.prototype.getRootCallData = function getRootCallData() {","    return this._rootCallMap;","  };","","  RelayStoreData.prototype._isStoreDataEmpty = function _isStoreDataEmpty() {","    return (0, _keys2['default'])(this._records).length === 0 && (0, _keys2['default'])(this._queuedRecords).length === 0 && (0, _keys2['default'])(this._cachedRecords).length === 0;","  };","","  /**","   * Given a ChangeSet, broadcasts changes for updated DataIDs","   * and registers new DataIDs with the garbage collector.","   */","","","  RelayStoreData.prototype._handleChangedAndNewDataIDs = function _handleChangedAndNewDataIDs(changeSet) {","    var _this4 = this;","","    var updatedDataIDs = (0, _keys2['default'])(changeSet.updated);","    var createdDataIDs = (0, _keys2['default'])(changeSet.created);","    var gc = this._garbageCollector;","    updatedDataIDs.forEach(function (id) {","      return _this4._changeEmitter.broadcastChangeForID(id);","    });","    // Containers may be subscribed to \"new\" records in the case where they","    // were previously garbage collected or where the link was incrementally","    // loaded from cache prior to the linked record.","    createdDataIDs.forEach(function (id) {","      gc && gc.register(id);","      _this4._changeEmitter.broadcastChangeForID(id);","    });","  };","","  RelayStoreData.prototype._getRecordWriterForMutation = function _getRecordWriterForMutation() {","    return new (require('./RelayRecordWriter'))(this._records, this._rootCallMap, false, // isOptimistic","    this._nodeRangeMap, this._cacheManager ? this._cacheManager.getMutationWriter() : null);","  };","","  RelayStoreData.prototype.getRecordWriterForOptimisticMutation = function getRecordWriterForOptimisticMutation(clientMutationID) {","    return new (require('./RelayRecordWriter'))(this._queuedRecords, this._rootCallMap, true, // isOptimistic","    this._nodeRangeMap, null, // don't cache optimistic data","    clientMutationID);","  };","","  RelayStoreData.prototype.toJSON = function toJSON() {","    /**","     * A util function which remove the querypath from the record. Used to stringify the RecordMap.","     */","    var getRecordsWithoutPaths = function getRecordsWithoutPaths(recordMap) {","      return require('fbjs/lib/mapObject')(recordMap, function (record) {","        var nextRecord = (0, _extends3['default'])({}, record);","        delete nextRecord[require('./RelayRecord').MetadataKey.PATH];","        return nextRecord;","      });","    };","","    return {","      cachedRecords: getRecordsWithoutPaths(this._cachedRecords),","      cachedRootCallMap: this._cachedRootCallMap,","      queuedRecords: getRecordsWithoutPaths(this._queuedRecords),","      records: getRecordsWithoutPaths(this._records),","      rootCallMap: this._rootCallMap,","      nodeRangeMap: this._nodeRangeMap","    };","  };","","  RelayStoreData.fromJSON = function fromJSON(obj) {","    require('fbjs/lib/invariant')(obj, 'RelayStoreData: JSON object is empty');","    var cachedRecords = obj.cachedRecords,","        cachedRootCallMap = obj.cachedRootCallMap,","        queuedRecords = obj.queuedRecords,","        records = obj.records,","        rootCallMap = obj.rootCallMap,","        nodeRangeMap = obj.nodeRangeMap;","","","    deserializeRecordRanges(cachedRecords);","    deserializeRecordRanges(queuedRecords);","    deserializeRecordRanges(records);","","    return new RelayStoreData(cachedRecords, cachedRootCallMap, queuedRecords, records, rootCallMap, nodeRangeMap);","  };","","  return RelayStoreData;","}();","","/**"," * A helper function which checks for serialized GraphQLRange"," * instances and deserializes them in toJSON()"," */","","","function deserializeRecordRanges(records) {","  for (var _key in records) {","    var record = records[_key];","    var range = record.__range__;","    if (range) {","      record.__range__ = require('./GraphQLRange').fromJSON(range);","    }","  }","}","","require('./RelayProfiler').instrumentMethods(RelayStoreData.prototype, {","  handleQueryPayload: 'RelayStoreData.prototype.handleQueryPayload',","  handleUpdatePayload: 'RelayStoreData.prototype.handleUpdatePayload'","});","","module.exports = RelayStoreData;"],"l":{"15":1,"17":1,"19":1,"21":3,"23":1,"27":1,"29":1,"35":1,"39":1,"51":1,"52":1,"53":6,"54":6,"55":6,"56":6,"57":6,"58":6,"59":6,"60":6,"62":6,"63":6,"64":6,"65":6,"66":6,"67":6,"68":6,"69":6,"70":6,"71":6,"72":6,"73":6,"74":6,"75":6,"76":6,"77":6,"78":6,"79":6,"89":1,"90":0,"91":0,"92":0,"93":0,"94":0,"108":1,"109":0,"118":1,"119":0,"128":1,"129":0,"132":1,"133":0,"136":1,"137":0,"140":1,"141":0,"149":1,"150":0,"151":0,"161":1,"162":0,"163":0,"173":1,"174":0,"176":0,"177":0,"178":0,"179":0,"180":0,"182":0,"183":0,"184":0,"187":0,"188":0,"189":0,"201":1,"202":0,"204":0,"205":0,"206":0,"207":0,"208":0,"210":0,"211":0,"212":0,"215":0,"216":0,"217":0,"227":1,"228":0,"229":0,"230":0,"234":0,"235":0,"236":0,"244":1,"245":0,"246":0,"247":0,"251":0,"252":0,"253":0,"254":0,"262":1,"263":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"274":0,"276":0,"281":0,"282":0,"283":0,"292":1,"293":0,"294":0,"295":0,"296":0,"300":0,"309":1,"310":0,"313":1,"314":0,"317":1,"318":0,"320":0,"321":0,"322":0,"326":1,"327":0,"330":1,"331":0,"334":1,"335":0,"338":1,"339":0,"347":1,"348":0,"356":1,"357":0,"365":1,"366":0,"374":1,"375":0,"379":1,"380":0,"383":1,"384":0,"387":1,"388":6,"391":1,"392":0,"395":1,"396":0,"399":1,"400":0,"411":1,"412":0,"415":1,"416":0,"425":1,"426":0,"428":0,"429":0,"430":0,"431":0,"432":0,"437":0,"438":0,"439":0,"443":1,"444":0,"448":1,"449":0,"454":1,"458":0,"459":0,"460":0,"461":0,"462":0,"466":0,"476":1,"477":0,"478":0,"486":0,"487":0,"488":0,"490":0,"493":1,"502":1,"503":0,"504":0,"505":0,"506":0,"507":0,"512":1,"517":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/restoreRelayCacheData.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/restoreRelayCacheData.js","s":{"1":1,"2":1,"3":1,"4":1,"5":3,"6":1,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":1,"17":1,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":1,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":1,"73":0,"74":0,"75":0,"76":0,"77":1,"78":1,"79":1},"b":{"1":[3,0],"2":[3,3],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0]},"f":{"1":3,"2":0,"3":0,"4":0,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":37}}},"2":{"name":"restoreFragmentDataFromCache","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":161}}},"3":{"name":"abort","line":33,"loc":{"start":{"line":33,"column":11},"end":{"line":33,"column":28}}},"4":{"name":"restoreQueriesDataFromCache","line":39,"loc":{"start":{"line":39,"column":0},"end":{"line":39,"column":145}}},"5":{"name":"abort","line":44,"loc":{"start":{"line":44,"column":11},"end":{"line":44,"column":28}}},"6":{"name":"(anonymous_6)","line":50,"loc":{"start":{"line":50,"column":32},"end":{"line":50,"column":64}}},"7":{"name":"RelayCachedDataRestorator","line":53,"loc":{"start":{"line":53,"column":2},"end":{"line":53,"column":136}}},"8":{"name":"handleNodeVisited","line":66,"loc":{"start":{"line":66,"column":58},"end":{"line":66,"column":118}}},"9":{"name":"handleIdentifiedRootVisited","line":97,"loc":{"start":{"line":97,"column":68},"end":{"line":97,"column":150}}},"10":{"name":"restoreFragmentData","line":109,"loc":{"start":{"line":109,"column":60},"end":{"line":109,"column":113}}},"11":{"name":"(anonymous_11)","line":112,"loc":{"start":{"line":112,"column":17},"end":{"line":112,"column":29}}},"12":{"name":"restoreQueriesData","line":122,"loc":{"start":{"line":122,"column":59},"end":{"line":122,"column":96}}},"13":{"name":"(anonymous_13)","line":125,"loc":{"start":{"line":125,"column":17},"end":{"line":125,"column":29}}},"14":{"name":"(anonymous_14)","line":126,"loc":{"start":{"line":126,"column":49},"end":{"line":126,"column":66}}},"15":{"name":"traverse","line":142,"loc":{"start":{"line":142,"column":49},"end":{"line":142,"column":84}}},"16":{"name":"visitIdentifiedRoot","line":162,"loc":{"start":{"line":162,"column":60},"end":{"line":162,"column":126}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":117}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":83}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":97}},"5":{"start":{"line":21,"column":39},"end":{"line":21,"column":95}},"6":{"start":{"line":28,"column":0},"end":{"line":37,"column":1}},"7":{"start":{"line":29,"column":2},"end":{"line":29,"column":148}},"8":{"start":{"line":30,"column":2},"end":{"line":30,"column":57}},"9":{"start":{"line":32,"column":2},"end":{"line":36,"column":4}},"10":{"start":{"line":34,"column":6},"end":{"line":34,"column":25}},"11":{"start":{"line":39,"column":0},"end":{"line":48,"column":1}},"12":{"start":{"line":40,"column":2},"end":{"line":40,"column":148}},"13":{"start":{"line":41,"column":2},"end":{"line":41,"column":41}},"14":{"start":{"line":43,"column":2},"end":{"line":47,"column":4}},"15":{"start":{"line":45,"column":6},"end":{"line":45,"column":25}},"16":{"start":{"line":50,"column":0},"end":{"line":177,"column":36}},"17":{"start":{"line":51,"column":2},"end":{"line":51,"column":78}},"18":{"start":{"line":53,"column":2},"end":{"line":64,"column":3}},"19":{"start":{"line":54,"column":4},"end":{"line":54,"column":70}},"20":{"start":{"line":56,"column":4},"end":{"line":56,"column":124}},"21":{"start":{"line":58,"column":4},"end":{"line":58,"column":41}},"22":{"start":{"line":59,"column":4},"end":{"line":59,"column":49}},"23":{"start":{"line":60,"column":4},"end":{"line":60,"column":41}},"24":{"start":{"line":61,"column":4},"end":{"line":61,"column":47}},"25":{"start":{"line":62,"column":4},"end":{"line":62,"column":25}},"26":{"start":{"line":63,"column":4},"end":{"line":63,"column":17}},"27":{"start":{"line":66,"column":2},"end":{"line":95,"column":4}},"28":{"start":{"line":67,"column":4},"end":{"line":67,"column":57}},"29":{"start":{"line":68,"column":4},"end":{"line":68,"column":41}},"30":{"start":{"line":73,"column":4},"end":{"line":86,"column":5}},"31":{"start":{"line":76,"column":6},"end":{"line":78,"column":7}},"32":{"start":{"line":77,"column":8},"end":{"line":77,"column":48}},"33":{"start":{"line":81,"column":6},"end":{"line":81,"column":43}},"34":{"start":{"line":82,"column":11},"end":{"line":86,"column":5}},"35":{"start":{"line":85,"column":6},"end":{"line":85,"column":43}},"36":{"start":{"line":87,"column":4},"end":{"line":91,"column":5}},"37":{"start":{"line":89,"column":6},"end":{"line":89,"column":27}},"38":{"start":{"line":90,"column":6},"end":{"line":90,"column":13}},"39":{"start":{"line":92,"column":4},"end":{"line":94,"column":5}},"40":{"start":{"line":93,"column":6},"end":{"line":93,"column":39}},"41":{"start":{"line":97,"column":2},"end":{"line":107,"column":4}},"42":{"start":{"line":98,"column":4},"end":{"line":102,"column":5}},"43":{"start":{"line":100,"column":6},"end":{"line":100,"column":27}},"44":{"start":{"line":101,"column":6},"end":{"line":101,"column":13}},"45":{"start":{"line":103,"column":4},"end":{"line":103,"column":43}},"46":{"start":{"line":104,"column":4},"end":{"line":104,"column":84}},"47":{"start":{"line":105,"column":4},"end":{"line":105,"column":74}},"48":{"start":{"line":106,"column":4},"end":{"line":106,"column":30}},"49":{"start":{"line":109,"column":2},"end":{"line":120,"column":4}},"50":{"start":{"line":110,"column":4},"end":{"line":110,"column":22}},"51":{"start":{"line":112,"column":4},"end":{"line":119,"column":7}},"52":{"start":{"line":113,"column":6},"end":{"line":118,"column":9}},"53":{"start":{"line":122,"column":2},"end":{"line":140,"column":4}},"54":{"start":{"line":123,"column":4},"end":{"line":123,"column":22}},"55":{"start":{"line":125,"column":4},"end":{"line":139,"column":7}},"56":{"start":{"line":126,"column":6},"end":{"line":138,"column":9}},"57":{"start":{"line":127,"column":8},"end":{"line":129,"column":9}},"58":{"start":{"line":128,"column":10},"end":{"line":128,"column":17}},"59":{"start":{"line":130,"column":8},"end":{"line":137,"column":9}},"60":{"start":{"line":131,"column":10},"end":{"line":136,"column":13}},"61":{"start":{"line":142,"column":2},"end":{"line":160,"column":4}},"62":{"start":{"line":143,"column":4},"end":{"line":143,"column":137}},"63":{"start":{"line":145,"column":4},"end":{"line":147,"column":68}},"64":{"start":{"line":149,"column":4},"end":{"line":152,"column":5}},"65":{"start":{"line":150,"column":6},"end":{"line":150,"column":27}},"66":{"start":{"line":151,"column":6},"end":{"line":151,"column":13}},"67":{"start":{"line":153,"column":4},"end":{"line":159,"column":5}},"68":{"start":{"line":154,"column":6},"end":{"line":156,"column":7}},"69":{"start":{"line":155,"column":8},"end":{"line":155,"column":15}},"70":{"start":{"line":157,"column":6},"end":{"line":157,"column":155}},"71":{"start":{"line":158,"column":6},"end":{"line":158,"column":102}},"72":{"start":{"line":162,"column":2},"end":{"line":174,"column":4}},"73":{"start":{"line":163,"column":4},"end":{"line":163,"column":81}},"74":{"start":{"line":164,"column":4},"end":{"line":173,"column":5}},"75":{"start":{"line":165,"column":6},"end":{"line":165,"column":105}},"76":{"start":{"line":167,"column":6},"end":{"line":172,"column":9}},"77":{"start":{"line":176,"column":2},"end":{"line":176,"column":35}},"78":{"start":{"line":179,"column":0},"end":{"line":189,"column":3}},"79":{"start":{"line":191,"column":0},"end":{"line":194,"column":2}}},"branchMap":{"1":{"line":21,"type":"cond-expr","locations":[{"start":{"line":21,"column":70},"end":{"line":21,"column":73}},{"start":{"line":21,"column":76},"end":{"line":21,"column":94}}]},"2":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":46},"end":{"line":21,"column":49}},{"start":{"line":21,"column":53},"end":{"line":21,"column":67}}]},"3":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":4},"end":{"line":73,"column":4}},{"start":{"line":73,"column":4},"end":{"line":73,"column":4}}]},"4":{"line":73,"type":"binary-expr","locations":[{"start":{"line":73,"column":8},"end":{"line":73,"column":33}},{"start":{"line":73,"column":37},"end":{"line":73,"column":57}}]},"5":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":6},"end":{"line":76,"column":6}},{"start":{"line":76,"column":6},"end":{"line":76,"column":6}}]},"6":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":11},"end":{"line":82,"column":11}},{"start":{"line":82,"column":11},"end":{"line":82,"column":11}}]},"7":{"line":82,"type":"binary-expr","locations":[{"start":{"line":82,"column":15},"end":{"line":82,"column":41}},{"start":{"line":82,"column":45},"end":{"line":82,"column":59}}]},"8":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":4},"end":{"line":87,"column":4}},{"start":{"line":87,"column":4},"end":{"line":87,"column":4}}]},"9":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":4},"end":{"line":92,"column":4}},{"start":{"line":92,"column":4},"end":{"line":92,"column":4}}]},"10":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":4},"end":{"line":98,"column":4}},{"start":{"line":98,"column":4},"end":{"line":98,"column":4}}]},"11":{"line":104,"type":"binary-expr","locations":[{"start":{"line":104,"column":42},"end":{"line":104,"column":77}},{"start":{"line":104,"column":81},"end":{"line":104,"column":83}}]},"12":{"line":105,"type":"binary-expr","locations":[{"start":{"line":105,"column":40},"end":{"line":105,"column":57}},{"start":{"line":105,"column":61},"end":{"line":105,"column":63}}]},"13":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":8},"end":{"line":127,"column":8}},{"start":{"line":127,"column":8},"end":{"line":127,"column":8}}]},"14":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":8},"end":{"line":130,"column":8}},{"start":{"line":130,"column":8},"end":{"line":130,"column":8}}]},"15":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":4},"end":{"line":149,"column":4}},{"start":{"line":149,"column":4},"end":{"line":149,"column":4}}]},"16":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":6},"end":{"line":154,"column":6}},{"start":{"line":154,"column":6},"end":{"line":154,"column":6}}]},"17":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":4},"end":{"line":164,"column":4}},{"start":{"line":164,"column":4},"end":{"line":164,"column":4}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule restoreRelayCacheData"," * "," */","","'use strict';","","var _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));","","var _possibleConstructorReturn3 = _interopRequireDefault(require('babel-runtime/helpers/possibleConstructorReturn'));","","var _inherits3 = _interopRequireDefault(require('babel-runtime/helpers/inherits'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","/**"," * @internal"," *"," * Retrieves data for queries or fragments from disk into `cachedRecords`."," */","function restoreFragmentDataFromCache(dataID, fragment, path, store, cachedRecords, cachedRootCallMap, garbageCollector, cacheManager, changeTracker, callbacks) {","  var restorator = new RelayCachedDataRestorator(cacheManager, store, cachedRecords, cachedRootCallMap, changeTracker, callbacks, garbageCollector);","  restorator.restoreFragmentData(dataID, fragment, path);","","  return {","    abort: function abort() {","      restorator.abort();","    }","  };","}","","function restoreQueriesDataFromCache(queries, store, cachedRecords, cachedRootCallMap, garbageCollector, cacheManager, changeTracker, callbacks) {","  var restorator = new RelayCachedDataRestorator(cacheManager, store, cachedRecords, cachedRootCallMap, changeTracker, callbacks, garbageCollector);","  restorator.restoreQueriesData(queries);","","  return {","    abort: function abort() {","      restorator.abort();","    }","  };","}","","var RelayCachedDataRestorator = function (_RelayCacheProcessor) {","  (0, _inherits3['default'])(RelayCachedDataRestorator, _RelayCacheProcessor);","","  function RelayCachedDataRestorator(cacheManager, store, cachedRecords, cachedRootCallMap, changeTracker, callbacks, garbageCollector) {","    (0, _classCallCheck3['default'])(this, RelayCachedDataRestorator);","","    var _this = (0, _possibleConstructorReturn3['default'])(this, _RelayCacheProcessor.call(this, cacheManager, callbacks));","","    _this._cachedRecords = cachedRecords;","    _this._cachedRootCallMap = cachedRootCallMap;","    _this._changeTracker = changeTracker;","    _this._garbageCollector = garbageCollector;","    _this._store = store;","    return _this;","  }","","  RelayCachedDataRestorator.prototype.handleNodeVisited = function handleNodeVisited(node, dataID, record, nextState) {","    var recordState = this._store.getRecordState(dataID);","    this._cachedRecords[dataID] = record;","    // Mark records as created/updated as necessary. Note that if the","    // record is known to be deleted in the store then it will have been","    // been marked as created already. Further, it does not need to be","    // updated since no additional data can be read about a deleted node.","    if (recordState === 'UNKNOWN' && record !== undefined) {","      // Register immediately in case anything tries to read and subscribe","      // to this record (which means incrementing reference counts).","      if (this._garbageCollector) {","        this._garbageCollector.register(dataID);","      }","      // Mark as created if the store did not have a record but disk cache","      // did (either a known record or known deletion).","      this._changeTracker.createID(dataID);","    } else if (recordState === 'EXISTENT' && record != null) {","      // Mark as updated only if a record exists in both the store and","      // disk cache.","      this._changeTracker.updateID(dataID);","    }","    if (!record) {","      // We are out of luck if disk doesn't have the node either.","      this.handleFailure();","      return;","    }","    if (require('./RelayRecord').isClientID(dataID)) {","      record.__path__ = nextState.path;","    }","  };","","  RelayCachedDataRestorator.prototype.handleIdentifiedRootVisited = function handleIdentifiedRootVisited(query, dataID, identifyingArgKey, nextState) {","    if (dataID == null) {","      // Read from cache and we still don't have a valid `dataID`.","      this.handleFailure();","      return;","    }","    var storageKey = query.getStorageKey();","    this._cachedRootCallMap[storageKey] = this._cachedRootCallMap[storageKey] || {};","    this._cachedRootCallMap[storageKey][identifyingArgKey || ''] = dataID;","    nextState.dataID = dataID;","  };","","  RelayCachedDataRestorator.prototype.restoreFragmentData = function restoreFragmentData(dataID, fragment, path) {","    var _this2 = this;","","    this.process(function () {","      _this2.visitFragment(fragment, {","        dataID: dataID,","        node: fragment,","        path: path,","        rangeCalls: undefined","      });","    });","  };","","  RelayCachedDataRestorator.prototype.restoreQueriesData = function restoreQueriesData(queries) {","    var _this3 = this;","","    this.process(function () {","      require('fbjs/lib/forEachObject')(queries, function (query) {","        if (_this3._state === 'COMPLETED') {","          return;","        }","        if (query) {","          _this3.visitRoot(query, {","            dataID: undefined,","            node: query,","            path: require('./RelayQueryPath').create(query),","            rangeCalls: undefined","          });","        }","      });","    });","  };","","  RelayCachedDataRestorator.prototype.traverse = function traverse(node, nextState) {","    require('fbjs/lib/invariant')(nextState.dataID != null, 'RelayCachedDataRestorator: Attempted to traverse without a ' + '`dataID`.');","","    var _findRelayQueryLeaves = require('./findRelayQueryLeaves')(this._store, this._cachedRecords, nextState.node, nextState.dataID, nextState.path, nextState.rangeCalls),","        missingData = _findRelayQueryLeaves.missingData,","        pendingNodeStates = _findRelayQueryLeaves.pendingNodeStates;","","    if (missingData) {","      this.handleFailure();","      return;","    }","    for (var ii = 0; ii < pendingNodeStates.length; ii++) {","      if (this._state === 'COMPLETED') {","        return;","      }","      require('fbjs/lib/invariant')(pendingNodeStates[ii].dataID != null, 'RelayCachedDataRestorator: Attempted to visit a node without ' + 'a `dataID`.');","      this.visitNode(pendingNodeStates[ii].node, pendingNodeStates[ii].dataID, pendingNodeStates[ii]);","    }","  };","","  RelayCachedDataRestorator.prototype.visitIdentifiedRoot = function visitIdentifiedRoot(query, identifyingArgKey, nextState) {","    var dataID = this._store.getDataID(query.getStorageKey(), identifyingArgKey);","    if (dataID == null) {","      _RelayCacheProcessor.prototype.visitIdentifiedRoot.call(this, query, identifyingArgKey, nextState);","    } else {","      this.traverse(query, {","        dataID: dataID,","        node: query,","        path: require('./RelayQueryPath').create(query),","        rangeCalls: undefined","      });","    }","  };","","  return RelayCachedDataRestorator;","}(require('./RelayCacheProcessor'));","","require('./RelayProfiler').instrumentMethods(RelayCachedDataRestorator.prototype, {","  handleIdentifiedRootVisited: 'RelayCachedDataRestorator.handleIdentifiedRootVisited',","  handleNodeVisited: 'RelayCachedDataRestorator.handleNodeVisited',","  queueIdentifiedRoot: 'RelayCachedDataRestorator.queueRoot',","  queueNode: 'RelayCachedDataRestorator.queueNode',","  restoreFragmentData: 'RelayCachedDataRestorator.readFragment',","  restoreQueriesData: 'RelayCachedDataRestorator.read',","  traverse: 'RelayCachedDataRestorator.traverse',","  visitNode: 'RelayCachedDataRestorator.visitNode',","  visitRoot: 'RelayCachedDataRestorator.visitRoot'","});","","module.exports = {","  restoreFragmentDataFromCache: restoreFragmentDataFromCache,","  restoreQueriesDataFromCache: restoreQueriesDataFromCache","};"],"l":{"15":1,"17":1,"19":1,"21":3,"28":1,"29":0,"30":0,"32":0,"34":0,"39":1,"40":0,"41":0,"43":0,"45":0,"50":1,"51":1,"53":1,"54":0,"56":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"66":1,"67":0,"68":0,"73":0,"76":0,"77":0,"81":0,"82":0,"85":0,"87":0,"89":0,"90":0,"92":0,"93":0,"97":1,"98":0,"100":0,"101":0,"103":0,"104":0,"105":0,"106":0,"109":1,"110":0,"112":0,"113":0,"122":1,"123":0,"125":0,"126":0,"127":0,"128":0,"130":0,"131":0,"142":1,"143":0,"145":0,"149":0,"150":0,"151":0,"153":0,"154":0,"155":0,"157":0,"158":0,"162":1,"163":0,"164":0,"165":0,"167":0,"176":1,"179":1,"191":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayCacheProcessor.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayCacheProcessor.js","s":{"1":1,"2":1,"3":1,"4":1,"5":3,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":1,"21":0,"22":0,"23":0,"24":1,"25":0,"26":1,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":1,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":1,"78":0,"79":0,"80":0,"81":0,"82":1,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":1,"90":0,"91":1,"92":0,"93":0,"94":0,"95":1,"96":0,"97":1,"98":1},"b":{"1":[3,0],"2":[3,3],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0,0]},"f":{"1":3,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":37}}},"2":{"name":"(anonymous_2)","line":34,"loc":{"start":{"line":34,"column":26},"end":{"line":34,"column":56}}},"3":{"name":"RelayCacheProcessor","line":37,"loc":{"start":{"line":37,"column":2},"end":{"line":37,"column":56}}},"4":{"name":"abort","line":50,"loc":{"start":{"line":50,"column":40},"end":{"line":50,"column":57}}},"5":{"name":"handleFailure","line":55,"loc":{"start":{"line":55,"column":48},"end":{"line":55,"column":78}}},"6":{"name":"handleNodeVisited","line":61,"loc":{"start":{"line":61,"column":52},"end":{"line":61,"column":112}}},"7":{"name":"handleIdentifiedRootVisited","line":65,"loc":{"start":{"line":65,"column":62},"end":{"line":65,"column":144}}},"8":{"name":"process","line":69,"loc":{"start":{"line":69,"column":42},"end":{"line":69,"column":72}}},"9":{"name":"queueIdentifiedRoot","line":78,"loc":{"start":{"line":78,"column":54},"end":{"line":78,"column":120}}},"10":{"name":"(anonymous_10)","line":82,"loc":{"start":{"line":82,"column":73},"end":{"line":82,"column":98}}},"11":{"name":"queueNode","line":106,"loc":{"start":{"line":106,"column":44},"end":{"line":106,"column":88}}},"12":{"name":"(anonymous_12)","line":109,"loc":{"start":{"line":109,"column":40},"end":{"line":109,"column":65}}},"13":{"name":"visitIdentifiedRoot","line":132,"loc":{"start":{"line":132,"column":54},"end":{"line":132,"column":120}}},"14":{"name":"visitNode","line":143,"loc":{"start":{"line":143,"column":44},"end":{"line":143,"column":88}}},"15":{"name":"visitRoot","line":152,"loc":{"start":{"line":152,"column":44},"end":{"line":152,"column":81}}},"16":{"name":"(anonymous_16)","line":155,"loc":{"start":{"line":155,"column":43},"end":{"line":155,"column":59}}},"17":{"name":"_getRootKey","line":165,"loc":{"start":{"line":165,"column":46},"end":{"line":165,"column":98}}},"18":{"name":"_handleSuccess","line":169,"loc":{"start":{"line":169,"column":49},"end":{"line":169,"column":75}}},"19":{"name":"_isDone","line":175,"loc":{"start":{"line":175,"column":42},"end":{"line":175,"column":61}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":117}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":83}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":97}},"5":{"start":{"line":21,"column":39},"end":{"line":21,"column":95}},"6":{"start":{"line":34,"column":0},"end":{"line":180,"column":34}},"7":{"start":{"line":35,"column":2},"end":{"line":35,"column":70}},"8":{"start":{"line":37,"column":2},"end":{"line":48,"column":3}},"9":{"start":{"line":38,"column":4},"end":{"line":38,"column":64}},"10":{"start":{"line":40,"column":4},"end":{"line":40,"column":97}},"11":{"start":{"line":42,"column":4},"end":{"line":42,"column":39}},"12":{"start":{"line":43,"column":4},"end":{"line":43,"column":33}},"13":{"start":{"line":44,"column":4},"end":{"line":44,"column":34}},"14":{"start":{"line":45,"column":4},"end":{"line":45,"column":29}},"15":{"start":{"line":46,"column":4},"end":{"line":46,"column":29}},"16":{"start":{"line":47,"column":4},"end":{"line":47,"column":17}},"17":{"start":{"line":50,"column":2},"end":{"line":53,"column":4}},"18":{"start":{"line":51,"column":4},"end":{"line":51,"column":129}},"19":{"start":{"line":52,"column":4},"end":{"line":52,"column":30}},"20":{"start":{"line":55,"column":2},"end":{"line":59,"column":4}},"21":{"start":{"line":56,"column":4},"end":{"line":56,"column":120}},"22":{"start":{"line":57,"column":4},"end":{"line":57,"column":30}},"23":{"start":{"line":58,"column":4},"end":{"line":58,"column":66}},"24":{"start":{"line":61,"column":2},"end":{"line":63,"column":4}},"25":{"start":{"line":62,"column":4},"end":{"line":62,"column":11}},"26":{"start":{"line":65,"column":2},"end":{"line":67,"column":4}},"27":{"start":{"line":66,"column":4},"end":{"line":66,"column":11}},"28":{"start":{"line":69,"column":2},"end":{"line":76,"column":4}},"29":{"start":{"line":70,"column":4},"end":{"line":70,"column":110}},"30":{"start":{"line":71,"column":4},"end":{"line":71,"column":28}},"31":{"start":{"line":72,"column":4},"end":{"line":72,"column":18}},"32":{"start":{"line":73,"column":4},"end":{"line":75,"column":5}},"33":{"start":{"line":74,"column":6},"end":{"line":74,"column":28}},"34":{"start":{"line":78,"column":2},"end":{"line":104,"column":4}},"35":{"start":{"line":79,"column":4},"end":{"line":79,"column":22}},"36":{"start":{"line":81,"column":4},"end":{"line":81,"column":43}},"37":{"start":{"line":82,"column":4},"end":{"line":103,"column":7}},"38":{"start":{"line":83,"column":6},"end":{"line":85,"column":7}},"39":{"start":{"line":84,"column":8},"end":{"line":84,"column":15}},"40":{"start":{"line":86,"column":6},"end":{"line":89,"column":7}},"41":{"start":{"line":87,"column":8},"end":{"line":87,"column":36}},"42":{"start":{"line":88,"column":8},"end":{"line":88,"column":15}},"43":{"start":{"line":90,"column":6},"end":{"line":90,"column":86}},"44":{"start":{"line":91,"column":6},"end":{"line":91,"column":70}},"45":{"start":{"line":92,"column":6},"end":{"line":92,"column":55}},"46":{"start":{"line":93,"column":6},"end":{"line":93,"column":43}},"47":{"start":{"line":94,"column":6},"end":{"line":99,"column":7}},"48":{"start":{"line":95,"column":8},"end":{"line":97,"column":9}},"49":{"start":{"line":96,"column":10},"end":{"line":96,"column":17}},"50":{"start":{"line":98,"column":8},"end":{"line":98,"column":53}},"51":{"start":{"line":100,"column":6},"end":{"line":102,"column":7}},"52":{"start":{"line":101,"column":8},"end":{"line":101,"column":32}},"53":{"start":{"line":106,"column":2},"end":{"line":130,"column":4}},"54":{"start":{"line":107,"column":4},"end":{"line":107,"column":22}},"55":{"start":{"line":109,"column":4},"end":{"line":129,"column":7}},"56":{"start":{"line":110,"column":6},"end":{"line":112,"column":7}},"57":{"start":{"line":111,"column":8},"end":{"line":111,"column":15}},"58":{"start":{"line":113,"column":6},"end":{"line":116,"column":7}},"59":{"start":{"line":114,"column":8},"end":{"line":114,"column":36}},"60":{"start":{"line":115,"column":8},"end":{"line":115,"column":15}},"61":{"start":{"line":117,"column":6},"end":{"line":117,"column":64}},"62":{"start":{"line":118,"column":6},"end":{"line":118,"column":64}},"63":{"start":{"line":119,"column":6},"end":{"line":119,"column":47}},"64":{"start":{"line":120,"column":6},"end":{"line":125,"column":7}},"65":{"start":{"line":121,"column":8},"end":{"line":123,"column":9}},"66":{"start":{"line":122,"column":10},"end":{"line":122,"column":17}},"67":{"start":{"line":124,"column":8},"end":{"line":124,"column":53}},"68":{"start":{"line":126,"column":6},"end":{"line":128,"column":7}},"69":{"start":{"line":127,"column":8},"end":{"line":127,"column":32}},"70":{"start":{"line":132,"column":2},"end":{"line":141,"column":4}},"71":{"start":{"line":133,"column":4},"end":{"line":133,"column":43}},"72":{"start":{"line":134,"column":4},"end":{"line":134,"column":66}},"73":{"start":{"line":135,"column":4},"end":{"line":140,"column":5}},"74":{"start":{"line":136,"column":6},"end":{"line":136,"column":46}},"75":{"start":{"line":138,"column":6},"end":{"line":138,"column":44}},"76":{"start":{"line":139,"column":6},"end":{"line":139,"column":68}},"77":{"start":{"line":143,"column":2},"end":{"line":150,"column":4}},"78":{"start":{"line":144,"column":4},"end":{"line":149,"column":5}},"79":{"start":{"line":145,"column":6},"end":{"line":145,"column":54}},"80":{"start":{"line":147,"column":6},"end":{"line":147,"column":52}},"81":{"start":{"line":148,"column":6},"end":{"line":148,"column":46}},"82":{"start":{"line":152,"column":2},"end":{"line":163,"column":4}},"83":{"start":{"line":153,"column":4},"end":{"line":153,"column":22}},"84":{"start":{"line":155,"column":4},"end":{"line":162,"column":7}},"85":{"start":{"line":156,"column":6},"end":{"line":156,"column":53}},"86":{"start":{"line":158,"column":6},"end":{"line":160,"column":7}},"87":{"start":{"line":159,"column":8},"end":{"line":159,"column":15}},"88":{"start":{"line":161,"column":6},"end":{"line":161,"column":70}},"89":{"start":{"line":165,"column":2},"end":{"line":167,"column":4}},"90":{"start":{"line":166,"column":4},"end":{"line":166,"column":56}},"91":{"start":{"line":169,"column":2},"end":{"line":173,"column":4}},"92":{"start":{"line":170,"column":4},"end":{"line":170,"column":120}},"93":{"start":{"line":171,"column":4},"end":{"line":171,"column":30}},"94":{"start":{"line":172,"column":4},"end":{"line":172,"column":61}},"95":{"start":{"line":175,"column":2},"end":{"line":177,"column":4}},"96":{"start":{"line":176,"column":4},"end":{"line":176,"column":144}},"97":{"start":{"line":179,"column":2},"end":{"line":179,"column":29}},"98":{"start":{"line":182,"column":0},"end":{"line":182,"column":37}}},"branchMap":{"1":{"line":21,"type":"cond-expr","locations":[{"start":{"line":21,"column":70},"end":{"line":21,"column":73}},{"start":{"line":21,"column":76},"end":{"line":21,"column":94}}]},"2":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":46},"end":{"line":21,"column":49}},{"start":{"line":21,"column":53},"end":{"line":21,"column":67}}]},"3":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":4},"end":{"line":58,"column":29}},{"start":{"line":58,"column":33},"end":{"line":58,"column":65}}]},"4":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":4},"end":{"line":73,"column":4}},{"start":{"line":73,"column":4},"end":{"line":73,"column":4}}]},"5":{"line":82,"type":"binary-expr","locations":[{"start":{"line":82,"column":48},"end":{"line":82,"column":65}},{"start":{"line":82,"column":69},"end":{"line":82,"column":71}}]},"6":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":6},"end":{"line":83,"column":6}},{"start":{"line":83,"column":6},"end":{"line":83,"column":6}}]},"7":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":6},"end":{"line":86,"column":6}},{"start":{"line":86,"column":6},"end":{"line":86,"column":6}}]},"8":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":8},"end":{"line":95,"column":8}},{"start":{"line":95,"column":8},"end":{"line":95,"column":8}}]},"9":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":6},"end":{"line":100,"column":6}},{"start":{"line":100,"column":6},"end":{"line":100,"column":6}}]},"10":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":6},"end":{"line":110,"column":6}},{"start":{"line":110,"column":6},"end":{"line":110,"column":6}}]},"11":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":6},"end":{"line":113,"column":6}},{"start":{"line":113,"column":6},"end":{"line":113,"column":6}}]},"12":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":8},"end":{"line":121,"column":8}},{"start":{"line":121,"column":8},"end":{"line":121,"column":8}}]},"13":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":6},"end":{"line":126,"column":6}},{"start":{"line":126,"column":6},"end":{"line":126,"column":6}}]},"14":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":4},"end":{"line":135,"column":4}},{"start":{"line":135,"column":4},"end":{"line":135,"column":4}}]},"15":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":4},"end":{"line":144,"column":4}},{"start":{"line":144,"column":4},"end":{"line":144,"column":4}}]},"16":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":6},"end":{"line":158,"column":6}},{"start":{"line":158,"column":6},"end":{"line":158,"column":6}}]},"17":{"line":166,"type":"binary-expr","locations":[{"start":{"line":166,"column":31},"end":{"line":166,"column":48}},{"start":{"line":166,"column":52},"end":{"line":166,"column":54}}]},"18":{"line":172,"type":"binary-expr","locations":[{"start":{"line":172,"column":4},"end":{"line":172,"column":29}},{"start":{"line":172,"column":33},"end":{"line":172,"column":60}}]},"19":{"line":176,"type":"binary-expr","locations":[{"start":{"line":176,"column":11},"end":{"line":176,"column":58}},{"start":{"line":176,"column":62},"end":{"line":176,"column":114}},{"start":{"line":176,"column":118},"end":{"line":176,"column":143}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayCacheProcessor"," * "," */","","'use strict';","","var _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));","","var _possibleConstructorReturn3 = _interopRequireDefault(require('babel-runtime/helpers/possibleConstructorReturn'));","","var _inherits3 = _interopRequireDefault(require('babel-runtime/helpers/inherits'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","/**"," * An asynchronous traversal that knows how to read roots and nodes from a"," * `CacheManager`. Root reads yield the `dataID` of the root, if found."," * Node reads yield the `Record` associated with a supplied `dataID`, if found."," *"," * Visitors: Ensure that only one read is ever in flight for a given root/node."," *           Maintain a list of states to process after each read completes."," * Queuers:  Perform the work of kicking off a root/node read."," * Handlers: Subclasses of `RelayCacheProcessor` can implement this method to"," *           actually perform work after a root/node read completes."," */","var RelayCacheProcessor = function (_RelayQueryVisitor) {","  (0, _inherits3['default'])(RelayCacheProcessor, _RelayQueryVisitor);","","  function RelayCacheProcessor(cacheManager, callbacks) {","    (0, _classCallCheck3['default'])(this, RelayCacheProcessor);","","    var _this = (0, _possibleConstructorReturn3['default'])(this, _RelayQueryVisitor.call(this));","","    _this._cacheManager = cacheManager;","    _this._callbacks = callbacks;","    _this._pendingNextStates = {};","    _this._pendingRoots = {};","    _this._state = 'PENDING';","    return _this;","  }","","  RelayCacheProcessor.prototype.abort = function abort() {","    require('fbjs/lib/warning')(this._state === 'LOADING', 'RelayCacheProcessor: Can only abort an in-progress read operation.');","    this._state = 'COMPLETED';","  };","","  RelayCacheProcessor.prototype.handleFailure = function handleFailure(error) {","    require('fbjs/lib/invariant')(this._state !== 'COMPLETED', 'RelayStoreReader: Query set already failed/completed.');","    this._state = 'COMPLETED';","    this._callbacks.onFailure && this._callbacks.onFailure(error);","  };","","  RelayCacheProcessor.prototype.handleNodeVisited = function handleNodeVisited(node, dataID, record, nextState) {","    return;","  };","","  RelayCacheProcessor.prototype.handleIdentifiedRootVisited = function handleIdentifiedRootVisited(query, dataID, identifyingArgKey, nextState) {","    return;","  };","","  RelayCacheProcessor.prototype.process = function process(processorFn) {","    require('fbjs/lib/invariant')(this._state === 'PENDING', 'RelayCacheProcessor: A `read` is in progress.');","    this._state = 'LOADING';","    processorFn();","    if (this._isDone()) {","      this._handleSuccess();","    }","  };","","  RelayCacheProcessor.prototype.queueIdentifiedRoot = function queueIdentifiedRoot(query, identifyingArgKey, nextState) {","    var _this2 = this;","","    var storageKey = query.getStorageKey();","    this._cacheManager.readRootCall(storageKey, identifyingArgKey || '', function (error, dataID) {","      if (_this2._state === 'COMPLETED') {","        return;","      }","      if (error) {","        _this2.handleFailure(error);","        return;","      }","      _this2.handleIdentifiedRootVisited(query, dataID, identifyingArgKey, nextState);","      var rootKey = _this2._getRootKey(storageKey, identifyingArgKey);","      var pendingRoots = _this2._pendingRoots[rootKey];","      delete _this2._pendingRoots[rootKey];","      for (var ii = 0; ii < pendingRoots.length; ii++) {","        if (_this2._state === 'COMPLETED') {","          return;","        }","        _this2.traverse(pendingRoots[ii], nextState);","      }","      if (_this2._isDone()) {","        _this2._handleSuccess();","      }","    });","  };","","  RelayCacheProcessor.prototype.queueNode = function queueNode(node, dataID, nextState) {","    var _this3 = this;","","    this._cacheManager.readNode(dataID, function (error, record) {","      if (_this3._state === 'COMPLETED') {","        return;","      }","      if (error) {","        _this3.handleFailure(error);","        return;","      }","      _this3.handleNodeVisited(node, dataID, record, nextState);","      var pendingNextStates = _this3._pendingNextStates[dataID];","      delete _this3._pendingNextStates[dataID];","      for (var ii = 0; ii < pendingNextStates.length; ii++) {","        if (_this3._state === 'COMPLETED') {","          return;","        }","        _this3.traverse(node, pendingNextStates[ii]);","      }","      if (_this3._isDone()) {","        _this3._handleSuccess();","      }","    });","  };","","  RelayCacheProcessor.prototype.visitIdentifiedRoot = function visitIdentifiedRoot(query, identifyingArgKey, nextState) {","    var storageKey = query.getStorageKey();","    var rootKey = this._getRootKey(storageKey, identifyingArgKey);","    if (this._pendingRoots.hasOwnProperty(rootKey)) {","      this._pendingRoots[rootKey].push(query);","    } else {","      this._pendingRoots[rootKey] = [query];","      this.queueIdentifiedRoot(query, identifyingArgKey, nextState);","    }","  };","","  RelayCacheProcessor.prototype.visitNode = function visitNode(node, dataID, nextState) {","    if (this._pendingNextStates.hasOwnProperty(dataID)) {","      this._pendingNextStates[dataID].push(nextState);","    } else {","      this._pendingNextStates[dataID] = [nextState];","      this.queueNode(node, dataID, nextState);","    }","  };","","  RelayCacheProcessor.prototype.visitRoot = function visitRoot(query, nextState) {","    var _this4 = this;","","    require('./forEachRootCallArg')(query, function (_ref) {","      var identifyingArgKey = _ref.identifyingArgKey;","","      if (_this4._state === 'COMPLETED') {","        return;","      }","      _this4.visitIdentifiedRoot(query, identifyingArgKey, nextState);","    });","  };","","  RelayCacheProcessor.prototype._getRootKey = function _getRootKey(storageKey, identifyingArgKey) {","    return storageKey + '*' + (identifyingArgKey || '');","  };","","  RelayCacheProcessor.prototype._handleSuccess = function _handleSuccess() {","    require('fbjs/lib/invariant')(this._state !== 'COMPLETED', 'RelayStoreReader: Query set already failed/completed.');","    this._state = 'COMPLETED';","    this._callbacks.onSuccess && this._callbacks.onSuccess();","  };","","  RelayCacheProcessor.prototype._isDone = function _isDone() {","    return require('fbjs/lib/isEmpty')(this._pendingRoots) && require('fbjs/lib/isEmpty')(this._pendingNextStates) && this._state === 'LOADING';","  };","","  return RelayCacheProcessor;","}(require('./RelayQueryVisitor'));","","module.exports = RelayCacheProcessor;"],"l":{"15":1,"17":1,"19":1,"21":3,"34":1,"35":1,"37":1,"38":0,"40":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"50":1,"51":0,"52":0,"55":1,"56":0,"57":0,"58":0,"61":1,"62":0,"65":1,"66":0,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"78":1,"79":0,"81":0,"82":0,"83":0,"84":0,"86":0,"87":0,"88":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"98":0,"100":0,"101":0,"106":1,"107":0,"109":0,"110":0,"111":0,"113":0,"114":0,"115":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"124":0,"126":0,"127":0,"132":1,"133":0,"134":0,"135":0,"136":0,"138":0,"139":0,"143":1,"144":0,"145":0,"147":0,"148":0,"152":1,"153":0,"155":0,"156":0,"158":0,"159":0,"161":0,"165":1,"166":0,"169":1,"170":0,"171":0,"172":0,"175":1,"176":0,"179":1,"182":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayQueryVisitor.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayQueryVisitor.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":2,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":1,"24":0,"25":1,"26":0,"27":1,"28":0,"29":1,"30":1},"b":{"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":1,"2":1,"3":2,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":37}}},"2":{"name":"(anonymous_2)","line":50,"loc":{"start":{"line":50,"column":24},"end":{"line":50,"column":36}}},"3":{"name":"RelayQueryVisitor","line":51,"loc":{"start":{"line":51,"column":2},"end":{"line":51,"column":31}}},"4":{"name":"visit","line":55,"loc":{"start":{"line":55,"column":38},"end":{"line":55,"column":70}}},"5":{"name":"traverse","line":65,"loc":{"start":{"line":65,"column":41},"end":{"line":65,"column":76}}},"6":{"name":"(anonymous_6)","line":67,"loc":{"start":{"line":67,"column":45},"end":{"line":67,"column":62}}},"7":{"name":"traverseChildren","line":74,"loc":{"start":{"line":74,"column":49},"end":{"line":74,"column":111}}},"8":{"name":"visitField","line":81,"loc":{"start":{"line":81,"column":43},"end":{"line":81,"column":80}}},"9":{"name":"visitFragment","line":85,"loc":{"start":{"line":85,"column":46},"end":{"line":85,"column":86}}},"10":{"name":"visitRoot","line":89,"loc":{"start":{"line":89,"column":42},"end":{"line":89,"column":78}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":97}},"3":{"start":{"line":17,"column":39},"end":{"line":17,"column":95}},"4":{"start":{"line":50,"column":0},"end":{"line":94,"column":4}},"5":{"start":{"line":51,"column":2},"end":{"line":53,"column":3}},"6":{"start":{"line":52,"column":4},"end":{"line":52,"column":62}},"7":{"start":{"line":55,"column":2},"end":{"line":63,"column":4}},"8":{"start":{"line":56,"column":4},"end":{"line":62,"column":5}},"9":{"start":{"line":57,"column":6},"end":{"line":57,"column":46}},"10":{"start":{"line":58,"column":11},"end":{"line":62,"column":5}},"11":{"start":{"line":59,"column":6},"end":{"line":59,"column":49}},"12":{"start":{"line":60,"column":11},"end":{"line":62,"column":5}},"13":{"start":{"line":61,"column":6},"end":{"line":61,"column":45}},"14":{"start":{"line":65,"column":2},"end":{"line":72,"column":4}},"15":{"start":{"line":66,"column":4},"end":{"line":70,"column":5}},"16":{"start":{"line":67,"column":6},"end":{"line":69,"column":15}},"17":{"start":{"line":68,"column":8},"end":{"line":68,"column":37}},"18":{"start":{"line":71,"column":4},"end":{"line":71,"column":16}},"19":{"start":{"line":74,"column":2},"end":{"line":79,"column":4}},"20":{"start":{"line":75,"column":4},"end":{"line":75,"column":38}},"21":{"start":{"line":76,"column":4},"end":{"line":78,"column":5}},"22":{"start":{"line":77,"column":6},"end":{"line":77,"column":65}},"23":{"start":{"line":81,"column":2},"end":{"line":83,"column":4}},"24":{"start":{"line":82,"column":4},"end":{"line":82,"column":42}},"25":{"start":{"line":85,"column":2},"end":{"line":87,"column":4}},"26":{"start":{"line":86,"column":4},"end":{"line":86,"column":42}},"27":{"start":{"line":89,"column":2},"end":{"line":91,"column":4}},"28":{"start":{"line":90,"column":4},"end":{"line":90,"column":42}},"29":{"start":{"line":93,"column":2},"end":{"line":93,"column":27}},"30":{"start":{"line":96,"column":0},"end":{"line":96,"column":35}}},"branchMap":{"1":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":70},"end":{"line":17,"column":73}},{"start":{"line":17,"column":76},"end":{"line":17,"column":94}}]},"2":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":46},"end":{"line":17,"column":49}},{"start":{"line":17,"column":53},"end":{"line":17,"column":67}}]},"3":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":4},"end":{"line":56,"column":4}},{"start":{"line":56,"column":4},"end":{"line":56,"column":4}}]},"4":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":11},"end":{"line":58,"column":11}},{"start":{"line":58,"column":11},"end":{"line":58,"column":11}}]},"5":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":11},"end":{"line":60,"column":11}},{"start":{"line":60,"column":11},"end":{"line":60,"column":11}}]},"6":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":4},"end":{"line":66,"column":4}},{"start":{"line":66,"column":4},"end":{"line":66,"column":4}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayQueryVisitor"," * "," */","","'use strict';","","var _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","/**"," * @internal"," *"," * Base class for traversing a Relay Query."," *"," * Subclasses can optionally implement methods to customize the traversal:"," *"," * - `visitField(field, state)`: Called for each field."," * - `visitFragment(fragment, state)`: Called for each fragment."," * - `visitQuery(fragment, state)`: Called for the top level query."," *"," * A `state` variable is passed along to all callbacks and can be used to"," * accumulate data while traversing (effectively passing data back up the tree),"," * or modify the behavior of later callbacks (effectively passing data down the"," * tree)."," *"," * There are two additional methods for controlling the traversal:"," *"," * - `traverse(parent, state)`: Visits all children of `parent`. Subclasses"," *   may override in order to short-circuit traversal. Note that"," *   `visit{Field,Fragment,Query}` are //not// called on `parent`, as it will"," *   already have been visited by the time this method is called."," * - `visit(child, state)`: Processes the `child` node, calling the appropriate"," *   `visit{Field,Fragment,Query}` method based on the node type."," *"," * By convention, each of the callback methods returns the visited node. This is"," * used by the `RelayQueryTransform` subclass to implement mapping and filtering"," * behavior, but purely-visitor subclases do not need to follow this convention."," *"," * @see RelayQueryTransform"," */","var RelayQueryVisitor = function () {","  function RelayQueryVisitor() {","    (0, _classCallCheck3['default'])(this, RelayQueryVisitor);","  }","","  RelayQueryVisitor.prototype.visit = function visit(node, nextState) {","    if (node instanceof require('./RelayQuery').Field) {","      return this.visitField(node, nextState);","    } else if (node instanceof require('./RelayQuery').Fragment) {","      return this.visitFragment(node, nextState);","    } else if (node instanceof require('./RelayQuery').Root) {","      return this.visitRoot(node, nextState);","    }","  };","","  RelayQueryVisitor.prototype.traverse = function traverse(node, nextState) {","    if (node.canHaveSubselections()) {","      this.traverseChildren(node, nextState, function (child) {","        this.visit(child, nextState);","      }, this);","    }","    return node;","  };","","  RelayQueryVisitor.prototype.traverseChildren = function traverseChildren(node, nextState, callback, context) {","    var children = node.getChildren();","    for (var _index = 0; _index < children.length; _index++) {","      callback.call(context, children[_index], _index, children);","    }","  };","","  RelayQueryVisitor.prototype.visitField = function visitField(node, nextState) {","    return this.traverse(node, nextState);","  };","","  RelayQueryVisitor.prototype.visitFragment = function visitFragment(node, nextState) {","    return this.traverse(node, nextState);","  };","","  RelayQueryVisitor.prototype.visitRoot = function visitRoot(node, nextState) {","    return this.traverse(node, nextState);","  };","","  return RelayQueryVisitor;","}();","","module.exports = RelayQueryVisitor;"],"l":{"15":1,"17":1,"50":1,"51":1,"52":2,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"65":1,"66":0,"67":0,"68":0,"71":0,"74":1,"75":0,"76":0,"77":0,"81":1,"82":0,"85":1,"86":0,"89":1,"90":0,"93":1,"96":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayProfiler.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayProfiler.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":31,"7":31,"8":0,"9":1,"10":7,"11":24,"12":31,"13":0,"14":0,"15":0,"16":31,"17":31,"18":31,"19":31,"20":31,"21":31,"22":31,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":31,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":31,"46":0,"47":31,"48":0,"49":31,"50":31,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":1},"b":{"1":[31,0],"2":[0,31],"3":[31,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0]},"f":{"1":31,"2":7,"3":24,"4":31,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"fnMap":{"1":{"name":"shouldInstrument","line":24,"loc":{"start":{"line":24,"column":23},"end":{"line":24,"column":55}}},"2":{"name":"instrumentMethods","line":80,"loc":{"start":{"line":80,"column":21},"end":{"line":80,"column":63}}},"3":{"name":"(anonymous_3)","line":81,"loc":{"start":{"line":81,"column":45},"end":{"line":81,"column":66}}},"4":{"name":"instrument","line":99,"loc":{"start":{"line":99,"column":14},"end":{"line":99,"column":58}}},"5":{"name":"invokeHandlers","line":112,"loc":{"start":{"line":112,"column":25},"end":{"line":112,"column":51}}},"6":{"name":"instrumentedCallback","line":127,"loc":{"start":{"line":127,"column":31},"end":{"line":127,"column":63}}},"7":{"name":"(anonymous_7)","line":142,"loc":{"start":{"line":142,"column":41},"end":{"line":142,"column":60}}},"8":{"name":"(anonymous_8)","line":145,"loc":{"start":{"line":145,"column":41},"end":{"line":145,"column":60}}},"9":{"name":"attachAggregateHandler","line":169,"loc":{"start":{"line":169,"column":26},"end":{"line":169,"column":73}}},"10":{"name":"detachAggregateHandler","line":182,"loc":{"start":{"line":182,"column":26},"end":{"line":182,"column":73}}},"11":{"name":"profile","line":204,"loc":{"start":{"line":204,"column":11},"end":{"line":204,"column":41}}},"12":{"name":"(anonymous_12)","line":208,"loc":{"start":{"line":208,"column":17},"end":{"line":208,"column":29}}},"13":{"name":"stop","line":219,"loc":{"start":{"line":219,"column":18},"end":{"line":219,"column":34}}},"14":{"name":"(anonymous_14)","line":221,"loc":{"start":{"line":221,"column":37},"end":{"line":221,"column":60}}},"15":{"name":"attachProfileHandler","line":240,"loc":{"start":{"line":240,"column":24},"end":{"line":240,"column":69}}},"16":{"name":"detachProfileHandler","line":253,"loc":{"start":{"line":253,"column":24},"end":{"line":253,"column":69}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":17,"column":2}},"2":{"start":{"line":18,"column":0},"end":{"line":20,"column":2}},"3":{"start":{"line":22,"column":0},"end":{"line":22,"column":21}},"4":{"start":{"line":23,"column":0},"end":{"line":23,"column":66}},"5":{"start":{"line":24,"column":0},"end":{"line":29,"column":2}},"6":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"7":{"start":{"line":26,"column":4},"end":{"line":26,"column":16}},"8":{"start":{"line":28,"column":2},"end":{"line":28,"column":32}},"9":{"start":{"line":63,"column":0},"end":{"line":260,"column":2}},"10":{"start":{"line":81,"column":4},"end":{"line":83,"column":7}},"11":{"start":{"line":82,"column":6},"end":{"line":82,"column":64}},"12":{"start":{"line":100,"column":4},"end":{"line":104,"column":5}},"13":{"start":{"line":101,"column":6},"end":{"line":101,"column":73}},"14":{"start":{"line":102,"column":6},"end":{"line":102,"column":73}},"15":{"start":{"line":103,"column":6},"end":{"line":103,"column":30}},"16":{"start":{"line":105,"column":4},"end":{"line":107,"column":5}},"17":{"start":{"line":106,"column":6},"end":{"line":106,"column":41}},"18":{"start":{"line":108,"column":4},"end":{"line":108,"column":56}},"19":{"start":{"line":109,"column":4},"end":{"line":109,"column":58}},"20":{"start":{"line":110,"column":4},"end":{"line":110,"column":22}},"21":{"start":{"line":111,"column":4},"end":{"line":111,"column":22}},"22":{"start":{"line":112,"column":4},"end":{"line":126,"column":6}},"23":{"start":{"line":113,"column":6},"end":{"line":113,"column":50}},"24":{"start":{"line":114,"column":6},"end":{"line":125,"column":7}},"25":{"start":{"line":115,"column":8},"end":{"line":115,"column":21}},"26":{"start":{"line":116,"column":8},"end":{"line":116,"column":59}},"27":{"start":{"line":117,"column":13},"end":{"line":125,"column":7}},"28":{"start":{"line":118,"column":8},"end":{"line":118,"column":21}},"29":{"start":{"line":119,"column":8},"end":{"line":119,"column":60}},"30":{"start":{"line":120,"column":13},"end":{"line":125,"column":7}},"31":{"start":{"line":121,"column":8},"end":{"line":121,"column":21}},"32":{"start":{"line":122,"column":8},"end":{"line":122,"column":51}},"33":{"start":{"line":124,"column":8},"end":{"line":124,"column":68}},"34":{"start":{"line":127,"column":4},"end":{"line":141,"column":6}},"35":{"start":{"line":128,"column":6},"end":{"line":128,"column":31}},"36":{"start":{"line":129,"column":6},"end":{"line":139,"column":7}},"37":{"start":{"line":130,"column":8},"end":{"line":130,"column":62}},"38":{"start":{"line":132,"column":8},"end":{"line":132,"column":122}},"39":{"start":{"line":133,"column":8},"end":{"line":133,"column":25}},"40":{"start":{"line":134,"column":8},"end":{"line":134,"column":37}},"41":{"start":{"line":135,"column":8},"end":{"line":135,"column":33}},"42":{"start":{"line":136,"column":8},"end":{"line":138,"column":9}},"43":{"start":{"line":137,"column":10},"end":{"line":137,"column":86}},"44":{"start":{"line":140,"column":6},"end":{"line":140,"column":25}},"45":{"start":{"line":142,"column":4},"end":{"line":144,"column":6}},"46":{"start":{"line":143,"column":6},"end":{"line":143,"column":29}},"47":{"start":{"line":145,"column":4},"end":{"line":147,"column":6}},"48":{"start":{"line":146,"column":6},"end":{"line":146,"column":61}},"49":{"start":{"line":148,"column":4},"end":{"line":148,"column":69}},"50":{"start":{"line":149,"column":4},"end":{"line":149,"column":32}},"51":{"start":{"line":170,"column":4},"end":{"line":175,"column":5}},"52":{"start":{"line":171,"column":6},"end":{"line":173,"column":7}},"53":{"start":{"line":172,"column":8},"end":{"line":172,"column":43}},"54":{"start":{"line":174,"column":6},"end":{"line":174,"column":50}},"55":{"start":{"line":183,"column":4},"end":{"line":187,"column":5}},"56":{"start":{"line":184,"column":6},"end":{"line":186,"column":7}},"57":{"start":{"line":185,"column":8},"end":{"line":185,"column":84}},"58":{"start":{"line":205,"column":4},"end":{"line":205,"column":68}},"59":{"start":{"line":206,"column":4},"end":{"line":206,"column":70}},"60":{"start":{"line":207,"column":4},"end":{"line":231,"column":5}},"61":{"start":{"line":208,"column":6},"end":{"line":228,"column":10}},"62":{"start":{"line":209,"column":8},"end":{"line":209,"column":213}},"63":{"start":{"line":210,"column":8},"end":{"line":210,"column":34}},"64":{"start":{"line":211,"column":8},"end":{"line":216,"column":9}},"65":{"start":{"line":212,"column":10},"end":{"line":212,"column":51}},"66":{"start":{"line":213,"column":10},"end":{"line":213,"column":56}},"67":{"start":{"line":214,"column":10},"end":{"line":214,"column":44}},"68":{"start":{"line":215,"column":10},"end":{"line":215,"column":44}},"69":{"start":{"line":217,"column":8},"end":{"line":227,"column":10}},"70":{"start":{"line":220,"column":14},"end":{"line":224,"column":15}},"71":{"start":{"line":221,"column":16},"end":{"line":223,"column":19}},"72":{"start":{"line":222,"column":18},"end":{"line":222,"column":39}},"73":{"start":{"line":230,"column":6},"end":{"line":230,"column":50}},"74":{"start":{"line":230,"column":36},"end":{"line":230,"column":50}},"75":{"start":{"line":232,"column":4},"end":{"line":232,"column":27}},"76":{"start":{"line":241,"column":4},"end":{"line":246,"column":5}},"77":{"start":{"line":242,"column":6},"end":{"line":244,"column":7}},"78":{"start":{"line":243,"column":8},"end":{"line":243,"column":41}},"79":{"start":{"line":245,"column":6},"end":{"line":245,"column":48}},"80":{"start":{"line":254,"column":4},"end":{"line":258,"column":5}},"81":{"start":{"line":255,"column":6},"end":{"line":257,"column":7}},"82":{"start":{"line":256,"column":8},"end":{"line":256,"column":82}},"83":{"start":{"line":262,"column":0},"end":{"line":262,"column":31}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"2":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":4},"end":{"line":100,"column":4}},{"start":{"line":100,"column":4},"end":{"line":100,"column":4}}]},"3":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":4},"end":{"line":105,"column":4}},{"start":{"line":105,"column":4},"end":{"line":105,"column":4}}]},"4":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":6},"end":{"line":114,"column":6}},{"start":{"line":114,"column":6},"end":{"line":114,"column":6}}]},"5":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":13},"end":{"line":117,"column":13}},{"start":{"line":117,"column":13},"end":{"line":117,"column":13}}]},"6":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":13},"end":{"line":120,"column":13}},{"start":{"line":120,"column":13},"end":{"line":120,"column":13}}]},"7":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":6},"end":{"line":129,"column":6}},{"start":{"line":129,"column":6},"end":{"line":129,"column":6}}]},"8":{"line":129,"type":"binary-expr","locations":[{"start":{"line":129,"column":10},"end":{"line":129,"column":40}},{"start":{"line":129,"column":44},"end":{"line":129,"column":65}},{"start":{"line":129,"column":69},"end":{"line":129,"column":98}}]},"9":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":8},"end":{"line":136,"column":8}},{"start":{"line":136,"column":8},"end":{"line":136,"column":8}}]},"10":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":4},"end":{"line":170,"column":4}},{"start":{"line":170,"column":4},"end":{"line":170,"column":4}}]},"11":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":6},"end":{"line":171,"column":6}},{"start":{"line":171,"column":6},"end":{"line":171,"column":6}}]},"12":{"line":183,"type":"if","locations":[{"start":{"line":183,"column":4},"end":{"line":183,"column":4}},{"start":{"line":183,"column":4},"end":{"line":183,"column":4}}]},"13":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":6},"end":{"line":184,"column":6}},{"start":{"line":184,"column":6},"end":{"line":184,"column":6}}]},"14":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":4},"end":{"line":207,"column":4}},{"start":{"line":207,"column":4},"end":{"line":207,"column":4}}]},"15":{"line":207,"type":"binary-expr","locations":[{"start":{"line":207,"column":8},"end":{"line":207,"column":24}},{"start":{"line":207,"column":28},"end":{"line":207,"column":47}}]},"16":{"line":209,"type":"cond-expr","locations":[{"start":{"line":209,"column":72},"end":{"line":209,"column":134}},{"start":{"line":209,"column":137},"end":{"line":209,"column":212}}]},"17":{"line":209,"type":"binary-expr","locations":[{"start":{"line":209,"column":30},"end":{"line":209,"column":46}},{"start":{"line":209,"column":50},"end":{"line":209,"column":69}}]},"18":{"line":209,"type":"cond-expr","locations":[{"start":{"line":209,"column":156},"end":{"line":209,"column":183}},{"start":{"line":209,"column":186},"end":{"line":209,"column":212}}]},"19":{"line":214,"type":"binary-expr","locations":[{"start":{"line":214,"column":25},"end":{"line":214,"column":37}},{"start":{"line":214,"column":41},"end":{"line":214,"column":43}}]},"20":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":14},"end":{"line":220,"column":14}},{"start":{"line":220,"column":14},"end":{"line":220,"column":14}}]},"21":{"line":230,"type":"if","locations":[{"start":{"line":230,"column":6},"end":{"line":230,"column":6}},{"start":{"line":230,"column":6},"end":{"line":230,"column":6}}]},"22":{"line":241,"type":"if","locations":[{"start":{"line":241,"column":4},"end":{"line":241,"column":4}},{"start":{"line":241,"column":4},"end":{"line":241,"column":4}}]},"23":{"line":242,"type":"if","locations":[{"start":{"line":242,"column":6},"end":{"line":242,"column":6}},{"start":{"line":242,"column":6},"end":{"line":242,"column":6}}]},"24":{"line":254,"type":"if","locations":[{"start":{"line":254,"column":4},"end":{"line":254,"column":4}},{"start":{"line":254,"column":4},"end":{"line":254,"column":4}}]},"25":{"line":255,"type":"if","locations":[{"start":{"line":255,"column":6},"end":{"line":255,"column":6}},{"start":{"line":255,"column":6},"end":{"line":255,"column":6}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayProfiler"," * "," */","","'use strict';","","var aggregateHandlersByName = {","  '*': []","};","var profileHandlersByName = {","  '*': []","};","","var NOT_INVOKED = {};","var defaultProfiler = { stop: require('fbjs/lib/emptyFunction') };","var shouldInstrument = function shouldInstrument(name) {","  if (process.env.NODE_ENV !== 'production') {","    return true;","  }","  return name.charAt(0) !== '@';","};","","/**"," * @public"," *"," * Instruments methods to allow profiling various parts of Relay. Profiling code"," * in Relay consists of three steps:"," *"," *  - Instrument the function to be profiled."," *  - Attach handlers to the instrumented function."," *  - Run the code which triggers the handlers."," *"," * Handlers attached to instrumented methods are called with an instrumentation"," * name and a callback that must be synchronously executed:"," *"," *   instrumentedMethod.attachHandler(function(name, callback) {"," *     const start = performance.now();"," *     callback();"," *     console.log('Duration', performance.now() - start);"," *   });"," *"," * Handlers for profiles are callbacks that return a stop method:"," *"," *   RelayProfiler.attachProfileHandler('profileName', (name, state) => {"," *     const start = performance.now();"," *     return function stop(name, state) {"," *       console.log(`Duration (${name})`, performance.now() - start);"," *     }"," *   });"," *"," * In order to reduce the impact on performance in production, instrumented"," * methods and profilers with names that begin with `@` will only be measured"," * if `__DEV__` is true. This should be used for very hot functions."," */","var RelayProfiler = {","","  /**","   * Instruments methods on a class or object. This re-assigns the method in","   * order to preserve function names in stack traces (which are detected by","   * modern debuggers via heuristics). Example usage:","   *","   *   const RelayStore = { primeCache: function() {...} };","   *   RelayProfiler.instrumentMethods(RelayStore, {","   *     primeCache: 'RelayStore.primeCache'","   *   });","   *","   *   RelayStore.primeCache.attachHandler(...);","   *","   * As a result, the methods will be replaced by wrappers that provide the","   * `attachHandler` and `detachHandler` methods.","   */","  instrumentMethods: function instrumentMethods(object, names) {","    require('fbjs/lib/forEachObject')(names, function (name, key) {","      object[key] = RelayProfiler.instrument(name, object[key]);","    });","  },","","","  /**","   * Wraps the supplied function with one that provides the `attachHandler` and","   * `detachHandler` methods. Example usage:","   *","   *   const printRelayQuery =","   *     RelayProfiler.instrument('printRelayQuery', printRelayQuery);","   *","   *   printRelayQuery.attachHandler(...);","   *","   * NOTE: The instrumentation assumes that no handlers are attached or detached","   * in the course of executing another handler.","   */","  instrument: function instrument(name, originalFunction) {","    if (!shouldInstrument(name)) {","      originalFunction.attachHandler = require('fbjs/lib/emptyFunction');","      originalFunction.detachHandler = require('fbjs/lib/emptyFunction');","      return originalFunction;","    }","    if (!aggregateHandlersByName.hasOwnProperty(name)) {","      aggregateHandlersByName[name] = [];","    }","    var catchallHandlers = aggregateHandlersByName['*'];","    var aggregateHandlers = aggregateHandlersByName[name];","    var handlers = [];","    var contexts = [];","    var invokeHandlers = function invokeHandlers() {","      var context = contexts[contexts.length - 1];","      if (context[0]) {","        context[0]--;","        catchallHandlers[context[0]](name, invokeHandlers);","      } else if (context[1]) {","        context[1]--;","        aggregateHandlers[context[1]](name, invokeHandlers);","      } else if (context[2]) {","        context[2]--;","        handlers[context[2]](name, invokeHandlers);","      } else {","        context[5] = originalFunction.apply(context[3], context[4]);","      }","    };","    var instrumentedCallback = function instrumentedCallback() {","      var returnValue = void 0;","      if (aggregateHandlers.length === 0 && handlers.length === 0 && catchallHandlers.length === 0) {","        returnValue = originalFunction.apply(this, arguments);","      } else {","        contexts.push([catchallHandlers.length, aggregateHandlers.length, handlers.length, this, arguments, NOT_INVOKED]);","        invokeHandlers();","        var context = contexts.pop();","        returnValue = context[5];","        if (returnValue === NOT_INVOKED) {","          throw new Error('RelayProfiler: Handler did not invoke original function.');","        }","      }","      return returnValue;","    };","    instrumentedCallback.attachHandler = function (handler) {","      handlers.push(handler);","    };","    instrumentedCallback.detachHandler = function (handler) {","      require('fbjs/lib/removeFromArray')(handlers, handler);","    };","    instrumentedCallback.displayName = '(instrumented ' + name + ')';","    return instrumentedCallback;","  },","","","  /**","   * Attaches a handler to all methods instrumented with the supplied name.","   *","   *   function createRenderer() {","   *     return RelayProfiler.instrument('render', function() {...});","   *   }","   *   const renderA = createRenderer();","   *   const renderB = createRenderer();","   *","   *   // Only profiles `renderA`.","   *   renderA.attachHandler(...);","   *","   *   // Profiles both `renderA` and `renderB`.","   *   RelayProfiler.attachAggregateHandler('render', ...);","   *","   */","  attachAggregateHandler: function attachAggregateHandler(name, handler) {","    if (shouldInstrument(name)) {","      if (!aggregateHandlersByName.hasOwnProperty(name)) {","        aggregateHandlersByName[name] = [];","      }","      aggregateHandlersByName[name].push(handler);","    }","  },","","","  /**","   * Detaches a handler attached via `attachAggregateHandler`.","   */","  detachAggregateHandler: function detachAggregateHandler(name, handler) {","    if (shouldInstrument(name)) {","      if (aggregateHandlersByName.hasOwnProperty(name)) {","        require('fbjs/lib/removeFromArray')(aggregateHandlersByName[name], handler);","      }","    }","  },","","","  /**","   * Instruments profiling for arbitrarily asynchronous code by a name.","   *","   *   const timerProfiler = RelayProfiler.profile('timeout');","   *   setTimeout(function() {","   *     timerProfiler.stop();","   *   }, 1000);","   *","   *   RelayProfiler.attachProfileHandler('timeout', ...);","   *","   * Arbitrary state can also be passed into `profile` as a second argument. The","   * attached profile handlers will receive this as the second argument.","   */","  profile: function profile(name, state) {","    var hasCatchAllHandlers = profileHandlersByName['*'].length > 0;","    var hasNamedHandlers = profileHandlersByName.hasOwnProperty(name);","    if (hasNamedHandlers || hasCatchAllHandlers) {","      var _ret = function () {","        var profileHandlers = hasNamedHandlers && hasCatchAllHandlers ? profileHandlersByName[name].concat(profileHandlersByName['*']) : hasNamedHandlers ? profileHandlersByName[name] : profileHandlersByName['*'];","        var stopHandlers = void 0;","        for (var ii = profileHandlers.length - 1; ii >= 0; ii--) {","          var profileHandler = profileHandlers[ii];","          var stopHandler = profileHandler(name, state);","          stopHandlers = stopHandlers || [];","          stopHandlers.unshift(stopHandler);","        }","        return {","          v: {","            stop: function stop() {","              if (stopHandlers) {","                stopHandlers.forEach(function (stopHandler) {","                  return stopHandler();","                });","              }","            }","          }","        };","      }();","","      if (typeof _ret === \"object\") return _ret.v;","    }","    return defaultProfiler;","  },","","","  /**","   * Attaches a handler to profiles with the supplied name. You can also","   * attach to the special name '*' which is a catch all.","   */","  attachProfileHandler: function attachProfileHandler(name, handler) {","    if (shouldInstrument(name)) {","      if (!profileHandlersByName.hasOwnProperty(name)) {","        profileHandlersByName[name] = [];","      }","      profileHandlersByName[name].push(handler);","    }","  },","","","  /**","   * Detaches a handler attached via `attachProfileHandler`.","   */","  detachProfileHandler: function detachProfileHandler(name, handler) {","    if (shouldInstrument(name)) {","      if (profileHandlersByName.hasOwnProperty(name)) {","        require('fbjs/lib/removeFromArray')(profileHandlersByName[name], handler);","      }","    }","  }","};","","module.exports = RelayProfiler;"],"l":{"15":1,"18":1,"22":1,"23":1,"24":1,"25":31,"26":31,"28":0,"63":1,"81":7,"82":24,"100":31,"101":0,"102":0,"103":0,"105":31,"106":31,"108":31,"109":31,"110":31,"111":31,"112":31,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"124":0,"127":31,"128":0,"129":0,"130":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"140":0,"142":31,"143":0,"145":31,"146":0,"148":31,"149":31,"170":0,"171":0,"172":0,"174":0,"183":0,"184":0,"185":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"217":0,"220":0,"221":0,"222":0,"230":0,"232":0,"241":0,"242":0,"243":0,"245":0,"254":0,"255":0,"256":0,"262":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayConnectionInterface.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayConnectionInterface.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":14,"column":0},"end":{"line":14,"column":58}}},"branchMap":{},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayConnectionInterface"," */","","'use strict';","","module.exports = require('./RelayOSSConnectionInterface');"],"l":{"14":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayOSSConnectionInterface.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayOSSConnectionInterface.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1},"b":{"1":[1,0],"2":[1,1]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":37}}},"2":{"name":"isConnectionCall","line":70,"loc":{"start":{"line":70,"column":20},"end":{"line":70,"column":52}}},"3":{"name":"hasRangeCalls","line":79,"loc":{"start":{"line":79,"column":17},"end":{"line":79,"column":47}}},"4":{"name":"(anonymous_4)","line":80,"loc":{"start":{"line":80,"column":22},"end":{"line":80,"column":38}}},"5":{"name":"getDefaultPageInfo","line":89,"loc":{"start":{"line":89,"column":22},"end":{"line":89,"column":52}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":97}},"3":{"start":{"line":17,"column":39},"end":{"line":17,"column":95}},"4":{"start":{"line":19,"column":0},"end":{"line":19,"column":44}},"5":{"start":{"line":20,"column":0},"end":{"line":27,"column":2}},"6":{"start":{"line":28,"column":0},"end":{"line":28,"column":22}},"7":{"start":{"line":29,"column":0},"end":{"line":29,"column":20}},"8":{"start":{"line":30,"column":0},"end":{"line":30,"column":29}},"9":{"start":{"line":31,"column":0},"end":{"line":31,"column":34}},"10":{"start":{"line":32,"column":0},"end":{"line":32,"column":38}},"11":{"start":{"line":33,"column":0},"end":{"line":33,"column":18}},"12":{"start":{"line":34,"column":0},"end":{"line":34,"column":27}},"13":{"start":{"line":35,"column":0},"end":{"line":35,"column":32}},"14":{"start":{"line":36,"column":0},"end":{"line":40,"column":2}},"15":{"start":{"line":41,"column":0},"end":{"line":41,"column":33}},"16":{"start":{"line":48,"column":0},"end":{"line":94,"column":2}},"17":{"start":{"line":71,"column":4},"end":{"line":71,"column":54}},"18":{"start":{"line":80,"column":4},"end":{"line":82,"column":7}},"19":{"start":{"line":81,"column":6},"end":{"line":81,"column":60}},"20":{"start":{"line":90,"column":4},"end":{"line":90,"column":13}},"21":{"start":{"line":92,"column":4},"end":{"line":92,"column":279}},"22":{"start":{"line":96,"column":0},"end":{"line":96,"column":45}}},"branchMap":{"1":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":70},"end":{"line":17,"column":73}},{"start":{"line":17,"column":76},"end":{"line":17,"column":94}}]},"2":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":46},"end":{"line":17,"column":49}},{"start":{"line":17,"column":53},"end":{"line":17,"column":67}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayOSSConnectionInterface"," * "," */","","'use strict';","","var _defineProperty3 = _interopRequireDefault(require('babel-runtime/helpers/defineProperty'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","var CLIENT_MUTATION_ID = 'clientMutationId';","var CONNECTION_CALLS = {","  'after': true,","  'before': true,","  'find': true,","  'first': true,","  'last': true,","  'surrounds': true","};","var CURSOR = 'cursor';","var EDGES = 'edges';","var END_CURSOR = 'endCursor';","var HAS_NEXT_PAGE = 'hasNextPage';","var HAS_PREV_PAGE = 'hasPreviousPage';","var NODE = 'node';","var PAGE_INFO = 'pageInfo';","var PAGE_INFO_TYPE = 'PageInfo';","var REQUIRED_RANGE_CALLS = {","  'find': true,","  'first': true,","  'last': true","};","var START_CURSOR = 'startCursor';","","/**"," * @internal"," *"," * Defines logic relevant to the informal \"Connection\" GraphQL interface."," */","var RelayOSSConnectionInterface = {","  CLIENT_MUTATION_ID: CLIENT_MUTATION_ID,","  CURSOR: CURSOR,","  EDGES: EDGES,","  END_CURSOR: END_CURSOR,","  HAS_NEXT_PAGE: HAS_NEXT_PAGE,","  HAS_PREV_PAGE: HAS_PREV_PAGE,","  NODE: NODE,","  PAGE_INFO: PAGE_INFO,","  PAGE_INFO_TYPE: PAGE_INFO_TYPE,","  START_CURSOR: START_CURSOR,","","  /**","   * Whether `edges` fields are expected to have `source` fields.","   */","  EDGES_HAVE_SOURCE_FIELD: false,","","  /**","   * Checks whether a call exists strictly to encode which parts of a connection","   * to fetch. Fields that only differ by connection call values should have the","   * same identity.","   */","  isConnectionCall: function isConnectionCall(call) {","    return CONNECTION_CALLS.hasOwnProperty(call.name);","  },","","","  /**","   * Checks whether a set of calls on a connection supply enough information to","   * fetch the range fields (i.e. `edges` and `page_info`).","   */","  hasRangeCalls: function hasRangeCalls(calls) {","    return calls.some(function (call) {","      return REQUIRED_RANGE_CALLS.hasOwnProperty(call.name);","    });","  },","","","  /**","   * Gets a default record representing a connection's `PAGE_INFO`.","   */","  getDefaultPageInfo: function getDefaultPageInfo() {","    var _ref;","","    return _ref = {}, (0, _defineProperty3['default'])(_ref, END_CURSOR, undefined), (0, _defineProperty3['default'])(_ref, HAS_NEXT_PAGE, false), (0, _defineProperty3['default'])(_ref, HAS_PREV_PAGE, false), (0, _defineProperty3['default'])(_ref, START_CURSOR, undefined), _ref;","  }","};","","module.exports = RelayOSSConnectionInterface;"],"l":{"15":1,"17":1,"19":1,"20":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"41":1,"48":1,"71":0,"80":0,"81":0,"90":0,"92":0,"96":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayNodeInterface.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayNodeInterface.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":14,"column":0},"end":{"line":14,"column":52}}},"branchMap":{},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayNodeInterface"," */","","'use strict';","","module.exports = require('./RelayOSSNodeInterface');"],"l":{"14":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayOSSNodeInterface.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayOSSNodeInterface.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"isNodeRootCall","line":29,"loc":{"start":{"line":29,"column":18},"end":{"line":29,"column":53}}},"2":{"name":"getResultsFromPayload","line":32,"loc":{"start":{"line":32,"column":25},"end":{"line":32,"column":72}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":48},"end":{"line":37,"column":66}}},"4":{"name":"(anonymous_4)","line":53,"loc":{"start":{"line":53,"column":7},"end":{"line":53,"column":19}}},"5":{"name":"(anonymous_5)","line":57,"loc":{"start":{"line":57,"column":47},"end":{"line":57,"column":63}}},"6":{"name":"getPayloadRecords","line":74,"loc":{"start":{"line":74,"column":0},"end":{"line":74,"column":43}}}},"statementMap":{"1":{"start":{"line":20,"column":0},"end":{"line":72,"column":2}},"2":{"start":{"line":30,"column":4},"end":{"line":30,"column":97}},"3":{"start":{"line":33,"column":4},"end":{"line":33,"column":21}},"4":{"start":{"line":35,"column":4},"end":{"line":35,"column":45}},"5":{"start":{"line":36,"column":4},"end":{"line":68,"column":5}},"6":{"start":{"line":37,"column":6},"end":{"line":51,"column":9}},"7":{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},"8":{"start":{"line":39,"column":10},"end":{"line":39,"column":17}},"9":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"10":{"start":{"line":42,"column":8},"end":{"line":42,"column":223}},"11":{"start":{"line":43,"column":8},"end":{"line":50,"column":11}},"12":{"start":{"line":53,"column":6},"end":{"line":67,"column":11}},"13":{"start":{"line":54,"column":8},"end":{"line":54,"column":56}},"14":{"start":{"line":55,"column":8},"end":{"line":55,"column":19}},"15":{"start":{"line":56,"column":8},"end":{"line":56,"column":47}},"16":{"start":{"line":57,"column":8},"end":{"line":66,"column":11}},"17":{"start":{"line":58,"column":10},"end":{"line":59,"column":61}},"18":{"start":{"line":61,"column":10},"end":{"line":61,"column":37}},"19":{"start":{"line":62,"column":10},"end":{"line":65,"column":13}},"20":{"start":{"line":70,"column":4},"end":{"line":70,"column":19}},"21":{"start":{"line":74,"column":0},"end":{"line":88,"column":1}},"22":{"start":{"line":75,"column":2},"end":{"line":75,"column":39}},"23":{"start":{"line":76,"column":2},"end":{"line":76,"column":49}},"24":{"start":{"line":77,"column":2},"end":{"line":77,"column":75}},"25":{"start":{"line":78,"column":2},"end":{"line":78,"column":35}},"26":{"start":{"line":79,"column":2},"end":{"line":86,"column":3}},"27":{"start":{"line":80,"column":4},"end":{"line":85,"column":5}},"28":{"start":{"line":81,"column":6},"end":{"line":81,"column":243}},"29":{"start":{"line":82,"column":6},"end":{"line":82,"column":281}},"30":{"start":{"line":83,"column":11},"end":{"line":85,"column":5}},"31":{"start":{"line":84,"column":6},"end":{"line":84,"column":214}},"32":{"start":{"line":87,"column":2},"end":{"line":87,"column":62}},"33":{"start":{"line":90,"column":0},"end":{"line":90,"column":39}}},"branchMap":{"1":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":11},"end":{"line":30,"column":51}},{"start":{"line":30,"column":55},"end":{"line":30,"column":96}}]},"2":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":4},"end":{"line":36,"column":4}},{"start":{"line":36,"column":4},"end":{"line":36,"column":4}}]},"3":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":8},"end":{"line":38,"column":8}},{"start":{"line":38,"column":8},"end":{"line":38,"column":8}}]},"4":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":12},"end":{"line":38,"column":38}},{"start":{"line":38,"column":42},"end":{"line":38,"column":49}}]},"5":{"line":77,"type":"binary-expr","locations":[{"start":{"line":77,"column":28},"end":{"line":77,"column":42}},{"start":{"line":77,"column":46},"end":{"line":77,"column":66}},{"start":{"line":77,"column":70},"end":{"line":77,"column":74}}]},"6":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":2},"end":{"line":79,"column":2}},{"start":{"line":79,"column":2},"end":{"line":79,"column":2}}]},"7":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":4},"end":{"line":80,"column":4}},{"start":{"line":80,"column":4},"end":{"line":80,"column":4}}]},"8":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":11},"end":{"line":83,"column":11}},{"start":{"line":83,"column":11},"end":{"line":83,"column":11}}]},"9":{"line":87,"type":"cond-expr","locations":[{"start":{"line":87,"column":34},"end":{"line":87,"column":41}},{"start":{"line":87,"column":44},"end":{"line":87,"column":61}}]},"10":{"line":87,"type":"binary-expr","locations":[{"start":{"line":87,"column":45},"end":{"line":87,"column":52}},{"start":{"line":87,"column":56},"end":{"line":87,"column":60}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayOSSNodeInterface"," * "," */","","'use strict';","","/**"," * @internal"," *"," * Defines logic relevant to the informal \"Node\" GraphQL interface."," */","var RelayOSSNodeInterface = {","  ANY_TYPE: '__any',","  ID: 'id',","  ID_TYPE: 'ID!',","  NODE: 'node',","  NODE_TYPE: 'Node',","  NODES: 'nodes',","  TYPENAME: '__typename',","","  isNodeRootCall: function isNodeRootCall(fieldName) {","    return fieldName === RelayOSSNodeInterface.NODE || fieldName === RelayOSSNodeInterface.NODES;","  },","  getResultsFromPayload: function getResultsFromPayload(query, payload) {","    var results = [];","","    var rootBatchCall = query.getBatchCall();","    if (rootBatchCall) {","      getPayloadRecords(query, payload).forEach(function (result) {","        if (typeof result !== 'object' || !result) {","          return;","        }","        var dataID = result[RelayOSSNodeInterface.ID];","        require('fbjs/lib/invariant')(typeof dataID === 'string', 'RelayOSSNodeInterface.getResultsFromPayload(): Unable to write ' + 'result with no `%s` field for query, `%s`.', RelayOSSNodeInterface.ID, query.getName());","        results.push({","          result: result,","          rootCallInfo: {","            storageKey: RelayOSSNodeInterface.NODE,","            identifyingArgKey: dataID,","            identifyingArgValue: dataID","          }","        });","      });","    } else {","      (function () {","        var records = getPayloadRecords(query, payload);","        var ii = 0;","        var storageKey = query.getStorageKey();","        require('./forEachRootCallArg')(query, function (_ref) {","          var identifyingArgKey = _ref.identifyingArgKey,","              identifyingArgValue = _ref.identifyingArgValue;","","          var result = records[ii++];","          results.push({","            result: result,","            rootCallInfo: { storageKey: storageKey, identifyingArgKey: identifyingArgKey, identifyingArgValue: identifyingArgValue }","          });","        });","      })();","    }","","    return results;","  }","};","","function getPayloadRecords(query, payload) {","  var fieldName = query.getFieldName();","  var identifyingArg = query.getIdentifyingArg();","  var identifyingArgValue = identifyingArg && identifyingArg.value || null;","  var records = payload[fieldName];","  if (!query.getBatchCall()) {","    if (Array.isArray(identifyingArgValue)) {","      require('fbjs/lib/invariant')(Array.isArray(records), 'RelayOSSNodeInterface: Expected payload for root field `%s` to be ' + 'an array with %s results, instead received a single non-array result.', fieldName, identifyingArgValue.length);","      require('fbjs/lib/invariant')(records.length === identifyingArgValue.length, 'RelayOSSNodeInterface: Expected payload for root field `%s` to be ' + 'an array with %s results, instead received an array with %s results.', fieldName, identifyingArgValue.length, records.length);","    } else if (Array.isArray(records)) {","      require('fbjs/lib/invariant')(false, 'RelayOSSNodeInterface: Expected payload for root field `%s` to be ' + 'a single non-array result, instead received an array with %s results.', fieldName, records.length);","    }","  }","  return Array.isArray(records) ? records : [records || null];","}","","module.exports = RelayOSSNodeInterface;"],"l":{"20":1,"30":0,"33":0,"35":0,"36":0,"37":0,"38":0,"39":0,"41":0,"42":0,"43":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"61":0,"62":0,"70":0,"74":1,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"87":0,"90":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayQuery.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayQuery.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":5,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":0,"24":0,"25":0,"26":0,"27":1,"28":9,"29":9,"30":9,"31":9,"32":9,"33":9,"34":9,"35":9,"36":9,"37":9,"38":9,"39":9,"40":1,"41":0,"42":1,"43":0,"44":1,"45":0,"46":1,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":1,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":1,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":1,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":1,"102":0,"103":1,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":1,"115":0,"116":1,"117":0,"118":1,"119":0,"120":1,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":1,"128":0,"129":1,"130":0,"131":1,"132":0,"133":0,"134":0,"135":0,"136":1,"137":0,"138":1,"139":0,"140":1,"141":0,"142":1,"143":1,"144":1,"145":1,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":1,"164":0,"165":0,"166":0,"167":0,"168":1,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":1,"178":0,"179":1,"180":0,"181":0,"182":0,"183":0,"184":0,"185":1,"186":0,"187":0,"188":0,"189":0,"190":0,"191":1,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":1,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":1,"212":0,"213":1,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":1,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":1,"242":0,"243":1,"244":0,"245":1,"246":0,"247":1,"248":0,"249":1,"250":0,"251":0,"252":0,"253":0,"254":0,"255":1,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":1,"266":1,"267":1,"268":1,"269":0,"270":0,"271":0,"272":0,"273":1,"274":0,"275":1,"276":0,"277":1,"278":0,"279":1,"280":0,"281":1,"282":0,"283":0,"284":0,"285":1,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":1,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":1,"302":0,"303":1,"304":1,"305":1,"306":1,"307":0,"308":0,"309":1,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":1,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":1,"330":1,"331":1,"332":1,"333":0,"334":0,"335":1,"336":0,"337":0,"338":0,"339":0,"340":1,"341":0,"342":1,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":1,"353":1,"354":1,"355":1,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":1,"366":0,"367":0,"368":0,"369":0,"370":1,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":1,"378":0,"379":1,"380":0,"381":1,"382":0,"383":1,"384":0,"385":0,"386":0,"387":0,"388":0,"389":1,"390":0,"391":1,"392":0,"393":1,"394":0,"395":1,"396":0,"397":1,"398":0,"399":0,"400":1,"401":0,"402":0,"403":1,"404":0,"405":1,"406":0,"407":1,"408":0,"409":1,"410":0,"411":1,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":1,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":1,"427":1,"428":1,"429":1,"430":0,"431":0,"432":0,"433":0,"434":1,"435":9,"436":9,"437":2,"438":9,"439":9,"440":9,"441":9,"442":9,"443":9,"444":9,"445":1,"446":9,"447":9,"448":9,"449":9,"450":9,"451":9,"452":9,"453":1,"454":0,"455":1,"456":0,"457":1,"458":0,"459":1,"460":0,"461":1,"462":0,"463":1,"464":0,"465":1,"466":0,"467":1,"468":0,"469":1,"470":0,"471":1,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":1,"487":0,"488":1,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":1,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":1,"511":0,"512":0,"513":0,"514":0,"515":1,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":1,"523":0,"524":0,"525":1,"526":0,"527":1,"528":0,"529":1,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":1,"539":0,"540":0,"541":0,"542":0,"543":0,"544":1,"545":0,"546":0,"547":0,"548":0,"549":0,"550":0,"551":0,"552":1,"553":0,"554":0,"555":0,"556":0,"557":1,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":0,"569":0,"570":1,"571":0,"572":1,"573":1,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"580":0,"581":0,"582":0,"583":0,"584":0,"585":0,"586":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"597":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":0,"611":0,"612":0,"613":0,"614":0,"615":1,"616":0,"617":0,"618":0,"619":0,"620":0,"621":0,"622":0,"623":0,"624":1,"625":0,"626":0,"627":0,"628":0,"629":0,"630":0,"631":0,"632":0,"633":0,"634":0,"635":0,"636":1,"637":0,"638":0,"639":0,"640":0,"641":0,"642":0,"643":0,"644":0,"645":0,"646":1,"647":0,"648":0,"649":0,"650":0,"651":0,"652":0,"653":0,"654":0,"655":0,"656":0,"657":1,"658":9,"659":1,"660":1,"661":1},"b":{"1":[5,0],"2":[5,5],"3":[1,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0,0],"27":[0,0,0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[1,8],"87":[0,9],"88":[0,9],"89":[9,9],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0]},"f":{"1":5,"2":1,"3":0,"4":9,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":1,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":1,"67":0,"68":0,"69":0,"70":0,"71":1,"72":0,"73":0,"74":0,"75":0,"76":1,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":1,"98":0,"99":9,"100":2,"101":9,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":9},"fnMap":{"1":{"name":"_interopRequireDefault","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":37}}},"2":{"name":"(anonymous_2)","line":86,"loc":{"start":{"line":86,"column":21},"end":{"line":86,"column":33}}},"3":{"name":"create","line":88,"loc":{"start":{"line":88,"column":26},"end":{"line":88,"column":78}}},"4":{"name":"RelayQueryNode","line":102,"loc":{"start":{"line":102,"column":2},"end":{"line":102,"column":64}}},"5":{"name":"canHaveSubselections","line":120,"loc":{"start":{"line":120,"column":50},"end":{"line":120,"column":82}}},"6":{"name":"isGenerated","line":124,"loc":{"start":{"line":124,"column":41},"end":{"line":124,"column":64}}},"7":{"name":"isRefQueryDependency","line":128,"loc":{"start":{"line":128,"column":50},"end":{"line":128,"column":82}}},"8":{"name":"clone","line":132,"loc":{"start":{"line":132,"column":35},"end":{"line":132,"column":60}}},"9":{"name":"getChildren","line":157,"loc":{"start":{"line":157,"column":41},"end":{"line":157,"column":64}}},"10":{"name":"(anonymous_10)","line":162,"loc":{"start":{"line":162,"column":7},"end":{"line":162,"column":19}}},"11":{"name":"(anonymous_11)","line":166,"loc":{"start":{"line":166,"column":35},"end":{"line":166,"column":60}}},"12":{"name":"(anonymous_12)","line":172,"loc":{"start":{"line":172,"column":34},"end":{"line":172,"column":50}}},"13":{"name":"isIncluded","line":189,"loc":{"start":{"line":189,"column":40},"end":{"line":189,"column":62}}},"14":{"name":"(anonymous_14)","line":194,"loc":{"start":{"line":194,"column":38},"end":{"line":194,"column":59}}},"15":{"name":"(anonymous_15)","line":196,"loc":{"start":{"line":196,"column":36},"end":{"line":196,"column":51}}},"16":{"name":"(anonymous_16)","line":200,"loc":{"start":{"line":200,"column":36},"end":{"line":200,"column":51}}},"17":{"name":"getDirectives","line":208,"loc":{"start":{"line":208,"column":43},"end":{"line":208,"column":68}}},"18":{"name":"(anonymous_18)","line":213,"loc":{"start":{"line":213,"column":50},"end":{"line":213,"column":71}}},"19":{"name":"getField","line":223,"loc":{"start":{"line":223,"column":38},"end":{"line":223,"column":63}}},"20":{"name":"getFieldByStorageKey","line":227,"loc":{"start":{"line":227,"column":50},"end":{"line":227,"column":92}}},"21":{"name":"getType","line":243,"loc":{"start":{"line":243,"column":37},"end":{"line":243,"column":56}}},"22":{"name":"getRoute","line":247,"loc":{"start":{"line":247,"column":38},"end":{"line":247,"column":58}}},"23":{"name":"getVariables","line":251,"loc":{"start":{"line":251,"column":42},"end":{"line":251,"column":66}}},"24":{"name":"hasDeferredDescendant","line":255,"loc":{"start":{"line":255,"column":51},"end":{"line":255,"column":84}}},"25":{"name":"(anonymous_25)","line":258,"loc":{"start":{"line":258,"column":85},"end":{"line":258,"column":102}}},"26":{"name":"isAbstract","line":266,"loc":{"start":{"line":266,"column":40},"end":{"line":266,"column":62}}},"27":{"name":"isRequisite","line":270,"loc":{"start":{"line":270,"column":41},"end":{"line":270,"column":64}}},"28":{"name":"equals","line":279,"loc":{"start":{"line":279,"column":36},"end":{"line":279,"column":58}}},"29":{"name":"(anonymous_29)","line":283,"loc":{"start":{"line":283,"column":110},"end":{"line":283,"column":127}}},"30":{"name":"isEquivalent","line":300,"loc":{"start":{"line":300,"column":42},"end":{"line":300,"column":70}}},"31":{"name":"createNode","line":304,"loc":{"start":{"line":304,"column":40},"end":{"line":304,"column":74}}},"32":{"name":"getConcreteQueryNode","line":308,"loc":{"start":{"line":308,"column":50},"end":{"line":308,"column":82}}},"33":{"name":"(anonymous_33)","line":322,"loc":{"start":{"line":322,"column":21},"end":{"line":322,"column":48}}},"34":{"name":"build","line":329,"loc":{"start":{"line":329,"column":25},"end":{"line":329,"column":101}}},"35":{"name":"(anonymous_35)","line":330,"loc":{"start":{"line":330,"column":50},"end":{"line":330,"column":67}}},"36":{"name":"create","line":357,"loc":{"start":{"line":357,"column":26},"end":{"line":357,"column":78}}},"37":{"name":"RelayQueryRoot","line":364,"loc":{"start":{"line":364,"column":2},"end":{"line":364,"column":64}}},"38":{"name":"canHaveSubselections","line":379,"loc":{"start":{"line":379,"column":50},"end":{"line":379,"column":82}}},"39":{"name":"getName","line":383,"loc":{"start":{"line":383,"column":37},"end":{"line":383,"column":56}}},"40":{"name":"getID","line":392,"loc":{"start":{"line":392,"column":35},"end":{"line":392,"column":52}}},"41":{"name":"getBatchCall","line":401,"loc":{"start":{"line":401,"column":42},"end":{"line":401,"column":66}}},"42":{"name":"getCallsWithValues","line":421,"loc":{"start":{"line":421,"column":48},"end":{"line":421,"column":78}}},"43":{"name":"getFieldName","line":435,"loc":{"start":{"line":435,"column":42},"end":{"line":435,"column":66}}},"44":{"name":"getIdentifyingArg","line":439,"loc":{"start":{"line":439,"column":47},"end":{"line":439,"column":76}}},"45":{"name":"(anonymous_45)","line":444,"loc":{"start":{"line":444,"column":7},"end":{"line":444,"column":19}}},"46":{"name":"(anonymous_46)","line":448,"loc":{"start":{"line":448,"column":60},"end":{"line":448,"column":73}}},"47":{"name":"getStorageKey","line":461,"loc":{"start":{"line":461,"column":43},"end":{"line":461,"column":68}}},"48":{"name":"(anonymous_48)","line":466,"loc":{"start":{"line":466,"column":7},"end":{"line":466,"column":19}}},"49":{"name":"(anonymous_49)","line":470,"loc":{"start":{"line":470,"column":29},"end":{"line":470,"column":44}}},"50":{"name":"hasDeferredDescendant","line":486,"loc":{"start":{"line":486,"column":51},"end":{"line":486,"column":84}}},"51":{"name":"isAbstract","line":490,"loc":{"start":{"line":490,"column":40},"end":{"line":490,"column":62}}},"52":{"name":"isDeferred","line":494,"loc":{"start":{"line":494,"column":40},"end":{"line":494,"column":62}}},"53":{"name":"isPlural","line":498,"loc":{"start":{"line":498,"column":38},"end":{"line":498,"column":58}}},"54":{"name":"cloneWithRoute","line":502,"loc":{"start":{"line":502,"column":44},"end":{"line":502,"column":89}}},"55":{"name":"equals","line":513,"loc":{"start":{"line":513,"column":36},"end":{"line":513,"column":58}}},"56":{"name":"(anonymous_56)","line":539,"loc":{"start":{"line":539,"column":26},"end":{"line":539,"column":54}}},"57":{"name":"RelayQueryOperation","line":542,"loc":{"start":{"line":542,"column":2},"end":{"line":542,"column":69}}},"58":{"name":"canHaveSubselections","line":551,"loc":{"start":{"line":551,"column":55},"end":{"line":551,"column":87}}},"59":{"name":"getName","line":555,"loc":{"start":{"line":555,"column":42},"end":{"line":555,"column":61}}},"60":{"name":"getResponseType","line":559,"loc":{"start":{"line":559,"column":50},"end":{"line":559,"column":77}}},"61":{"name":"getType","line":563,"loc":{"start":{"line":563,"column":42},"end":{"line":563,"column":61}}},"62":{"name":"getInputType","line":567,"loc":{"start":{"line":567,"column":47},"end":{"line":567,"column":71}}},"63":{"name":"getCall","line":573,"loc":{"start":{"line":573,"column":42},"end":{"line":573,"column":61}}},"64":{"name":"getCallVariableName","line":587,"loc":{"start":{"line":587,"column":54},"end":{"line":587,"column":85}}},"65":{"name":"isAbstract","line":603,"loc":{"start":{"line":603,"column":45},"end":{"line":603,"column":67}}},"66":{"name":"(anonymous_66)","line":617,"loc":{"start":{"line":617,"column":25},"end":{"line":617,"column":57}}},"67":{"name":"RelayQueryMutation","line":620,"loc":{"start":{"line":620,"column":2},"end":{"line":620,"column":32}}},"68":{"name":"build","line":629,"loc":{"start":{"line":629,"column":29},"end":{"line":629,"column":116}}},"69":{"name":"(anonymous_69)","line":630,"loc":{"start":{"line":630,"column":50},"end":{"line":630,"column":67}}},"70":{"name":"equals","line":647,"loc":{"start":{"line":647,"column":40},"end":{"line":647,"column":62}}},"71":{"name":"(anonymous_71)","line":673,"loc":{"start":{"line":673,"column":29},"end":{"line":673,"column":62}}},"72":{"name":"RelayQuerySubscription","line":676,"loc":{"start":{"line":676,"column":2},"end":{"line":676,"column":36}}},"73":{"name":"create","line":681,"loc":{"start":{"line":681,"column":34},"end":{"line":681,"column":86}}},"74":{"name":"getPublishedPayloadType","line":688,"loc":{"start":{"line":688,"column":61},"end":{"line":688,"column":96}}},"75":{"name":"equals","line":692,"loc":{"start":{"line":692,"column":44},"end":{"line":692,"column":66}}},"76":{"name":"(anonymous_76)","line":718,"loc":{"start":{"line":718,"column":25},"end":{"line":718,"column":53}}},"77":{"name":"build","line":725,"loc":{"start":{"line":725,"column":29},"end":{"line":728,"column":33}}},"78":{"name":"(anonymous_78)","line":729,"loc":{"start":{"line":729,"column":50},"end":{"line":729,"column":67}}},"79":{"name":"create","line":750,"loc":{"start":{"line":750,"column":30},"end":{"line":750,"column":92}}},"80":{"name":"RelayQueryFragment","line":757,"loc":{"start":{"line":757,"column":2},"end":{"line":757,"column":78}}},"81":{"name":"canHaveSubselections","line":768,"loc":{"start":{"line":768,"column":54},"end":{"line":768,"column":86}}},"82":{"name":"getDebugName","line":772,"loc":{"start":{"line":772,"column":46},"end":{"line":772,"column":70}}},"83":{"name":"getConcreteFragmentID","line":783,"loc":{"start":{"line":783,"column":55},"end":{"line":783,"column":88}}},"84":{"name":"getCompositeHash","line":797,"loc":{"start":{"line":797,"column":50},"end":{"line":797,"column":78}}},"85":{"name":"getSourceCompositeHash","line":807,"loc":{"start":{"line":807,"column":56},"end":{"line":807,"column":90}}},"86":{"name":"isAbstract","line":811,"loc":{"start":{"line":811,"column":44},"end":{"line":811,"column":66}}},"87":{"name":"isDeferred","line":815,"loc":{"start":{"line":815,"column":44},"end":{"line":815,"column":66}}},"88":{"name":"isPattern","line":819,"loc":{"start":{"line":819,"column":43},"end":{"line":819,"column":64}}},"89":{"name":"isPlural","line":823,"loc":{"start":{"line":823,"column":42},"end":{"line":823,"column":62}}},"90":{"name":"isTrackingEnabled","line":829,"loc":{"start":{"line":829,"column":51},"end":{"line":829,"column":80}}},"91":{"name":"cloneAsPlainFragment","line":834,"loc":{"start":{"line":834,"column":54},"end":{"line":834,"column":86}}},"92":{"name":"isContainerFragment","line":838,"loc":{"start":{"line":838,"column":53},"end":{"line":838,"column":84}}},"93":{"name":"isTypeConditional","line":842,"loc":{"start":{"line":842,"column":51},"end":{"line":842,"column":80}}},"94":{"name":"hasDeferredDescendant","line":846,"loc":{"start":{"line":846,"column":55},"end":{"line":846,"column":88}}},"95":{"name":"clone","line":850,"loc":{"start":{"line":850,"column":39},"end":{"line":850,"column":64}}},"96":{"name":"equals","line":866,"loc":{"start":{"line":866,"column":40},"end":{"line":866,"column":62}}},"97":{"name":"(anonymous_97)","line":889,"loc":{"start":{"line":889,"column":22},"end":{"line":889,"column":50}}},"98":{"name":"create","line":892,"loc":{"start":{"line":892,"column":27},"end":{"line":892,"column":79}}},"99":{"name":"build","line":905,"loc":{"start":{"line":905,"column":26},"end":{"line":905,"column":47}}},"100":{"name":"(anonymous_100)","line":915,"loc":{"start":{"line":915,"column":50},"end":{"line":915,"column":67}}},"101":{"name":"RelayQueryField","line":934,"loc":{"start":{"line":934,"column":2},"end":{"line":934,"column":65}}},"102":{"name":"canHaveSubselections","line":946,"loc":{"start":{"line":946,"column":51},"end":{"line":946,"column":83}}},"103":{"name":"isAbstract","line":950,"loc":{"start":{"line":950,"column":41},"end":{"line":950,"column":63}}},"104":{"name":"isFindable","line":954,"loc":{"start":{"line":954,"column":41},"end":{"line":954,"column":63}}},"105":{"name":"isGenerated","line":958,"loc":{"start":{"line":958,"column":42},"end":{"line":958,"column":65}}},"106":{"name":"isConnection","line":962,"loc":{"start":{"line":962,"column":43},"end":{"line":962,"column":67}}},"107":{"name":"isConnectionWithoutNodeID","line":966,"loc":{"start":{"line":966,"column":56},"end":{"line":966,"column":93}}},"108":{"name":"isPlural","line":970,"loc":{"start":{"line":970,"column":39},"end":{"line":970,"column":59}}},"109":{"name":"isRefQueryDependency","line":974,"loc":{"start":{"line":974,"column":51},"end":{"line":974,"column":83}}},"110":{"name":"isRequisite","line":978,"loc":{"start":{"line":978,"column":42},"end":{"line":978,"column":65}}},"111":{"name":"getDebugName","line":982,"loc":{"start":{"line":982,"column":43},"end":{"line":982,"column":67}}},"112":{"name":"(anonymous_112)","line":987,"loc":{"start":{"line":987,"column":7},"end":{"line":987,"column":19}}},"113":{"name":"(anonymous_113)","line":990,"loc":{"start":{"line":990,"column":45},"end":{"line":990,"column":60}}},"114":{"name":"getSchemaName","line":1010,"loc":{"start":{"line":1010,"column":44},"end":{"line":1010,"column":69}}},"115":{"name":"getRangeBehaviorCalls","line":1023,"loc":{"start":{"line":1023,"column":52},"end":{"line":1023,"column":85}}},"116":{"name":"(anonymous_116)","line":1030,"loc":{"start":{"line":1030,"column":60},"end":{"line":1030,"column":75}}},"117":{"name":"getSerializationKey","line":1052,"loc":{"start":{"line":1052,"column":50},"end":{"line":1052,"column":81}}},"118":{"name":"getShallowHash","line":1075,"loc":{"start":{"line":1075,"column":45},"end":{"line":1075,"column":71}}},"119":{"name":"getStorageKey","line":1096,"loc":{"start":{"line":1096,"column":44},"end":{"line":1096,"column":69}}},"120":{"name":"(anonymous_120)","line":1101,"loc":{"start":{"line":1101,"column":112},"end":{"line":1101,"column":128}}},"121":{"name":"getApplicationName","line":1114,"loc":{"start":{"line":1114,"column":49},"end":{"line":1114,"column":79}}},"122":{"name":"getInferredRootCallName","line":1119,"loc":{"start":{"line":1119,"column":54},"end":{"line":1119,"column":89}}},"123":{"name":"getInferredPrimaryKey","line":1123,"loc":{"start":{"line":1123,"column":52},"end":{"line":1123,"column":85}}},"124":{"name":"getCallsWithValues","line":1127,"loc":{"start":{"line":1127,"column":49},"end":{"line":1127,"column":79}}},"125":{"name":"getCallType","line":1141,"loc":{"start":{"line":1141,"column":42},"end":{"line":1141,"column":73}}},"126":{"name":"(anonymous_126)","line":1143,"loc":{"start":{"line":1143,"column":61},"end":{"line":1143,"column":77}}},"127":{"name":"equals","line":1151,"loc":{"start":{"line":1151,"column":37},"end":{"line":1151,"column":59}}},"128":{"name":"cloneAsRefQueryDependency","line":1164,"loc":{"start":{"line":1164,"column":56},"end":{"line":1164,"column":93}}},"129":{"name":"cloneFieldWithCalls","line":1171,"loc":{"start":{"line":1171,"column":50},"end":{"line":1171,"column":96}}},"130":{"name":"_isCoreArg","line":1202,"loc":{"start":{"line":1202,"column":41},"end":{"line":1202,"column":66}}},"131":{"name":"createNode","line":1214,"loc":{"start":{"line":1214,"column":0},"end":{"line":1214,"column":58}}},"132":{"name":"(anonymous_132)","line":1257,"loc":{"start":{"line":1257,"column":27},"end":{"line":1257,"column":43}}},"133":{"name":"createMemoizedFragment","line":1285,"loc":{"start":{"line":1285,"column":0},"end":{"line":1285,"column":84}}},"134":{"name":"cloneChildren","line":1302,"loc":{"start":{"line":1302,"column":0},"end":{"line":1302,"column":51}}},"135":{"name":"serializeCalls","line":1325,"loc":{"start":{"line":1325,"column":0},"end":{"line":1325,"column":31}}},"136":{"name":"(anonymous_136)","line":1327,"loc":{"start":{"line":1327,"column":16},"end":{"line":1327,"column":28}}},"137":{"name":"(anonymous_137)","line":1329,"loc":{"start":{"line":1329,"column":20},"end":{"line":1329,"column":36}}},"138":{"name":"areCallValuesEqual","line":1348,"loc":{"start":{"line":1348,"column":0},"end":{"line":1348,"column":50}}},"139":{"name":"(anonymous_139)","line":1352,"loc":{"start":{"line":1352,"column":25},"end":{"line":1352,"column":46}}},"140":{"name":"createRootContext","line":1369,"loc":{"start":{"line":1369,"column":0},"end":{"line":1369,"column":49}}}},"statementMap":{"1":{"start":{"line":17,"column":0},"end":{"line":17,"column":81}},"2":{"start":{"line":19,"column":0},"end":{"line":19,"column":117}},"3":{"start":{"line":21,"column":0},"end":{"line":21,"column":83}},"4":{"start":{"line":23,"column":0},"end":{"line":23,"column":95}},"5":{"start":{"line":25,"column":0},"end":{"line":25,"column":86}},"6":{"start":{"line":27,"column":0},"end":{"line":27,"column":97}},"7":{"start":{"line":27,"column":39},"end":{"line":27,"column":95}},"8":{"start":{"line":32,"column":0},"end":{"line":32,"column":14}},"9":{"start":{"line":33,"column":0},"end":{"line":33,"column":22}},"10":{"start":{"line":34,"column":0},"end":{"line":34,"column":18}},"11":{"start":{"line":35,"column":0},"end":{"line":35,"column":20}},"12":{"start":{"line":36,"column":0},"end":{"line":36,"column":18}},"13":{"start":{"line":37,"column":0},"end":{"line":37,"column":24}},"14":{"start":{"line":39,"column":0},"end":{"line":39,"column":21}},"15":{"start":{"line":41,"column":0},"end":{"line":45,"column":2}},"16":{"start":{"line":46,"column":0},"end":{"line":46,"column":26}},"17":{"start":{"line":47,"column":0},"end":{"line":47,"column":21}},"18":{"start":{"line":49,"column":0},"end":{"line":52,"column":1}},"19":{"start":{"line":50,"column":2},"end":{"line":50,"column":40}},"20":{"start":{"line":51,"column":2},"end":{"line":51,"column":45}},"21":{"start":{"line":86,"column":0},"end":{"line":313,"column":4}},"22":{"start":{"line":88,"column":2},"end":{"line":93,"column":4}},"23":{"start":{"line":89,"column":4},"end":{"line":89,"column":62}},"24":{"start":{"line":90,"column":4},"end":{"line":90,"column":64}},"25":{"start":{"line":91,"column":4},"end":{"line":91,"column":148}},"26":{"start":{"line":92,"column":4},"end":{"line":92,"column":16}},"27":{"start":{"line":102,"column":2},"end":{"line":118,"column":3}},"28":{"start":{"line":103,"column":4},"end":{"line":103,"column":59}},"29":{"start":{"line":105,"column":4},"end":{"line":105,"column":136}},"30":{"start":{"line":106,"column":4},"end":{"line":106,"column":41}},"31":{"start":{"line":107,"column":4},"end":{"line":107,"column":32}},"32":{"start":{"line":108,"column":4},"end":{"line":108,"column":35}},"33":{"start":{"line":111,"column":4},"end":{"line":111,"column":26}},"34":{"start":{"line":112,"column":4},"end":{"line":112,"column":29}},"35":{"start":{"line":113,"column":4},"end":{"line":113,"column":29}},"36":{"start":{"line":114,"column":4},"end":{"line":114,"column":42}},"37":{"start":{"line":115,"column":4},"end":{"line":115,"column":48}},"38":{"start":{"line":116,"column":4},"end":{"line":116,"column":37}},"39":{"start":{"line":117,"column":4},"end":{"line":117,"column":31}},"40":{"start":{"line":120,"column":2},"end":{"line":122,"column":4}},"41":{"start":{"line":121,"column":4},"end":{"line":121,"column":16}},"42":{"start":{"line":124,"column":2},"end":{"line":126,"column":4}},"43":{"start":{"line":125,"column":4},"end":{"line":125,"column":17}},"44":{"start":{"line":128,"column":2},"end":{"line":130,"column":4}},"45":{"start":{"line":129,"column":4},"end":{"line":129,"column":17}},"46":{"start":{"line":132,"column":2},"end":{"line":155,"column":4}},"47":{"start":{"line":133,"column":4},"end":{"line":137,"column":5}},"48":{"start":{"line":135,"column":6},"end":{"line":135,"column":237}},"49":{"start":{"line":136,"column":6},"end":{"line":136,"column":18}},"50":{"start":{"line":139,"column":4},"end":{"line":139,"column":42}},"51":{"start":{"line":140,"column":4},"end":{"line":140,"column":61}},"52":{"start":{"line":142,"column":4},"end":{"line":146,"column":5}},"53":{"start":{"line":143,"column":6},"end":{"line":143,"column":18}},"54":{"start":{"line":144,"column":11},"end":{"line":146,"column":5}},"55":{"start":{"line":145,"column":6},"end":{"line":145,"column":18}},"56":{"start":{"line":148,"column":4},"end":{"line":148,"column":139}},"57":{"start":{"line":149,"column":4},"end":{"line":149,"column":38}},"58":{"start":{"line":150,"column":4},"end":{"line":150,"column":37}},"59":{"start":{"line":151,"column":4},"end":{"line":151,"column":59}},"60":{"start":{"line":152,"column":4},"end":{"line":152,"column":47}},"61":{"start":{"line":154,"column":4},"end":{"line":154,"column":17}},"62":{"start":{"line":157,"column":2},"end":{"line":187,"column":4}},"63":{"start":{"line":158,"column":4},"end":{"line":158,"column":21}},"64":{"start":{"line":160,"column":4},"end":{"line":160,"column":37}},"65":{"start":{"line":161,"column":4},"end":{"line":185,"column":5}},"66":{"start":{"line":162,"column":6},"end":{"line":184,"column":11}},"67":{"start":{"line":163,"column":8},"end":{"line":163,"column":30}},"68":{"start":{"line":164,"column":8},"end":{"line":164,"column":63}},"69":{"start":{"line":165,"column":8},"end":{"line":181,"column":9}},"70":{"start":{"line":166,"column":10},"end":{"line":180,"column":13}},"71":{"start":{"line":167,"column":12},"end":{"line":169,"column":13}},"72":{"start":{"line":168,"column":14},"end":{"line":168,"column":21}},"73":{"start":{"line":170,"column":12},"end":{"line":170,"column":93}},"74":{"start":{"line":171,"column":12},"end":{"line":179,"column":13}},"75":{"start":{"line":172,"column":14},"end":{"line":176,"column":17}},"76":{"start":{"line":173,"column":16},"end":{"line":175,"column":17}},"77":{"start":{"line":174,"column":18},"end":{"line":174,"column":42}},"78":{"start":{"line":177,"column":19},"end":{"line":179,"column":13}},"79":{"start":{"line":178,"column":14},"end":{"line":178,"column":45}},"80":{"start":{"line":182,"column":8},"end":{"line":182,"column":42}},"81":{"start":{"line":183,"column":8},"end":{"line":183,"column":32}},"82":{"start":{"line":186,"column":4},"end":{"line":186,"column":20}},"83":{"start":{"line":189,"column":2},"end":{"line":206,"column":4}},"84":{"start":{"line":191,"column":4},"end":{"line":193,"column":5}},"85":{"start":{"line":192,"column":6},"end":{"line":192,"column":18}},"86":{"start":{"line":194,"column":4},"end":{"line":205,"column":7}},"87":{"start":{"line":195,"column":6},"end":{"line":203,"column":7}},"88":{"start":{"line":196,"column":8},"end":{"line":198,"column":11}},"89":{"start":{"line":197,"column":10},"end":{"line":197,"column":48}},"90":{"start":{"line":199,"column":13},"end":{"line":203,"column":7}},"91":{"start":{"line":200,"column":8},"end":{"line":202,"column":11}},"92":{"start":{"line":201,"column":10},"end":{"line":201,"column":47}},"93":{"start":{"line":204,"column":6},"end":{"line":204,"column":18}},"94":{"start":{"line":208,"column":2},"end":{"line":221,"column":4}},"95":{"start":{"line":209,"column":4},"end":{"line":209,"column":22}},"96":{"start":{"line":211,"column":4},"end":{"line":211,"column":62}},"97":{"start":{"line":212,"column":4},"end":{"line":219,"column":5}},"98":{"start":{"line":213,"column":6},"end":{"line":218,"column":9}},"99":{"start":{"line":214,"column":8},"end":{"line":217,"column":10}},"100":{"start":{"line":220,"column":4},"end":{"line":220,"column":28}},"101":{"start":{"line":223,"column":2},"end":{"line":225,"column":4}},"102":{"start":{"line":224,"column":4},"end":{"line":224,"column":60}},"103":{"start":{"line":227,"column":2},"end":{"line":241,"column":4}},"104":{"start":{"line":228,"column":4},"end":{"line":228,"column":37}},"105":{"start":{"line":229,"column":4},"end":{"line":239,"column":5}},"106":{"start":{"line":230,"column":6},"end":{"line":230,"column":20}},"107":{"start":{"line":231,"column":6},"end":{"line":231,"column":40}},"108":{"start":{"line":232,"column":6},"end":{"line":237,"column":7}},"109":{"start":{"line":233,"column":8},"end":{"line":233,"column":33}},"110":{"start":{"line":234,"column":8},"end":{"line":236,"column":9}},"111":{"start":{"line":235,"column":10},"end":{"line":235,"column":50}},"112":{"start":{"line":238,"column":6},"end":{"line":238,"column":35}},"113":{"start":{"line":240,"column":4},"end":{"line":240,"column":32}},"114":{"start":{"line":243,"column":2},"end":{"line":245,"column":4}},"115":{"start":{"line":244,"column":4},"end":{"line":244,"column":38}},"116":{"start":{"line":247,"column":2},"end":{"line":249,"column":4}},"117":{"start":{"line":248,"column":4},"end":{"line":248,"column":68}},"118":{"start":{"line":251,"column":2},"end":{"line":253,"column":4}},"119":{"start":{"line":252,"column":4},"end":{"line":252,"column":30}},"120":{"start":{"line":255,"column":2},"end":{"line":264,"column":4}},"121":{"start":{"line":256,"column":4},"end":{"line":256,"column":63}},"122":{"start":{"line":257,"column":4},"end":{"line":262,"column":5}},"123":{"start":{"line":258,"column":6},"end":{"line":260,"column":9}},"124":{"start":{"line":259,"column":8},"end":{"line":259,"column":45}},"125":{"start":{"line":261,"column":6},"end":{"line":261,"column":61}},"126":{"start":{"line":263,"column":4},"end":{"line":263,"column":33}},"127":{"start":{"line":266,"column":2},"end":{"line":268,"column":4}},"128":{"start":{"line":267,"column":4},"end":{"line":267,"column":75}},"129":{"start":{"line":270,"column":2},"end":{"line":272,"column":4}},"130":{"start":{"line":271,"column":4},"end":{"line":271,"column":17}},"131":{"start":{"line":279,"column":2},"end":{"line":286,"column":4}},"132":{"start":{"line":280,"column":4},"end":{"line":280,"column":42}},"133":{"start":{"line":281,"column":4},"end":{"line":281,"column":42}},"134":{"start":{"line":283,"column":4},"end":{"line":285,"column":7}},"135":{"start":{"line":284,"column":6},"end":{"line":284,"column":40}},"136":{"start":{"line":300,"column":2},"end":{"line":302,"column":4}},"137":{"start":{"line":301,"column":4},"end":{"line":301,"column":276}},"138":{"start":{"line":304,"column":2},"end":{"line":306,"column":4}},"139":{"start":{"line":305,"column":4},"end":{"line":305,"column":125}},"140":{"start":{"line":308,"column":2},"end":{"line":310,"column":4}},"141":{"start":{"line":309,"column":4},"end":{"line":309,"column":33}},"142":{"start":{"line":312,"column":2},"end":{"line":312,"column":24}},"143":{"start":{"line":322,"column":0},"end":{"line":530,"column":18}},"144":{"start":{"line":323,"column":2},"end":{"line":323,"column":62}},"145":{"start":{"line":329,"column":2},"end":{"line":355,"column":4}},"146":{"start":{"line":330,"column":4},"end":{"line":332,"column":12}},"147":{"start":{"line":331,"column":6},"end":{"line":331,"column":21}},"148":{"start":{"line":333,"column":4},"end":{"line":333,"column":82}},"149":{"start":{"line":334,"column":4},"end":{"line":334,"column":37}},"150":{"start":{"line":335,"column":4},"end":{"line":341,"column":5}},"151":{"start":{"line":336,"column":6},"end":{"line":336,"column":46}},"152":{"start":{"line":337,"column":11},"end":{"line":341,"column":5}},"153":{"start":{"line":338,"column":6},"end":{"line":338,"column":81}},"154":{"start":{"line":339,"column":11},"end":{"line":341,"column":5}},"155":{"start":{"line":340,"column":6},"end":{"line":340,"column":77}},"156":{"start":{"line":342,"column":4},"end":{"line":348,"column":7}},"157":{"start":{"line":349,"column":4},"end":{"line":349,"column":23}},"158":{"start":{"line":350,"column":4},"end":{"line":350,"column":80}},"159":{"start":{"line":351,"column":4},"end":{"line":351,"column":62}},"160":{"start":{"line":352,"column":4},"end":{"line":352,"column":72}},"161":{"start":{"line":353,"column":4},"end":{"line":353,"column":37}},"162":{"start":{"line":354,"column":4},"end":{"line":354,"column":16}},"163":{"start":{"line":357,"column":2},"end":{"line":362,"column":4}},"164":{"start":{"line":358,"column":4},"end":{"line":358,"column":65}},"165":{"start":{"line":359,"column":4},"end":{"line":359,"column":127}},"166":{"start":{"line":360,"column":4},"end":{"line":360,"column":62}},"167":{"start":{"line":361,"column":4},"end":{"line":361,"column":61}},"168":{"start":{"line":364,"column":2},"end":{"line":377,"column":3}},"169":{"start":{"line":365,"column":4},"end":{"line":365,"column":59}},"170":{"start":{"line":367,"column":4},"end":{"line":367,"column":133}},"171":{"start":{"line":369,"column":4},"end":{"line":369,"column":37}},"172":{"start":{"line":370,"column":4},"end":{"line":370,"column":30}},"173":{"start":{"line":371,"column":4},"end":{"line":371,"column":42}},"174":{"start":{"line":372,"column":4},"end":{"line":372,"column":38}},"175":{"start":{"line":375,"column":4},"end":{"line":375,"column":19}},"176":{"start":{"line":376,"column":4},"end":{"line":376,"column":18}},"177":{"start":{"line":379,"column":2},"end":{"line":381,"column":4}},"178":{"start":{"line":380,"column":4},"end":{"line":380,"column":16}},"179":{"start":{"line":383,"column":2},"end":{"line":390,"column":4}},"180":{"start":{"line":384,"column":4},"end":{"line":384,"column":42}},"181":{"start":{"line":385,"column":4},"end":{"line":388,"column":5}},"182":{"start":{"line":386,"column":6},"end":{"line":386,"column":26}},"183":{"start":{"line":387,"column":6},"end":{"line":387,"column":40}},"184":{"start":{"line":389,"column":4},"end":{"line":389,"column":16}},"185":{"start":{"line":392,"column":2},"end":{"line":399,"column":4}},"186":{"start":{"line":393,"column":4},"end":{"line":393,"column":25}},"187":{"start":{"line":394,"column":4},"end":{"line":397,"column":5}},"188":{"start":{"line":395,"column":6},"end":{"line":395,"column":32}},"189":{"start":{"line":396,"column":6},"end":{"line":396,"column":23}},"190":{"start":{"line":398,"column":4},"end":{"line":398,"column":14}},"191":{"start":{"line":401,"column":2},"end":{"line":419,"column":4}},"192":{"start":{"line":402,"column":4},"end":{"line":402,"column":39}},"193":{"start":{"line":403,"column":4},"end":{"line":417,"column":5}},"194":{"start":{"line":404,"column":6},"end":{"line":404,"column":54}},"195":{"start":{"line":405,"column":6},"end":{"line":414,"column":7}},"196":{"start":{"line":406,"column":8},"end":{"line":406,"column":65}},"197":{"start":{"line":407,"column":8},"end":{"line":413,"column":9}},"198":{"start":{"line":408,"column":10},"end":{"line":412,"column":12}},"199":{"start":{"line":415,"column":6},"end":{"line":415,"column":36}},"200":{"start":{"line":416,"column":6},"end":{"line":416,"column":37}},"201":{"start":{"line":418,"column":4},"end":{"line":418,"column":21}},"202":{"start":{"line":421,"column":2},"end":{"line":433,"column":4}},"203":{"start":{"line":422,"column":4},"end":{"line":422,"column":31}},"204":{"start":{"line":423,"column":4},"end":{"line":431,"column":5}},"205":{"start":{"line":424,"column":6},"end":{"line":424,"column":54}},"206":{"start":{"line":425,"column":6},"end":{"line":429,"column":7}},"207":{"start":{"line":426,"column":8},"end":{"line":426,"column":81}},"208":{"start":{"line":428,"column":8},"end":{"line":428,"column":28}},"209":{"start":{"line":430,"column":6},"end":{"line":430,"column":29}},"210":{"start":{"line":432,"column":4},"end":{"line":432,"column":17}},"211":{"start":{"line":435,"column":2},"end":{"line":437,"column":4}},"212":{"start":{"line":436,"column":4},"end":{"line":436,"column":43}},"213":{"start":{"line":439,"column":2},"end":{"line":459,"column":4}},"214":{"start":{"line":440,"column":4},"end":{"line":440,"column":22}},"215":{"start":{"line":442,"column":4},"end":{"line":442,"column":49}},"216":{"start":{"line":443,"column":4},"end":{"line":457,"column":5}},"217":{"start":{"line":444,"column":6},"end":{"line":456,"column":11}},"218":{"start":{"line":445,"column":8},"end":{"line":445,"column":56}},"219":{"start":{"line":446,"column":8},"end":{"line":446,"column":61}},"220":{"start":{"line":447,"column":8},"end":{"line":455,"column":9}},"221":{"start":{"line":448,"column":10},"end":{"line":450,"column":13}},"222":{"start":{"line":449,"column":12},"end":{"line":449,"column":49}},"223":{"start":{"line":451,"column":10},"end":{"line":453,"column":11}},"224":{"start":{"line":452,"column":12},"end":{"line":452,"column":62}},"225":{"start":{"line":454,"column":10},"end":{"line":454,"column":53}},"226":{"start":{"line":458,"column":4},"end":{"line":458,"column":26}},"227":{"start":{"line":461,"column":2},"end":{"line":484,"column":4}},"228":{"start":{"line":462,"column":4},"end":{"line":462,"column":22}},"229":{"start":{"line":464,"column":4},"end":{"line":464,"column":41}},"230":{"start":{"line":465,"column":4},"end":{"line":482,"column":5}},"231":{"start":{"line":466,"column":6},"end":{"line":481,"column":11}},"232":{"start":{"line":467,"column":8},"end":{"line":467,"column":47}},"233":{"start":{"line":468,"column":8},"end":{"line":468,"column":56}},"234":{"start":{"line":469,"column":8},"end":{"line":473,"column":9}},"235":{"start":{"line":470,"column":10},"end":{"line":472,"column":13}},"236":{"start":{"line":471,"column":12},"end":{"line":471,"column":42}},"237":{"start":{"line":474,"column":8},"end":{"line":478,"column":11}},"238":{"start":{"line":479,"column":8},"end":{"line":479,"column":43}},"239":{"start":{"line":480,"column":8},"end":{"line":480,"column":43}},"240":{"start":{"line":483,"column":4},"end":{"line":483,"column":22}},"241":{"start":{"line":486,"column":2},"end":{"line":488,"column":4}},"242":{"start":{"line":487,"column":4},"end":{"line":487,"column":91}},"243":{"start":{"line":490,"column":2},"end":{"line":492,"column":4}},"244":{"start":{"line":491,"column":4},"end":{"line":491,"column":55}},"245":{"start":{"line":494,"column":2},"end":{"line":496,"column":4}},"246":{"start":{"line":495,"column":4},"end":{"line":495,"column":46}},"247":{"start":{"line":498,"column":2},"end":{"line":500,"column":4}},"248":{"start":{"line":499,"column":4},"end":{"line":499,"column":53}},"249":{"start":{"line":502,"column":2},"end":{"line":511,"column":4}},"250":{"start":{"line":503,"column":4},"end":{"line":505,"column":5}},"251":{"start":{"line":504,"column":6},"end":{"line":504,"column":34}},"252":{"start":{"line":506,"column":4},"end":{"line":508,"column":39}},"253":{"start":{"line":509,"column":4},"end":{"line":509,"column":34}},"254":{"start":{"line":510,"column":4},"end":{"line":510,"column":17}},"255":{"start":{"line":513,"column":2},"end":{"line":527,"column":4}},"256":{"start":{"line":514,"column":4},"end":{"line":516,"column":5}},"257":{"start":{"line":515,"column":6},"end":{"line":515,"column":18}},"258":{"start":{"line":517,"column":4},"end":{"line":519,"column":5}},"259":{"start":{"line":518,"column":6},"end":{"line":518,"column":19}},"260":{"start":{"line":520,"column":4},"end":{"line":522,"column":5}},"261":{"start":{"line":521,"column":6},"end":{"line":521,"column":19}},"262":{"start":{"line":523,"column":4},"end":{"line":525,"column":5}},"263":{"start":{"line":524,"column":6},"end":{"line":524,"column":19}},"264":{"start":{"line":526,"column":4},"end":{"line":526,"column":61}},"265":{"start":{"line":529,"column":2},"end":{"line":529,"column":24}},"266":{"start":{"line":539,"column":0},"end":{"line":608,"column":18}},"267":{"start":{"line":540,"column":2},"end":{"line":540,"column":68}},"268":{"start":{"line":542,"column":2},"end":{"line":549,"column":3}},"269":{"start":{"line":543,"column":4},"end":{"line":543,"column":64}},"270":{"start":{"line":545,"column":4},"end":{"line":545,"column":134}},"271":{"start":{"line":547,"column":4},"end":{"line":547,"column":148}},"272":{"start":{"line":548,"column":4},"end":{"line":548,"column":18}},"273":{"start":{"line":551,"column":2},"end":{"line":553,"column":4}},"274":{"start":{"line":552,"column":4},"end":{"line":552,"column":16}},"275":{"start":{"line":555,"column":2},"end":{"line":557,"column":4}},"276":{"start":{"line":556,"column":4},"end":{"line":556,"column":38}},"277":{"start":{"line":559,"column":2},"end":{"line":561,"column":4}},"278":{"start":{"line":560,"column":4},"end":{"line":560,"column":46}},"279":{"start":{"line":563,"column":2},"end":{"line":565,"column":4}},"280":{"start":{"line":564,"column":4},"end":{"line":564,"column":34}},"281":{"start":{"line":567,"column":2},"end":{"line":571,"column":4}},"282":{"start":{"line":568,"column":4},"end":{"line":568,"column":61}},"283":{"start":{"line":569,"column":4},"end":{"line":569,"column":279}},"284":{"start":{"line":570,"column":4},"end":{"line":570,"column":21}},"285":{"start":{"line":573,"column":2},"end":{"line":585,"column":4}},"286":{"start":{"line":574,"column":4},"end":{"line":574,"column":31}},"287":{"start":{"line":575,"column":4},"end":{"line":583,"column":5}},"288":{"start":{"line":576,"column":6},"end":{"line":576,"column":54}},"289":{"start":{"line":577,"column":6},"end":{"line":581,"column":7}},"290":{"start":{"line":578,"column":8},"end":{"line":578,"column":81}},"291":{"start":{"line":580,"column":8},"end":{"line":580,"column":28}},"292":{"start":{"line":582,"column":6},"end":{"line":582,"column":29}},"293":{"start":{"line":584,"column":4},"end":{"line":584,"column":20}},"294":{"start":{"line":587,"column":2},"end":{"line":595,"column":4}},"295":{"start":{"line":588,"column":4},"end":{"line":593,"column":5}},"296":{"start":{"line":589,"column":6},"end":{"line":589,"column":54}},"297":{"start":{"line":590,"column":6},"end":{"line":590,"column":108}},"298":{"start":{"line":591,"column":6},"end":{"line":591,"column":110}},"299":{"start":{"line":592,"column":6},"end":{"line":592,"column":64}},"300":{"start":{"line":594,"column":4},"end":{"line":594,"column":37}},"301":{"start":{"line":603,"column":2},"end":{"line":605,"column":4}},"302":{"start":{"line":604,"column":4},"end":{"line":604,"column":17}},"303":{"start":{"line":607,"column":2},"end":{"line":607,"column":29}},"304":{"start":{"line":617,"column":0},"end":{"line":664,"column":23}},"305":{"start":{"line":618,"column":2},"end":{"line":618,"column":71}},"306":{"start":{"line":620,"column":2},"end":{"line":623,"column":3}},"307":{"start":{"line":621,"column":4},"end":{"line":621,"column":63}},"308":{"start":{"line":622,"column":4},"end":{"line":622,"column":106}},"309":{"start":{"line":629,"column":2},"end":{"line":645,"column":4}},"310":{"start":{"line":630,"column":4},"end":{"line":632,"column":12}},"311":{"start":{"line":631,"column":6},"end":{"line":631,"column":21}},"312":{"start":{"line":633,"column":4},"end":{"line":638,"column":7}},"313":{"start":{"line":639,"column":4},"end":{"line":639,"column":47}},"314":{"start":{"line":640,"column":4},"end":{"line":640,"column":80}},"315":{"start":{"line":641,"column":4},"end":{"line":641,"column":62}},"316":{"start":{"line":642,"column":4},"end":{"line":642,"column":84}},"317":{"start":{"line":643,"column":4},"end":{"line":643,"column":41}},"318":{"start":{"line":644,"column":4},"end":{"line":644,"column":20}},"319":{"start":{"line":647,"column":2},"end":{"line":661,"column":4}},"320":{"start":{"line":648,"column":4},"end":{"line":650,"column":5}},"321":{"start":{"line":649,"column":6},"end":{"line":649,"column":18}},"322":{"start":{"line":651,"column":4},"end":{"line":653,"column":5}},"323":{"start":{"line":652,"column":6},"end":{"line":652,"column":19}},"324":{"start":{"line":654,"column":4},"end":{"line":656,"column":5}},"325":{"start":{"line":655,"column":6},"end":{"line":655,"column":19}},"326":{"start":{"line":657,"column":4},"end":{"line":659,"column":5}},"327":{"start":{"line":658,"column":6},"end":{"line":658,"column":19}},"328":{"start":{"line":660,"column":4},"end":{"line":660,"column":66}},"329":{"start":{"line":663,"column":2},"end":{"line":663,"column":28}},"330":{"start":{"line":673,"column":0},"end":{"line":709,"column":23}},"331":{"start":{"line":674,"column":2},"end":{"line":674,"column":76}},"332":{"start":{"line":676,"column":2},"end":{"line":679,"column":3}},"333":{"start":{"line":677,"column":4},"end":{"line":677,"column":67}},"334":{"start":{"line":678,"column":4},"end":{"line":678,"column":107}},"335":{"start":{"line":681,"column":2},"end":{"line":686,"column":4}},"336":{"start":{"line":682,"column":4},"end":{"line":682,"column":79}},"337":{"start":{"line":683,"column":4},"end":{"line":683,"column":154}},"338":{"start":{"line":684,"column":4},"end":{"line":684,"column":62}},"339":{"start":{"line":685,"column":4},"end":{"line":685,"column":76}},"340":{"start":{"line":688,"column":2},"end":{"line":690,"column":4}},"341":{"start":{"line":689,"column":4},"end":{"line":689,"column":34}},"342":{"start":{"line":692,"column":2},"end":{"line":706,"column":4}},"343":{"start":{"line":693,"column":4},"end":{"line":695,"column":5}},"344":{"start":{"line":694,"column":6},"end":{"line":694,"column":18}},"345":{"start":{"line":696,"column":4},"end":{"line":698,"column":5}},"346":{"start":{"line":697,"column":6},"end":{"line":697,"column":19}},"347":{"start":{"line":699,"column":4},"end":{"line":701,"column":5}},"348":{"start":{"line":700,"column":6},"end":{"line":700,"column":19}},"349":{"start":{"line":702,"column":4},"end":{"line":704,"column":5}},"350":{"start":{"line":703,"column":6},"end":{"line":703,"column":19}},"351":{"start":{"line":705,"column":4},"end":{"line":705,"column":67}},"352":{"start":{"line":708,"column":2},"end":{"line":708,"column":32}},"353":{"start":{"line":718,"column":0},"end":{"line":880,"column":18}},"354":{"start":{"line":719,"column":2},"end":{"line":719,"column":67}},"355":{"start":{"line":725,"column":2},"end":{"line":748,"column":4}},"356":{"start":{"line":729,"column":4},"end":{"line":731,"column":12}},"357":{"start":{"line":730,"column":6},"end":{"line":730,"column":21}},"358":{"start":{"line":733,"column":4},"end":{"line":737,"column":7}},"359":{"start":{"line":738,"column":4},"end":{"line":738,"column":23}},"360":{"start":{"line":739,"column":4},"end":{"line":739,"column":80}},"361":{"start":{"line":740,"column":4},"end":{"line":740,"column":62}},"362":{"start":{"line":741,"column":4},"end":{"line":745,"column":7}},"363":{"start":{"line":746,"column":4},"end":{"line":746,"column":41}},"364":{"start":{"line":747,"column":4},"end":{"line":747,"column":20}},"365":{"start":{"line":750,"column":2},"end":{"line":755,"column":4}},"366":{"start":{"line":751,"column":4},"end":{"line":751,"column":71}},"367":{"start":{"line":752,"column":4},"end":{"line":752,"column":142}},"368":{"start":{"line":753,"column":4},"end":{"line":753,"column":62}},"369":{"start":{"line":754,"column":4},"end":{"line":754,"column":107}},"370":{"start":{"line":757,"column":2},"end":{"line":766,"column":3}},"371":{"start":{"line":758,"column":4},"end":{"line":758,"column":63}},"372":{"start":{"line":760,"column":4},"end":{"line":760,"column":134}},"373":{"start":{"line":762,"column":4},"end":{"line":762,"column":36}},"374":{"start":{"line":763,"column":4},"end":{"line":763,"column":64}},"375":{"start":{"line":764,"column":4},"end":{"line":764,"column":42}},"376":{"start":{"line":765,"column":4},"end":{"line":765,"column":18}},"377":{"start":{"line":768,"column":2},"end":{"line":770,"column":4}},"378":{"start":{"line":769,"column":4},"end":{"line":769,"column":16}},"379":{"start":{"line":772,"column":2},"end":{"line":774,"column":4}},"380":{"start":{"line":773,"column":4},"end":{"line":773,"column":38}},"381":{"start":{"line":783,"column":2},"end":{"line":785,"column":4}},"382":{"start":{"line":784,"column":4},"end":{"line":784,"column":36}},"383":{"start":{"line":797,"column":2},"end":{"line":805,"column":4}},"384":{"start":{"line":798,"column":4},"end":{"line":798,"column":47}},"385":{"start":{"line":799,"column":4},"end":{"line":803,"column":5}},"386":{"start":{"line":801,"column":6},"end":{"line":801,"column":176}},"387":{"start":{"line":802,"column":6},"end":{"line":802,"column":45}},"388":{"start":{"line":804,"column":4},"end":{"line":804,"column":25}},"389":{"start":{"line":807,"column":2},"end":{"line":809,"column":4}},"390":{"start":{"line":808,"column":4},"end":{"line":808,"column":40}},"391":{"start":{"line":811,"column":2},"end":{"line":813,"column":4}},"392":{"start":{"line":812,"column":4},"end":{"line":812,"column":55}},"393":{"start":{"line":815,"column":2},"end":{"line":817,"column":4}},"394":{"start":{"line":816,"column":4},"end":{"line":816,"column":40}},"395":{"start":{"line":819,"column":2},"end":{"line":821,"column":4}},"396":{"start":{"line":820,"column":4},"end":{"line":820,"column":52}},"397":{"start":{"line":823,"column":2},"end":{"line":827,"column":4}},"398":{"start":{"line":824,"column":4},"end":{"line":824,"column":50}},"399":{"start":{"line":825,"column":4},"end":{"line":826,"column":42}},"400":{"start":{"line":829,"column":2},"end":{"line":832,"column":4}},"401":{"start":{"line":830,"column":4},"end":{"line":830,"column":50}},"402":{"start":{"line":831,"column":4},"end":{"line":831,"column":40}},"403":{"start":{"line":834,"column":2},"end":{"line":836,"column":4}},"404":{"start":{"line":835,"column":4},"end":{"line":835,"column":119}},"405":{"start":{"line":838,"column":2},"end":{"line":840,"column":4}},"406":{"start":{"line":839,"column":4},"end":{"line":839,"column":49}},"407":{"start":{"line":842,"column":2},"end":{"line":844,"column":4}},"408":{"start":{"line":843,"column":4},"end":{"line":843,"column":47}},"409":{"start":{"line":846,"column":2},"end":{"line":848,"column":4}},"410":{"start":{"line":847,"column":4},"end":{"line":847,"column":92}},"411":{"start":{"line":850,"column":2},"end":{"line":864,"column":4}},"412":{"start":{"line":851,"column":4},"end":{"line":851,"column":70}},"413":{"start":{"line":852,"column":4},"end":{"line":862,"column":5}},"414":{"start":{"line":853,"column":6},"end":{"line":855,"column":9}},"415":{"start":{"line":856,"column":6},"end":{"line":856,"column":76}},"416":{"start":{"line":861,"column":6},"end":{"line":861,"column":62}},"417":{"start":{"line":863,"column":4},"end":{"line":863,"column":17}},"418":{"start":{"line":866,"column":2},"end":{"line":877,"column":4}},"419":{"start":{"line":867,"column":4},"end":{"line":869,"column":5}},"420":{"start":{"line":868,"column":6},"end":{"line":868,"column":18}},"421":{"start":{"line":870,"column":4},"end":{"line":872,"column":5}},"422":{"start":{"line":871,"column":6},"end":{"line":871,"column":19}},"423":{"start":{"line":873,"column":4},"end":{"line":875,"column":5}},"424":{"start":{"line":874,"column":6},"end":{"line":874,"column":19}},"425":{"start":{"line":876,"column":4},"end":{"line":876,"column":62}},"426":{"start":{"line":879,"column":2},"end":{"line":879,"column":28}},"427":{"start":{"line":889,"column":0},"end":{"line":1212,"column":18}},"428":{"start":{"line":890,"column":2},"end":{"line":890,"column":64}},"429":{"start":{"line":892,"column":2},"end":{"line":897,"column":4}},"430":{"start":{"line":893,"column":4},"end":{"line":893,"column":65}},"431":{"start":{"line":894,"column":4},"end":{"line":894,"column":118}},"432":{"start":{"line":895,"column":4},"end":{"line":895,"column":62}},"433":{"start":{"line":896,"column":4},"end":{"line":896,"column":62}},"434":{"start":{"line":905,"column":2},"end":{"line":932,"column":4}},"435":{"start":{"line":906,"column":4},"end":{"line":913,"column":25}},"436":{"start":{"line":915,"column":4},"end":{"line":917,"column":12}},"437":{"start":{"line":916,"column":6},"end":{"line":916,"column":21}},"438":{"start":{"line":918,"column":4},"end":{"line":925,"column":7}},"439":{"start":{"line":926,"column":4},"end":{"line":926,"column":23}},"440":{"start":{"line":927,"column":4},"end":{"line":927,"column":80}},"441":{"start":{"line":928,"column":4},"end":{"line":928,"column":62}},"442":{"start":{"line":929,"column":4},"end":{"line":929,"column":75}},"443":{"start":{"line":930,"column":4},"end":{"line":930,"column":38}},"444":{"start":{"line":931,"column":4},"end":{"line":931,"column":17}},"445":{"start":{"line":934,"column":2},"end":{"line":944,"column":3}},"446":{"start":{"line":935,"column":4},"end":{"line":935,"column":60}},"447":{"start":{"line":937,"column":4},"end":{"line":937,"column":135}},"448":{"start":{"line":939,"column":4},"end":{"line":939,"column":38}},"449":{"start":{"line":940,"column":4},"end":{"line":940,"column":45}},"450":{"start":{"line":941,"column":4},"end":{"line":941,"column":47}},"451":{"start":{"line":942,"column":4},"end":{"line":942,"column":40}},"452":{"start":{"line":943,"column":4},"end":{"line":943,"column":19}},"453":{"start":{"line":946,"column":2},"end":{"line":948,"column":4}},"454":{"start":{"line":947,"column":4},"end":{"line":947,"column":65}},"455":{"start":{"line":950,"column":2},"end":{"line":952,"column":4}},"456":{"start":{"line":951,"column":4},"end":{"line":951,"column":55}},"457":{"start":{"line":954,"column":2},"end":{"line":956,"column":4}},"458":{"start":{"line":955,"column":4},"end":{"line":955,"column":55}},"459":{"start":{"line":958,"column":2},"end":{"line":960,"column":4}},"460":{"start":{"line":959,"column":4},"end":{"line":959,"column":56}},"461":{"start":{"line":962,"column":2},"end":{"line":964,"column":4}},"462":{"start":{"line":963,"column":4},"end":{"line":963,"column":57}},"463":{"start":{"line":966,"column":2},"end":{"line":968,"column":4}},"464":{"start":{"line":967,"column":4},"end":{"line":967,"column":70}},"465":{"start":{"line":970,"column":2},"end":{"line":972,"column":4}},"466":{"start":{"line":971,"column":4},"end":{"line":971,"column":53}},"467":{"start":{"line":974,"column":2},"end":{"line":976,"column":4}},"468":{"start":{"line":975,"column":4},"end":{"line":975,"column":41}},"469":{"start":{"line":978,"column":2},"end":{"line":980,"column":4}},"470":{"start":{"line":979,"column":4},"end":{"line":979,"column":56}},"471":{"start":{"line":982,"column":2},"end":{"line":1003,"column":4}},"472":{"start":{"line":983,"column":4},"end":{"line":983,"column":23}},"473":{"start":{"line":985,"column":4},"end":{"line":985,"column":39}},"474":{"start":{"line":986,"column":4},"end":{"line":1001,"column":5}},"475":{"start":{"line":987,"column":6},"end":{"line":1000,"column":11}},"476":{"start":{"line":988,"column":8},"end":{"line":988,"column":44}},"477":{"start":{"line":989,"column":8},"end":{"line":989,"column":37}},"478":{"start":{"line":990,"column":8},"end":{"line":995,"column":11}},"479":{"start":{"line":991,"column":10},"end":{"line":994,"column":11}},"480":{"start":{"line":992,"column":12},"end":{"line":992,"column":52}},"481":{"start":{"line":993,"column":12},"end":{"line":993,"column":76}},"482":{"start":{"line":996,"column":8},"end":{"line":998,"column":9}},"483":{"start":{"line":997,"column":10},"end":{"line":997,"column":55}},"484":{"start":{"line":999,"column":8},"end":{"line":999,"column":42}},"485":{"start":{"line":1002,"column":4},"end":{"line":1002,"column":21}},"486":{"start":{"line":1010,"column":2},"end":{"line":1012,"column":4}},"487":{"start":{"line":1011,"column":4},"end":{"line":1011,"column":43}},"488":{"start":{"line":1023,"column":2},"end":{"line":1036,"column":4}},"489":{"start":{"line":1024,"column":4},"end":{"line":1024,"column":23}},"490":{"start":{"line":1026,"column":4},"end":{"line":1026,"column":249}},"491":{"start":{"line":1028,"column":4},"end":{"line":1028,"column":57}},"492":{"start":{"line":1029,"column":4},"end":{"line":1034,"column":5}},"493":{"start":{"line":1030,"column":6},"end":{"line":1032,"column":9}},"494":{"start":{"line":1031,"column":8},"end":{"line":1031,"column":39}},"495":{"start":{"line":1033,"column":6},"end":{"line":1033,"column":55}},"496":{"start":{"line":1035,"column":4},"end":{"line":1035,"column":30}},"497":{"start":{"line":1052,"column":2},"end":{"line":1068,"column":4}},"498":{"start":{"line":1053,"column":4},"end":{"line":1053,"column":53}},"499":{"start":{"line":1054,"column":4},"end":{"line":1066,"column":5}},"500":{"start":{"line":1055,"column":6},"end":{"line":1055,"column":38}},"501":{"start":{"line":1056,"column":6},"end":{"line":1056,"column":44}},"502":{"start":{"line":1057,"column":6},"end":{"line":1063,"column":7}},"503":{"start":{"line":1058,"column":8},"end":{"line":1058,"column":48}},"504":{"start":{"line":1059,"column":8},"end":{"line":1061,"column":9}},"505":{"start":{"line":1060,"column":10},"end":{"line":1060,"column":30}},"506":{"start":{"line":1062,"column":8},"end":{"line":1062,"column":80}},"507":{"start":{"line":1064,"column":6},"end":{"line":1064,"column":66}},"508":{"start":{"line":1065,"column":6},"end":{"line":1065,"column":51}},"509":{"start":{"line":1067,"column":4},"end":{"line":1067,"column":28}},"510":{"start":{"line":1075,"column":2},"end":{"line":1081,"column":4}},"511":{"start":{"line":1076,"column":4},"end":{"line":1076,"column":43}},"512":{"start":{"line":1077,"column":4},"end":{"line":1079,"column":5}},"513":{"start":{"line":1078,"column":6},"end":{"line":1078,"column":108}},"514":{"start":{"line":1080,"column":4},"end":{"line":1080,"column":23}},"515":{"start":{"line":1096,"column":2},"end":{"line":1106,"column":4}},"516":{"start":{"line":1097,"column":4},"end":{"line":1097,"column":23}},"517":{"start":{"line":1099,"column":4},"end":{"line":1099,"column":41}},"518":{"start":{"line":1100,"column":4},"end":{"line":1104,"column":5}},"519":{"start":{"line":1101,"column":6},"end":{"line":1103,"column":10}},"520":{"start":{"line":1102,"column":8},"end":{"line":1102,"column":40}},"521":{"start":{"line":1105,"column":4},"end":{"line":1105,"column":22}},"522":{"start":{"line":1114,"column":2},"end":{"line":1117,"column":4}},"523":{"start":{"line":1115,"column":4},"end":{"line":1115,"column":45}},"524":{"start":{"line":1116,"column":4},"end":{"line":1116,"column":56}},"525":{"start":{"line":1119,"column":2},"end":{"line":1121,"column":4}},"526":{"start":{"line":1120,"column":4},"end":{"line":1120,"column":63}},"527":{"start":{"line":1123,"column":2},"end":{"line":1125,"column":4}},"528":{"start":{"line":1124,"column":4},"end":{"line":1124,"column":61}},"529":{"start":{"line":1127,"column":2},"end":{"line":1139,"column":4}},"530":{"start":{"line":1128,"column":4},"end":{"line":1128,"column":31}},"531":{"start":{"line":1129,"column":4},"end":{"line":1137,"column":5}},"532":{"start":{"line":1130,"column":6},"end":{"line":1130,"column":54}},"533":{"start":{"line":1131,"column":6},"end":{"line":1135,"column":7}},"534":{"start":{"line":1132,"column":8},"end":{"line":1132,"column":81}},"535":{"start":{"line":1134,"column":8},"end":{"line":1134,"column":28}},"536":{"start":{"line":1136,"column":6},"end":{"line":1136,"column":29}},"537":{"start":{"line":1138,"column":4},"end":{"line":1138,"column":17}},"538":{"start":{"line":1141,"column":2},"end":{"line":1149,"column":4}},"539":{"start":{"line":1142,"column":4},"end":{"line":1142,"column":52}},"540":{"start":{"line":1143,"column":4},"end":{"line":1145,"column":10}},"541":{"start":{"line":1144,"column":6},"end":{"line":1144,"column":36}},"542":{"start":{"line":1146,"column":4},"end":{"line":1148,"column":5}},"543":{"start":{"line":1147,"column":6},"end":{"line":1147,"column":40}},"544":{"start":{"line":1151,"column":2},"end":{"line":1162,"column":4}},"545":{"start":{"line":1152,"column":4},"end":{"line":1154,"column":5}},"546":{"start":{"line":1153,"column":6},"end":{"line":1153,"column":18}},"547":{"start":{"line":1155,"column":4},"end":{"line":1157,"column":5}},"548":{"start":{"line":1156,"column":6},"end":{"line":1156,"column":19}},"549":{"start":{"line":1158,"column":4},"end":{"line":1160,"column":5}},"550":{"start":{"line":1159,"column":6},"end":{"line":1159,"column":19}},"551":{"start":{"line":1161,"column":4},"end":{"line":1161,"column":62}},"552":{"start":{"line":1164,"column":2},"end":{"line":1169,"column":4}},"553":{"start":{"line":1165,"column":4},"end":{"line":1165,"column":94}},"554":{"start":{"line":1166,"column":4},"end":{"line":1166,"column":28}},"555":{"start":{"line":1167,"column":4},"end":{"line":1167,"column":42}},"556":{"start":{"line":1168,"column":4},"end":{"line":1168,"column":17}},"557":{"start":{"line":1171,"column":2},"end":{"line":1193,"column":4}},"558":{"start":{"line":1172,"column":4},"end":{"line":1175,"column":5}},"559":{"start":{"line":1174,"column":6},"end":{"line":1174,"column":196}},"560":{"start":{"line":1178,"column":4},"end":{"line":1181,"column":5}},"561":{"start":{"line":1179,"column":6},"end":{"line":1179,"column":39}},"562":{"start":{"line":1180,"column":6},"end":{"line":1180,"column":19}},"563":{"start":{"line":1183,"column":4},"end":{"line":1183,"column":67}},"564":{"start":{"line":1184,"column":4},"end":{"line":1186,"column":5}},"565":{"start":{"line":1185,"column":6},"end":{"line":1185,"column":18}},"566":{"start":{"line":1188,"column":4},"end":{"line":1188,"column":94}},"567":{"start":{"line":1189,"column":4},"end":{"line":1189,"column":38}},"568":{"start":{"line":1190,"column":4},"end":{"line":1190,"column":28}},"569":{"start":{"line":1192,"column":4},"end":{"line":1192,"column":17}},"570":{"start":{"line":1202,"column":2},"end":{"line":1209,"column":4}},"571":{"start":{"line":1203,"column":4},"end":{"line":1208,"column":6}},"572":{"start":{"line":1211,"column":2},"end":{"line":1211,"column":25}},"573":{"start":{"line":1214,"column":0},"end":{"line":1279,"column":1}},"574":{"start":{"line":1215,"column":2},"end":{"line":1215,"column":189}},"575":{"start":{"line":1216,"column":2},"end":{"line":1216,"column":31}},"576":{"start":{"line":1217,"column":2},"end":{"line":1217,"column":28}},"577":{"start":{"line":1218,"column":2},"end":{"line":1277,"column":11}},"578":{"start":{"line":1219,"column":4},"end":{"line":1219,"column":27}},"579":{"start":{"line":1220,"column":9},"end":{"line":1277,"column":11}},"580":{"start":{"line":1221,"column":4},"end":{"line":1221,"column":30}},"581":{"start":{"line":1222,"column":9},"end":{"line":1277,"column":11}},"582":{"start":{"line":1225,"column":4},"end":{"line":1225,"column":80}},"583":{"start":{"line":1226,"column":4},"end":{"line":1232,"column":5}},"584":{"start":{"line":1227,"column":6},"end":{"line":1231,"column":9}},"585":{"start":{"line":1233,"column":4},"end":{"line":1233,"column":16}},"586":{"start":{"line":1234,"column":9},"end":{"line":1277,"column":11}},"587":{"start":{"line":1235,"column":4},"end":{"line":1235,"column":107}},"588":{"start":{"line":1236,"column":4},"end":{"line":1236,"column":40}},"589":{"start":{"line":1237,"column":4},"end":{"line":1237,"column":46}},"590":{"start":{"line":1238,"column":4},"end":{"line":1238,"column":128}},"591":{"start":{"line":1239,"column":4},"end":{"line":1243,"column":7}},"592":{"start":{"line":1244,"column":9},"end":{"line":1277,"column":11}},"593":{"start":{"line":1245,"column":4},"end":{"line":1245,"column":26}},"594":{"start":{"line":1246,"column":9},"end":{"line":1277,"column":11}},"595":{"start":{"line":1247,"column":4},"end":{"line":1247,"column":30}},"596":{"start":{"line":1248,"column":9},"end":{"line":1277,"column":11}},"597":{"start":{"line":1249,"column":4},"end":{"line":1249,"column":34}},"598":{"start":{"line":1250,"column":9},"end":{"line":1277,"column":11}},"599":{"start":{"line":1251,"column":4},"end":{"line":1251,"column":75}},"600":{"start":{"line":1252,"column":4},"end":{"line":1252,"column":64}},"601":{"start":{"line":1254,"column":4},"end":{"line":1262,"column":5}},"602":{"start":{"line":1257,"column":6},"end":{"line":1259,"column":9}},"603":{"start":{"line":1258,"column":8},"end":{"line":1258,"column":56}},"604":{"start":{"line":1260,"column":11},"end":{"line":1262,"column":5}},"605":{"start":{"line":1261,"column":6},"end":{"line":1261,"column":59}},"606":{"start":{"line":1263,"column":4},"end":{"line":1263,"column":16}},"607":{"start":{"line":1264,"column":9},"end":{"line":1277,"column":11}},"608":{"start":{"line":1265,"column":4},"end":{"line":1265,"column":57}},"609":{"start":{"line":1266,"column":4},"end":{"line":1266,"column":76}},"610":{"start":{"line":1267,"column":4},"end":{"line":1267,"column":78}},"611":{"start":{"line":1268,"column":4},"end":{"line":1275,"column":5}},"612":{"start":{"line":1270,"column":6},"end":{"line":1274,"column":9}},"613":{"start":{"line":1276,"column":4},"end":{"line":1276,"column":16}},"614":{"start":{"line":1278,"column":2},"end":{"line":1278,"column":56}},"615":{"start":{"line":1285,"column":0},"end":{"line":1295,"column":1}},"616":{"start":{"line":1286,"column":2},"end":{"line":1286,"column":134}},"617":{"start":{"line":1287,"column":2},"end":{"line":1287,"column":53}},"618":{"start":{"line":1288,"column":2},"end":{"line":1288,"column":55}},"619":{"start":{"line":1289,"column":2},"end":{"line":1293,"column":3}},"620":{"start":{"line":1290,"column":4},"end":{"line":1290,"column":90}},"621":{"start":{"line":1291,"column":4},"end":{"line":1291,"column":51}},"622":{"start":{"line":1292,"column":4},"end":{"line":1292,"column":45}},"623":{"start":{"line":1294,"column":2},"end":{"line":1294,"column":18}},"624":{"start":{"line":1302,"column":0},"end":{"line":1320,"column":1}},"625":{"start":{"line":1303,"column":2},"end":{"line":1303,"column":20}},"626":{"start":{"line":1304,"column":2},"end":{"line":1304,"column":28}},"627":{"start":{"line":1306,"column":2},"end":{"line":1306,"column":20}},"628":{"start":{"line":1307,"column":2},"end":{"line":1313,"column":3}},"629":{"start":{"line":1308,"column":4},"end":{"line":1308,"column":33}},"630":{"start":{"line":1309,"column":4},"end":{"line":1312,"column":5}},"631":{"start":{"line":1310,"column":6},"end":{"line":1310,"column":27}},"632":{"start":{"line":1311,"column":6},"end":{"line":1311,"column":77}},"633":{"start":{"line":1315,"column":2},"end":{"line":1319,"column":3}},"634":{"start":{"line":1316,"column":4},"end":{"line":1316,"column":24}},"635":{"start":{"line":1318,"column":4},"end":{"line":1318,"column":20}},"636":{"start":{"line":1325,"column":0},"end":{"line":1341,"column":1}},"637":{"start":{"line":1326,"column":2},"end":{"line":1340,"column":3}},"638":{"start":{"line":1327,"column":4},"end":{"line":1335,"column":8}},"639":{"start":{"line":1328,"column":6},"end":{"line":1328,"column":23}},"640":{"start":{"line":1329,"column":6},"end":{"line":1331,"column":9}},"641":{"start":{"line":1330,"column":8},"end":{"line":1330,"column":40}},"642":{"start":{"line":1332,"column":6},"end":{"line":1334,"column":8}},"643":{"start":{"line":1337,"column":4},"end":{"line":1337,"column":50}},"644":{"start":{"line":1337,"column":35},"end":{"line":1337,"column":50}},"645":{"start":{"line":1339,"column":4},"end":{"line":1339,"column":14}},"646":{"start":{"line":1348,"column":0},"end":{"line":1367,"column":1}},"647":{"start":{"line":1349,"column":2},"end":{"line":1351,"column":3}},"648":{"start":{"line":1350,"column":4},"end":{"line":1350,"column":17}},"649":{"start":{"line":1352,"column":2},"end":{"line":1366,"column":5}},"650":{"start":{"line":1353,"column":4},"end":{"line":1354,"column":32}},"651":{"start":{"line":1355,"column":4},"end":{"line":1357,"column":40}},"652":{"start":{"line":1359,"column":4},"end":{"line":1361,"column":5}},"653":{"start":{"line":1360,"column":6},"end":{"line":1360,"column":19}},"654":{"start":{"line":1362,"column":4},"end":{"line":1364,"column":5}},"655":{"start":{"line":1363,"column":6},"end":{"line":1363,"column":41}},"656":{"start":{"line":1365,"column":4},"end":{"line":1365,"column":62}},"657":{"start":{"line":1369,"column":0},"end":{"line":1374,"column":1}},"658":{"start":{"line":1370,"column":2},"end":{"line":1373,"column":4}},"659":{"start":{"line":1376,"column":0},"end":{"line":1383,"column":3}},"660":{"start":{"line":1385,"column":0},"end":{"line":1388,"column":3}},"661":{"start":{"line":1390,"column":0},"end":{"line":1398,"column":2}}},"branchMap":{"1":{"line":27,"type":"cond-expr","locations":[{"start":{"line":27,"column":70},"end":{"line":27,"column":73}},{"start":{"line":27,"column":76},"end":{"line":27,"column":94}}]},"2":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":46},"end":{"line":27,"column":49}},{"start":{"line":27,"column":53},"end":{"line":27,"column":67}}]},"3":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":0},"end":{"line":49,"column":0}},{"start":{"line":49,"column":0},"end":{"line":49,"column":0}}]},"4":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":4},"end":{"line":133,"column":4}},{"start":{"line":133,"column":4},"end":{"line":133,"column":4}}]},"5":{"line":135,"type":"cond-expr","locations":[{"start":{"line":135,"column":208},"end":{"line":135,"column":228}},{"start":{"line":135,"column":231},"end":{"line":135,"column":235}}]},"6":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":4},"end":{"line":142,"column":4}},{"start":{"line":142,"column":4},"end":{"line":142,"column":4}}]},"7":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":11},"end":{"line":144,"column":11}},{"start":{"line":144,"column":11},"end":{"line":144,"column":11}}]},"8":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":4},"end":{"line":161,"column":4}},{"start":{"line":161,"column":4},"end":{"line":161,"column":4}}]},"9":{"line":165,"type":"if","locations":[{"start":{"line":165,"column":8},"end":{"line":165,"column":8}},{"start":{"line":165,"column":8},"end":{"line":165,"column":8}}]},"10":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":12},"end":{"line":167,"column":12}},{"start":{"line":167,"column":12},"end":{"line":167,"column":12}}]},"11":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":12},"end":{"line":171,"column":12}},{"start":{"line":171,"column":12},"end":{"line":171,"column":12}}]},"12":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":16},"end":{"line":173,"column":16}},{"start":{"line":173,"column":16},"end":{"line":173,"column":16}}]},"13":{"line":173,"type":"binary-expr","locations":[{"start":{"line":173,"column":20},"end":{"line":173,"column":24}},{"start":{"line":173,"column":28},"end":{"line":173,"column":45}}]},"14":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":19},"end":{"line":177,"column":19}},{"start":{"line":177,"column":19},"end":{"line":177,"column":19}}]},"15":{"line":177,"type":"binary-expr","locations":[{"start":{"line":177,"column":23},"end":{"line":177,"column":34}},{"start":{"line":177,"column":38},"end":{"line":177,"column":62}}]},"16":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":4},"end":{"line":191,"column":4}},{"start":{"line":191,"column":4},"end":{"line":191,"column":4}}]},"17":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":6},"end":{"line":195,"column":6}},{"start":{"line":195,"column":6},"end":{"line":195,"column":6}}]},"18":{"line":197,"type":"binary-expr","locations":[{"start":{"line":197,"column":17},"end":{"line":197,"column":32}},{"start":{"line":197,"column":36},"end":{"line":197,"column":47}}]},"19":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":13},"end":{"line":199,"column":13}},{"start":{"line":199,"column":13},"end":{"line":199,"column":13}}]},"20":{"line":201,"type":"binary-expr","locations":[{"start":{"line":201,"column":17},"end":{"line":201,"column":32}},{"start":{"line":201,"column":36},"end":{"line":201,"column":46}}]},"21":{"line":212,"type":"if","locations":[{"start":{"line":212,"column":4},"end":{"line":212,"column":4}},{"start":{"line":212,"column":4},"end":{"line":212,"column":4}}]},"22":{"line":229,"type":"if","locations":[{"start":{"line":229,"column":4},"end":{"line":229,"column":4}},{"start":{"line":229,"column":4},"end":{"line":229,"column":4}}]},"23":{"line":234,"type":"if","locations":[{"start":{"line":234,"column":8},"end":{"line":234,"column":8}},{"start":{"line":234,"column":8},"end":{"line":234,"column":8}}]},"24":{"line":257,"type":"if","locations":[{"start":{"line":257,"column":4},"end":{"line":257,"column":4}},{"start":{"line":257,"column":4},"end":{"line":257,"column":4}}]},"25":{"line":258,"type":"binary-expr","locations":[{"start":{"line":258,"column":30},"end":{"line":258,"column":57}},{"start":{"line":258,"column":61},"end":{"line":260,"column":8}}]},"26":{"line":283,"type":"binary-expr","locations":[{"start":{"line":283,"column":11},"end":{"line":283,"column":40}},{"start":{"line":283,"column":44},"end":{"line":283,"column":87}},{"start":{"line":283,"column":91},"end":{"line":285,"column":6}}]},"27":{"line":301,"type":"binary-expr","locations":[{"start":{"line":301,"column":11},"end":{"line":301,"column":58}},{"start":{"line":301,"column":62},"end":{"line":301,"column":113}},{"start":{"line":301,"column":117},"end":{"line":301,"column":199}},{"start":{"line":301,"column":203},"end":{"line":301,"column":275}}]},"28":{"line":330,"type":"cond-expr","locations":[{"start":{"line":330,"column":34},"end":{"line":332,"column":6}},{"start":{"line":332,"column":9},"end":{"line":332,"column":11}}]},"29":{"line":335,"type":"if","locations":[{"start":{"line":335,"column":4},"end":{"line":335,"column":4}},{"start":{"line":335,"column":4},"end":{"line":335,"column":4}}]},"30":{"line":337,"type":"if","locations":[{"start":{"line":337,"column":11},"end":{"line":337,"column":11}},{"start":{"line":337,"column":11},"end":{"line":337,"column":11}}]},"31":{"line":339,"type":"if","locations":[{"start":{"line":339,"column":11},"end":{"line":339,"column":11}},{"start":{"line":339,"column":11},"end":{"line":339,"column":11}}]},"32":{"line":350,"type":"binary-expr","locations":[{"start":{"line":350,"column":52},"end":{"line":350,"column":61}},{"start":{"line":350,"column":65},"end":{"line":350,"column":78}}]},"33":{"line":385,"type":"if","locations":[{"start":{"line":385,"column":4},"end":{"line":385,"column":4}},{"start":{"line":385,"column":4},"end":{"line":385,"column":4}}]},"34":{"line":394,"type":"if","locations":[{"start":{"line":394,"column":4},"end":{"line":394,"column":4}},{"start":{"line":394,"column":4},"end":{"line":394,"column":4}}]},"35":{"line":403,"type":"if","locations":[{"start":{"line":403,"column":4},"end":{"line":403,"column":4}},{"start":{"line":403,"column":4},"end":{"line":403,"column":4}}]},"36":{"line":405,"type":"if","locations":[{"start":{"line":405,"column":6},"end":{"line":405,"column":6}},{"start":{"line":405,"column":6},"end":{"line":405,"column":6}}]},"37":{"line":406,"type":"binary-expr","locations":[{"start":{"line":406,"column":22},"end":{"line":406,"column":38}},{"start":{"line":406,"column":42},"end":{"line":406,"column":64}}]},"38":{"line":407,"type":"if","locations":[{"start":{"line":407,"column":8},"end":{"line":407,"column":8}},{"start":{"line":407,"column":8},"end":{"line":407,"column":8}}]},"39":{"line":407,"type":"binary-expr","locations":[{"start":{"line":407,"column":12},"end":{"line":407,"column":27}},{"start":{"line":407,"column":31},"end":{"line":407,"column":54}},{"start":{"line":407,"column":58},"end":{"line":407,"column":94}}]},"40":{"line":415,"type":"binary-expr","locations":[{"start":{"line":415,"column":18},"end":{"line":415,"column":27}},{"start":{"line":415,"column":31},"end":{"line":415,"column":35}}]},"41":{"line":423,"type":"if","locations":[{"start":{"line":423,"column":4},"end":{"line":423,"column":4}},{"start":{"line":423,"column":4},"end":{"line":423,"column":4}}]},"42":{"line":425,"type":"if","locations":[{"start":{"line":425,"column":6},"end":{"line":425,"column":6}},{"start":{"line":425,"column":6},"end":{"line":425,"column":6}}]},"43":{"line":443,"type":"if","locations":[{"start":{"line":443,"column":4},"end":{"line":443,"column":4}},{"start":{"line":443,"column":4},"end":{"line":443,"column":4}}]},"44":{"line":447,"type":"if","locations":[{"start":{"line":447,"column":8},"end":{"line":447,"column":8}},{"start":{"line":447,"column":8},"end":{"line":447,"column":8}}]},"45":{"line":451,"type":"if","locations":[{"start":{"line":451,"column":10},"end":{"line":451,"column":10}},{"start":{"line":451,"column":10},"end":{"line":451,"column":10}}]},"46":{"line":451,"type":"binary-expr","locations":[{"start":{"line":451,"column":14},"end":{"line":451,"column":28}},{"start":{"line":451,"column":32},"end":{"line":451,"column":67}}]},"47":{"line":465,"type":"if","locations":[{"start":{"line":465,"column":4},"end":{"line":465,"column":4}},{"start":{"line":465,"column":4},"end":{"line":465,"column":4}}]},"48":{"line":469,"type":"if","locations":[{"start":{"line":469,"column":8},"end":{"line":469,"column":8}},{"start":{"line":469,"column":8},"end":{"line":469,"column":8}}]},"49":{"line":487,"type":"binary-expr","locations":[{"start":{"line":487,"column":11},"end":{"line":487,"column":28}},{"start":{"line":487,"column":32},"end":{"line":487,"column":90}}]},"50":{"line":503,"type":"if","locations":[{"start":{"line":503,"column":4},"end":{"line":503,"column":4}},{"start":{"line":503,"column":4},"end":{"line":503,"column":4}}]},"51":{"line":514,"type":"if","locations":[{"start":{"line":514,"column":4},"end":{"line":514,"column":4}},{"start":{"line":514,"column":4},"end":{"line":514,"column":4}}]},"52":{"line":517,"type":"if","locations":[{"start":{"line":517,"column":4},"end":{"line":517,"column":4}},{"start":{"line":517,"column":4},"end":{"line":517,"column":4}}]},"53":{"line":520,"type":"if","locations":[{"start":{"line":520,"column":4},"end":{"line":520,"column":4}},{"start":{"line":520,"column":4},"end":{"line":520,"column":4}}]},"54":{"line":523,"type":"if","locations":[{"start":{"line":523,"column":4},"end":{"line":523,"column":4}},{"start":{"line":523,"column":4},"end":{"line":523,"column":4}}]},"55":{"line":523,"type":"binary-expr","locations":[{"start":{"line":523,"column":8},"end":{"line":523,"column":51}},{"start":{"line":523,"column":55},"end":{"line":523,"column":128}}]},"56":{"line":575,"type":"if","locations":[{"start":{"line":575,"column":4},"end":{"line":575,"column":4}},{"start":{"line":575,"column":4},"end":{"line":575,"column":4}}]},"57":{"line":577,"type":"if","locations":[{"start":{"line":577,"column":6},"end":{"line":577,"column":6}},{"start":{"line":577,"column":6},"end":{"line":577,"column":6}}]},"58":{"line":588,"type":"if","locations":[{"start":{"line":588,"column":4},"end":{"line":588,"column":4}},{"start":{"line":588,"column":4},"end":{"line":588,"column":4}}]},"59":{"line":590,"type":"binary-expr","locations":[{"start":{"line":590,"column":25},"end":{"line":590,"column":38}},{"start":{"line":590,"column":42},"end":{"line":590,"column":107}}]},"60":{"line":630,"type":"cond-expr","locations":[{"start":{"line":630,"column":34},"end":{"line":632,"column":6}},{"start":{"line":632,"column":9},"end":{"line":632,"column":11}}]},"61":{"line":639,"type":"binary-expr","locations":[{"start":{"line":639,"column":29},"end":{"line":639,"column":38}},{"start":{"line":639,"column":42},"end":{"line":639,"column":44}}]},"62":{"line":640,"type":"binary-expr","locations":[{"start":{"line":640,"column":52},"end":{"line":640,"column":61}},{"start":{"line":640,"column":65},"end":{"line":640,"column":78}}]},"63":{"line":648,"type":"if","locations":[{"start":{"line":648,"column":4},"end":{"line":648,"column":4}},{"start":{"line":648,"column":4},"end":{"line":648,"column":4}}]},"64":{"line":651,"type":"if","locations":[{"start":{"line":651,"column":4},"end":{"line":651,"column":4}},{"start":{"line":651,"column":4},"end":{"line":651,"column":4}}]},"65":{"line":654,"type":"if","locations":[{"start":{"line":654,"column":4},"end":{"line":654,"column":4}},{"start":{"line":654,"column":4},"end":{"line":654,"column":4}}]},"66":{"line":657,"type":"if","locations":[{"start":{"line":657,"column":4},"end":{"line":657,"column":4}},{"start":{"line":657,"column":4},"end":{"line":657,"column":4}}]},"67":{"line":693,"type":"if","locations":[{"start":{"line":693,"column":4},"end":{"line":693,"column":4}},{"start":{"line":693,"column":4},"end":{"line":693,"column":4}}]},"68":{"line":696,"type":"if","locations":[{"start":{"line":696,"column":4},"end":{"line":696,"column":4}},{"start":{"line":696,"column":4},"end":{"line":696,"column":4}}]},"69":{"line":699,"type":"if","locations":[{"start":{"line":699,"column":4},"end":{"line":699,"column":4}},{"start":{"line":699,"column":4},"end":{"line":699,"column":4}}]},"70":{"line":702,"type":"if","locations":[{"start":{"line":702,"column":4},"end":{"line":702,"column":4}},{"start":{"line":702,"column":4},"end":{"line":702,"column":4}}]},"71":{"line":729,"type":"cond-expr","locations":[{"start":{"line":729,"column":34},"end":{"line":731,"column":6}},{"start":{"line":731,"column":9},"end":{"line":731,"column":11}}]},"72":{"line":739,"type":"binary-expr","locations":[{"start":{"line":739,"column":52},"end":{"line":739,"column":61}},{"start":{"line":739,"column":65},"end":{"line":739,"column":78}}]},"73":{"line":742,"type":"binary-expr","locations":[{"start":{"line":742,"column":21},"end":{"line":742,"column":29}},{"start":{"line":742,"column":33},"end":{"line":742,"column":52}}]},"74":{"line":743,"type":"binary-expr","locations":[{"start":{"line":743,"column":30},"end":{"line":743,"column":38}},{"start":{"line":743,"column":42},"end":{"line":743,"column":70}}]},"75":{"line":744,"type":"binary-expr","locations":[{"start":{"line":744,"column":28},"end":{"line":744,"column":36}},{"start":{"line":744,"column":40},"end":{"line":744,"column":66}}]},"76":{"line":754,"type":"binary-expr","locations":[{"start":{"line":754,"column":68},"end":{"line":754,"column":76}},{"start":{"line":754,"column":80},"end":{"line":754,"column":105}}]},"77":{"line":763,"type":"binary-expr","locations":[{"start":{"line":763,"column":26},"end":{"line":763,"column":34}},{"start":{"line":763,"column":38},"end":{"line":763,"column":63}}]},"78":{"line":799,"type":"if","locations":[{"start":{"line":799,"column":4},"end":{"line":799,"column":4}},{"start":{"line":799,"column":4},"end":{"line":799,"column":4}}]},"79":{"line":826,"type":"binary-expr","locations":[{"start":{"line":826,"column":4},"end":{"line":826,"column":21}},{"start":{"line":826,"column":25},"end":{"line":826,"column":40}}]},"80":{"line":847,"type":"binary-expr","locations":[{"start":{"line":847,"column":11},"end":{"line":847,"column":28}},{"start":{"line":847,"column":32},"end":{"line":847,"column":91}}]},"81":{"line":852,"type":"if","locations":[{"start":{"line":852,"column":4},"end":{"line":852,"column":4}},{"start":{"line":852,"column":4},"end":{"line":852,"column":4}}]},"82":{"line":852,"type":"binary-expr","locations":[{"start":{"line":852,"column":8},"end":{"line":852,"column":22}},{"start":{"line":852,"column":26},"end":{"line":852,"column":61}}]},"83":{"line":867,"type":"if","locations":[{"start":{"line":867,"column":4},"end":{"line":867,"column":4}},{"start":{"line":867,"column":4},"end":{"line":867,"column":4}}]},"84":{"line":870,"type":"if","locations":[{"start":{"line":870,"column":4},"end":{"line":870,"column":4}},{"start":{"line":870,"column":4},"end":{"line":870,"column":4}}]},"85":{"line":873,"type":"if","locations":[{"start":{"line":873,"column":4},"end":{"line":873,"column":4}},{"start":{"line":873,"column":4},"end":{"line":873,"column":4}}]},"86":{"line":915,"type":"cond-expr","locations":[{"start":{"line":915,"column":34},"end":{"line":917,"column":6}},{"start":{"line":917,"column":9},"end":{"line":917,"column":11}}]},"87":{"line":920,"type":"cond-expr","locations":[{"start":{"line":920,"column":21},"end":{"line":920,"column":55}},{"start":{"line":920,"column":58},"end":{"line":920,"column":62}}]},"88":{"line":921,"type":"cond-expr","locations":[{"start":{"line":921,"column":31},"end":{"line":921,"column":75}},{"start":{"line":921,"column":78},"end":{"line":921,"column":82}}]},"89":{"line":927,"type":"binary-expr","locations":[{"start":{"line":927,"column":52},"end":{"line":927,"column":61}},{"start":{"line":927,"column":65},"end":{"line":927,"column":78}}]},"90":{"line":986,"type":"if","locations":[{"start":{"line":986,"column":4},"end":{"line":986,"column":4}},{"start":{"line":986,"column":4},"end":{"line":986,"column":4}}]},"91":{"line":991,"type":"if","locations":[{"start":{"line":991,"column":10},"end":{"line":991,"column":10}},{"start":{"line":991,"column":10},"end":{"line":991,"column":10}}]},"92":{"line":992,"type":"binary-expr","locations":[{"start":{"line":992,"column":30},"end":{"line":992,"column":45}},{"start":{"line":992,"column":49},"end":{"line":992,"column":51}}]},"93":{"line":996,"type":"if","locations":[{"start":{"line":996,"column":8},"end":{"line":996,"column":8}},{"start":{"line":996,"column":8},"end":{"line":996,"column":8}}]},"94":{"line":1029,"type":"if","locations":[{"start":{"line":1029,"column":4},"end":{"line":1029,"column":4}},{"start":{"line":1029,"column":4},"end":{"line":1029,"column":4}}]},"95":{"line":1054,"type":"if","locations":[{"start":{"line":1054,"column":4},"end":{"line":1054,"column":4}},{"start":{"line":1054,"column":4},"end":{"line":1054,"column":4}}]},"96":{"line":1057,"type":"if","locations":[{"start":{"line":1057,"column":6},"end":{"line":1057,"column":6}},{"start":{"line":1057,"column":6},"end":{"line":1057,"column":6}}]},"97":{"line":1059,"type":"if","locations":[{"start":{"line":1059,"column":8},"end":{"line":1059,"column":8}},{"start":{"line":1059,"column":8},"end":{"line":1059,"column":8}}]},"98":{"line":1077,"type":"if","locations":[{"start":{"line":1077,"column":4},"end":{"line":1077,"column":4}},{"start":{"line":1077,"column":4},"end":{"line":1077,"column":4}}]},"99":{"line":1100,"type":"if","locations":[{"start":{"line":1100,"column":4},"end":{"line":1100,"column":4}},{"start":{"line":1100,"column":4},"end":{"line":1100,"column":4}}]},"100":{"line":1116,"type":"binary-expr","locations":[{"start":{"line":1116,"column":11},"end":{"line":1116,"column":29}},{"start":{"line":1116,"column":33},"end":{"line":1116,"column":55}}]},"101":{"line":1129,"type":"if","locations":[{"start":{"line":1129,"column":4},"end":{"line":1129,"column":4}},{"start":{"line":1129,"column":4},"end":{"line":1129,"column":4}}]},"102":{"line":1131,"type":"if","locations":[{"start":{"line":1131,"column":6},"end":{"line":1131,"column":6}},{"start":{"line":1131,"column":6},"end":{"line":1131,"column":6}}]},"103":{"line":1143,"type":"binary-expr","locations":[{"start":{"line":1143,"column":23},"end":{"line":1143,"column":36}},{"start":{"line":1143,"column":40},"end":{"line":1145,"column":9}}]},"104":{"line":1146,"type":"if","locations":[{"start":{"line":1146,"column":4},"end":{"line":1146,"column":4}},{"start":{"line":1146,"column":4},"end":{"line":1146,"column":4}}]},"105":{"line":1152,"type":"if","locations":[{"start":{"line":1152,"column":4},"end":{"line":1152,"column":4}},{"start":{"line":1152,"column":4},"end":{"line":1152,"column":4}}]},"106":{"line":1155,"type":"if","locations":[{"start":{"line":1155,"column":4},"end":{"line":1155,"column":4}},{"start":{"line":1155,"column":4},"end":{"line":1155,"column":4}}]},"107":{"line":1158,"type":"if","locations":[{"start":{"line":1158,"column":4},"end":{"line":1158,"column":4}},{"start":{"line":1158,"column":4},"end":{"line":1158,"column":4}}]},"108":{"line":1158,"type":"binary-expr","locations":[{"start":{"line":1158,"column":8},"end":{"line":1158,"column":53}},{"start":{"line":1158,"column":57},"end":{"line":1158,"column":112}},{"start":{"line":1158,"column":116},"end":{"line":1158,"column":189}}]},"109":{"line":1172,"type":"if","locations":[{"start":{"line":1172,"column":4},"end":{"line":1172,"column":4}},{"start":{"line":1172,"column":4},"end":{"line":1172,"column":4}}]},"110":{"line":1178,"type":"if","locations":[{"start":{"line":1178,"column":4},"end":{"line":1178,"column":4}},{"start":{"line":1178,"column":4},"end":{"line":1178,"column":4}}]},"111":{"line":1184,"type":"if","locations":[{"start":{"line":1184,"column":4},"end":{"line":1184,"column":4}},{"start":{"line":1184,"column":4},"end":{"line":1184,"column":4}}]},"112":{"line":1205,"type":"binary-expr","locations":[{"start":{"line":1205,"column":6},"end":{"line":1205,"column":54}},{"start":{"line":1205,"column":58},"end":{"line":1205,"column":111}},{"start":{"line":1207,"column":6},"end":{"line":1207,"column":91}}]},"113":{"line":1205,"type":"binary-expr","locations":[{"start":{"line":1205,"column":8},"end":{"line":1205,"column":23}},{"start":{"line":1205,"column":27},"end":{"line":1205,"column":53}}]},"114":{"line":1205,"type":"binary-expr","locations":[{"start":{"line":1205,"column":60},"end":{"line":1205,"column":79}},{"start":{"line":1205,"column":83},"end":{"line":1205,"column":110}}]},"115":{"line":1207,"type":"binary-expr","locations":[{"start":{"line":1207,"column":8},"end":{"line":1207,"column":27}},{"start":{"line":1207,"column":31},"end":{"line":1207,"column":90}}]},"116":{"line":1215,"type":"binary-expr","locations":[{"start":{"line":1215,"column":32},"end":{"line":1215,"column":64}},{"start":{"line":1215,"column":68},"end":{"line":1215,"column":89}}]},"117":{"line":1218,"type":"if","locations":[{"start":{"line":1218,"column":2},"end":{"line":1218,"column":2}},{"start":{"line":1218,"column":2},"end":{"line":1218,"column":2}}]},"118":{"line":1220,"type":"if","locations":[{"start":{"line":1220,"column":9},"end":{"line":1220,"column":9}},{"start":{"line":1220,"column":9},"end":{"line":1220,"column":9}}]},"119":{"line":1222,"type":"if","locations":[{"start":{"line":1222,"column":9},"end":{"line":1222,"column":9}},{"start":{"line":1222,"column":9},"end":{"line":1222,"column":9}}]},"120":{"line":1226,"type":"if","locations":[{"start":{"line":1226,"column":4},"end":{"line":1226,"column":4}},{"start":{"line":1226,"column":4},"end":{"line":1226,"column":4}}]},"121":{"line":1234,"type":"if","locations":[{"start":{"line":1234,"column":9},"end":{"line":1234,"column":9}},{"start":{"line":1234,"column":9},"end":{"line":1234,"column":9}}]},"122":{"line":1244,"type":"if","locations":[{"start":{"line":1244,"column":9},"end":{"line":1244,"column":9}},{"start":{"line":1244,"column":9},"end":{"line":1244,"column":9}}]},"123":{"line":1246,"type":"if","locations":[{"start":{"line":1246,"column":9},"end":{"line":1246,"column":9}},{"start":{"line":1246,"column":9},"end":{"line":1246,"column":9}}]},"124":{"line":1248,"type":"if","locations":[{"start":{"line":1248,"column":9},"end":{"line":1248,"column":9}},{"start":{"line":1248,"column":9},"end":{"line":1248,"column":9}}]},"125":{"line":1250,"type":"if","locations":[{"start":{"line":1250,"column":9},"end":{"line":1250,"column":9}},{"start":{"line":1250,"column":9},"end":{"line":1250,"column":9}}]},"126":{"line":1254,"type":"if","locations":[{"start":{"line":1254,"column":4},"end":{"line":1254,"column":4}},{"start":{"line":1254,"column":4},"end":{"line":1254,"column":4}}]},"127":{"line":1260,"type":"if","locations":[{"start":{"line":1260,"column":11},"end":{"line":1260,"column":11}},{"start":{"line":1260,"column":11},"end":{"line":1260,"column":11}}]},"128":{"line":1264,"type":"if","locations":[{"start":{"line":1264,"column":9},"end":{"line":1264,"column":9}},{"start":{"line":1264,"column":9},"end":{"line":1264,"column":9}}]},"129":{"line":1268,"type":"if","locations":[{"start":{"line":1268,"column":4},"end":{"line":1268,"column":4}},{"start":{"line":1268,"column":4},"end":{"line":1268,"column":4}}]},"130":{"line":1289,"type":"if","locations":[{"start":{"line":1289,"column":2},"end":{"line":1289,"column":2}},{"start":{"line":1289,"column":2},"end":{"line":1289,"column":2}}]},"131":{"line":1289,"type":"binary-expr","locations":[{"start":{"line":1289,"column":6},"end":{"line":1289,"column":15}},{"start":{"line":1289,"column":19},"end":{"line":1289,"column":48}}]},"132":{"line":1309,"type":"if","locations":[{"start":{"line":1309,"column":4},"end":{"line":1309,"column":4}},{"start":{"line":1309,"column":4},"end":{"line":1309,"column":4}}]},"133":{"line":1311,"type":"binary-expr","locations":[{"start":{"line":1311,"column":23},"end":{"line":1311,"column":37}},{"start":{"line":1311,"column":41},"end":{"line":1311,"column":76}}]},"134":{"line":1315,"type":"if","locations":[{"start":{"line":1315,"column":2},"end":{"line":1315,"column":2}},{"start":{"line":1315,"column":2},"end":{"line":1315,"column":2}}]},"135":{"line":1315,"type":"binary-expr","locations":[{"start":{"line":1315,"column":6},"end":{"line":1315,"column":20}},{"start":{"line":1315,"column":24},"end":{"line":1315,"column":63}}]},"136":{"line":1326,"type":"if","locations":[{"start":{"line":1326,"column":2},"end":{"line":1326,"column":2}},{"start":{"line":1326,"column":2},"end":{"line":1326,"column":2}}]},"137":{"line":1337,"type":"if","locations":[{"start":{"line":1337,"column":4},"end":{"line":1337,"column":4}},{"start":{"line":1337,"column":4},"end":{"line":1337,"column":4}}]},"138":{"line":1349,"type":"if","locations":[{"start":{"line":1349,"column":2},"end":{"line":1349,"column":2}},{"start":{"line":1349,"column":2},"end":{"line":1349,"column":2}}]},"139":{"line":1359,"type":"if","locations":[{"start":{"line":1359,"column":4},"end":{"line":1359,"column":4}},{"start":{"line":1359,"column":4},"end":{"line":1359,"column":4}}]},"140":{"line":1362,"type":"if","locations":[{"start":{"line":1362,"column":4},"end":{"line":1362,"column":4}},{"start":{"line":1362,"column":4},"end":{"line":1362,"column":4}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayQuery"," * "," */","","'use strict';","","/* eslint-disable consistent-this */","","var _extends3 = _interopRequireDefault(require('babel-runtime/helpers/extends'));","","var _possibleConstructorReturn3 = _interopRequireDefault(require('babel-runtime/helpers/possibleConstructorReturn'));","","var _inherits3 = _interopRequireDefault(require('babel-runtime/helpers/inherits'));","","var _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));","","var _freeze2 = _interopRequireDefault(require('babel-runtime/core-js/object/freeze'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","// conditional field calls/values","","// TODO: replace once #6525923 is resolved","var IF = 'if';","var UNLESS = 'unless';","var TRUE = 'true';","var FALSE = 'false';","var SKIP = 'skip';","var INCLUDE = 'include';","","var _nextQueryID = 0;","","var DEFAULT_FRAGMENT_METADATA = {","  isDeferred: false,","  isContainerFragment: false,","  isTypeConditional: false","};","var EMPTY_DIRECTIVES = [];","var EMPTY_CALLS = [];","","if (process.env.NODE_ENV !== 'production') {","  (0, _freeze2['default'])(EMPTY_CALLS);","  (0, _freeze2['default'])(EMPTY_DIRECTIVES);","}","","/**"," * A type representing information about the root node:"," * - routeName: The name of the route"," * - variables: The variables in scope at the root."," *"," * This allows route variables to passed down the tree and accessed by arbitrary"," * fragments."," */","","/**"," * @internal"," *"," * Queries in Relay are represented as trees. Possible nodes include the root,"," * fields, and fragments. Fields can have children, or they can be leaf nodes."," * Root and fragment nodes must always have children."," *"," * `RelayQueryNode` provides access to information such as the field name,"," * generated alias, sub-fields, and call values."," *"," * Nodes are immutable; query modification is supported via `clone`:"," *"," * ```"," * var next = prev.clone(prev.getChildren().filter(f => ...));"," * ```"," *"," * Note: Mediating access to actual query nodes is necessary so that we can"," * replace the current mutable GraphQL nodes with an immutable query"," * representation. This class *must not* mutate the underlying `concreteNode`."," * Instead, use an instance variable (see `clone()`)."," *"," * TODO (#6937314): RelayQueryNode support for toJSON/fromJSON"," */","var RelayQueryNode = function () {","  // for flow","  RelayQueryNode.create = function create(concreteNode, metaRoute, variables) {","    var rootContext = createRootContext(metaRoute, variables);","    var node = createNode(concreteNode, rootContext, variables);","    require('fbjs/lib/invariant')(node instanceof RelayQueryNode, 'RelayQueryNode.create(): ' + 'Expected a GraphQL fragment, mutation, or query.');","    return node;","  };","","  /**","   * @private","   *","   * Base class for all node types, must not be directly instantiated.","   */","","","  function RelayQueryNode(concreteNode, rootContext, variables) {","    (0, _classCallCheck3['default'])(this, RelayQueryNode);","","    require('fbjs/lib/invariant')(this.constructor.name !== 'RelayQueryNode', 'RelayQueryNode: Abstract class cannot be instantiated.');","    this.__concreteNode__ = concreteNode;","    this.__root__ = rootContext;","    this.__variables__ = variables;","","    // lazily computed properties","    this.__calls__ = null;","    this.__children__ = null;","    this.__fieldMap__ = null;","    this.__hasDeferredDescendant__ = null;","    this.__hasValidatedConnectionCalls__ = null;","    this.__serializationKey__ = null;","    this.__storageKey__ = null;","  }","","  RelayQueryNode.prototype.canHaveSubselections = function canHaveSubselections() {","    return true;","  };","","  RelayQueryNode.prototype.isGenerated = function isGenerated() {","    return false;","  };","","  RelayQueryNode.prototype.isRefQueryDependency = function isRefQueryDependency() {","    return false;","  };","","  RelayQueryNode.prototype.clone = function clone(children) {","    if (!this.canHaveSubselections()) {","      // Compact new children *after* this check, for consistency.","      require('fbjs/lib/invariant')(children.length === 0, 'RelayQueryNode: Cannot add children to field `%s` because it does ' + 'not support sub-selections (sub-fields).', this instanceof RelayQueryField ? this.getSchemaName() : null);","      return this;","    }","","    var prevChildren = this.getChildren();","    var nextChildren = cloneChildren(prevChildren, children);","","    if (!nextChildren.length) {","      return null;","    } else if (nextChildren === prevChildren) {","      return this;","    }","","    var clone = RelayQueryNode.create(this.__concreteNode__, require('./RelayMetaRoute').get(this.__root__.routeName), this.__variables__);","    clone.__children__ = nextChildren;","    clone.__calls__ = this.__calls__;","    clone.__serializationKey__ = this.__serializationKey__;","    clone.__storageKey__ = this.__storageKey__;","","    return clone;","  };","","  RelayQueryNode.prototype.getChildren = function getChildren() {","    var _this = this;","","    var children = this.__children__;","    if (!children) {","      (function () {","        var nextChildren = [];","        var concreteChildren = _this.__concreteNode__.children;","        if (concreteChildren) {","          concreteChildren.forEach(function (concreteChild) {","            if (concreteChild == null) {","              return;","            }","            var nodeOrNodes = createNode(concreteChild, _this.__root__, _this.__variables__);","            if (Array.isArray(nodeOrNodes)) {","              nodeOrNodes.forEach(function (node) {","                if (node && node.isIncluded()) {","                  nextChildren.push(node);","                }","              });","            } else if (nodeOrNodes && nodeOrNodes.isIncluded()) {","              nextChildren.push(nodeOrNodes);","            }","          });","        }","        _this.__children__ = nextChildren;","        children = nextChildren;","      })();","    }","    return children;","  };","","  RelayQueryNode.prototype.isIncluded = function isIncluded() {","    // Bail out early since most nodes won't have directives","    if (!this.__concreteNode__.directives) {","      return true;","    }","    return this.getDirectives().every(function (directive) {","      if (directive.name === SKIP) {","        return !directive.args.some(function (arg) {","          return arg.name === IF && !!arg.value;","        });","      } else if (directive.name === INCLUDE) {","        return !directive.args.some(function (arg) {","          return arg.name === IF && !arg.value;","        });","      }","      return true;","    });","  };","","  RelayQueryNode.prototype.getDirectives = function getDirectives() {","    var _this2 = this;","","    var concreteDirectives = this.__concreteNode__.directives;","    if (concreteDirectives) {","      return this.__concreteNode__.directives.map(function (directive) {","        return {","          args: require('./callsFromGraphQL')(directive.args, _this2.__variables__),","          name: directive.name","        };","      });","    }","    return EMPTY_DIRECTIVES;","  };","","  RelayQueryNode.prototype.getField = function getField(field) {","    return this.getFieldByStorageKey(field.getStorageKey());","  };","","  RelayQueryNode.prototype.getFieldByStorageKey = function getFieldByStorageKey(storageKey) {","    var fieldMap = this.__fieldMap__;","    if (!fieldMap) {","      fieldMap = {};","      var children = this.getChildren();","      for (var ii = 0; ii < children.length; ii++) {","        var child = children[ii];","        if (child instanceof RelayQueryField) {","          fieldMap[child.getStorageKey()] = child;","        }","      }","      this.__fieldMap__ = fieldMap;","    }","    return fieldMap[storageKey];","  };","","  RelayQueryNode.prototype.getType = function getType() {","    return this.__concreteNode__.type;","  };","","  RelayQueryNode.prototype.getRoute = function getRoute() {","    return require('./RelayMetaRoute').get(this.__root__.routeName);","  };","","  RelayQueryNode.prototype.getVariables = function getVariables() {","    return this.__variables__;","  };","","  RelayQueryNode.prototype.hasDeferredDescendant = function hasDeferredDescendant() {","    var hasDeferredDescendant = this.__hasDeferredDescendant__;","    if (hasDeferredDescendant == null) {","      hasDeferredDescendant = this.canHaveSubselections() && this.getChildren().some(function (child) {","        return child.hasDeferredDescendant();","      });","      this.__hasDeferredDescendant__ = hasDeferredDescendant;","    }","    return hasDeferredDescendant;","  };","","  RelayQueryNode.prototype.isAbstract = function isAbstract() {","    throw new Error('RelayQueryNode: Abstract function cannot be called.');","  };","","  RelayQueryNode.prototype.isRequisite = function isRequisite() {","    return false;","  };","","  /**","   * Determine if `this` and `that` are deeply equal.","   */","","","  RelayQueryNode.prototype.equals = function equals(that) {","    var thisChildren = this.getChildren();","    var thatChildren = that.getChildren();","","    return thisChildren === thatChildren || thisChildren.length === thatChildren.length && thisChildren.every(function (c, ii) {","      return c.equals(thatChildren[ii]);","    });","  };","","  /**","   * Performs a fast comparison of whether `this` and `that` represent identical","   * query nodes. Returns true only if the concrete nodes, routes, and variables","   * are all the same.","   *","   * Note that it is possible that this method can return false in cases where","   * `equals` would return true. This can happen when the concrete nodes are","   * different but structurally identical, or when the route/variables are","   * different but do not have an effect on the structure of the query.","   */","","","  RelayQueryNode.prototype.isEquivalent = function isEquivalent(that) {","    return this.__concreteNode__ === that.__concreteNode__ && this.__root__.routeName === that.__root__.routeName && require('fbjs/lib/shallowEqual')(this.__root__.variables, that.__root__.variables) && require('fbjs/lib/shallowEqual')(this.__variables__, that.__variables__);","  };","","  RelayQueryNode.prototype.createNode = function createNode(concreteNode) {","    return RelayQueryNode.create(concreteNode, require('./RelayMetaRoute').get(this.__root__.routeName), this.__variables__);","  };","","  RelayQueryNode.prototype.getConcreteQueryNode = function getConcreteQueryNode() {","    return this.__concreteNode__;","  };","","  return RelayQueryNode;","}();","","/**"," * @internal"," *"," * Wraps access to query root nodes."," */","","","var RelayQueryRoot = function (_RelayQueryNode) {","  (0, _inherits3['default'])(RelayQueryRoot, _RelayQueryNode);","","  /**","   * Helper to construct a new root query with the given attributes and 'empty'","   * route/variables.","   */","  RelayQueryRoot.build = function build(name, fieldName, value, children, metadata, type, routeName) {","    var nextChildren = children ? children.filter(function (child) {","      return !!child;","    }) : [];","    var batchCallVariable = require('./QueryBuilder').getBatchCallVariable(value);","    var identifyingArgValue = void 0;","    if (batchCallVariable) {","      identifyingArgValue = batchCallVariable;","    } else if (Array.isArray(value)) {","      identifyingArgValue = value.map(require('./QueryBuilder').createCallValue);","    } else if (value) {","      identifyingArgValue = require('./QueryBuilder').createCallValue(value);","    }","    var concreteRoot = require('./QueryBuilder').createQuery({","      fieldName: fieldName,","      identifyingArgValue: identifyingArgValue,","      metadata: metadata,","      name: name,","      type: type","    });","    var variables = {};","    var metaRoute = require('./RelayMetaRoute').get(routeName || '$RelayQuery');","    var rootContext = createRootContext(metaRoute, variables);","    var root = new RelayQueryRoot(concreteRoot, rootContext, variables);","    root.__children__ = nextChildren;","    return root;","  };","","  RelayQueryRoot.create = function create(concreteNode, metaRoute, variables) {","    var query = require('./QueryBuilder').getQuery(concreteNode);","    require('fbjs/lib/invariant')(query, 'RelayQueryRoot.create(): Expected a GraphQL `query { ... }`, got: %s', concreteNode);","    var rootContext = createRootContext(metaRoute, variables);","    return new RelayQueryRoot(query, rootContext, variables);","  };","","  function RelayQueryRoot(concreteNode, rootContext, variables) {","    (0, _classCallCheck3['default'])(this, RelayQueryRoot);","","    var _this3 = (0, _possibleConstructorReturn3['default'])(this, _RelayQueryNode.call(this, concreteNode, rootContext, variables));","","    _this3.__batchCall__ = undefined;","    _this3.__id__ = undefined;","    _this3.__identifyingArg__ = undefined;","    _this3.__storageKey__ = undefined;","","    // Ensure IDs are generated in the order that queries are created","    _this3.getID();","    return _this3;","  }","","  RelayQueryRoot.prototype.canHaveSubselections = function canHaveSubselections() {","    return true;","  };","","  RelayQueryRoot.prototype.getName = function getName() {","    var name = this.__concreteNode__.name;","    if (!name) {","      name = this.getID();","      this.__concreteNode__.name = name;","    }","    return name;","  };","","  RelayQueryRoot.prototype.getID = function getID() {","    var id = this.__id__;","    if (id == null) {","      id = 'q' + _nextQueryID++;","      this.__id__ = id;","    }","    return id;","  };","","  RelayQueryRoot.prototype.getBatchCall = function getBatchCall() {","    var batchCall = this.__batchCall__;","    if (batchCall === undefined) {","      var concreteCalls = this.__concreteNode__.calls;","      if (concreteCalls) {","        var callArg = concreteCalls[0] && concreteCalls[0].value;","        if (callArg != null && !Array.isArray(callArg) && callArg.kind === 'BatchCallVariable') {","          batchCall = {","            refParamName: 'ref_' + callArg.sourceQueryID,","            sourceQueryID: callArg.sourceQueryID,","            sourceQueryPath: callArg.jsonPath","          };","        }","      }","      batchCall = batchCall || null;","      this.__batchCall__ = batchCall;","    }","    return batchCall;","  };","","  RelayQueryRoot.prototype.getCallsWithValues = function getCallsWithValues() {","    var calls = this.__calls__;","    if (!calls) {","      var concreteCalls = this.__concreteNode__.calls;","      if (concreteCalls) {","        calls = require('./callsFromGraphQL')(concreteCalls, this.__variables__);","      } else {","        calls = EMPTY_CALLS;","      }","      this.__calls__ = calls;","    }","    return calls;","  };","","  RelayQueryRoot.prototype.getFieldName = function getFieldName() {","    return this.__concreteNode__.fieldName;","  };","","  RelayQueryRoot.prototype.getIdentifyingArg = function getIdentifyingArg() {","    var _this4 = this;","","    var identifyingArg = this.__identifyingArg__;","    if (!identifyingArg) {","      (function () {","        var metadata = _this4.__concreteNode__.metadata;","        var identifyingArgName = metadata.identifyingArgName;","        if (identifyingArgName != null) {","          identifyingArg = _this4.getCallsWithValues().find(function (c) {","            return c.name === identifyingArgName;","          });","          if (identifyingArg && metadata.identifyingArgType != null) {","            identifyingArg.type = metadata.identifyingArgType;","          }","          _this4.__identifyingArg__ = identifyingArg;","        }","      })();","    }","    return identifyingArg;","  };","","  RelayQueryRoot.prototype.getStorageKey = function getStorageKey() {","    var _this5 = this;","","    var storageKey = this.__storageKey__;","    if (!storageKey) {","      (function () {","        var args = _this5.getCallsWithValues();","        var identifyingArg = _this5.getIdentifyingArg();","        if (identifyingArg) {","          args = args.filter(function (arg) {","            return arg !== identifyingArg;","          });","        }","        var field = RelayQueryField.build({","          fieldName: _this5.getFieldName(),","          calls: args,","          type: _this5.getType()","        });","        storageKey = field.getStorageKey();","        _this5.__storageKey__ = storageKey;","      })();","    }","    return storageKey;","  };","","  RelayQueryRoot.prototype.hasDeferredDescendant = function hasDeferredDescendant() {","    return this.isDeferred() || _RelayQueryNode.prototype.hasDeferredDescendant.call(this);","  };","","  RelayQueryRoot.prototype.isAbstract = function isAbstract() {","    return !!this.__concreteNode__.metadata.isAbstract;","  };","","  RelayQueryRoot.prototype.isDeferred = function isDeferred() {","    return !!this.__concreteNode__.isDeferred;","  };","","  RelayQueryRoot.prototype.isPlural = function isPlural() {","    return !!this.__concreteNode__.metadata.isPlural;","  };","","  RelayQueryRoot.prototype.cloneWithRoute = function cloneWithRoute(children, metaRoute) {","    if (this.__root__.routeName === metaRoute.name) {","      return this.clone(children);","    }","    var clone = RelayQueryNode.create((0, _extends3['default'])({}, this.__concreteNode__, {","      name: metaRoute.name","    }), metaRoute, this.__variables__);","    clone.__children__ = children;","    return clone;","  };","","  RelayQueryRoot.prototype.equals = function equals(that) {","    if (this === that) {","      return true;","    }","    if (!(that instanceof RelayQueryRoot)) {","      return false;","    }","    if (!require('fbjs/lib/areEqual')(this.getBatchCall(), that.getBatchCall())) {","      return false;","    }","    if (this.getFieldName() !== that.getFieldName() || !areCallValuesEqual(this.getCallsWithValues(), that.getCallsWithValues())) {","      return false;","    }","    return _RelayQueryNode.prototype.equals.call(this, that);","  };","","  return RelayQueryRoot;","}(RelayQueryNode);","","/**"," * @internal"," *"," * Abstract base class for mutations and subscriptions."," */","","","var RelayQueryOperation = function (_RelayQueryNode2) {","  (0, _inherits3['default'])(RelayQueryOperation, _RelayQueryNode2);","","  function RelayQueryOperation(concreteNode, rootContext, variables) {","    (0, _classCallCheck3['default'])(this, RelayQueryOperation);","","    var _this6 = (0, _possibleConstructorReturn3['default'])(this, _RelayQueryNode2.call(this, concreteNode, rootContext, variables));","","    require('fbjs/lib/invariant')(_this6.constructor.name !== 'RelayQueryOperation', 'RelayQueryOperation: Abstract class cannot be instantiated.');","    return _this6;","  }","","  RelayQueryOperation.prototype.canHaveSubselections = function canHaveSubselections() {","    return true;","  };","","  RelayQueryOperation.prototype.getName = function getName() {","    return this.__concreteNode__.name;","  };","","  RelayQueryOperation.prototype.getResponseType = function getResponseType() {","    return this.__concreteNode__.responseType;","  };","","  RelayQueryOperation.prototype.getType = function getType() {","    return this.getResponseType();","  };","","  RelayQueryOperation.prototype.getInputType = function getInputType() {","    var inputType = this.__concreteNode__.metadata.inputType;","    require('fbjs/lib/invariant')(inputType, 'RelayQuery: Expected operation `%s` to be annotated with the type of ' + 'its argument. Either the babel transform was configured incorrectly, ' + 'or the schema failed to define an argument for this mutation.', this.getCall().name);","    return inputType;","  };","","  RelayQueryOperation.prototype.getCall = function getCall() {","    var calls = this.__calls__;","    if (!calls) {","      var concreteCalls = this.__concreteNode__.calls;","      if (concreteCalls) {","        calls = require('./callsFromGraphQL')(concreteCalls, this.__variables__);","      } else {","        calls = EMPTY_CALLS;","      }","      this.__calls__ = calls;","    }","    return calls[0];","  };","","  RelayQueryOperation.prototype.getCallVariableName = function getCallVariableName() {","    if (!this.__callVariableName__) {","      var concreteCalls = this.__concreteNode__.calls;","      var callVariable = concreteCalls && require('./QueryBuilder').getCallVariable(concreteCalls[0].value);","      require('fbjs/lib/invariant')(callVariable, 'RelayQuery: Expected mutation to have a single argument.');","      this.__callVariableName__ = callVariable.callVariableName;","    }","    return this.__callVariableName__;","  };","","  /**","   * Mutations and subscriptions must have a concrete type due to the need for","   * requisite top-level fields.","   */","","","  RelayQueryOperation.prototype.isAbstract = function isAbstract() {","    return false;","  };","","  return RelayQueryOperation;","}(RelayQueryNode);","","/**"," * @internal"," *"," * Represents a GraphQL mutation."," */","","","var RelayQueryMutation = function (_RelayQueryOperation) {","  (0, _inherits3['default'])(RelayQueryMutation, _RelayQueryOperation);","","  function RelayQueryMutation() {","    (0, _classCallCheck3['default'])(this, RelayQueryMutation);","    return (0, _possibleConstructorReturn3['default'])(this, _RelayQueryOperation.apply(this, arguments));","  }","","  /**","   * Helper to construct a new mutation with the given attributes and 'empty'","   * route/variables.","   */","  RelayQueryMutation.build = function build(name, responseType, callName, callValue, children, metadata, routeName) {","    var nextChildren = children ? children.filter(function (child) {","      return !!child;","    }) : [];","    var concreteMutation = require('./QueryBuilder').createMutation({","      calls: [require('./QueryBuilder').createCall(callName, require('./QueryBuilder').createCallVariable('input'))],","      metadata: metadata,","      name: name,","      responseType: responseType","    });","    var variables = { input: callValue || '' };","    var metaRoute = require('./RelayMetaRoute').get(routeName || '$RelayQuery');","    var rootContext = createRootContext(metaRoute, variables);","    var mutation = new RelayQueryMutation(concreteMutation, rootContext, variables);","    mutation.__children__ = nextChildren;","    return mutation;","  };","","  RelayQueryMutation.prototype.equals = function equals(that) {","    if (this === that) {","      return true;","    }","    if (!(that instanceof RelayQueryMutation)) {","      return false;","    }","    if (!require('fbjs/lib/areEqual')(this.getResponseType(), that.getResponseType())) {","      return false;","    }","    if (!require('fbjs/lib/areEqual')(this.getCall(), that.getCall())) {","      return false;","    }","    return _RelayQueryOperation.prototype.equals.call(this, that);","  };","","  return RelayQueryMutation;","}(RelayQueryOperation);","","/**"," * @internal"," *"," * Represents a GraphQL subscription."," */","","","var RelayQuerySubscription = function (_RelayQueryOperation2) {","  (0, _inherits3['default'])(RelayQuerySubscription, _RelayQueryOperation2);","","  function RelayQuerySubscription() {","    (0, _classCallCheck3['default'])(this, RelayQuerySubscription);","    return (0, _possibleConstructorReturn3['default'])(this, _RelayQueryOperation2.apply(this, arguments));","  }","","  RelayQuerySubscription.create = function create(concreteNode, metaRoute, variables) {","    var subscription = require('./QueryBuilder').getSubscription(concreteNode);","    require('fbjs/lib/invariant')(subscription, 'RelayQuerySubscription.create(): ' + 'Expected a GraphQL `subscription { ... }`, got: %s', concreteNode);","    var rootContext = createRootContext(metaRoute, variables);","    return new RelayQuerySubscription(concreteNode, rootContext, variables);","  };","","  RelayQuerySubscription.prototype.getPublishedPayloadType = function getPublishedPayloadType() {","    return this.getResponseType();","  };","","  RelayQuerySubscription.prototype.equals = function equals(that) {","    if (this === that) {","      return true;","    }","    if (!(that instanceof RelayQuerySubscription)) {","      return false;","    }","    if (!require('fbjs/lib/areEqual')(this.getPublishedPayloadType(), that.getPublishedPayloadType())) {","      return false;","    }","    if (!require('fbjs/lib/areEqual')(this.getCall(), that.getCall())) {","      return false;","    }","    return _RelayQueryOperation2.prototype.equals.call(this, that);","  };","","  return RelayQuerySubscription;","}(RelayQueryOperation);","","/**"," * @internal"," *"," * Wraps access to query fragments."," */","","","var RelayQueryFragment = function (_RelayQueryNode3) {","  (0, _inherits3['default'])(RelayQueryFragment, _RelayQueryNode3);","","  /**","   * Helper to construct a new fragment with the given attributes and 'empty'","   * route/variables.","   */","  RelayQueryFragment.build = function build(name, type,","  /* $FlowIssue: #11220887","     `Array<Subclass-of-RelayQueryNode>` should be compatible here. */","  children, metadata, routeName) {","    var nextChildren = children ? children.filter(function (child) {","      return !!child;","    }) : [];","    // $FlowFixMe(>=0.34.0)","    var concreteFragment = require('./QueryBuilder').createFragment({","      name: name,","      type: type,","      metadata: metadata","    });","    var variables = {};","    var metaRoute = require('./RelayMetaRoute').get(routeName || '$RelayQuery');","    var rootContext = createRootContext(metaRoute, variables);","    var fragment = new RelayQueryFragment(concreteFragment, rootContext, variables, {","      isDeferred: !!(metadata && metadata.isDeferred),","      isContainerFragment: !!(metadata && metadata.isContainerFragment),","      isTypeConditional: !!(metadata && metadata.isTypeConditional)","    });","    fragment.__children__ = nextChildren;","    return fragment;","  };","","  RelayQueryFragment.create = function create(concreteNode, metaRoute, variables, metadata) {","    var fragment = require('./QueryBuilder').getFragment(concreteNode);","    require('fbjs/lib/invariant')(fragment, 'RelayQueryFragment.create(): ' + 'Expected a GraphQL `fragment { ... }`, got: %s', concreteNode);","    var rootContext = createRootContext(metaRoute, variables);","    return createMemoizedFragment(fragment, rootContext, variables, metadata || DEFAULT_FRAGMENT_METADATA);","  };","","  function RelayQueryFragment(concreteNode, rootContext, variables, metadata) {","    (0, _classCallCheck3['default'])(this, RelayQueryFragment);","","    var _this9 = (0, _possibleConstructorReturn3['default'])(this, _RelayQueryNode3.call(this, concreteNode, rootContext, variables));","","    _this9.__compositeHash__ = null;","    _this9.__metadata__ = metadata || DEFAULT_FRAGMENT_METADATA;","    _this9.__sourceCompositeHash__ = null;","    return _this9;","  }","","  RelayQueryFragment.prototype.canHaveSubselections = function canHaveSubselections() {","    return true;","  };","","  RelayQueryFragment.prototype.getDebugName = function getDebugName() {","    return this.__concreteNode__.name;","  };","","  /**","   * The \"concrete fragment id\" uniquely identifies a Relay.QL`fragment ...`","   * within the source code of an application and will remain the same across","   * runs of a particular version of an application.","   */","","","  RelayQueryFragment.prototype.getConcreteFragmentID = function getConcreteFragmentID() {","    return this.__concreteNode__.id;","  };","","  /**","   * The \"composite hash\" is similar to the concrete instance hash, but it also","   * differentiates between varying variable values or route names.","   *","   * The composite hash is used to:","   * - Avoid printing the same fragment twice, in order to reduce upload size.","   * - Remember which deferred fragment/data pairs have been fetched.","   */","","","  RelayQueryFragment.prototype.getCompositeHash = function getCompositeHash() {","    var compositeHash = this.__compositeHash__;","    if (!compositeHash) {","      // TODO: Simplify this hash function, #9599170.","      compositeHash = require('./generateRQLFieldAlias')(this.getConcreteFragmentID() + '.' + this.__root__.routeName + '.' + require('./stableStringify')(this.__variables__));","      this.__compositeHash__ = compositeHash;","    }","    return compositeHash;","  };","","  RelayQueryFragment.prototype.getSourceCompositeHash = function getSourceCompositeHash() {","    return this.__sourceCompositeHash__;","  };","","  RelayQueryFragment.prototype.isAbstract = function isAbstract() {","    return !!this.__concreteNode__.metadata.isAbstract;","  };","","  RelayQueryFragment.prototype.isDeferred = function isDeferred() {","    return this.__metadata__.isDeferred;","  };","","  RelayQueryFragment.prototype.isPattern = function isPattern() {","    return !!this.__concreteNode__.metadata.pattern;","  };","","  RelayQueryFragment.prototype.isPlural = function isPlural() {","    var metadata = this.__concreteNode__.metadata;","    return !!( // FB Printer","    metadata.isPlural || metadata.plural);","  };","","  RelayQueryFragment.prototype.isTrackingEnabled = function isTrackingEnabled() {","    var metadata = this.__concreteNode__.metadata;","    return !!metadata.isTrackingEnabled;","  };","","  RelayQueryFragment.prototype.cloneAsPlainFragment = function cloneAsPlainFragment() {","    return createMemoizedFragment(this.__concreteNode__, this.__root__, this.__variables__, DEFAULT_FRAGMENT_METADATA);","  };","","  RelayQueryFragment.prototype.isContainerFragment = function isContainerFragment() {","    return this.__metadata__.isContainerFragment;","  };","","  RelayQueryFragment.prototype.isTypeConditional = function isTypeConditional() {","    return this.__metadata__.isTypeConditional;","  };","","  RelayQueryFragment.prototype.hasDeferredDescendant = function hasDeferredDescendant() {","    return this.isDeferred() || _RelayQueryNode3.prototype.hasDeferredDescendant.call(this);","  };","","  RelayQueryFragment.prototype.clone = function clone(children) {","    var clone = _RelayQueryNode3.prototype.clone.call(this, children);","    if (clone !== this && clone instanceof RelayQueryFragment) {","      clone.__concreteNode__ = (0, _extends3['default'])({}, clone.__concreteNode__, {","        id: require('./generateConcreteFragmentID')()","      });","      clone.__metadata__ = (0, _extends3['default'])({}, this.__metadata__);","","      // The container checks on the status of a deferred fragment using its","      // composite hash. We need to cache this hash in this cloned fragment","      // so it can be updated in the store with the correct hash when fetched.","      clone.__sourceCompositeHash__ = this.getCompositeHash();","    }","    return clone;","  };","","  RelayQueryFragment.prototype.equals = function equals(that) {","    if (this === that) {","      return true;","    }","    if (!(that instanceof RelayQueryFragment)) {","      return false;","    }","    if (this.getType() !== that.getType()) {","      return false;","    }","    return _RelayQueryNode3.prototype.equals.call(this, that);","  };","","  return RelayQueryFragment;","}(RelayQueryNode);","","/**"," * @internal"," *"," * Wraps access to query fields."," */","","","var RelayQueryField = function (_RelayQueryNode4) {","  (0, _inherits3['default'])(RelayQueryField, _RelayQueryNode4);","","  RelayQueryField.create = function create(concreteNode, metaRoute, variables) {","    var field = require('./QueryBuilder').getField(concreteNode);","    require('fbjs/lib/invariant')(field, 'RelayQueryField.create(): Expected a GraphQL field, got: %s', concreteNode);","    var rootContext = createRootContext(metaRoute, variables);","    return new RelayQueryField(field, rootContext, variables);","  };","","  /**","   * Helper to construct a new field with the given attributes and 'empty'","   * route/variables.","   */","","","  RelayQueryField.build = function build(_ref) {","    var alias = _ref.alias,","        directives = _ref.directives,","        calls = _ref.calls,","        children = _ref.children,","        fieldName = _ref.fieldName,","        metadata = _ref.metadata,","        routeName = _ref.routeName,","        type = _ref.type;","","    var nextChildren = children ? children.filter(function (child) {","      return !!child;","    }) : [];","    var concreteField = require('./QueryBuilder').createField({","      alias: alias,","      calls: calls ? require('./callsToGraphQL')(calls) : null,","      directives: directives ? require('./directivesToGraphQL')(directives) : null,","      fieldName: fieldName,","      metadata: metadata,","      type: type","    });","    var variables = {};","    var metaRoute = require('./RelayMetaRoute').get(routeName || '$RelayQuery');","    var rootContext = createRootContext(metaRoute, variables);","    var field = new RelayQueryField(concreteField, rootContext, variables);","    field.__children__ = nextChildren;","    return field;","  };","","  function RelayQueryField(concreteNode, rootContext, variables) {","    (0, _classCallCheck3['default'])(this, RelayQueryField);","","    var _this10 = (0, _possibleConstructorReturn3['default'])(this, _RelayQueryNode4.call(this, concreteNode, rootContext, variables));","","    _this10.__debugName__ = undefined;","    _this10.__isRefQueryDependency__ = false;","    _this10.__rangeBehaviorCalls__ = undefined;","    _this10.__shallowHash__ = undefined;","    return _this10;","  }","","  RelayQueryField.prototype.canHaveSubselections = function canHaveSubselections() {","    return !!this.__concreteNode__.metadata.canHaveSubselections;","  };","","  RelayQueryField.prototype.isAbstract = function isAbstract() {","    return !!this.__concreteNode__.metadata.isAbstract;","  };","","  RelayQueryField.prototype.isFindable = function isFindable() {","    return !!this.__concreteNode__.metadata.isFindable;","  };","","  RelayQueryField.prototype.isGenerated = function isGenerated() {","    return !!this.__concreteNode__.metadata.isGenerated;","  };","","  RelayQueryField.prototype.isConnection = function isConnection() {","    return !!this.__concreteNode__.metadata.isConnection;","  };","","  RelayQueryField.prototype.isConnectionWithoutNodeID = function isConnectionWithoutNodeID() {","    return !!this.__concreteNode__.metadata.isConnectionWithoutNodeID;","  };","","  RelayQueryField.prototype.isPlural = function isPlural() {","    return !!this.__concreteNode__.metadata.isPlural;","  };","","  RelayQueryField.prototype.isRefQueryDependency = function isRefQueryDependency() {","    return this.__isRefQueryDependency__;","  };","","  RelayQueryField.prototype.isRequisite = function isRequisite() {","    return !!this.__concreteNode__.metadata.isRequisite;","  };","","  RelayQueryField.prototype.getDebugName = function getDebugName() {","    var _this11 = this;","","    var debugName = this.__debugName__;","    if (!debugName) {","      (function () {","        debugName = _this11.getSchemaName();","        var printedCoreArgs = void 0;","        _this11.getCallsWithValues().forEach(function (arg) {","          if (_this11._isCoreArg(arg)) {","            printedCoreArgs = printedCoreArgs || [];","            printedCoreArgs.push(require('./serializeRelayQueryCall')(arg));","          }","        });","        if (printedCoreArgs) {","          debugName += printedCoreArgs.sort().join('');","        }","        _this11.__debugName__ = debugName;","      })();","    }","    return debugName;","  };","","  /**","   * The canonical name for the referenced field in the schema.","   */","","","  RelayQueryField.prototype.getSchemaName = function getSchemaName() {","    return this.__concreteNode__.fieldName;","  };","","  /**","  * An Array of Calls to be used with rangeBehavior config functions.","  *","  * Non-core arguments (like connection and identifying arguments) are dropped.","  *   `field(first: 10, foo: \"bar\", baz: \"bat\")` => `'baz(bat).foo(bar)'`","  *   `username(name: \"steve\")`                  => `''`","  */","","","  RelayQueryField.prototype.getRangeBehaviorCalls = function getRangeBehaviorCalls() {","    var _this12 = this;","","    require('fbjs/lib/invariant')(this.isConnection(), 'RelayQueryField: Range behavior keys are associated exclusively with ' + 'connection fields. `getRangeBehaviorCalls()` was called on the ' + 'non-connection field `%s`.', this.getSchemaName());","","    var rangeBehaviorCalls = this.__rangeBehaviorCalls__;","    if (!rangeBehaviorCalls) {","      rangeBehaviorCalls = this.getCallsWithValues().filter(function (arg) {","        return _this12._isCoreArg(arg);","      });","      this.__rangeBehaviorCalls__ = rangeBehaviorCalls;","    }","    return rangeBehaviorCalls;","  };","","  /**","   * The name for the field when serializing the query or interpreting query","   * responses from the server. The serialization key is derived from","   * all calls/values and hashed for compactness.","   *","   * Given the GraphQL","   *   `field(first: 10, foo: \"bar\", baz: \"bat\")`, or","   *   `field(baz: \"bat\", foo: \"bar\", first: 10)`","   *","   * ...the following serialization key will be produced:","   *   `generateRQLFieldAlias('field.bar(bat).first(10).foo(bar)')`","   */","","","  RelayQueryField.prototype.getSerializationKey = function getSerializationKey() {","    var serializationKey = this.__serializationKey__;","    if (!serializationKey) {","      var _key = this.getSchemaName();","      var calls = this.getCallsWithValues();","      if (calls.length) {","        var alias = this.__concreteNode__.alias;","        if (alias != null) {","          _key += '.' + alias;","        }","        _key += calls.map(require('./serializeRelayQueryCall')).sort().join('');","      }","      serializationKey = require('./generateRQLFieldAlias')(_key);","      this.__serializationKey__ = serializationKey;","    }","    return serializationKey;","  };","","  /**","   * Returns a hash of the field name and all argument values.","   */","","","  RelayQueryField.prototype.getShallowHash = function getShallowHash() {","    var shallowHash = this.__shallowHash__;","    if (!shallowHash) {","      this.__shallowHash__ = shallowHash = this.getSchemaName() + serializeCalls(this.getCallsWithValues());","    }","    return shallowHash;","  };","","  /**","   * The name which Relay internals can use to reference this field, without","   * collisions.","   *","   * Given the GraphQL","   *   `field(first: 10, foo: \"bar\", baz: \"bat\")`, or","   *   `field(baz: \"bat\", foo: \"bar\", first: 10)`","   *","   * ...the following storage key will be produced:","   *   `'field{bar:\"bat\",foo:\"bar\"}'`","   */","","","  RelayQueryField.prototype.getStorageKey = function getStorageKey() {","    var _this13 = this;","","    var storageKey = this.__storageKey__;","    if (!storageKey) {","      this.__storageKey__ = storageKey = this.getSchemaName() + serializeCalls(this.getCallsWithValues().filter(function (call) {","        return _this13._isCoreArg(call);","      }));","    }","    return storageKey;","  };","","  /**","   * The name by which this field's results should be made available to the","   * application.","   */","","","  RelayQueryField.prototype.getApplicationName = function getApplicationName() {","    var concreteNode = this.__concreteNode__;","    return concreteNode.alias || concreteNode.fieldName;","  };","","  RelayQueryField.prototype.getInferredRootCallName = function getInferredRootCallName() {","    return this.__concreteNode__.metadata.inferredRootCallName;","  };","","  RelayQueryField.prototype.getInferredPrimaryKey = function getInferredPrimaryKey() {","    return this.__concreteNode__.metadata.inferredPrimaryKey;","  };","","  RelayQueryField.prototype.getCallsWithValues = function getCallsWithValues() {","    var calls = this.__calls__;","    if (!calls) {","      var concreteCalls = this.__concreteNode__.calls;","      if (concreteCalls) {","        calls = require('./callsFromGraphQL')(concreteCalls, this.__variables__);","      } else {","        calls = EMPTY_CALLS;","      }","      this.__calls__ = calls;","    }","    return calls;","  };","","  RelayQueryField.prototype.getCallType = function getCallType(callName) {","    var concreteCalls = this.__concreteNode__.calls;","    var concreteCall = concreteCalls && concreteCalls.filter(function (call) {","      return call.name === callName;","    })[0];","    if (concreteCall) {","      return concreteCall.metadata.type;","    }","  };","","  RelayQueryField.prototype.equals = function equals(that) {","    if (this === that) {","      return true;","    }","    if (!(that instanceof RelayQueryField)) {","      return false;","    }","    if (this.getSchemaName() !== that.getSchemaName() || this.getApplicationName() !== that.getApplicationName() || !areCallValuesEqual(this.getCallsWithValues(), that.getCallsWithValues())) {","      return false;","    }","    return _RelayQueryNode4.prototype.equals.call(this, that);","  };","","  RelayQueryField.prototype.cloneAsRefQueryDependency = function cloneAsRefQueryDependency() {","    var field = new RelayQueryField(this.__concreteNode__, this.__root__, this.__variables__);","    field.__children__ = [];","    field.__isRefQueryDependency__ = true;","    return field;","  };","","  RelayQueryField.prototype.cloneFieldWithCalls = function cloneFieldWithCalls(children, calls) {","    if (!this.canHaveSubselections()) {","      // Compact new children *after* this check, for consistency.","      require('fbjs/lib/invariant')(children.length === 0, 'RelayQueryNode: Cannot add children to field `%s` because it does ' + 'not support sub-selections (sub-fields).', this.getSchemaName());","    }","","    // use `clone()` if call values do not change","    if (require('fbjs/lib/areEqual')(this.getCallsWithValues(), calls)) {","      var clone = this.clone(children);","      return clone;","    }","","    var nextChildren = cloneChildren(this.getChildren(), children);","    if (!nextChildren.length) {","      return null;","    }","","    var field = new RelayQueryField(this.__concreteNode__, this.__root__, this.__variables__);","    field.__children__ = nextChildren;","    field.__calls__ = calls;","","    return field;","  };","","  /**","   * The following types of arguments are non-core:","   * - Range calls such as `first` or `find` on connections.","   * - Conditionals when the field is present.","   */","","","  RelayQueryField.prototype._isCoreArg = function _isCoreArg(arg) {","    return (","      // `name(if:true)`, `name(unless:false)`, and `name` are equivalent.","      !(arg.name === IF && String(arg.value) === TRUE) && !(arg.name === UNLESS && String(arg.value) === FALSE) &&","      // Connection arguments can be stripped out.","      !(this.isConnection() && require('./RelayConnectionInterface').isConnectionCall(arg))","    );","  };","","  return RelayQueryField;","}(RelayQueryNode);","","function createNode(concreteNode, rootContext, variables) {","  require('fbjs/lib/invariant')(typeof concreteNode === 'object' && concreteNode !== null, 'RelayQueryNode: Expected a GraphQL object created with `Relay.QL`, got' + '`%s`.', concreteNode);","  var kind = concreteNode.kind;","  var type = RelayQueryNode;","  if (kind === 'Field') {","    type = RelayQueryField;","  } else if (kind === 'Fragment') {","    type = RelayQueryFragment;","  } else if (kind === 'FragmentReference') {","    // DEPRECATED in favor of ConcreteFragmentSpread","    // TODO #14985090: delete ConcreteFragmentReference and callers","    var fragment = require('./QueryBuilder').getFragment(concreteNode.fragment);","    if (fragment) {","      return createMemoizedFragment(fragment, rootContext, {}, {","        isDeferred: false,","        isContainerFragment: true,","        isTypeConditional: false","      });","    }","    return null;","  } else if (kind === 'FragmentSpread') {","    var spread = require('fbjs/lib/nullthrows')(require('./QueryBuilder').getFragmentSpread(concreteNode));","    var argumentVariables = spread.args;","    var rootVariables = rootContext.variables;","    var fragmentVariables = require('./RelayVariables').getFragmentVariables(spread.fragment, rootVariables, argumentVariables);","    return createMemoizedFragment(spread.fragment.node, rootContext, fragmentVariables, {","      isDeferred: false,","      isContainerFragment: true,","      isTypeConditional: false","    });","  } else if (kind === 'Query') {","    type = RelayQueryRoot;","  } else if (kind === 'Mutation') {","    type = RelayQueryMutation;","  } else if (kind === 'Subscription') {","    type = RelayQuerySubscription;","  } else if (concreteNode instanceof require('./RelayRouteFragment')) {","    var metaRoute = require('./RelayMetaRoute').get(rootContext.routeName);","    var _fragment = concreteNode.getFragmentForRoute(metaRoute);","    // May be null if no value was defined for this route.","    if (Array.isArray(_fragment)) {","      // A route-conditional function may return a single fragment reference","      // or an array of fragment references.","      return _fragment.map(function (frag) {","        return createNode(frag, rootContext, variables);","      });","    } else if (_fragment) {","      return createNode(_fragment, rootContext, variables);","    }","    return null;","  } else if (concreteNode instanceof require('./RelayFragmentReference')) {","    var _fragment2 = concreteNode.getFragment(variables);","    var _metaRoute = require('./RelayMetaRoute').get(rootContext.routeName);","    var _fragmentVariables = concreteNode.getVariables(_metaRoute, variables);","    if (_fragment2) {","      // the fragment may be null when `if` or `unless` conditions are not met.","      return createMemoizedFragment(_fragment2, rootContext, _fragmentVariables, {","        isDeferred: concreteNode.isDeferred(),","        isContainerFragment: concreteNode.isContainerFragment(),","        isTypeConditional: concreteNode.isTypeConditional()","      });","    }","    return null;","  } else {}","  return new type(concreteNode, rootContext, variables);","}","","/**"," * Memoizes the `RelayQueryFragment` equivalent of a given GraphQL fragment"," * for the given route, variables, and deferred status."," */","function createMemoizedFragment(concreteFragment, rootContext, variables, metadata) {","  var cacheKey = rootContext.routeName + ':' + require('./stableStringify')(variables) + ':' + require('./stableStringify')(metadata);","  var fragment = concreteFragment.__cachedFragment__;","  var fragmentCacheKey = concreteFragment.__cacheKey__;","  if (!fragment || fragmentCacheKey !== cacheKey) {","    fragment = new RelayQueryFragment(concreteFragment, rootContext, variables, metadata);","    concreteFragment.__cachedFragment__ = fragment;","    concreteFragment.__cacheKey__ = cacheKey;","  }","  return fragment;","}","","/**"," * Compacts new children and compares them to the previous children."," * - If all items are equal, returns previous array"," * - If any items differ, returns new array"," */","function cloneChildren(prevChildren, nextChildren) {","  var children = [];","  var isSameChildren = true;","","  var prevIndex = 0;","  for (var ii = 0; ii < nextChildren.length; ii++) {","    var child = nextChildren[ii];","    if (child) {","      children.push(child);","      isSameChildren = isSameChildren && child === prevChildren[prevIndex++];","    }","  }","","  if (isSameChildren && children.length === prevChildren.length) {","    return prevChildren;","  } else {","    return children;","  }","}","","/**"," * Creates an opaque serialization of calls."," */","function serializeCalls(calls) {","  if (calls.length) {","    var _ret5 = function () {","      var callMap = {};","      calls.forEach(function (call) {","        callMap[call.name] = call.value;","      });","      return {","        v: require('./stableStringify')(callMap)","      };","    }();","","    if (typeof _ret5 === \"object\") return _ret5.v;","  } else {","    return '';","  }","}","","/**"," * Checks if two sets of calls have equal names and values. This skips testing"," * argument types because type metadata for scalar arguments may be omitted by"," * the Babel plugin."," */","function areCallValuesEqual(thisCalls, thatCalls) {","  if (thisCalls.length !== thatCalls.length) {","    return false;","  }","  return thisCalls.every(function (_ref2, ii) {","    var thisName = _ref2.name,","        thisValue = _ref2.value;","    var _thatCalls$ii = thatCalls[ii],","        thatName = _thatCalls$ii.name,","        thatValue = _thatCalls$ii.value;","","    if (thisName !== thatName) {","      return false;","    }","    if (thisValue instanceof require('./RelayVariable')) {","      return thisValue.equals(thatValue);","    }","    return require('fbjs/lib/areEqual')(thisValue, thatValue);","  });","}","","function createRootContext(metaRoute, variables) {","  return {","    routeName: metaRoute.name,","    variables: variables","  };","}","","require('./RelayProfiler').instrumentMethods(RelayQueryNode.prototype, {","  clone: '@RelayQueryNode.prototype.clone',","  equals: '@RelayQueryNode.prototype.equals',","  getChildren: '@RelayQueryNode.prototype.getChildren',","  getDirectives: '@RelayQueryNode.prototype.getDirectives',","  hasDeferredDescendant: '@RelayQueryNode.prototype.hasDeferredDescendant',","  getFieldByStorageKey: '@RelayQueryNode.prototype.getFieldByStorageKey'","});","","require('./RelayProfiler').instrumentMethods(RelayQueryField.prototype, {","  getStorageKey: '@RelayQueryField.prototype.getStorageKey',","  getSerializationKey: '@RelayQueryField.prototype.getSerializationKey'","});","","module.exports = {","  Field: RelayQueryField,","  Fragment: RelayQueryFragment,","  Mutation: RelayQueryMutation,","  Node: RelayQueryNode,","  Operation: RelayQueryOperation,","  Root: RelayQueryRoot,","  Subscription: RelayQuerySubscription","};"],"l":{"17":1,"19":1,"21":1,"23":1,"25":1,"27":5,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"39":1,"41":1,"46":1,"47":1,"49":1,"50":1,"51":1,"86":1,"88":1,"89":0,"90":0,"91":0,"92":0,"102":1,"103":9,"105":9,"106":9,"107":9,"108":9,"111":9,"112":9,"113":9,"114":9,"115":9,"116":9,"117":9,"120":1,"121":0,"124":1,"125":0,"128":1,"129":0,"132":1,"133":0,"135":0,"136":0,"139":0,"140":0,"142":0,"143":0,"144":0,"145":0,"148":0,"149":0,"150":0,"151":0,"152":0,"154":0,"157":1,"158":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"170":0,"171":0,"172":0,"173":0,"174":0,"177":0,"178":0,"182":0,"183":0,"186":0,"189":1,"191":0,"192":0,"194":0,"195":0,"196":0,"197":0,"199":0,"200":0,"201":0,"204":0,"208":1,"209":0,"211":0,"212":0,"213":0,"214":0,"220":0,"223":1,"224":0,"227":1,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"238":0,"240":0,"243":1,"244":0,"247":1,"248":0,"251":1,"252":0,"255":1,"256":0,"257":0,"258":0,"259":0,"261":0,"263":0,"266":1,"267":0,"270":1,"271":0,"279":1,"280":0,"281":0,"283":0,"284":0,"300":1,"301":0,"304":1,"305":0,"308":1,"309":0,"312":1,"322":1,"323":1,"329":1,"330":0,"331":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"342":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"357":1,"358":0,"359":0,"360":0,"361":0,"364":1,"365":0,"367":0,"369":0,"370":0,"371":0,"372":0,"375":0,"376":0,"379":1,"380":0,"383":1,"384":0,"385":0,"386":0,"387":0,"389":0,"392":1,"393":0,"394":0,"395":0,"396":0,"398":0,"401":1,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"415":0,"416":0,"418":0,"421":1,"422":0,"423":0,"424":0,"425":0,"426":0,"428":0,"430":0,"432":0,"435":1,"436":0,"439":1,"440":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"451":0,"452":0,"454":0,"458":0,"461":1,"462":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"474":0,"479":0,"480":0,"483":0,"486":1,"487":0,"490":1,"491":0,"494":1,"495":0,"498":1,"499":0,"502":1,"503":0,"504":0,"506":0,"509":0,"510":0,"513":1,"514":0,"515":0,"517":0,"518":0,"520":0,"521":0,"523":0,"524":0,"526":0,"529":1,"539":1,"540":1,"542":1,"543":0,"545":0,"547":0,"548":0,"551":1,"552":0,"555":1,"556":0,"559":1,"560":0,"563":1,"564":0,"567":1,"568":0,"569":0,"570":0,"573":1,"574":0,"575":0,"576":0,"577":0,"578":0,"580":0,"582":0,"584":0,"587":1,"588":0,"589":0,"590":0,"591":0,"592":0,"594":0,"603":1,"604":0,"607":1,"617":1,"618":1,"620":1,"621":0,"622":0,"629":1,"630":0,"631":0,"633":0,"639":0,"640":0,"641":0,"642":0,"643":0,"644":0,"647":1,"648":0,"649":0,"651":0,"652":0,"654":0,"655":0,"657":0,"658":0,"660":0,"663":1,"673":1,"674":1,"676":1,"677":0,"678":0,"681":1,"682":0,"683":0,"684":0,"685":0,"688":1,"689":0,"692":1,"693":0,"694":0,"696":0,"697":0,"699":0,"700":0,"702":0,"703":0,"705":0,"708":1,"718":1,"719":1,"725":1,"729":0,"730":0,"733":0,"738":0,"739":0,"740":0,"741":0,"746":0,"747":0,"750":1,"751":0,"752":0,"753":0,"754":0,"757":1,"758":0,"760":0,"762":0,"763":0,"764":0,"765":0,"768":1,"769":0,"772":1,"773":0,"783":1,"784":0,"797":1,"798":0,"799":0,"801":0,"802":0,"804":0,"807":1,"808":0,"811":1,"812":0,"815":1,"816":0,"819":1,"820":0,"823":1,"824":0,"825":0,"829":1,"830":0,"831":0,"834":1,"835":0,"838":1,"839":0,"842":1,"843":0,"846":1,"847":0,"850":1,"851":0,"852":0,"853":0,"856":0,"861":0,"863":0,"866":1,"867":0,"868":0,"870":0,"871":0,"873":0,"874":0,"876":0,"879":1,"889":1,"890":1,"892":1,"893":0,"894":0,"895":0,"896":0,"905":1,"906":9,"915":9,"916":2,"918":9,"926":9,"927":9,"928":9,"929":9,"930":9,"931":9,"934":1,"935":9,"937":9,"939":9,"940":9,"941":9,"942":9,"943":9,"946":1,"947":0,"950":1,"951":0,"954":1,"955":0,"958":1,"959":0,"962":1,"963":0,"966":1,"967":0,"970":1,"971":0,"974":1,"975":0,"978":1,"979":0,"982":1,"983":0,"985":0,"986":0,"987":0,"988":0,"989":0,"990":0,"991":0,"992":0,"993":0,"996":0,"997":0,"999":0,"1002":0,"1010":1,"1011":0,"1023":1,"1024":0,"1026":0,"1028":0,"1029":0,"1030":0,"1031":0,"1033":0,"1035":0,"1052":1,"1053":0,"1054":0,"1055":0,"1056":0,"1057":0,"1058":0,"1059":0,"1060":0,"1062":0,"1064":0,"1065":0,"1067":0,"1075":1,"1076":0,"1077":0,"1078":0,"1080":0,"1096":1,"1097":0,"1099":0,"1100":0,"1101":0,"1102":0,"1105":0,"1114":1,"1115":0,"1116":0,"1119":1,"1120":0,"1123":1,"1124":0,"1127":1,"1128":0,"1129":0,"1130":0,"1131":0,"1132":0,"1134":0,"1136":0,"1138":0,"1141":1,"1142":0,"1143":0,"1144":0,"1146":0,"1147":0,"1151":1,"1152":0,"1153":0,"1155":0,"1156":0,"1158":0,"1159":0,"1161":0,"1164":1,"1165":0,"1166":0,"1167":0,"1168":0,"1171":1,"1172":0,"1174":0,"1178":0,"1179":0,"1180":0,"1183":0,"1184":0,"1185":0,"1188":0,"1189":0,"1190":0,"1192":0,"1202":1,"1203":0,"1211":1,"1214":1,"1215":0,"1216":0,"1217":0,"1218":0,"1219":0,"1220":0,"1221":0,"1222":0,"1225":0,"1226":0,"1227":0,"1233":0,"1234":0,"1235":0,"1236":0,"1237":0,"1238":0,"1239":0,"1244":0,"1245":0,"1246":0,"1247":0,"1248":0,"1249":0,"1250":0,"1251":0,"1252":0,"1254":0,"1257":0,"1258":0,"1260":0,"1261":0,"1263":0,"1264":0,"1265":0,"1266":0,"1267":0,"1268":0,"1270":0,"1276":0,"1278":0,"1285":1,"1286":0,"1287":0,"1288":0,"1289":0,"1290":0,"1291":0,"1292":0,"1294":0,"1302":1,"1303":0,"1304":0,"1306":0,"1307":0,"1308":0,"1309":0,"1310":0,"1311":0,"1315":0,"1316":0,"1318":0,"1325":1,"1326":0,"1327":0,"1328":0,"1329":0,"1330":0,"1332":0,"1337":0,"1339":0,"1348":1,"1349":0,"1350":0,"1352":0,"1353":0,"1355":0,"1359":0,"1360":0,"1362":0,"1363":0,"1365":0,"1369":1,"1370":9,"1376":1,"1385":1,"1390":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/QueryBuilder.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/QueryBuilder.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":9,"21":9,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":1,"57":0,"58":1},"b":{"1":[1,0],"2":[1,1],"3":[1,0],"4":[0,0],"5":[9,6],"6":[9,9],"7":[9,9],"8":[9,9],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":9,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":37}}},"2":{"name":"createBatchCallVariable","line":37,"loc":{"start":{"line":37,"column":27},"end":{"line":37,"column":85}}},"3":{"name":"createCall","line":44,"loc":{"start":{"line":44,"column":14},"end":{"line":44,"column":53}}},"4":{"name":"createCallValue","line":54,"loc":{"start":{"line":54,"column":19},"end":{"line":54,"column":55}}},"5":{"name":"createCallVariable","line":60,"loc":{"start":{"line":60,"column":22},"end":{"line":60,"column":68}}},"6":{"name":"createDirective","line":66,"loc":{"start":{"line":66,"column":19},"end":{"line":66,"column":56}}},"7":{"name":"createDirectiveArgument","line":73,"loc":{"start":{"line":73,"column":27},"end":{"line":73,"column":73}}},"8":{"name":"createField","line":79,"loc":{"start":{"line":79,"column":15},"end":{"line":79,"column":50}}},"9":{"name":"createFragment","line":102,"loc":{"start":{"line":102,"column":18},"end":{"line":102,"column":59}}},"10":{"name":"createFragmentReference","line":117,"loc":{"start":{"line":117,"column":27},"end":{"line":117,"column":70}}},"11":{"name":"createMutation","line":123,"loc":{"start":{"line":123,"column":18},"end":{"line":123,"column":59}}},"12":{"name":"createQuery","line":137,"loc":{"start":{"line":137,"column":15},"end":{"line":137,"column":50}}},"13":{"name":"createSubscription","line":165,"loc":{"start":{"line":165,"column":22},"end":{"line":165,"column":71}}},"14":{"name":"getBatchCallVariable","line":179,"loc":{"start":{"line":179,"column":24},"end":{"line":179,"column":60}}},"15":{"name":"getCallVariable","line":184,"loc":{"start":{"line":184,"column":19},"end":{"line":184,"column":50}}},"16":{"name":"getField","line":189,"loc":{"start":{"line":189,"column":12},"end":{"line":189,"column":36}}},"17":{"name":"getFragment","line":194,"loc":{"start":{"line":194,"column":15},"end":{"line":194,"column":42}}},"18":{"name":"getFragmentReference","line":199,"loc":{"start":{"line":199,"column":24},"end":{"line":199,"column":60}}},"19":{"name":"getFragmentSpread","line":204,"loc":{"start":{"line":204,"column":21},"end":{"line":204,"column":54}}},"20":{"name":"getMutation","line":209,"loc":{"start":{"line":209,"column":15},"end":{"line":209,"column":42}}},"21":{"name":"getQuery","line":214,"loc":{"start":{"line":214,"column":12},"end":{"line":214,"column":36}}},"22":{"name":"getSubscription","line":219,"loc":{"start":{"line":219,"column":19},"end":{"line":219,"column":50}}},"23":{"name":"isConcreteKind","line":226,"loc":{"start":{"line":226,"column":0},"end":{"line":226,"column":36}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":86}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":97}},"3":{"start":{"line":17,"column":39},"end":{"line":17,"column":95}},"4":{"start":{"line":19,"column":0},"end":{"line":19,"column":21}},"5":{"start":{"line":20,"column":0},"end":{"line":20,"column":24}},"6":{"start":{"line":21,"column":0},"end":{"line":21,"column":26}},"7":{"start":{"line":22,"column":0},"end":{"line":22,"column":24}},"8":{"start":{"line":24,"column":0},"end":{"line":29,"column":1}},"9":{"start":{"line":25,"column":2},"end":{"line":25,"column":40}},"10":{"start":{"line":26,"column":2},"end":{"line":26,"column":43}},"11":{"start":{"line":27,"column":2},"end":{"line":27,"column":45}},"12":{"start":{"line":28,"column":2},"end":{"line":28,"column":43}},"13":{"start":{"line":36,"column":0},"end":{"line":224,"column":2}},"14":{"start":{"line":38,"column":4},"end":{"line":42,"column":6}},"15":{"start":{"line":45,"column":4},"end":{"line":52,"column":6}},"16":{"start":{"line":55,"column":4},"end":{"line":58,"column":6}},"17":{"start":{"line":61,"column":4},"end":{"line":64,"column":6}},"18":{"start":{"line":67,"column":4},"end":{"line":71,"column":6}},"19":{"start":{"line":74,"column":4},"end":{"line":77,"column":6}},"20":{"start":{"line":80,"column":4},"end":{"line":80,"column":66}},"21":{"start":{"line":81,"column":4},"end":{"line":100,"column":6}},"22":{"start":{"line":103,"column":4},"end":{"line":103,"column":62}},"23":{"start":{"line":104,"column":4},"end":{"line":115,"column":6}},"24":{"start":{"line":118,"column":4},"end":{"line":121,"column":6}},"25":{"start":{"line":124,"column":4},"end":{"line":124,"column":62}},"26":{"start":{"line":125,"column":4},"end":{"line":135,"column":6}},"27":{"start":{"line":138,"column":4},"end":{"line":138,"column":59}},"28":{"start":{"line":139,"column":4},"end":{"line":139,"column":19}},"29":{"start":{"line":140,"column":4},"end":{"line":140,"column":57}},"30":{"start":{"line":141,"column":4},"end":{"line":143,"column":5}},"31":{"start":{"line":142,"column":6},"end":{"line":142,"column":62}},"32":{"start":{"line":144,"column":4},"end":{"line":147,"column":5}},"33":{"start":{"line":145,"column":6},"end":{"line":145,"column":215}},"34":{"start":{"line":146,"column":6},"end":{"line":146,"column":123}},"35":{"start":{"line":148,"column":4},"end":{"line":163,"column":6}},"36":{"start":{"line":166,"column":4},"end":{"line":166,"column":66}},"37":{"start":{"line":167,"column":4},"end":{"line":177,"column":6}},"38":{"start":{"line":180,"column":4},"end":{"line":182,"column":5}},"39":{"start":{"line":181,"column":6},"end":{"line":181,"column":18}},"40":{"start":{"line":185,"column":4},"end":{"line":187,"column":5}},"41":{"start":{"line":186,"column":6},"end":{"line":186,"column":18}},"42":{"start":{"line":190,"column":4},"end":{"line":192,"column":5}},"43":{"start":{"line":191,"column":6},"end":{"line":191,"column":18}},"44":{"start":{"line":195,"column":4},"end":{"line":197,"column":5}},"45":{"start":{"line":196,"column":6},"end":{"line":196,"column":18}},"46":{"start":{"line":200,"column":4},"end":{"line":202,"column":5}},"47":{"start":{"line":201,"column":6},"end":{"line":201,"column":18}},"48":{"start":{"line":205,"column":4},"end":{"line":207,"column":5}},"49":{"start":{"line":206,"column":6},"end":{"line":206,"column":18}},"50":{"start":{"line":210,"column":4},"end":{"line":212,"column":5}},"51":{"start":{"line":211,"column":6},"end":{"line":211,"column":18}},"52":{"start":{"line":215,"column":4},"end":{"line":217,"column":5}},"53":{"start":{"line":216,"column":6},"end":{"line":216,"column":18}},"54":{"start":{"line":220,"column":4},"end":{"line":222,"column":5}},"55":{"start":{"line":221,"column":6},"end":{"line":221,"column":18}},"56":{"start":{"line":226,"column":0},"end":{"line":228,"column":1}},"57":{"start":{"line":227,"column":2},"end":{"line":227,"column":73}},"58":{"start":{"line":230,"column":0},"end":{"line":230,"column":30}}},"branchMap":{"1":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":70},"end":{"line":17,"column":73}},{"start":{"line":17,"column":76},"end":{"line":17,"column":94}}]},"2":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":46},"end":{"line":17,"column":49}},{"start":{"line":17,"column":53},"end":{"line":17,"column":67}}]},"3":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":0},"end":{"line":24,"column":0}},{"start":{"line":24,"column":0},"end":{"line":24,"column":0}}]},"4":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":14},"end":{"line":49,"column":18}},{"start":{"line":49,"column":22},"end":{"line":49,"column":26}}]},"5":{"line":80,"type":"binary-expr","locations":[{"start":{"line":80,"column":26},"end":{"line":80,"column":47}},{"start":{"line":80,"column":51},"end":{"line":80,"column":65}}]},"6":{"line":83,"type":"binary-expr","locations":[{"start":{"line":83,"column":13},"end":{"line":83,"column":31}},{"start":{"line":83,"column":35},"end":{"line":83,"column":46}}]},"7":{"line":84,"type":"binary-expr","locations":[{"start":{"line":84,"column":16},"end":{"line":84,"column":37}},{"start":{"line":84,"column":41},"end":{"line":84,"column":55}}]},"8":{"line":85,"type":"binary-expr","locations":[{"start":{"line":85,"column":18},"end":{"line":85,"column":41}},{"start":{"line":85,"column":45},"end":{"line":85,"column":61}}]},"9":{"line":103,"type":"binary-expr","locations":[{"start":{"line":103,"column":19},"end":{"line":103,"column":43}},{"start":{"line":103,"column":47},"end":{"line":103,"column":61}}]},"10":{"line":105,"type":"binary-expr","locations":[{"start":{"line":105,"column":16},"end":{"line":105,"column":40}},{"start":{"line":105,"column":44},"end":{"line":105,"column":58}}]},"11":{"line":106,"type":"binary-expr","locations":[{"start":{"line":106,"column":18},"end":{"line":106,"column":44}},{"start":{"line":106,"column":48},"end":{"line":106,"column":64}}]},"12":{"line":124,"type":"binary-expr","locations":[{"start":{"line":124,"column":19},"end":{"line":124,"column":43}},{"start":{"line":124,"column":47},"end":{"line":124,"column":61}}]},"13":{"line":126,"type":"binary-expr","locations":[{"start":{"line":126,"column":13},"end":{"line":126,"column":34}},{"start":{"line":126,"column":38},"end":{"line":126,"column":49}}]},"14":{"line":127,"type":"binary-expr","locations":[{"start":{"line":127,"column":16},"end":{"line":127,"column":40}},{"start":{"line":127,"column":44},"end":{"line":127,"column":58}}]},"15":{"line":128,"type":"binary-expr","locations":[{"start":{"line":128,"column":18},"end":{"line":128,"column":44}},{"start":{"line":128,"column":48},"end":{"line":128,"column":64}}]},"16":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":19},"end":{"line":138,"column":40}},{"start":{"line":138,"column":44},"end":{"line":138,"column":58}}]},"17":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":4},"end":{"line":141,"column":4}},{"start":{"line":141,"column":4},"end":{"line":141,"column":4}}]},"18":{"line":141,"type":"binary-expr","locations":[{"start":{"line":141,"column":8},"end":{"line":141,"column":34}},{"start":{"line":141,"column":38},"end":{"line":141,"column":108}}]},"19":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":4},"end":{"line":144,"column":4}},{"start":{"line":144,"column":4},"end":{"line":144,"column":4}}]},"20":{"line":150,"type":"binary-expr","locations":[{"start":{"line":150,"column":16},"end":{"line":150,"column":37}},{"start":{"line":150,"column":41},"end":{"line":150,"column":55}}]},"21":{"line":151,"type":"binary-expr","locations":[{"start":{"line":151,"column":18},"end":{"line":151,"column":41}},{"start":{"line":151,"column":45},"end":{"line":151,"column":61}}]},"22":{"line":153,"type":"binary-expr","locations":[{"start":{"line":153,"column":21},"end":{"line":153,"column":44}},{"start":{"line":153,"column":48},"end":{"line":153,"column":67}}]},"23":{"line":166,"type":"binary-expr","locations":[{"start":{"line":166,"column":19},"end":{"line":166,"column":47}},{"start":{"line":166,"column":51},"end":{"line":166,"column":65}}]},"24":{"line":168,"type":"binary-expr","locations":[{"start":{"line":168,"column":13},"end":{"line":168,"column":38}},{"start":{"line":168,"column":42},"end":{"line":168,"column":53}}]},"25":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":16},"end":{"line":169,"column":44}},{"start":{"line":169,"column":48},"end":{"line":169,"column":62}}]},"26":{"line":170,"type":"binary-expr","locations":[{"start":{"line":170,"column":18},"end":{"line":170,"column":48}},{"start":{"line":170,"column":52},"end":{"line":170,"column":68}}]},"27":{"line":180,"type":"if","locations":[{"start":{"line":180,"column":4},"end":{"line":180,"column":4}},{"start":{"line":180,"column":4},"end":{"line":180,"column":4}}]},"28":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":4},"end":{"line":185,"column":4}},{"start":{"line":185,"column":4},"end":{"line":185,"column":4}}]},"29":{"line":190,"type":"if","locations":[{"start":{"line":190,"column":4},"end":{"line":190,"column":4}},{"start":{"line":190,"column":4},"end":{"line":190,"column":4}}]},"30":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":4},"end":{"line":195,"column":4}},{"start":{"line":195,"column":4},"end":{"line":195,"column":4}}]},"31":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":4},"end":{"line":200,"column":4}},{"start":{"line":200,"column":4},"end":{"line":200,"column":4}}]},"32":{"line":205,"type":"if","locations":[{"start":{"line":205,"column":4},"end":{"line":205,"column":4}},{"start":{"line":205,"column":4},"end":{"line":205,"column":4}}]},"33":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":4},"end":{"line":210,"column":4}},{"start":{"line":210,"column":4},"end":{"line":210,"column":4}}]},"34":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":4},"end":{"line":215,"column":4}},{"start":{"line":215,"column":4},"end":{"line":215,"column":4}}]},"35":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":4},"end":{"line":220,"column":4}},{"start":{"line":220,"column":4},"end":{"line":220,"column":4}}]},"36":{"line":227,"type":"binary-expr","locations":[{"start":{"line":227,"column":9},"end":{"line":227,"column":33}},{"start":{"line":227,"column":37},"end":{"line":227,"column":50}},{"start":{"line":227,"column":54},"end":{"line":227,"column":72}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule QueryBuilder"," * "," */","","'use strict';","","var _freeze2 = _interopRequireDefault(require('babel-runtime/core-js/object/freeze'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","var EMPTY_CALLS = [];","var EMPTY_CHILDREN = [];","var EMPTY_DIRECTIVES = [];","var EMPTY_METADATA = {};","","if (process.env.NODE_ENV !== 'production') {","  (0, _freeze2['default'])(EMPTY_CALLS);","  (0, _freeze2['default'])(EMPTY_CHILDREN);","  (0, _freeze2['default'])(EMPTY_DIRECTIVES);","  (0, _freeze2['default'])(EMPTY_METADATA);","}","","/**"," * @internal"," *"," * Helper methods for constructing concrete query objects."," */","var QueryBuilder = {","  createBatchCallVariable: function createBatchCallVariable(sourceQueryID, jsonPath) {","    return {","      kind: 'BatchCallVariable',","      sourceQueryID: sourceQueryID,","      jsonPath: jsonPath","    };","  },","  createCall: function createCall(name, value, type) {","    return {","      kind: 'Call',","      name: name,","      metadata: {","        type: type || null","      },","      value: value","    };","  },","  createCallValue: function createCallValue(callValue) {","    return {","      kind: 'CallValue',","      callValue: callValue","    };","  },","  createCallVariable: function createCallVariable(callVariableName) {","    return {","      kind: 'CallVariable',","      callVariableName: callVariableName","    };","  },","  createDirective: function createDirective(name, args) {","    return {","      args: args,","      kind: 'Directive',","      name: name","    };","  },","  createDirectiveArgument: function createDirectiveArgument(name, value) {","    return {","      name: name,","      value: value","    };","  },","  createField: function createField(partialField) {","    var partialMetadata = partialField.metadata || EMPTY_METADATA;","    return {","      alias: partialField.alias,","      calls: partialField.calls || EMPTY_CALLS,","      children: partialField.children || EMPTY_CHILDREN,","      directives: partialField.directives || EMPTY_DIRECTIVES,","      fieldName: partialField.fieldName,","      kind: 'Field',","      metadata: {","        canHaveSubselections: !!partialMetadata.canHaveSubselections,","        inferredRootCallName: partialMetadata.inferredRootCallName,","        inferredPrimaryKey: partialMetadata.inferredPrimaryKey,","        isConnection: !!partialMetadata.isConnection,","        isFindable: !!partialMetadata.isFindable,","        isGenerated: !!partialMetadata.isGenerated,","        isPlural: !!partialMetadata.isPlural,","        isRequisite: !!partialMetadata.isRequisite,","        isAbstract: !!partialMetadata.isAbstract","      },","      type: partialField.type","    };","  },","  createFragment: function createFragment(partialFragment) {","    var metadata = partialFragment.metadata || EMPTY_METADATA;","    return {","      children: partialFragment.children || EMPTY_CHILDREN,","      directives: partialFragment.directives || EMPTY_DIRECTIVES,","      id: require('./generateConcreteFragmentID')(),","      kind: 'Fragment',","      metadata: {","        isAbstract: !!metadata.isAbstract,","        pattern: !!metadata.pattern,","        plural: !!metadata.plural },","      name: partialFragment.name,","      type: partialFragment.type","    };","  },","  createFragmentReference: function createFragmentReference(fragment) {","    return {","      kind: 'FragmentReference',","      fragment: fragment","    };","  },","  createMutation: function createMutation(partialMutation) {","    var metadata = partialMutation.metadata || EMPTY_METADATA;","    return {","      calls: partialMutation.calls || EMPTY_CALLS,","      children: partialMutation.children || EMPTY_CHILDREN,","      directives: partialMutation.directives || EMPTY_DIRECTIVES,","      kind: 'Mutation',","      metadata: {","        inputType: metadata.inputType","      },","      name: partialMutation.name,","      responseType: partialMutation.responseType","    };","  },","  createQuery: function createQuery(partialQuery) {","    var metadata = partialQuery.metadata || EMPTY_METADATA;","    var calls = [];","    var identifyingArgName = metadata.identifyingArgName;","    if (identifyingArgName == null && require('./RelayNodeInterface').isNodeRootCall(partialQuery.fieldName)) {","      identifyingArgName = require('./RelayNodeInterface').ID;","    }","    if (identifyingArgName != null) {","      require('fbjs/lib/warning')(partialQuery.identifyingArgValue != null, 'QueryBuilder.createQuery(): An argument value may be required for ' + 'query `%s(%s: ???)`.', partialQuery.fieldName, identifyingArgName);","      calls = [QueryBuilder.createCall(identifyingArgName, partialQuery.identifyingArgValue, metadata.identifyingArgType)];","    }","    return {","      calls: calls,","      children: partialQuery.children || EMPTY_CHILDREN,","      directives: partialQuery.directives || EMPTY_DIRECTIVES,","      fieldName: partialQuery.fieldName,","      isDeferred: !!(partialQuery.isDeferred || metadata.isDeferred),","      kind: 'Query',","      metadata: {","        identifyingArgName: identifyingArgName,","        identifyingArgType: metadata.identifyingArgType,","        isAbstract: !!metadata.isAbstract,","        isPlural: !!metadata.isPlural","      },","      name: partialQuery.name,","      type: partialQuery.type","    };","  },","  createSubscription: function createSubscription(partialSubscription) {","    var metadata = partialSubscription.metadata || EMPTY_METADATA;","    return {","      calls: partialSubscription.calls || EMPTY_CALLS,","      children: partialSubscription.children || EMPTY_CHILDREN,","      directives: partialSubscription.directives || EMPTY_DIRECTIVES,","      kind: 'Subscription',","      metadata: {","        inputType: metadata.inputType","      },","      name: partialSubscription.name,","      responseType: partialSubscription.responseType","    };","  },","  getBatchCallVariable: function getBatchCallVariable(node) {","    if (isConcreteKind(node, 'BatchCallVariable')) {","      return node;","    }","  },","  getCallVariable: function getCallVariable(node) {","    if (isConcreteKind(node, 'CallVariable')) {","      return node;","    }","  },","  getField: function getField(node) {","    if (isConcreteKind(node, 'Field')) {","      return node;","    }","  },","  getFragment: function getFragment(node) {","    if (isConcreteKind(node, 'Fragment')) {","      return node;","    }","  },","  getFragmentReference: function getFragmentReference(node) {","    if (isConcreteKind(node, 'FragmentReference')) {","      return node;","    }","  },","  getFragmentSpread: function getFragmentSpread(node) {","    if (isConcreteKind(node, 'FragmentSpread')) {","      return node;","    }","  },","  getMutation: function getMutation(node) {","    if (isConcreteKind(node, 'Mutation')) {","      return node;","    }","  },","  getQuery: function getQuery(node) {","    if (isConcreteKind(node, 'Query')) {","      return node;","    }","  },","  getSubscription: function getSubscription(node) {","    if (isConcreteKind(node, 'Subscription')) {","      return node;","    }","  }","};","","function isConcreteKind(node, kind) {","  return typeof node === 'object' && node !== null && node.kind === kind;","}","","module.exports = QueryBuilder;"],"l":{"15":1,"17":1,"19":1,"20":1,"21":1,"22":1,"24":1,"25":1,"26":1,"27":1,"28":1,"36":1,"38":0,"45":0,"55":0,"61":0,"67":0,"74":0,"80":9,"81":9,"103":0,"104":0,"118":0,"124":0,"125":0,"138":0,"139":0,"140":0,"141":0,"142":0,"144":0,"145":0,"146":0,"148":0,"166":0,"167":0,"180":0,"181":0,"185":0,"186":0,"190":0,"191":0,"195":0,"196":0,"200":0,"201":0,"205":0,"206":0,"210":0,"211":0,"215":0,"216":0,"220":0,"221":0,"226":1,"227":0,"230":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayMetaRoute.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayMetaRoute.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":9,"10":1,"11":1,"12":1},"b":{"1":[1,0],"2":[1,1],"3":[9,1]},"f":{"1":1,"2":1,"3":1,"4":9},"fnMap":{"1":{"name":"_interopRequireDefault","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":37}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":21},"end":{"line":24,"column":33}}},"3":{"name":"RelayMetaRoute","line":25,"loc":{"start":{"line":25,"column":2},"end":{"line":25,"column":32}}},"4":{"name":"get","line":35,"loc":{"start":{"line":35,"column":23},"end":{"line":35,"column":42}}}},"statementMap":{"1":{"start":{"line":20,"column":0},"end":{"line":20,"column":95}},"2":{"start":{"line":22,"column":0},"end":{"line":22,"column":97}},"3":{"start":{"line":22,"column":39},"end":{"line":22,"column":95}},"4":{"start":{"line":24,"column":0},"end":{"line":40,"column":4}},"5":{"start":{"line":25,"column":2},"end":{"line":33,"column":3}},"6":{"start":{"line":26,"column":4},"end":{"line":26,"column":59}},"7":{"start":{"line":28,"column":4},"end":{"line":32,"column":7}},"8":{"start":{"line":35,"column":2},"end":{"line":37,"column":4}},"9":{"start":{"line":36,"column":4},"end":{"line":36,"column":67}},"10":{"start":{"line":39,"column":2},"end":{"line":39,"column":24}},"11":{"start":{"line":42,"column":0},"end":{"line":42,"column":15}},"12":{"start":{"line":44,"column":0},"end":{"line":44,"column":32}}},"branchMap":{"1":{"line":22,"type":"cond-expr","locations":[{"start":{"line":22,"column":70},"end":{"line":22,"column":73}},{"start":{"line":22,"column":76},"end":{"line":22,"column":94}}]},"2":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":46},"end":{"line":22,"column":49}},{"start":{"line":22,"column":53},"end":{"line":22,"column":67}}]},"3":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":11},"end":{"line":36,"column":22}},{"start":{"line":36,"column":27},"end":{"line":36,"column":65}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayMetaRoute"," * "," */","","'use strict';","","/**"," * Meta route based on the real route; provides access to the route name in"," * queries."," */","","var _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","var RelayMetaRoute = function () {","  function RelayMetaRoute(name) {","    (0, _classCallCheck3['default'])(this, RelayMetaRoute);","","    Object.defineProperty(this, 'name', {","      enumerable: true,","      value: name,","      writable: false","    });","  }","","  RelayMetaRoute.get = function get(name) {","    return cache[name] || (cache[name] = new RelayMetaRoute(name));","  };","","  return RelayMetaRoute;","}();","","var cache = {};","","module.exports = RelayMetaRoute;"],"l":{"20":1,"22":1,"24":1,"25":1,"26":1,"28":1,"35":1,"36":9,"39":1,"42":1,"44":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/GraphQLStoreRangeUtils.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/GraphQLStoreRangeUtils.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":6,"7":6,"8":6,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":1,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":1},"b":{"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":1,"2":1,"3":6,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}}},"2":{"name":"(anonymous_2)","line":46,"loc":{"start":{"line":46,"column":29},"end":{"line":46,"column":41}}},"3":{"name":"GraphQLStoreRangeUtils","line":47,"loc":{"start":{"line":47,"column":2},"end":{"line":47,"column":36}}},"4":{"name":"getClientIDForRangeWithID","line":66,"loc":{"start":{"line":66,"column":63},"end":{"line":66,"column":125}}},"5":{"name":"(anonymous_5)","line":67,"loc":{"start":{"line":67,"column":77},"end":{"line":67,"column":93}}},"6":{"name":"parseRangeClientID","line":95,"loc":{"start":{"line":95,"column":56},"end":{"line":95,"column":107}}},"7":{"name":"getCanonicalClientID","line":109,"loc":{"start":{"line":109,"column":58},"end":{"line":109,"column":96}}},"8":{"name":"removeRecord","line":113,"loc":{"start":{"line":113,"column":50},"end":{"line":113,"column":80}}},"9":{"name":"(anonymous_9)","line":118,"loc":{"start":{"line":118,"column":28},"end":{"line":118,"column":43}}}},"statementMap":{"1":{"start":{"line":14,"column":0},"end":{"line":14,"column":95}},"2":{"start":{"line":16,"column":0},"end":{"line":16,"column":97}},"3":{"start":{"line":16,"column":39},"end":{"line":16,"column":95}},"4":{"start":{"line":46,"column":0},"end":{"line":126,"column":4}},"5":{"start":{"line":47,"column":2},"end":{"line":52,"column":3}},"6":{"start":{"line":48,"column":4},"end":{"line":48,"column":67}},"7":{"start":{"line":50,"column":4},"end":{"line":50,"column":25}},"8":{"start":{"line":51,"column":4},"end":{"line":51,"column":31}},"9":{"start":{"line":66,"column":2},"end":{"line":85,"column":4}},"10":{"start":{"line":67,"column":4},"end":{"line":69,"column":17}},"11":{"start":{"line":68,"column":6},"end":{"line":68,"column":69}},"12":{"start":{"line":70,"column":4},"end":{"line":70,"column":43}},"13":{"start":{"line":71,"column":4},"end":{"line":71,"column":36}},"14":{"start":{"line":72,"column":4},"end":{"line":83,"column":5}},"15":{"start":{"line":73,"column":6},"end":{"line":77,"column":8}},"16":{"start":{"line":78,"column":6},"end":{"line":78,"column":56}},"17":{"start":{"line":79,"column":6},"end":{"line":81,"column":7}},"18":{"start":{"line":80,"column":8},"end":{"line":80,"column":59}},"19":{"start":{"line":82,"column":6},"end":{"line":82,"column":30}},"20":{"start":{"line":84,"column":4},"end":{"line":84,"column":15}},"21":{"start":{"line":95,"column":2},"end":{"line":97,"column":4}},"22":{"start":{"line":96,"column":4},"end":{"line":96,"column":58}},"23":{"start":{"line":109,"column":2},"end":{"line":111,"column":4}},"24":{"start":{"line":110,"column":4},"end":{"line":110,"column":77}},"25":{"start":{"line":113,"column":2},"end":{"line":123,"column":4}},"26":{"start":{"line":114,"column":4},"end":{"line":114,"column":21}},"27":{"start":{"line":116,"column":4},"end":{"line":116,"column":54}},"28":{"start":{"line":117,"column":4},"end":{"line":122,"column":5}},"29":{"start":{"line":118,"column":6},"end":{"line":120,"column":9}},"30":{"start":{"line":119,"column":8},"end":{"line":119,"column":37}},"31":{"start":{"line":121,"column":6},"end":{"line":121,"column":43}},"32":{"start":{"line":125,"column":2},"end":{"line":125,"column":32}},"33":{"start":{"line":128,"column":0},"end":{"line":128,"column":40}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":73}},{"start":{"line":16,"column":76},"end":{"line":16,"column":94}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":46},"end":{"line":16,"column":49}},{"start":{"line":16,"column":53},"end":{"line":16,"column":67}}]},"3":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":4},"end":{"line":72,"column":4}},{"start":{"line":72,"column":4},"end":{"line":72,"column":4}}]},"4":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":6},"end":{"line":79,"column":6}},{"start":{"line":79,"column":6},"end":{"line":79,"column":6}}]},"5":{"line":96,"type":"binary-expr","locations":[{"start":{"line":96,"column":11},"end":{"line":96,"column":49}},{"start":{"line":96,"column":53},"end":{"line":96,"column":57}}]},"6":{"line":110,"type":"cond-expr","locations":[{"start":{"line":110,"column":37},"end":{"line":110,"column":67}},{"start":{"line":110,"column":70},"end":{"line":110,"column":76}}]},"7":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":4},"end":{"line":117,"column":4}},{"start":{"line":117,"column":4},"end":{"line":117,"column":4}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule GraphQLStoreRangeUtils"," */","","'use strict';","","var _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","/**"," * Utilities used by GraphQLStore for storing ranges"," *"," * GraphQLStore stores all of the parts of a range in a single GraphQLRange"," * object. For example, `node(4808495){friends.first(5){id,name}}` might be"," * stored similar to this (pseudo-code):"," *"," *   \"4808495\": {"," *     \"friends\": { __dataID__: \"client:1\" }"," *   },"," *   \"client:1\": {"," *     \"nodes\": new GraphQLRange(...) // all friends, not just the first 5"," *   }"," *"," * and when that query is run, the store would return a result pointing at"," * a specific part of the range, encoded into the data ID:"," *"," * {"," *   \"4808495\": {"," *     \"friends\": { __dataID__: \"client:1_first(5)\" }"," *   }"," * }"," *"," * That \"client:1_first(5)\" ID can then be used to query for the first 5"," * friends."," *"," * @internal"," */","var GraphQLStoreRangeUtils = function () {","  function GraphQLStoreRangeUtils() {","    (0, _classCallCheck3['default'])(this, GraphQLStoreRangeUtils);","","    this._rangeData = {};","    this._rangeDataKeyMap = {};","  }","","  /**","   * Returns a token that can be parsed using parseRangeClientID to recover","   * the attributes needed to retrieve the corresponding items from a","   * GraphQLRange.","   *","   * @param {array<*>} calls","   * @param {object} callValues","   * @param {string} dataID","   * @return {string}","   */","","","  GraphQLStoreRangeUtils.prototype.getClientIDForRangeWithID = function getClientIDForRangeWithID(calls, callValues, dataID) {","    var callsAsString = require('./callsFromGraphQL')(calls, callValues).map(function (call) {","      return require('./serializeRelayQueryCall')(call).substring(1);","    }).join(',');","    var key = dataID + '_' + callsAsString;","    var edge = this._rangeData[key];","    if (!edge) {","      this._rangeData[key] = {","        dataID: dataID,","        calls: calls,","        callValues: callValues","      };","      var rangeDataKeys = this._rangeDataKeyMap[dataID];","      if (!rangeDataKeys) {","        this._rangeDataKeyMap[dataID] = rangeDataKeys = [];","      }","      rangeDataKeys.push(key);","    }","    return key;","  };","","  /**","   * Parses an ID back into its data ID and calls","   *","   * @param {string} rangeSpecificClientID","   * @return {?object}","   */","","","  GraphQLStoreRangeUtils.prototype.parseRangeClientID = function parseRangeClientID(rangeSpecificClientID) {","    return this._rangeData[rangeSpecificClientID] || null;","  };","","  /**","   * If given the client id for a range view, returns the canonical client id","   * for the entire range. e.g. converts \"client:1_first(5)\" to \"client:1\".","   * Otherwise returns the input.","   *","   * @param {string} dataID","   * @return {string}","   */","","","  GraphQLStoreRangeUtils.prototype.getCanonicalClientID = function getCanonicalClientID(dataID) {","    return this._rangeData[dataID] ? this._rangeData[dataID].dataID : dataID;","  };","","  GraphQLStoreRangeUtils.prototype.removeRecord = function removeRecord(dataID) {","    var _this = this;","","    var rangeDataKeys = this._rangeDataKeyMap[dataID];","    if (rangeDataKeys) {","      rangeDataKeys.forEach(function (key) {","        delete _this._rangeData[key];","      });","      delete this._rangeDataKeyMap[dataID];","    }","  };","","  return GraphQLStoreRangeUtils;","}();","","module.exports = GraphQLStoreRangeUtils;"],"l":{"14":1,"16":1,"46":1,"47":1,"48":6,"50":6,"51":6,"66":1,"67":0,"68":0,"70":0,"71":0,"72":0,"73":0,"78":0,"79":0,"80":0,"82":0,"84":0,"95":1,"96":0,"109":1,"110":0,"113":1,"114":0,"116":0,"117":0,"118":0,"119":0,"121":0,"125":1,"128":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayRecordStore.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayRecordStore.js","s":{"1":1,"2":1,"3":1,"4":2,"5":1,"6":1,"7":1,"8":1,"9":1,"10":18,"11":18,"12":18,"13":18,"14":18,"15":18,"16":18,"17":18,"18":18,"19":6,"20":18,"21":18,"22":18,"23":12,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":1,"45":0,"46":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":0,"56":0,"57":0,"58":1,"59":0,"60":1,"61":0,"62":1,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":1,"79":0,"80":0,"81":0,"82":0,"83":1,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":1,"96":0,"97":0,"98":0,"99":0,"100":1,"101":0,"102":1,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":1,"129":0,"130":1,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":1,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":1,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":1,"154":1,"155":0,"156":0,"157":1,"158":0,"159":1},"b":{"1":[2,0],"2":[2,2],"3":[18,18,6],"4":[18,0],"5":[18,18,0],"6":[6,12],"7":[18,0],"8":[12,6],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0]},"f":{"1":2,"2":1,"3":18,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":37}}},"2":{"name":"(anonymous_2)","line":42,"loc":{"start":{"line":42,"column":23},"end":{"line":42,"column":35}}},"3":{"name":"RelayRecordStore","line":43,"loc":{"start":{"line":43,"column":2},"end":{"line":43,"column":70}}},"4":{"name":"getDataID","line":70,"loc":{"start":{"line":70,"column":41},"end":{"line":70,"column":93}}},"5":{"name":"getRecordState","line":90,"loc":{"start":{"line":90,"column":46},"end":{"line":90,"column":78}}},"6":{"name":"getPathToRecord","line":105,"loc":{"start":{"line":105,"column":47},"end":{"line":105,"column":80}}},"7":{"name":"hasOptimisticUpdate","line":115,"loc":{"start":{"line":115,"column":51},"end":{"line":115,"column":88}}},"8":{"name":"getClientMutationIDs","line":127,"loc":{"start":{"line":127,"column":52},"end":{"line":127,"column":90}}},"9":{"name":"hasFragmentData","line":143,"loc":{"start":{"line":143,"column":47},"end":{"line":143,"column":92}}},"10":{"name":"getType","line":149,"loc":{"start":{"line":149,"column":39},"end":{"line":149,"column":64}}},"11":{"name":"getField","line":159,"loc":{"start":{"line":159,"column":40},"end":{"line":159,"column":78}}},"12":{"name":"getLinkedRecordID","line":169,"loc":{"start":{"line":169,"column":49},"end":{"line":169,"column":96}}},"13":{"name":"getLinkedRecordIDs","line":185,"loc":{"start":{"line":185,"column":50},"end":{"line":185,"column":98}}},"14":{"name":"(anonymous_14)","line":191,"loc":{"start":{"line":191,"column":21},"end":{"line":191,"column":44}}},"15":{"name":"getConnectionIDsForRecord","line":205,"loc":{"start":{"line":205,"column":57},"end":{"line":205,"column":100}}},"16":{"name":"getConnectionIDsForField","line":219,"loc":{"start":{"line":219,"column":56},"end":{"line":219,"column":110}}},"17":{"name":"(anonymous_17)","line":226,"loc":{"start":{"line":226,"column":46},"end":{"line":226,"column":68}}},"18":{"name":"getRangeForceIndex","line":243,"loc":{"start":{"line":243,"column":50},"end":{"line":243,"column":92}}},"19":{"name":"getRangeFilterCalls","line":258,"loc":{"start":{"line":258,"column":51},"end":{"line":258,"column":94}}},"20":{"name":"getRangeMetadata","line":273,"loc":{"start":{"line":273,"column":48},"end":{"line":273,"column":95}}},"21":{"name":"(anonymous_21)","line":311,"loc":{"start":{"line":311,"column":43},"end":{"line":311,"column":61}}},"22":{"name":"(anonymous_22)","line":316,"loc":{"start":{"line":316,"column":16},"end":{"line":316,"column":32}}},"23":{"name":"hasRange","line":336,"loc":{"start":{"line":336,"column":40},"end":{"line":336,"column":72}}},"24":{"name":"removeRecord","line":346,"loc":{"start":{"line":346,"column":44},"end":{"line":346,"column":74}}},"25":{"name":"_getRecord","line":362,"loc":{"start":{"line":362,"column":42},"end":{"line":362,"column":70}}},"26":{"name":"_getField","line":379,"loc":{"start":{"line":379,"column":41},"end":{"line":379,"column":80}}},"27":{"name":"getFilterCalls","line":401,"loc":{"start":{"line":401,"column":0},"end":{"line":401,"column":31}}},"28":{"name":"(anonymous_28)","line":402,"loc":{"start":{"line":402,"column":22},"end":{"line":402,"column":38}}},"29":{"name":"getFieldNameFromKey","line":412,"loc":{"start":{"line":412,"column":0},"end":{"line":412,"column":34}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":82}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":97}},"4":{"start":{"line":19,"column":39},"end":{"line":19,"column":95}},"5":{"start":{"line":21,"column":0},"end":{"line":21,"column":15}},"6":{"start":{"line":23,"column":0},"end":{"line":23,"column":54}},"7":{"start":{"line":25,"column":0},"end":{"line":31,"column":72}},"8":{"start":{"line":42,"column":0},"end":{"line":393,"column":4}},"9":{"start":{"line":43,"column":2},"end":{"line":62,"column":3}},"10":{"start":{"line":44,"column":4},"end":{"line":44,"column":61}},"11":{"start":{"line":46,"column":4},"end":{"line":46,"column":48}},"12":{"start":{"line":47,"column":4},"end":{"line":47,"column":83}},"13":{"start":{"line":48,"column":4},"end":{"line":48,"column":48}},"14":{"start":{"line":49,"column":4},"end":{"line":49,"column":54}},"15":{"start":{"line":50,"column":4},"end":{"line":50,"column":36}},"16":{"start":{"line":51,"column":4},"end":{"line":51,"column":71}},"17":{"start":{"line":52,"column":4},"end":{"line":52,"column":23}},"18":{"start":{"line":53,"column":4},"end":{"line":55,"column":5}},"19":{"start":{"line":54,"column":6},"end":{"line":54,"column":46}},"20":{"start":{"line":56,"column":4},"end":{"line":58,"column":5}},"21":{"start":{"line":57,"column":6},"end":{"line":57,"column":40}},"22":{"start":{"line":59,"column":4},"end":{"line":61,"column":5}},"23":{"start":{"line":60,"column":6},"end":{"line":60,"column":46}},"24":{"start":{"line":70,"column":2},"end":{"line":83,"column":4}},"25":{"start":{"line":71,"column":4},"end":{"line":74,"column":5}},"26":{"start":{"line":72,"column":6},"end":{"line":72,"column":163}},"27":{"start":{"line":73,"column":6},"end":{"line":73,"column":33}},"28":{"start":{"line":75,"column":4},"end":{"line":77,"column":5}},"29":{"start":{"line":76,"column":6},"end":{"line":76,"column":34}},"30":{"start":{"line":78,"column":4},"end":{"line":82,"column":5}},"31":{"start":{"line":79,"column":6},"end":{"line":79,"column":64}},"32":{"start":{"line":80,"column":11},"end":{"line":82,"column":5}},"33":{"start":{"line":81,"column":6},"end":{"line":81,"column":70}},"34":{"start":{"line":90,"column":2},"end":{"line":98,"column":4}},"35":{"start":{"line":91,"column":4},"end":{"line":91,"column":41}},"36":{"start":{"line":92,"column":4},"end":{"line":96,"column":5}},"37":{"start":{"line":93,"column":6},"end":{"line":93,"column":27}},"38":{"start":{"line":94,"column":11},"end":{"line":96,"column":5}},"39":{"start":{"line":95,"column":6},"end":{"line":95,"column":23}},"40":{"start":{"line":97,"column":4},"end":{"line":97,"column":22}},"41":{"start":{"line":105,"column":2},"end":{"line":108,"column":4}},"42":{"start":{"line":106,"column":4},"end":{"line":106,"column":44}},"43":{"start":{"line":107,"column":4},"end":{"line":107,"column":16}},"44":{"start":{"line":115,"column":2},"end":{"line":118,"column":4}},"45":{"start":{"line":116,"column":4},"end":{"line":116,"column":44}},"46":{"start":{"line":117,"column":4},"end":{"line":117,"column":72}},"47":{"start":{"line":127,"column":2},"end":{"line":136,"column":4}},"48":{"start":{"line":128,"column":4},"end":{"line":128,"column":44}},"49":{"start":{"line":129,"column":4},"end":{"line":134,"column":5}},"50":{"start":{"line":130,"column":6},"end":{"line":130,"column":41}},"51":{"start":{"line":131,"column":6},"end":{"line":133,"column":7}},"52":{"start":{"line":132,"column":8},"end":{"line":132,"column":36}},"53":{"start":{"line":135,"column":4},"end":{"line":135,"column":16}},"54":{"start":{"line":143,"column":2},"end":{"line":147,"column":4}},"55":{"start":{"line":144,"column":4},"end":{"line":144,"column":76}},"56":{"start":{"line":145,"column":4},"end":{"line":145,"column":309}},"57":{"start":{"line":146,"column":4},"end":{"line":146,"column":70}},"58":{"start":{"line":149,"column":2},"end":{"line":152,"column":4}},"59":{"start":{"line":151,"column":4},"end":{"line":151,"column":48}},"60":{"start":{"line":159,"column":2},"end":{"line":161,"column":4}},"61":{"start":{"line":160,"column":4},"end":{"line":160,"column":46}},"62":{"start":{"line":169,"column":2},"end":{"line":177,"column":4}},"63":{"start":{"line":170,"column":4},"end":{"line":170,"column":51}},"64":{"start":{"line":171,"column":4},"end":{"line":173,"column":5}},"65":{"start":{"line":172,"column":6},"end":{"line":172,"column":19}},"66":{"start":{"line":174,"column":4},"end":{"line":174,"column":59}},"67":{"start":{"line":175,"column":4},"end":{"line":175,"column":169}},"68":{"start":{"line":176,"column":4},"end":{"line":176,"column":54}},"69":{"start":{"line":185,"column":2},"end":{"line":196,"column":4}},"70":{"start":{"line":186,"column":4},"end":{"line":186,"column":51}},"71":{"start":{"line":187,"column":4},"end":{"line":189,"column":5}},"72":{"start":{"line":188,"column":6},"end":{"line":188,"column":19}},"73":{"start":{"line":190,"column":4},"end":{"line":190,"column":195}},"74":{"start":{"line":191,"column":4},"end":{"line":195,"column":7}},"75":{"start":{"line":192,"column":6},"end":{"line":192,"column":63}},"76":{"start":{"line":193,"column":6},"end":{"line":193,"column":197}},"77":{"start":{"line":194,"column":6},"end":{"line":194,"column":56}},"78":{"start":{"line":205,"column":2},"end":{"line":211,"column":4}},"79":{"start":{"line":206,"column":4},"end":{"line":206,"column":56}},"80":{"start":{"line":207,"column":4},"end":{"line":209,"column":5}},"81":{"start":{"line":208,"column":6},"end":{"line":208,"column":51}},"82":{"start":{"line":210,"column":4},"end":{"line":210,"column":16}},"83":{"start":{"line":219,"column":2},"end":{"line":236,"column":4}},"84":{"start":{"line":221,"column":4},"end":{"line":221,"column":39}},"85":{"start":{"line":222,"column":4},"end":{"line":224,"column":5}},"86":{"start":{"line":223,"column":6},"end":{"line":223,"column":20}},"87":{"start":{"line":225,"column":4},"end":{"line":225,"column":31}},"88":{"start":{"line":226,"column":4},"end":{"line":234,"column":7}},"89":{"start":{"line":227,"column":6},"end":{"line":233,"column":7}},"90":{"start":{"line":228,"column":8},"end":{"line":228,"column":78}},"91":{"start":{"line":229,"column":8},"end":{"line":232,"column":9}},"92":{"start":{"line":230,"column":10},"end":{"line":230,"column":46}},"93":{"start":{"line":231,"column":10},"end":{"line":231,"column":43}},"94":{"start":{"line":235,"column":4},"end":{"line":235,"column":25}},"95":{"start":{"line":243,"column":2},"end":{"line":249,"column":4}},"96":{"start":{"line":244,"column":4},"end":{"line":244,"column":63}},"97":{"start":{"line":245,"column":4},"end":{"line":247,"column":5}},"98":{"start":{"line":246,"column":6},"end":{"line":246,"column":16}},"99":{"start":{"line":248,"column":4},"end":{"line":248,"column":27}},"100":{"start":{"line":258,"column":2},"end":{"line":260,"column":4}},"101":{"start":{"line":259,"column":4},"end":{"line":259,"column":54}},"102":{"start":{"line":273,"column":2},"end":{"line":329,"column":4}},"103":{"start":{"line":274,"column":4},"end":{"line":274,"column":21}},"104":{"start":{"line":276,"column":4},"end":{"line":278,"column":5}},"105":{"start":{"line":277,"column":6},"end":{"line":277,"column":26}},"106":{"start":{"line":279,"column":4},"end":{"line":279,"column":52}},"107":{"start":{"line":280,"column":4},"end":{"line":285,"column":5}},"108":{"start":{"line":281,"column":6},"end":{"line":283,"column":7}},"109":{"start":{"line":282,"column":8},"end":{"line":282,"column":141}},"110":{"start":{"line":284,"column":6},"end":{"line":284,"column":23}},"111":{"start":{"line":286,"column":4},"end":{"line":286,"column":44}},"112":{"start":{"line":289,"column":4},"end":{"line":297,"column":5}},"113":{"start":{"line":290,"column":6},"end":{"line":296,"column":8}},"114":{"start":{"line":298,"column":4},"end":{"line":298,"column":86}},"115":{"start":{"line":299,"column":4},"end":{"line":299,"column":73}},"116":{"start":{"line":300,"column":4},"end":{"line":300,"column":40}},"117":{"start":{"line":301,"column":4},"end":{"line":302,"column":54}},"118":{"start":{"line":304,"column":4},"end":{"line":308,"column":5}},"119":{"start":{"line":305,"column":6},"end":{"line":305,"column":48}},"120":{"start":{"line":307,"column":6},"end":{"line":307,"column":21}},"121":{"start":{"line":309,"column":4},"end":{"line":309,"column":31}},"122":{"start":{"line":310,"column":4},"end":{"line":321,"column":5}},"123":{"start":{"line":311,"column":6},"end":{"line":318,"column":9}},"124":{"start":{"line":312,"column":8},"end":{"line":315,"column":10}},"125":{"start":{"line":317,"column":8},"end":{"line":317,"column":45}},"126":{"start":{"line":320,"column":6},"end":{"line":320,"column":25}},"127":{"start":{"line":322,"column":4},"end":{"line":328,"column":6}},"128":{"start":{"line":336,"column":2},"end":{"line":338,"column":4}},"129":{"start":{"line":337,"column":4},"end":{"line":337,"column":49}},"130":{"start":{"line":346,"column":2},"end":{"line":355,"column":4}},"131":{"start":{"line":347,"column":4},"end":{"line":347,"column":33}},"132":{"start":{"line":348,"column":4},"end":{"line":350,"column":5}},"133":{"start":{"line":349,"column":6},"end":{"line":349,"column":41}},"134":{"start":{"line":351,"column":4},"end":{"line":353,"column":5}},"135":{"start":{"line":352,"column":6},"end":{"line":352,"column":41}},"136":{"start":{"line":354,"column":4},"end":{"line":354,"column":43}},"137":{"start":{"line":362,"column":2},"end":{"line":370,"column":4}},"138":{"start":{"line":363,"column":4},"end":{"line":369,"column":5}},"139":{"start":{"line":364,"column":6},"end":{"line":364,"column":41}},"140":{"start":{"line":365,"column":11},"end":{"line":369,"column":5}},"141":{"start":{"line":366,"column":6},"end":{"line":366,"column":35}},"142":{"start":{"line":367,"column":11},"end":{"line":369,"column":5}},"143":{"start":{"line":368,"column":6},"end":{"line":368,"column":41}},"144":{"start":{"line":379,"column":2},"end":{"line":390,"column":4}},"145":{"start":{"line":380,"column":4},"end":{"line":380,"column":32}},"146":{"start":{"line":381,"column":4},"end":{"line":388,"column":5}},"147":{"start":{"line":382,"column":6},"end":{"line":382,"column":39}},"148":{"start":{"line":383,"column":6},"end":{"line":387,"column":7}},"149":{"start":{"line":384,"column":8},"end":{"line":384,"column":20}},"150":{"start":{"line":385,"column":13},"end":{"line":387,"column":7}},"151":{"start":{"line":386,"column":8},"end":{"line":386,"column":34}},"152":{"start":{"line":389,"column":4},"end":{"line":389,"column":21}},"153":{"start":{"line":392,"column":2},"end":{"line":392,"column":26}},"154":{"start":{"line":401,"column":0},"end":{"line":405,"column":1}},"155":{"start":{"line":402,"column":2},"end":{"line":404,"column":5}},"156":{"start":{"line":403,"column":4},"end":{"line":403,"column":73}},"157":{"start":{"line":412,"column":0},"end":{"line":415,"column":1}},"158":{"start":{"line":414,"column":2},"end":{"line":414,"column":55}},"159":{"start":{"line":417,"column":0},"end":{"line":417,"column":34}}},"branchMap":{"1":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":70},"end":{"line":19,"column":73}},{"start":{"line":19,"column":76},"end":{"line":19,"column":94}}]},"2":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":46},"end":{"line":19,"column":49}},{"start":{"line":19,"column":53},"end":{"line":19,"column":67}}]},"3":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":30},"end":{"line":47,"column":42}},{"start":{"line":47,"column":46},"end":{"line":47,"column":76}},{"start":{"line":47,"column":80},"end":{"line":47,"column":82}}]},"4":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":30},"end":{"line":49,"column":47}},{"start":{"line":49,"column":51},"end":{"line":49,"column":53}}]},"5":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":24},"end":{"line":51,"column":36}},{"start":{"line":51,"column":40},"end":{"line":51,"column":64}},{"start":{"line":51,"column":68},"end":{"line":51,"column":70}}]},"6":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":4},"end":{"line":53,"column":4}},{"start":{"line":53,"column":4},"end":{"line":53,"column":4}}]},"7":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":4},"end":{"line":56,"column":4}},{"start":{"line":56,"column":4},"end":{"line":56,"column":4}}]},"8":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":4},"end":{"line":59,"column":4}},{"start":{"line":59,"column":4},"end":{"line":59,"column":4}}]},"9":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":4},"end":{"line":71,"column":4}},{"start":{"line":71,"column":4},"end":{"line":71,"column":4}}]},"10":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":4},"end":{"line":75,"column":4}},{"start":{"line":75,"column":4},"end":{"line":75,"column":4}}]},"11":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":4},"end":{"line":78,"column":4}},{"start":{"line":78,"column":4},"end":{"line":78,"column":4}}]},"12":{"line":78,"type":"binary-expr","locations":[{"start":{"line":78,"column":8},"end":{"line":78,"column":52}},{"start":{"line":78,"column":56},"end":{"line":78,"column":121}}]},"13":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":11},"end":{"line":80,"column":11}},{"start":{"line":80,"column":11},"end":{"line":80,"column":11}}]},"14":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":4},"end":{"line":92,"column":4}},{"start":{"line":92,"column":4},"end":{"line":92,"column":4}}]},"15":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":11},"end":{"line":94,"column":11}},{"start":{"line":94,"column":11},"end":{"line":94,"column":11}}]},"16":{"line":117,"type":"cond-expr","locations":[{"start":{"line":117,"column":27},"end":{"line":117,"column":63}},{"start":{"line":117,"column":66},"end":{"line":117,"column":71}}]},"17":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":4},"end":{"line":129,"column":4}},{"start":{"line":129,"column":4},"end":{"line":129,"column":4}}]},"18":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":6},"end":{"line":131,"column":6}},{"start":{"line":131,"column":6},"end":{"line":131,"column":6}}]},"19":{"line":145,"type":"binary-expr","locations":[{"start":{"line":145,"column":34},"end":{"line":145,"column":73}},{"start":{"line":145,"column":77},"end":{"line":145,"column":104}}]},"20":{"line":146,"type":"binary-expr","locations":[{"start":{"line":146,"column":14},"end":{"line":146,"column":33}},{"start":{"line":146,"column":37},"end":{"line":146,"column":68}}]},"21":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":4},"end":{"line":171,"column":4}},{"start":{"line":171,"column":4},"end":{"line":171,"column":4}}]},"22":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":4},"end":{"line":187,"column":4}},{"start":{"line":187,"column":4},"end":{"line":187,"column":4}}]},"23":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":4},"end":{"line":207,"column":4}},{"start":{"line":207,"column":4},"end":{"line":207,"column":4}}]},"24":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":4},"end":{"line":222,"column":4}},{"start":{"line":222,"column":4},"end":{"line":222,"column":4}}]},"25":{"line":227,"type":"if","locations":[{"start":{"line":227,"column":6},"end":{"line":227,"column":6}},{"start":{"line":227,"column":6},"end":{"line":227,"column":6}}]},"26":{"line":227,"type":"binary-expr","locations":[{"start":{"line":227,"column":10},"end":{"line":227,"column":15}},{"start":{"line":227,"column":19},"end":{"line":227,"column":58}}]},"27":{"line":229,"type":"if","locations":[{"start":{"line":229,"column":8},"end":{"line":229,"column":8}},{"start":{"line":229,"column":8},"end":{"line":229,"column":8}}]},"28":{"line":230,"type":"binary-expr","locations":[{"start":{"line":230,"column":26},"end":{"line":230,"column":39}},{"start":{"line":230,"column":43},"end":{"line":230,"column":45}}]},"29":{"line":245,"type":"if","locations":[{"start":{"line":245,"column":4},"end":{"line":245,"column":4}},{"start":{"line":245,"column":4},"end":{"line":245,"column":4}}]},"30":{"line":248,"type":"binary-expr","locations":[{"start":{"line":248,"column":11},"end":{"line":248,"column":21}},{"start":{"line":248,"column":25},"end":{"line":248,"column":26}}]},"31":{"line":276,"type":"if","locations":[{"start":{"line":276,"column":4},"end":{"line":276,"column":4}},{"start":{"line":276,"column":4},"end":{"line":276,"column":4}}]},"32":{"line":280,"type":"if","locations":[{"start":{"line":280,"column":4},"end":{"line":280,"column":4}},{"start":{"line":280,"column":4},"end":{"line":280,"column":4}}]},"33":{"line":281,"type":"if","locations":[{"start":{"line":281,"column":6},"end":{"line":281,"column":6}},{"start":{"line":281,"column":6},"end":{"line":281,"column":6}}]},"34":{"line":289,"type":"if","locations":[{"start":{"line":289,"column":4},"end":{"line":289,"column":4}},{"start":{"line":289,"column":4},"end":{"line":289,"column":4}}]},"35":{"line":298,"type":"cond-expr","locations":[{"start":{"line":298,"column":45},"end":{"line":298,"column":78}},{"start":{"line":298,"column":81},"end":{"line":298,"column":85}}]},"36":{"line":304,"type":"if","locations":[{"start":{"line":304,"column":4},"end":{"line":304,"column":4}},{"start":{"line":304,"column":4},"end":{"line":304,"column":4}}]},"37":{"line":304,"type":"binary-expr","locations":[{"start":{"line":304,"column":8},"end":{"line":304,"column":17}},{"start":{"line":304,"column":21},"end":{"line":304,"column":37}}]},"38":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":4},"end":{"line":310,"column":4}},{"start":{"line":310,"column":4},"end":{"line":310,"column":4}}]},"39":{"line":348,"type":"if","locations":[{"start":{"line":348,"column":4},"end":{"line":348,"column":4}},{"start":{"line":348,"column":4},"end":{"line":348,"column":4}}]},"40":{"line":351,"type":"if","locations":[{"start":{"line":351,"column":4},"end":{"line":351,"column":4}},{"start":{"line":351,"column":4},"end":{"line":351,"column":4}}]},"41":{"line":363,"type":"if","locations":[{"start":{"line":363,"column":4},"end":{"line":363,"column":4}},{"start":{"line":363,"column":4},"end":{"line":363,"column":4}}]},"42":{"line":363,"type":"binary-expr","locations":[{"start":{"line":363,"column":8},"end":{"line":363,"column":27}},{"start":{"line":363,"column":31},"end":{"line":363,"column":73}}]},"43":{"line":365,"type":"if","locations":[{"start":{"line":365,"column":11},"end":{"line":365,"column":11}},{"start":{"line":365,"column":11},"end":{"line":365,"column":11}}]},"44":{"line":367,"type":"if","locations":[{"start":{"line":367,"column":11},"end":{"line":367,"column":11}},{"start":{"line":367,"column":11},"end":{"line":367,"column":11}}]},"45":{"line":383,"type":"if","locations":[{"start":{"line":383,"column":6},"end":{"line":383,"column":6}},{"start":{"line":383,"column":6},"end":{"line":383,"column":6}}]},"46":{"line":385,"type":"if","locations":[{"start":{"line":385,"column":13},"end":{"line":385,"column":13}},{"start":{"line":385,"column":13},"end":{"line":385,"column":13}}]},"47":{"line":385,"type":"binary-expr","locations":[{"start":{"line":385,"column":17},"end":{"line":385,"column":23}},{"start":{"line":385,"column":27},"end":{"line":385,"column":60}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayRecordStore"," * "," */","","'use strict';","","var _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));","","var _keys2 = _interopRequireDefault(require('babel-runtime/core-js/object/keys'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","var EMPTY = '';","","var NODE = require('./RelayConnectionInterface').NODE;","","var _RelayRecord$Metadata = require('./RelayRecord').MetadataKey,","    FILTER_CALLS = _RelayRecord$Metadata.FILTER_CALLS,","    FORCE_INDEX = _RelayRecord$Metadata.FORCE_INDEX,","    MUTATION_IDS = _RelayRecord$Metadata.MUTATION_IDS,","    PATH = _RelayRecord$Metadata.PATH,","    RANGE = _RelayRecord$Metadata.RANGE,","    RESOLVED_FRAGMENT_MAP = _RelayRecord$Metadata.RESOLVED_FRAGMENT_MAP;","","/**"," * @internal"," *"," * `RelayRecordStore` is the central repository for all data fetched by the"," * client. Data is stored as a map from IDs to Records. Records are shapes of"," * data with globally unique \"data IDs\"."," */","","","var RelayRecordStore = function () {","  function RelayRecordStore(records, rootCallMaps, nodeConnectionMap) {","    (0, _classCallCheck3['default'])(this, RelayRecordStore);","","    this._cachedRecords = records.cachedRecords;","    this._cachedRootCallMap = rootCallMaps && rootCallMaps.cachedRootCallMap || {};","    this._queuedRecords = records.queuedRecords;","    this._nodeConnectionMap = nodeConnectionMap || {};","    this._records = records.records;","    this._rootCallMap = rootCallMaps && rootCallMaps.rootCallMap || {};","    this._storage = [];","    if (this._queuedRecords) {","      this._storage.push(this._queuedRecords);","    }","    if (this._records) {","      this._storage.push(this._records);","    }","    if (this._cachedRecords) {","      this._storage.push(this._cachedRecords);","    }","  }","","  /**","   * Get the data ID associated with a storage key (and optionally an","   * identifying argument value) for a root query.","   */","","","  RelayRecordStore.prototype.getDataID = function getDataID(storageKey, identifyingArgValue) {","    if (require('./RelayNodeInterface').isNodeRootCall(storageKey)) {","      require('fbjs/lib/invariant')(identifyingArgValue != null, 'RelayRecordStore.getDataID(): Argument to `%s()` ' + 'cannot be null or undefined.', storageKey);","      return identifyingArgValue;","    }","    if (identifyingArgValue == null) {","      identifyingArgValue = EMPTY;","    }","    if (this._rootCallMap.hasOwnProperty(storageKey) && this._rootCallMap[storageKey].hasOwnProperty(identifyingArgValue)) {","      return this._rootCallMap[storageKey][identifyingArgValue];","    } else if (this._cachedRootCallMap.hasOwnProperty(storageKey)) {","      return this._cachedRootCallMap[storageKey][identifyingArgValue];","    }","  };","","  /**","   * Returns the status of the record stored at `dataID`.","   */","","","  RelayRecordStore.prototype.getRecordState = function getRecordState(dataID) {","    var record = this._getRecord(dataID);","    if (record === null) {","      return 'NONEXISTENT';","    } else if (record === undefined) {","      return 'UNKNOWN';","    }","    return 'EXISTENT';","  };","","  /**","   * Returns the path to a non-refetchable record.","   */","","","  RelayRecordStore.prototype.getPathToRecord = function getPathToRecord(dataID) {","    var path = this._getField(dataID, PATH);","    return path;","  };","","  /**","   * Returns whether a given record is affected by an optimistic update.","   */","","","  RelayRecordStore.prototype.hasOptimisticUpdate = function hasOptimisticUpdate(dataID) {","    var queuedRecords = this._queuedRecords;","    return queuedRecords ? queuedRecords.hasOwnProperty(dataID) : false;","  };","","  /**","   * Returns a list of client mutation IDs for queued mutations whose optimistic","   * updates are affecting the record corresponding the given dataID. Returns","   * null if the record isn't affected by any optimistic updates.","   */","","","  RelayRecordStore.prototype.getClientMutationIDs = function getClientMutationIDs(dataID) {","    var queuedRecords = this._queuedRecords;","    if (queuedRecords) {","      var record = queuedRecords[dataID];","      if (record) {","        return record[MUTATION_IDS];","      }","    }","    return null;","  };","","  /**","   * Check whether a given record has received data for a deferred fragment.","   */","","","  RelayRecordStore.prototype.hasFragmentData = function hasFragmentData(dataID, fragmentID) {","    var resolvedFragmentMap = this._getField(dataID, RESOLVED_FRAGMENT_MAP);","    require('fbjs/lib/invariant')(typeof resolvedFragmentMap === 'object' || resolvedFragmentMap == null, 'RelayRecordStore.hasFragmentData(): Expected the map of ' + 'resolved deferred fragments associated with record `%s` to be null or ' + 'an object. Found a(n) `%s`.', dataID, typeof resolvedFragmentMap);","    return !!(resolvedFragmentMap && resolvedFragmentMap[fragmentID]);","  };","","  RelayRecordStore.prototype.getType = function getType(dataID) {","    // `__typename` property is typed as `string`","    return this._getField(dataID, '__typename');","  };","","  /**","   * Returns the value of the field for the given dataID.","   */","","","  RelayRecordStore.prototype.getField = function getField(dataID, storageKey) {","    return this._getField(dataID, storageKey);","  };","","  /**","   * Returns the Data ID of a linked record (eg the ID of the `address` record","   * in `actor{address}`).","   */","","","  RelayRecordStore.prototype.getLinkedRecordID = function getLinkedRecordID(dataID, storageKey) {","    var field = this._getField(dataID, storageKey);","    if (field == null) {","      return field;","    }","    var record = require('./RelayRecord').getRecord(field);","    require('fbjs/lib/invariant')(record, 'RelayRecordStore.getLinkedRecordID(): Expected field `%s` for record ' + '`%s` to have a linked record.', storageKey, dataID);","    return require('./RelayRecord').getDataID(record);","  };","","  /**","   * Returns an array of Data ID for a plural linked field (eg the actor IDs of","   * the `likers` in `story{likers}`).","   */","","","  RelayRecordStore.prototype.getLinkedRecordIDs = function getLinkedRecordIDs(dataID, storageKey) {","    var field = this._getField(dataID, storageKey);","    if (field == null) {","      return field;","    }","    require('fbjs/lib/invariant')(Array.isArray(field), 'RelayRecordStore.getLinkedRecordIDs(): Expected field `%s` for ' + 'record `%s` to have an array of linked records.', storageKey, dataID);","    return field.map(function (element, ii) {","      var record = require('./RelayRecord').getRecord(element);","      require('fbjs/lib/invariant')(record, 'RelayRecordStore.getLinkedRecordIDs(): Expected element at index %s ' + 'in field `%s` for record `%s` to be a linked record.', ii, storageKey, dataID);","      return require('./RelayRecord').getDataID(record);","    });","  };","","  /**","   * Gets the connectionIDs for all the connections that contain the given","   * record as a `node`, or null if the record does not appear as a `node` in","   * any connection.","   */","","","  RelayRecordStore.prototype.getConnectionIDsForRecord = function getConnectionIDsForRecord(dataID) {","    var connectionIDs = this._nodeConnectionMap[dataID];","    if (connectionIDs) {","      return (0, _keys2['default'])(connectionIDs);","    }","    return null;","  };","","  /**","   * Gets the connectionIDs for all variations of calls for the given base","   * schema name (Ex: `posts.orderby(recent)` and `posts.orderby(likes)`).","   */","","","  RelayRecordStore.prototype.getConnectionIDsForField = function getConnectionIDsForField(dataID, schemaName) {","    // ignore queued records because not all range fields may be present there","    var record = this._records[dataID];","    if (record == null) {","      return record;","    }","    var connectionIDs = void 0;","    require('fbjs/lib/forEachObject')(record, function (datum, key) {","      if (datum && getFieldNameFromKey(key) === schemaName) {","        var connectionID = require('./RelayRecord').getDataIDForObject(datum);","        if (connectionID) {","          connectionIDs = connectionIDs || [];","          connectionIDs.push(connectionID);","        }","      }","    });","    return connectionIDs;","  };","","  /**","   * Get the force index associated with the range at `connectionID`.","   */","","","  RelayRecordStore.prototype.getRangeForceIndex = function getRangeForceIndex(connectionID) {","    var forceIndex = this._getField(connectionID, FORCE_INDEX);","    if (forceIndex === null) {","      return -1;","    }","    return forceIndex || 0;","  };","","  /**","   * Get the condition calls that were used to fetch the given connection.","   * Ex: for a field `photos.orderby(recent)`, this would be","   * [{name: 'orderby', value: 'recent'}]","   */","","","  RelayRecordStore.prototype.getRangeFilterCalls = function getRangeFilterCalls(connectionID) {","    return this._getField(connectionID, FILTER_CALLS);","  };","","  /**","   * Returns range information for the given connection field:","   * - `filteredEdges`: any edges already fetched for the given `calls`.","   * - `diffCalls`: an array of calls describing the difference","   *   between the given `calls` and already fetched data. Includes conditional","   *   calls (`orderby`) and range/offset calls (`first`, `after`).","   * - `filterCalls`: the subset of `calls` that are condition calls","   *   (`orderby`).","   */","","","  RelayRecordStore.prototype.getRangeMetadata = function getRangeMetadata(connectionID, calls) {","    var _this = this;","","    if (connectionID == null) {","      return connectionID;","    }","    var range = this._getField(connectionID, RANGE);","    if (range == null) {","      if (range === null) {","        require('fbjs/lib/warning')(false, 'RelayRecordStore.getRangeMetadata(): Expected range to exist if ' + '`edges` has been fetched.');","      }","      return undefined;","    }","    var filterCalls = getFilterCalls(calls);","    // Edges can only be fetched if a range call (first/last/find) is given.","    // Otherwise return diffCalls/filterCalls with empty edges.","    if (calls.length === filterCalls.length) {","      return {","        diffCalls: calls,","        filterCalls: filterCalls,","        pageInfo: undefined,","        requestedEdgeIDs: [],","        filteredEdges: []","      };","    }","    var queuedRecord = this._queuedRecords ? this._queuedRecords[connectionID] : null;","    var rangeInfo = range.retrieveRangeInfoForQuery(calls, queuedRecord);","    var diffCalls = rangeInfo.diffCalls;","    var pageInfo = rangeInfo.pageInfo,","        requestedEdgeIDs = rangeInfo.requestedEdgeIDs;","","    if (diffCalls && diffCalls.length) {","      diffCalls = filterCalls.concat(diffCalls);","    } else {","      diffCalls = [];","    }","    var filteredEdges = void 0;","    if (requestedEdgeIDs) {","      filteredEdges = requestedEdgeIDs.map(function (edgeID) {","        return {","          edgeID: edgeID,","          nodeID: _this.getLinkedRecordID(edgeID, NODE)","        };","      }).filter(function (edge) {","        return _this._getRecord(edge.nodeID);","      });","    } else {","      filteredEdges = [];","    }","    return {","      diffCalls: diffCalls,","      filterCalls: filterCalls,","      pageInfo: pageInfo,","      requestedEdgeIDs: requestedEdgeIDs,","      filteredEdges: filteredEdges","    };","  };","","  /**","   * Returns whether there is a range at `connectionID`.","   */","","","  RelayRecordStore.prototype.hasRange = function hasRange(connectionID) {","    return !!this._getField(connectionID, RANGE);","  };","","  /**","   * Completely removes the record identified by `dataID` from the store.","   * This is only used by garbage collection.","   */","","","  RelayRecordStore.prototype.removeRecord = function removeRecord(dataID) {","    delete this._records[dataID];","    if (this._queuedRecords) {","      delete this._queuedRecords[dataID];","    }","    if (this._cachedRecords) {","      delete this._cachedRecords[dataID];","    }","    delete this._nodeConnectionMap[dataID];","  };","","  /**","   * Gets the first version of the record from the available caches.","   */","","","  RelayRecordStore.prototype._getRecord = function _getRecord(dataID) {","    if (this._queuedRecords && this._queuedRecords.hasOwnProperty(dataID)) {","      return this._queuedRecords[dataID];","    } else if (this._records.hasOwnProperty(dataID)) {","      return this._records[dataID];","    } else if (this._cachedRecords) {","      return this._cachedRecords[dataID];","    }","  };","","  /**","   * Get the value of the field from the first version of the record for which","   * the field is defined, returning `null` if the record has been deleted or","   * `undefined` if the record has not been fetched.","   */","","","  RelayRecordStore.prototype._getField = function _getField(dataID, storageKey) {","    var storage = this._storage;","    for (var ii = 0; ii < storage.length; ii++) {","      var record = storage[ii][dataID];","      if (record === null) {","        return null;","      } else if (record && record.hasOwnProperty(storageKey)) {","        return record[storageKey];","      }","    }","    return undefined;","  };","","  return RelayRecordStore;","}();","","/**"," * Filter calls to only those that specify conditions on the returned results"," * (ex: `orderby(TOP_STORIES)`), removing generic calls (ex: `first`, `find`)."," */","","","function getFilterCalls(calls) {","  return calls.filter(function (call) {","    return !require('./RelayConnectionInterface').isConnectionCall(call);","  });","}","","/**"," * Returns the field name based on the object key used to store the data in"," * nodeData. It returns the field name without any calls. For example, the"," * field name for 'profile_picture{size:\"50\"}' will be 'profile_picture'"," */","function getFieldNameFromKey(key) {","  // This is based on the GraphQL spec for what constitutes a valid field name.","  return key.split(/(?![_A-Za-z][_0-9A-Za-z]*)/, 1)[0];","}","","module.exports = RelayRecordStore;"],"l":{"15":1,"17":1,"19":2,"21":1,"23":1,"25":1,"42":1,"43":1,"44":18,"46":18,"47":18,"48":18,"49":18,"50":18,"51":18,"52":18,"53":18,"54":6,"56":18,"57":18,"59":18,"60":12,"70":1,"71":0,"72":0,"73":0,"75":0,"76":0,"78":0,"79":0,"80":0,"81":0,"90":1,"91":0,"92":0,"93":0,"94":0,"95":0,"97":0,"105":1,"106":0,"107":0,"115":1,"116":0,"117":0,"127":1,"128":0,"129":0,"130":0,"131":0,"132":0,"135":0,"143":1,"144":0,"145":0,"146":0,"149":1,"151":0,"159":1,"160":0,"169":1,"170":0,"171":0,"172":0,"174":0,"175":0,"176":0,"185":1,"186":0,"187":0,"188":0,"190":0,"191":0,"192":0,"193":0,"194":0,"205":1,"206":0,"207":0,"208":0,"210":0,"219":1,"221":0,"222":0,"223":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"235":0,"243":1,"244":0,"245":0,"246":0,"248":0,"258":1,"259":0,"273":1,"274":0,"276":0,"277":0,"279":0,"280":0,"281":0,"282":0,"284":0,"286":0,"289":0,"290":0,"298":0,"299":0,"300":0,"301":0,"304":0,"305":0,"307":0,"309":0,"310":0,"311":0,"312":0,"317":0,"320":0,"322":0,"336":1,"337":0,"346":1,"347":0,"348":0,"349":0,"351":0,"352":0,"354":0,"362":1,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"379":1,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"389":0,"392":1,"401":1,"402":0,"403":0,"412":1,"414":0,"417":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayRecord.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayRecord.js","s":{"1":1,"2":1,"3":1,"4":2,"5":1,"6":1,"7":1,"8":11,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1},"b":{"1":[2,0],"2":[2,2],"3":[0,0,0,0],"4":[0,0]},"f":{"1":2,"2":11,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":37}}},"2":{"name":"(anonymous_2)","line":36,"loc":{"start":{"line":36,"column":44},"end":{"line":36,"column":60}}},"3":{"name":"create","line":47,"loc":{"start":{"line":47,"column":10},"end":{"line":47,"column":34}}},"4":{"name":"createWithFields","line":50,"loc":{"start":{"line":50,"column":20},"end":{"line":50,"column":62}}},"5":{"name":"isRecord","line":53,"loc":{"start":{"line":53,"column":12},"end":{"line":53,"column":43}}},"6":{"name":"getRecord","line":56,"loc":{"start":{"line":56,"column":13},"end":{"line":56,"column":45}}},"7":{"name":"getDataID","line":63,"loc":{"start":{"line":63,"column":13},"end":{"line":63,"column":40}}},"8":{"name":"getDataIDForObject","line":66,"loc":{"start":{"line":66,"column":22},"end":{"line":66,"column":63}}},"9":{"name":"isClientID","line":75,"loc":{"start":{"line":75,"column":14},"end":{"line":75,"column":42}}},"10":{"name":"isMetadataKey","line":78,"loc":{"start":{"line":78,"column":17},"end":{"line":78,"column":45}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":81}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":82}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":97}},"4":{"start":{"line":19,"column":39},"end":{"line":19,"column":95}},"5":{"start":{"line":21,"column":0},"end":{"line":33,"column":2}},"6":{"start":{"line":35,"column":0},"end":{"line":35,"column":27}},"7":{"start":{"line":36,"column":0},"end":{"line":38,"column":3}},"8":{"start":{"line":37,"column":2},"end":{"line":37,"column":46}},"9":{"start":{"line":43,"column":0},"end":{"line":81,"column":2}},"10":{"start":{"line":48,"column":4},"end":{"line":48,"column":34}},"11":{"start":{"line":51,"column":4},"end":{"line":51,"column":69}},"12":{"start":{"line":54,"column":4},"end":{"line":54,"column":143}},"13":{"start":{"line":57,"column":4},"end":{"line":61,"column":5}},"14":{"start":{"line":58,"column":6},"end":{"line":58,"column":25}},"15":{"start":{"line":60,"column":6},"end":{"line":60,"column":18}},"16":{"start":{"line":64,"column":4},"end":{"line":64,"column":29}},"17":{"start":{"line":67,"column":4},"end":{"line":67,"column":34}},"18":{"start":{"line":76,"column":4},"end":{"line":76,"column":40}},"19":{"start":{"line":79,"column":4},"end":{"line":79,"column":49}},"20":{"start":{"line":83,"column":0},"end":{"line":83,"column":29}}},"branchMap":{"1":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":70},"end":{"line":19,"column":73}},{"start":{"line":19,"column":76},"end":{"line":19,"column":94}}]},"2":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":46},"end":{"line":19,"column":49}},{"start":{"line":19,"column":53},"end":{"line":19,"column":67}}]},"3":{"line":54,"type":"binary-expr","locations":[{"start":{"line":54,"column":11},"end":{"line":54,"column":42}},{"start":{"line":54,"column":46},"end":{"line":54,"column":65}},{"start":{"line":54,"column":69},"end":{"line":54,"column":96}},{"start":{"line":54,"column":100},"end":{"line":54,"column":142}}]},"4":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":4},"end":{"line":57,"column":4}},{"start":{"line":57,"column":4},"end":{"line":57,"column":4}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayRecord"," * "," */","","'use strict';","","var _extends3 = _interopRequireDefault(require('babel-runtime/helpers/extends'));","","var _keys2 = _interopRequireDefault(require('babel-runtime/core-js/object/keys'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","var MetadataKey = {","  DATA_ID: '__dataID__',","  FILTER_CALLS: '__filterCalls__',","  FORCE_INDEX: '__forceIndex__',","  MUTATION_IDS: '__mutationIDs__',","  MUTATION_STATUS: '__mutationStatus__',","  PATH: '__path__',","  RANGE: '__range__',","  RESOLVED_DEFERRED_FRAGMENTS: '__resolvedDeferredFragments__',","  RESOLVED_FRAGMENT_MAP: '__resolvedFragmentMap__',","  RESOLVED_FRAGMENT_MAP_GENERATION: '__resolvedFragmentMapGeneration__',","  STATUS: '__status__'","};","","var metadataKeyLookup = {};","(0, _keys2['default'])(MetadataKey).forEach(function (name) {","  metadataKeyLookup[MetadataKey[name]] = true;","});","","/**"," * Records are plain objects with special metadata properties."," */","var RelayRecord = {","","  MetadataKey: MetadataKey,","","  create: function create(dataID) {","    return { __dataID__: dataID };","  },","  createWithFields: function createWithFields(dataID, fields) {","    return (0, _extends3['default'])({ __dataID__: dataID }, fields);","  },","  isRecord: function isRecord(maybeRecord) {","    return typeof maybeRecord === 'object' && maybeRecord != null && !Array.isArray(maybeRecord) && typeof maybeRecord.__dataID__ === 'string';","  },","  getRecord: function getRecord(maybeRecord) {","    if (RelayRecord.isRecord(maybeRecord)) {","      return maybeRecord;","    } else {","      return null;","    }","  },","  getDataID: function getDataID(record) {","    return record.__dataID__;","  },","  getDataIDForObject: function getDataIDForObject(maybeRecord) {","    return maybeRecord.__dataID__;","  },","","","  /**","   * Checks whether the given ID was created on the client, as opposed to an ID","   * that's understood by the server as well.","   */","  isClientID: function isClientID(dataID) {","    return dataID.startsWith('client:');","  },","  isMetadataKey: function isMetadataKey(key) {","    return metadataKeyLookup.hasOwnProperty(key);","  }","};","","module.exports = RelayRecord;"],"l":{"15":1,"17":1,"19":2,"21":1,"35":1,"36":1,"37":11,"43":1,"48":0,"51":0,"54":0,"57":0,"58":0,"60":0,"64":0,"67":0,"76":0,"79":0,"83":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/GraphQLStoreChangeEmitter.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/GraphQLStoreChangeEmitter.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":6,"7":6,"8":0,"9":6,"10":6,"11":6,"12":6,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1,"39":0,"40":0,"41":0,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1,"53":0,"54":1,"55":1},"b":{"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":1,"2":1,"3":6,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":37}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":32},"end":{"line":28,"column":44}}},"3":{"name":"GraphQLStoreChangeEmitter","line":29,"loc":{"start":{"line":29,"column":2},"end":{"line":29,"column":48}}},"4":{"name":"(anonymous_4)","line":32,"loc":{"start":{"line":32,"column":24},"end":{"line":32,"column":44}}},"5":{"name":"addListenerForIDs","line":41,"loc":{"start":{"line":41,"column":58},"end":{"line":41,"column":100}}},"6":{"name":"(anonymous_6)","line":44,"loc":{"start":{"line":44,"column":32},"end":{"line":44,"column":46}}},"7":{"name":"remove","line":50,"loc":{"start":{"line":50,"column":14},"end":{"line":50,"column":32}}},"8":{"name":"broadcastChangeForID","line":56,"loc":{"start":{"line":56,"column":61},"end":{"line":56,"column":95}}},"9":{"name":"(anonymous_9)","line":61,"loc":{"start":{"line":61,"column":43},"end":{"line":61,"column":55}}},"10":{"name":"injectBatchingStrategy","line":71,"loc":{"start":{"line":71,"column":63},"end":{"line":71,"column":110}}},"11":{"name":"_processBroadcasts","line":75,"loc":{"start":{"line":75,"column":59},"end":{"line":75,"column":89}}},"12":{"name":"(anonymous_12)","line":81,"loc":{"start":{"line":81,"column":24},"end":{"line":81,"column":36}}},"13":{"name":"_processSubscribers","line":93,"loc":{"start":{"line":93,"column":60},"end":{"line":93,"column":91}}},"14":{"name":"(anonymous_14)","line":96,"loc":{"start":{"line":96,"column":30},"end":{"line":96,"column":69}}},"15":{"name":"_processSubscriber","line":101,"loc":{"start":{"line":101,"column":59},"end":{"line":101,"column":110}}},"16":{"name":"_getBroadcastID","line":127,"loc":{"start":{"line":127,"column":56},"end":{"line":127,"column":85}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":97}},"3":{"start":{"line":17,"column":39},"end":{"line":17,"column":95}},"4":{"start":{"line":28,"column":0},"end":{"line":132,"column":4}},"5":{"start":{"line":29,"column":2},"end":{"line":39,"column":3}},"6":{"start":{"line":30,"column":4},"end":{"line":30,"column":70}},"7":{"start":{"line":32,"column":4},"end":{"line":34,"column":6}},"8":{"start":{"line":33,"column":6},"end":{"line":33,"column":24}},"9":{"start":{"line":35,"column":4},"end":{"line":35,"column":28}},"10":{"start":{"line":36,"column":4},"end":{"line":36,"column":32}},"11":{"start":{"line":37,"column":4},"end":{"line":37,"column":30}},"12":{"start":{"line":38,"column":4},"end":{"line":38,"column":27}},"13":{"start":{"line":41,"column":2},"end":{"line":54,"column":4}},"14":{"start":{"line":42,"column":4},"end":{"line":42,"column":21}},"15":{"start":{"line":44,"column":4},"end":{"line":46,"column":7}},"16":{"start":{"line":45,"column":6},"end":{"line":45,"column":39}},"17":{"start":{"line":47,"column":4},"end":{"line":47,"column":41}},"18":{"start":{"line":48,"column":4},"end":{"line":48,"column":81}},"19":{"start":{"line":49,"column":4},"end":{"line":53,"column":6}},"20":{"start":{"line":51,"column":8},"end":{"line":51,"column":41}},"21":{"start":{"line":56,"column":2},"end":{"line":69,"column":4}},"22":{"start":{"line":57,"column":4},"end":{"line":57,"column":22}},"23":{"start":{"line":59,"column":4},"end":{"line":59,"column":42}},"24":{"start":{"line":60,"column":4},"end":{"line":65,"column":5}},"25":{"start":{"line":61,"column":6},"end":{"line":63,"column":9}},"26":{"start":{"line":62,"column":8},"end":{"line":62,"column":43}},"27":{"start":{"line":64,"column":6},"end":{"line":64,"column":45}},"28":{"start":{"line":68,"column":4},"end":{"line":68,"column":74}},"29":{"start":{"line":71,"column":2},"end":{"line":73,"column":4}},"30":{"start":{"line":72,"column":4},"end":{"line":72,"column":38}},"31":{"start":{"line":75,"column":2},"end":{"line":85,"column":4}},"32":{"start":{"line":76,"column":4},"end":{"line":76,"column":22}},"33":{"start":{"line":78,"column":4},"end":{"line":84,"column":5}},"34":{"start":{"line":79,"column":6},"end":{"line":79,"column":46}},"35":{"start":{"line":80,"column":6},"end":{"line":80,"column":32}},"36":{"start":{"line":81,"column":6},"end":{"line":83,"column":9}},"37":{"start":{"line":82,"column":8},"end":{"line":82,"column":44}},"38":{"start":{"line":93,"column":2},"end":{"line":99,"column":4}},"39":{"start":{"line":94,"column":4},"end":{"line":94,"column":22}},"40":{"start":{"line":96,"column":4},"end":{"line":98,"column":7}},"41":{"start":{"line":97,"column":6},"end":{"line":97,"column":68}},"42":{"start":{"line":101,"column":2},"end":{"line":118,"column":4}},"43":{"start":{"line":102,"column":4},"end":{"line":103,"column":33}},"44":{"start":{"line":105,"column":4},"end":{"line":117,"column":5}},"45":{"start":{"line":106,"column":6},"end":{"line":116,"column":7}},"46":{"start":{"line":107,"column":8},"end":{"line":107,"column":61}},"47":{"start":{"line":108,"column":8},"end":{"line":111,"column":9}},"48":{"start":{"line":110,"column":10},"end":{"line":110,"column":16}},"49":{"start":{"line":112,"column":8},"end":{"line":115,"column":9}},"50":{"start":{"line":113,"column":10},"end":{"line":113,"column":113}},"51":{"start":{"line":114,"column":10},"end":{"line":114,"column":16}},"52":{"start":{"line":127,"column":2},"end":{"line":129,"column":4}},"53":{"start":{"line":128,"column":4},"end":{"line":128,"column":52}},"54":{"start":{"line":131,"column":2},"end":{"line":131,"column":35}},"55":{"start":{"line":134,"column":0},"end":{"line":134,"column":43}}},"branchMap":{"1":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":70},"end":{"line":17,"column":73}},{"start":{"line":17,"column":76},"end":{"line":17,"column":94}}]},"2":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":46},"end":{"line":17,"column":49}},{"start":{"line":17,"column":53},"end":{"line":17,"column":67}}]},"3":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":4},"end":{"line":60,"column":4}},{"start":{"line":60,"column":4},"end":{"line":60,"column":4}}]},"4":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":4},"end":{"line":78,"column":4}},{"start":{"line":78,"column":4},"end":{"line":78,"column":4}}]},"5":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":6},"end":{"line":106,"column":6}},{"start":{"line":106,"column":6},"end":{"line":106,"column":6}}]},"6":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":8},"end":{"line":108,"column":8}},{"start":{"line":108,"column":8},"end":{"line":108,"column":8}}]},"7":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":8},"end":{"line":112,"column":8}},{"start":{"line":112,"column":8},"end":{"line":112,"column":8}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule GraphQLStoreChangeEmitter"," * "," */","","'use strict';","","var _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","/**"," * Asynchronous change emitter for nodes stored in the Relay cache."," *"," * Changes are produced by `RelayStoreData` after writing query and mutation"," * payloads into the store and consumed by `GraphQLStoreQueryResolver`, which"," * subscribes to all records that are part of an active query result set."," *"," * @internal"," */","var GraphQLStoreChangeEmitter = function () {","  function GraphQLStoreChangeEmitter(rangeData) {","    (0, _classCallCheck3['default'])(this, GraphQLStoreChangeEmitter);","","    this._batchUpdate = function (callback) {","      return callback();","    };","    this._executingIDs = {};","    this._rangeData = rangeData;","    this._scheduledIDs = null;","    this._subscribers = [];","  }","","  GraphQLStoreChangeEmitter.prototype.addListenerForIDs = function addListenerForIDs(ids, callback) {","    var _this = this;","","    var subscribedIDs = ids.map(function (id) {","      return _this._getBroadcastID(id);","    });","    var index = this._subscribers.length;","    this._subscribers.push({ subscribedIDs: subscribedIDs, callback: callback });","    return {","      remove: function remove() {","        delete _this._subscribers[index];","      }","    };","  };","","  GraphQLStoreChangeEmitter.prototype.broadcastChangeForID = function broadcastChangeForID(id) {","    var _this2 = this;","","    var scheduledIDs = this._scheduledIDs;","    if (scheduledIDs == null) {","      require('fbjs/lib/resolveImmediate')(function () {","        return _this2._processBroadcasts();","      });","      scheduledIDs = this._scheduledIDs = {};","    }","    // Record index of the last subscriber so we do not later unintentionally","    // invoke callbacks that were subscribed after this broadcast.","    scheduledIDs[this._getBroadcastID(id)] = this._subscribers.length - 1;","  };","","  GraphQLStoreChangeEmitter.prototype.injectBatchingStrategy = function injectBatchingStrategy(batchStrategy) {","    this._batchUpdate = batchStrategy;","  };","","  GraphQLStoreChangeEmitter.prototype._processBroadcasts = function _processBroadcasts() {","    var _this3 = this;","","    if (this._scheduledIDs) {","      this._executingIDs = this._scheduledIDs;","      this._scheduledIDs = null;","      this._batchUpdate(function () {","        return _this3._processSubscribers();","      });","    }","  };","","  /**","   * Exposed for profiling reasons.","   * @private","   */","","","  GraphQLStoreChangeEmitter.prototype._processSubscribers = function _processSubscribers() {","    var _this4 = this;","","    this._subscribers.forEach(function (subscriber, subscriberIndex) {","      return _this4._processSubscriber(subscriber, subscriberIndex);","    });","  };","","  GraphQLStoreChangeEmitter.prototype._processSubscriber = function _processSubscriber(_ref, subscriberIndex) {","    var subscribedIDs = _ref.subscribedIDs,","        callback = _ref.callback;","","    for (var broadcastID in this._executingIDs) {","      if (this._executingIDs.hasOwnProperty(broadcastID)) {","        var broadcastIndex = this._executingIDs[broadcastID];","        if (broadcastIndex < subscriberIndex) {","          // Callback was subscribed after this particular broadcast.","          break;","        }","        if (subscribedIDs.indexOf(broadcastID) >= 0) {","          require('fbjs/lib/ErrorUtils').applyWithGuard(callback, null, null, null, 'GraphQLStoreChangeEmitter');","          break;","        }","      }","    }","  };","","  /**","   * Ranges publish events for the entire range, not the specific view of that","   * range. For example, if \"client:1\" is a range, the event is on \"client:1\",","   * not \"client:1_first(5)\".","   */","","","  GraphQLStoreChangeEmitter.prototype._getBroadcastID = function _getBroadcastID(id) {","    return this._rangeData.getCanonicalClientID(id);","  };","","  return GraphQLStoreChangeEmitter;","}();","","module.exports = GraphQLStoreChangeEmitter;"],"l":{"15":1,"17":1,"28":1,"29":1,"30":6,"32":6,"33":0,"35":6,"36":6,"37":6,"38":6,"41":1,"42":0,"44":0,"45":0,"47":0,"48":0,"49":0,"51":0,"56":1,"57":0,"59":0,"60":0,"61":0,"62":0,"64":0,"68":0,"71":1,"72":0,"75":1,"76":0,"78":0,"79":0,"80":0,"81":0,"82":0,"93":1,"94":0,"96":0,"97":0,"101":1,"102":0,"105":0,"106":0,"107":0,"108":0,"110":0,"112":0,"113":0,"114":0,"127":1,"128":0,"131":1,"134":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayMutationQueue.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayMutationQueue.js","s":{"1":1,"2":1,"3":1,"4":1,"5":3,"6":1,"7":1,"8":1,"9":1,"10":6,"11":6,"12":6,"13":6,"14":6,"15":6,"16":1,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":1,"33":0,"34":1,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":1,"66":0,"67":0,"68":0,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"75":1,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":1,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":1,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":1,"108":0,"109":0,"110":1,"111":0,"112":0,"113":0,"114":1,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":1,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":1,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":1,"141":0,"142":0,"143":0,"144":0,"145":1,"146":1,"147":1,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":1,"157":0,"158":0,"159":0,"160":1,"161":0,"162":0,"163":0,"164":1,"165":0,"166":0,"167":0,"168":1,"169":0,"170":0,"171":0,"172":0,"173":0,"174":1,"175":0,"176":0,"177":0,"178":1,"179":0,"180":0,"181":0,"182":0,"183":1,"184":0,"185":0,"186":0,"187":0,"188":0,"189":1,"190":0,"191":0,"192":0,"193":1,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":1,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":1,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":1,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":1,"234":1,"235":0,"236":0,"237":0,"238":1,"239":0,"240":1},"b":{"1":[3,0],"2":[3,3],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0,0],"57":[0,0],"58":[0,0,0]},"f":{"1":3,"2":1,"3":6,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":37}}},"2":{"name":"(anonymous_2)","line":35,"loc":{"start":{"line":35,"column":25},"end":{"line":35,"column":37}}},"3":{"name":"RelayMutationQueue","line":36,"loc":{"start":{"line":36,"column":2},"end":{"line":36,"column":41}}},"4":{"name":"createTransaction","line":52,"loc":{"start":{"line":52,"column":51},"end":{"line":52,"column":99}}},"5":{"name":"(anonymous_5)","line":53,"loc":{"start":{"line":53,"column":62},"end":{"line":53,"column":97}}},"6":{"name":"createTransactionWithPendingTransaction","line":77,"loc":{"start":{"line":77,"column":73},"end":{"line":77,"column":162}}},"7":{"name":"getTransaction","line":87,"loc":{"start":{"line":87,"column":48},"end":{"line":87,"column":76}}},"8":{"name":"getError","line":95,"loc":{"start":{"line":95,"column":42},"end":{"line":95,"column":64}}},"9":{"name":"getStatus","line":99,"loc":{"start":{"line":99,"column":43},"end":{"line":99,"column":66}}},"10":{"name":"applyOptimistic","line":103,"loc":{"start":{"line":103,"column":49},"end":{"line":103,"column":78}}},"11":{"name":"commit","line":110,"loc":{"start":{"line":110,"column":40},"end":{"line":110,"column":60}}},"12":{"name":"rollback","line":126,"loc":{"start":{"line":126,"column":42},"end":{"line":126,"column":64}}},"13":{"name":"_get","line":144,"loc":{"start":{"line":144,"column":38},"end":{"line":144,"column":56}}},"14":{"name":"_handleOptimisticUpdate","line":150,"loc":{"start":{"line":150,"column":57},"end":{"line":150,"column":103}}},"15":{"name":"_handleCommitFailure","line":162,"loc":{"start":{"line":162,"column":54},"end":{"line":162,"column":104}}},"16":{"name":"preventAutoRollback","line":170,"loc":{"start":{"line":170,"column":32},"end":{"line":170,"column":63}}},"17":{"name":"_handleCommitSuccess","line":187,"loc":{"start":{"line":187,"column":54},"end":{"line":187,"column":107}}},"18":{"name":"_handleCommit","line":203,"loc":{"start":{"line":203,"column":47},"end":{"line":203,"column":83}}},"19":{"name":"(anonymous_19)","line":212,"loc":{"start":{"line":212,"column":17},"end":{"line":212,"column":35}}},"20":{"name":"(anonymous_20)","line":214,"loc":{"start":{"line":214,"column":7},"end":{"line":214,"column":24}}},"21":{"name":"_handleRollback","line":219,"loc":{"start":{"line":219,"column":49},"end":{"line":219,"column":87}}},"22":{"name":"_clearPendingTransaction","line":224,"loc":{"start":{"line":224,"column":58},"end":{"line":224,"column":105}}},"23":{"name":"(anonymous_23)","line":226,"loc":{"start":{"line":226,"column":37},"end":{"line":226,"column":51}}},"24":{"name":"_advanceCollisionQueue","line":231,"loc":{"start":{"line":231,"column":56},"end":{"line":231,"column":101}}},"25":{"name":"_failCollisionQueue","line":248,"loc":{"start":{"line":248,"column":53},"end":{"line":248,"column":101}}},"26":{"name":"(anonymous_26)","line":256,"loc":{"start":{"line":256,"column":31},"end":{"line":256,"column":60}}},"27":{"name":"_batchRefreshQueuedData","line":266,"loc":{"start":{"line":266,"column":57},"end":{"line":266,"column":92}}},"28":{"name":"(anonymous_28)","line":271,"loc":{"start":{"line":271,"column":43},"end":{"line":271,"column":55}}},"29":{"name":"_refreshQueuedData","line":278,"loc":{"start":{"line":278,"column":52},"end":{"line":278,"column":82}}},"30":{"name":"(anonymous_30)","line":282,"loc":{"start":{"line":282,"column":24},"end":{"line":282,"column":47}}},"31":{"name":"(anonymous_31)","line":295,"loc":{"start":{"line":295,"column":30},"end":{"line":295,"column":42}}},"32":{"name":"RelayPendingTransaction","line":296,"loc":{"start":{"line":296,"column":2},"end":{"line":296,"column":52}}},"33":{"name":"getCallName","line":315,"loc":{"start":{"line":315,"column":50},"end":{"line":315,"column":73}}},"34":{"name":"getCollisionKey","line":322,"loc":{"start":{"line":322,"column":54},"end":{"line":322,"column":81}}},"35":{"name":"getConfigs","line":329,"loc":{"start":{"line":329,"column":49},"end":{"line":329,"column":71}}},"36":{"name":"getFatQuery","line":336,"loc":{"start":{"line":336,"column":50},"end":{"line":336,"column":73}}},"37":{"name":"getFiles","line":360,"loc":{"start":{"line":360,"column":47},"end":{"line":360,"column":67}}},"38":{"name":"getInputVariable","line":367,"loc":{"start":{"line":367,"column":55},"end":{"line":367,"column":83}}},"39":{"name":"getMutationNode","line":375,"loc":{"start":{"line":375,"column":54},"end":{"line":375,"column":81}}},"40":{"name":"getOptimisticConfigs","line":384,"loc":{"start":{"line":384,"column":59},"end":{"line":384,"column":91}}},"41":{"name":"getOptimisticQuery","line":391,"loc":{"start":{"line":391,"column":57},"end":{"line":391,"column":96}}},"42":{"name":"_getRawOptimisticResponse","line":432,"loc":{"start":{"line":432,"column":64},"end":{"line":432,"column":101}}},"43":{"name":"getOptimisticResponse","line":443,"loc":{"start":{"line":443,"column":60},"end":{"line":443,"column":93}}},"44":{"name":"getQuery","line":455,"loc":{"start":{"line":455,"column":47},"end":{"line":455,"column":76}}},"45":{"name":"getTracker","line":484,"loc":{"start":{"line":484,"column":0},"end":{"line":484,"column":31}}},"46":{"name":"getNextID","line":490,"loc":{"start":{"line":490,"column":0},"end":{"line":490,"column":21}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":81}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":95}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":97}},"5":{"start":{"line":21,"column":39},"end":{"line":21,"column":95}},"6":{"start":{"line":23,"column":0},"end":{"line":23,"column":82}},"7":{"start":{"line":25,"column":0},"end":{"line":25,"column":29}},"8":{"start":{"line":35,"column":0},"end":{"line":288,"column":4}},"9":{"start":{"line":36,"column":2},"end":{"line":44,"column":3}},"10":{"start":{"line":37,"column":4},"end":{"line":37,"column":63}},"11":{"start":{"line":39,"column":4},"end":{"line":39,"column":33}},"12":{"start":{"line":40,"column":4},"end":{"line":40,"column":37}},"13":{"start":{"line":41,"column":4},"end":{"line":41,"column":21}},"14":{"start":{"line":42,"column":4},"end":{"line":42,"column":32}},"15":{"start":{"line":43,"column":4},"end":{"line":43,"column":45}},"16":{"start":{"line":52,"column":2},"end":{"line":62,"column":4}},"17":{"start":{"line":53,"column":4},"end":{"line":61,"column":7}},"18":{"start":{"line":54,"column":6},"end":{"line":60,"column":9}},"19":{"start":{"line":77,"column":2},"end":{"line":85,"column":4}},"20":{"start":{"line":78,"column":4},"end":{"line":78,"column":200}},"21":{"start":{"line":79,"column":4},"end":{"line":79,"column":25}},"22":{"start":{"line":80,"column":4},"end":{"line":80,"column":84}},"23":{"start":{"line":81,"column":4},"end":{"line":81,"column":88}},"24":{"start":{"line":82,"column":4},"end":{"line":82,"column":50}},"25":{"start":{"line":83,"column":4},"end":{"line":83,"column":34}},"26":{"start":{"line":84,"column":4},"end":{"line":84,"column":31}},"27":{"start":{"line":87,"column":2},"end":{"line":93,"column":4}},"28":{"start":{"line":88,"column":4},"end":{"line":88,"column":54}},"29":{"start":{"line":89,"column":4},"end":{"line":91,"column":5}},"30":{"start":{"line":90,"column":6},"end":{"line":90,"column":45}},"31":{"start":{"line":92,"column":4},"end":{"line":92,"column":16}},"32":{"start":{"line":95,"column":2},"end":{"line":97,"column":4}},"33":{"start":{"line":96,"column":4},"end":{"line":96,"column":31}},"34":{"start":{"line":99,"column":2},"end":{"line":101,"column":4}},"35":{"start":{"line":100,"column":4},"end":{"line":100,"column":32}},"36":{"start":{"line":103,"column":2},"end":{"line":108,"column":4}},"37":{"start":{"line":104,"column":4},"end":{"line":104,"column":36}},"38":{"start":{"line":105,"column":4},"end":{"line":105,"column":81}},"39":{"start":{"line":106,"column":4},"end":{"line":106,"column":29}},"40":{"start":{"line":107,"column":4},"end":{"line":107,"column":46}},"41":{"start":{"line":110,"column":2},"end":{"line":124,"column":4}},"42":{"start":{"line":111,"column":4},"end":{"line":111,"column":36}},"43":{"start":{"line":112,"column":4},"end":{"line":112,"column":53}},"44":{"start":{"line":113,"column":4},"end":{"line":113,"column":79}},"45":{"start":{"line":114,"column":4},"end":{"line":119,"column":5}},"46":{"start":{"line":115,"column":6},"end":{"line":115,"column":39}},"47":{"start":{"line":116,"column":6},"end":{"line":116,"column":85}},"48":{"start":{"line":117,"column":6},"end":{"line":117,"column":31}},"49":{"start":{"line":118,"column":6},"end":{"line":118,"column":13}},"50":{"start":{"line":120,"column":4},"end":{"line":122,"column":5}},"51":{"start":{"line":121,"column":6},"end":{"line":121,"column":60}},"52":{"start":{"line":123,"column":4},"end":{"line":123,"column":36}},"53":{"start":{"line":126,"column":2},"end":{"line":142,"column":4}},"54":{"start":{"line":127,"column":4},"end":{"line":127,"column":36}},"55":{"start":{"line":128,"column":4},"end":{"line":128,"column":53}},"56":{"start":{"line":129,"column":4},"end":{"line":140,"column":5}},"57":{"start":{"line":130,"column":6},"end":{"line":130,"column":65}},"58":{"start":{"line":131,"column":6},"end":{"line":139,"column":7}},"59":{"start":{"line":132,"column":8},"end":{"line":132,"column":56}},"60":{"start":{"line":133,"column":8},"end":{"line":135,"column":9}},"61":{"start":{"line":134,"column":10},"end":{"line":134,"column":42}},"62":{"start":{"line":136,"column":8},"end":{"line":138,"column":9}},"63":{"start":{"line":137,"column":10},"end":{"line":137,"column":55}},"64":{"start":{"line":141,"column":4},"end":{"line":141,"column":38}},"65":{"start":{"line":144,"column":2},"end":{"line":148,"column":4}},"66":{"start":{"line":145,"column":4},"end":{"line":145,"column":54}},"67":{"start":{"line":146,"column":4},"end":{"line":146,"column":118}},"68":{"start":{"line":147,"column":4},"end":{"line":147,"column":23}},"69":{"start":{"line":150,"column":2},"end":{"line":160,"column":4}},"70":{"start":{"line":151,"column":4},"end":{"line":151,"column":65}},"71":{"start":{"line":152,"column":4},"end":{"line":152,"column":74}},"72":{"start":{"line":153,"column":4},"end":{"line":159,"column":5}},"73":{"start":{"line":154,"column":6},"end":{"line":154,"column":83}},"74":{"start":{"line":155,"column":6},"end":{"line":158,"column":9}},"75":{"start":{"line":162,"column":2},"end":{"line":185,"column":4}},"76":{"start":{"line":163,"column":4},"end":{"line":163,"column":153}},"77":{"start":{"line":164,"column":4},"end":{"line":164,"column":32}},"78":{"start":{"line":165,"column":4},"end":{"line":165,"column":30}},"79":{"start":{"line":167,"column":4},"end":{"line":167,"column":30}},"80":{"start":{"line":168,"column":4},"end":{"line":168,"column":42}},"81":{"start":{"line":169,"column":4},"end":{"line":174,"column":5}},"82":{"start":{"line":170,"column":6},"end":{"line":172,"column":8}},"83":{"start":{"line":171,"column":8},"end":{"line":171,"column":31}},"84":{"start":{"line":173,"column":6},"end":{"line":173,"column":175}},"85":{"start":{"line":176,"column":4},"end":{"line":178,"column":5}},"86":{"start":{"line":177,"column":6},"end":{"line":177,"column":44}},"87":{"start":{"line":181,"column":4},"end":{"line":183,"column":5}},"88":{"start":{"line":182,"column":6},"end":{"line":182,"column":40}},"89":{"start":{"line":184,"column":4},"end":{"line":184,"column":35}},"90":{"start":{"line":187,"column":2},"end":{"line":201,"column":4}},"91":{"start":{"line":188,"column":4},"end":{"line":188,"column":45}},"92":{"start":{"line":189,"column":4},"end":{"line":189,"column":47}},"93":{"start":{"line":191,"column":4},"end":{"line":191,"column":30}},"94":{"start":{"line":192,"column":4},"end":{"line":195,"column":7}},"95":{"start":{"line":197,"column":4},"end":{"line":197,"column":42}},"96":{"start":{"line":198,"column":4},"end":{"line":200,"column":5}},"97":{"start":{"line":199,"column":6},"end":{"line":199,"column":131}},"98":{"start":{"line":203,"column":2},"end":{"line":217,"column":4}},"99":{"start":{"line":204,"column":4},"end":{"line":204,"column":21}},"100":{"start":{"line":206,"column":4},"end":{"line":206,"column":80}},"101":{"start":{"line":207,"column":4},"end":{"line":207,"column":29}},"102":{"start":{"line":209,"column":4},"end":{"line":209,"column":121}},"103":{"start":{"line":210,"column":4},"end":{"line":210,"column":60}},"104":{"start":{"line":212,"column":4},"end":{"line":216,"column":7}},"105":{"start":{"line":213,"column":6},"end":{"line":213,"column":70}},"106":{"start":{"line":215,"column":6},"end":{"line":215,"column":60}},"107":{"start":{"line":219,"column":2},"end":{"line":222,"column":4}},"108":{"start":{"line":220,"column":4},"end":{"line":220,"column":47}},"109":{"start":{"line":221,"column":4},"end":{"line":221,"column":35}},"110":{"start":{"line":224,"column":2},"end":{"line":229,"column":4}},"111":{"start":{"line":225,"column":4},"end":{"line":225,"column":55}},"112":{"start":{"line":226,"column":4},"end":{"line":228,"column":7}},"113":{"start":{"line":227,"column":6},"end":{"line":227,"column":32}},"114":{"start":{"line":231,"column":2},"end":{"line":246,"column":4}},"115":{"start":{"line":232,"column":4},"end":{"line":232,"column":53}},"116":{"start":{"line":233,"column":4},"end":{"line":245,"column":5}},"117":{"start":{"line":234,"column":6},"end":{"line":234,"column":65}},"118":{"start":{"line":235,"column":6},"end":{"line":244,"column":7}},"119":{"start":{"line":237,"column":8},"end":{"line":237,"column":31}},"120":{"start":{"line":239,"column":8},"end":{"line":243,"column":9}},"121":{"start":{"line":240,"column":10},"end":{"line":240,"column":48}},"122":{"start":{"line":242,"column":10},"end":{"line":242,"column":55}},"123":{"start":{"line":248,"column":2},"end":{"line":264,"column":4}},"124":{"start":{"line":249,"column":4},"end":{"line":249,"column":22}},"125":{"start":{"line":251,"column":4},"end":{"line":251,"column":59}},"126":{"start":{"line":252,"column":4},"end":{"line":263,"column":5}},"127":{"start":{"line":253,"column":6},"end":{"line":253,"column":65}},"128":{"start":{"line":254,"column":6},"end":{"line":262,"column":7}},"129":{"start":{"line":256,"column":8},"end":{"line":260,"column":11}},"130":{"start":{"line":257,"column":10},"end":{"line":259,"column":11}},"131":{"start":{"line":258,"column":12},"end":{"line":258,"column":65}},"132":{"start":{"line":261,"column":8},"end":{"line":261,"column":53}},"133":{"start":{"line":266,"column":2},"end":{"line":276,"column":4}},"134":{"start":{"line":267,"column":4},"end":{"line":267,"column":22}},"135":{"start":{"line":269,"column":4},"end":{"line":275,"column":5}},"136":{"start":{"line":270,"column":6},"end":{"line":270,"column":46}},"137":{"start":{"line":271,"column":6},"end":{"line":274,"column":9}},"138":{"start":{"line":272,"column":8},"end":{"line":272,"column":51}},"139":{"start":{"line":273,"column":8},"end":{"line":273,"column":36}},"140":{"start":{"line":278,"column":2},"end":{"line":285,"column":4}},"141":{"start":{"line":279,"column":4},"end":{"line":279,"column":22}},"142":{"start":{"line":281,"column":4},"end":{"line":281,"column":38}},"143":{"start":{"line":282,"column":4},"end":{"line":284,"column":7}},"144":{"start":{"line":283,"column":6},"end":{"line":283,"column":57}},"145":{"start":{"line":287,"column":2},"end":{"line":287,"column":28}},"146":{"start":{"line":295,"column":0},"end":{"line":482,"column":4}},"147":{"start":{"line":296,"column":2},"end":{"line":306,"column":3}},"148":{"start":{"line":297,"column":4},"end":{"line":297,"column":68}},"149":{"start":{"line":299,"column":4},"end":{"line":299,"column":22}},"150":{"start":{"line":300,"column":4},"end":{"line":300,"column":33}},"151":{"start":{"line":301,"column":4},"end":{"line":301,"column":45}},"152":{"start":{"line":302,"column":4},"end":{"line":302,"column":67}},"153":{"start":{"line":303,"column":4},"end":{"line":303,"column":47}},"154":{"start":{"line":304,"column":4},"end":{"line":304,"column":47}},"155":{"start":{"line":305,"column":4},"end":{"line":305,"column":70}},"156":{"start":{"line":315,"column":2},"end":{"line":320,"column":4}},"157":{"start":{"line":316,"column":4},"end":{"line":318,"column":5}},"158":{"start":{"line":317,"column":6},"end":{"line":317,"column":60}},"159":{"start":{"line":319,"column":4},"end":{"line":319,"column":26}},"160":{"start":{"line":322,"column":2},"end":{"line":327,"column":4}},"161":{"start":{"line":323,"column":4},"end":{"line":325,"column":5}},"162":{"start":{"line":324,"column":6},"end":{"line":324,"column":67}},"163":{"start":{"line":326,"column":4},"end":{"line":326,"column":30}},"164":{"start":{"line":329,"column":2},"end":{"line":334,"column":4}},"165":{"start":{"line":330,"column":4},"end":{"line":332,"column":5}},"166":{"start":{"line":331,"column":6},"end":{"line":331,"column":49}},"167":{"start":{"line":333,"column":4},"end":{"line":333,"column":25}},"168":{"start":{"line":336,"column":2},"end":{"line":358,"column":4}},"169":{"start":{"line":337,"column":4},"end":{"line":356,"column":5}},"170":{"start":{"line":338,"column":6},"end":{"line":338,"column":84}},"171":{"start":{"line":339,"column":6},"end":{"line":339,"column":170}},"172":{"start":{"line":340,"column":6},"end":{"line":355,"column":10}},"173":{"start":{"line":357,"column":4},"end":{"line":357,"column":26}},"174":{"start":{"line":360,"column":2},"end":{"line":365,"column":4}},"175":{"start":{"line":361,"column":4},"end":{"line":363,"column":5}},"176":{"start":{"line":362,"column":6},"end":{"line":362,"column":53}},"177":{"start":{"line":364,"column":4},"end":{"line":364,"column":23}},"178":{"start":{"line":367,"column":2},"end":{"line":373,"column":4}},"179":{"start":{"line":368,"column":4},"end":{"line":371,"column":5}},"180":{"start":{"line":369,"column":6},"end":{"line":369,"column":153}},"181":{"start":{"line":370,"column":6},"end":{"line":370,"column":42}},"182":{"start":{"line":372,"column":4},"end":{"line":372,"column":31}},"183":{"start":{"line":375,"column":2},"end":{"line":382,"column":4}},"184":{"start":{"line":376,"column":4},"end":{"line":380,"column":5}},"185":{"start":{"line":377,"column":6},"end":{"line":377,"column":92}},"186":{"start":{"line":378,"column":6},"end":{"line":378,"column":158}},"187":{"start":{"line":379,"column":6},"end":{"line":379,"column":40}},"188":{"start":{"line":381,"column":4},"end":{"line":381,"column":30}},"189":{"start":{"line":384,"column":2},"end":{"line":389,"column":4}},"190":{"start":{"line":385,"column":4},"end":{"line":387,"column":5}},"191":{"start":{"line":386,"column":6},"end":{"line":386,"column":77}},"192":{"start":{"line":388,"column":4},"end":{"line":388,"column":35}},"193":{"start":{"line":391,"column":2},"end":{"line":430,"column":4}},"194":{"start":{"line":392,"column":4},"end":{"line":428,"column":5}},"195":{"start":{"line":394,"column":6},"end":{"line":396,"column":7}},"196":{"start":{"line":395,"column":8},"end":{"line":395,"column":84}},"197":{"start":{"line":398,"column":6},"end":{"line":398,"column":64}},"198":{"start":{"line":399,"column":6},"end":{"line":420,"column":7}},"199":{"start":{"line":400,"column":8},"end":{"line":400,"column":60}},"200":{"start":{"line":401,"column":8},"end":{"line":401,"column":44}},"201":{"start":{"line":402,"column":8},"end":{"line":417,"column":9}},"202":{"start":{"line":403,"column":10},"end":{"line":410,"column":13}},"203":{"start":{"line":412,"column":10},"end":{"line":416,"column":13}},"204":{"start":{"line":419,"column":8},"end":{"line":419,"column":37}},"205":{"start":{"line":422,"column":6},"end":{"line":426,"column":7}},"206":{"start":{"line":423,"column":8},"end":{"line":423,"column":114}},"207":{"start":{"line":425,"column":8},"end":{"line":425,"column":27}},"208":{"start":{"line":429,"column":4},"end":{"line":429,"column":33}},"209":{"start":{"line":432,"column":2},"end":{"line":441,"column":4}},"210":{"start":{"line":433,"column":4},"end":{"line":439,"column":5}},"211":{"start":{"line":434,"column":6},"end":{"line":434,"column":77}},"212":{"start":{"line":435,"column":6},"end":{"line":437,"column":7}},"213":{"start":{"line":436,"column":8},"end":{"line":436,"column":57}},"214":{"start":{"line":438,"column":6},"end":{"line":438,"column":55}},"215":{"start":{"line":440,"column":4},"end":{"line":440,"column":39}},"216":{"start":{"line":443,"column":2},"end":{"line":453,"column":4}},"217":{"start":{"line":444,"column":4},"end":{"line":451,"column":5}},"218":{"start":{"line":445,"column":6},"end":{"line":445,"column":64}},"219":{"start":{"line":446,"column":6},"end":{"line":450,"column":7}},"220":{"start":{"line":447,"column":8},"end":{"line":447,"column":123}},"221":{"start":{"line":449,"column":8},"end":{"line":449,"column":54}},"222":{"start":{"line":452,"column":4},"end":{"line":452,"column":36}},"223":{"start":{"line":455,"column":2},"end":{"line":479,"column":4}},"224":{"start":{"line":456,"column":4},"end":{"line":477,"column":5}},"225":{"start":{"line":458,"column":6},"end":{"line":460,"column":7}},"226":{"start":{"line":459,"column":8},"end":{"line":459,"column":82}},"227":{"start":{"line":462,"column":6},"end":{"line":462,"column":42}},"228":{"start":{"line":463,"column":6},"end":{"line":470,"column":9}},"229":{"start":{"line":472,"column":6},"end":{"line":475,"column":7}},"230":{"start":{"line":473,"column":8},"end":{"line":473,"column":74}},"231":{"start":{"line":474,"column":8},"end":{"line":474,"column":27}},"232":{"start":{"line":478,"column":4},"end":{"line":478,"column":23}},"233":{"start":{"line":481,"column":2},"end":{"line":481,"column":33}},"234":{"start":{"line":484,"column":0},"end":{"line":488,"column":1}},"235":{"start":{"line":485,"column":2},"end":{"line":485,"column":44}},"236":{"start":{"line":486,"column":2},"end":{"line":486,"column":488}},"237":{"start":{"line":487,"column":2},"end":{"line":487,"column":17}},"238":{"start":{"line":490,"column":0},"end":{"line":492,"column":1}},"239":{"start":{"line":491,"column":2},"end":{"line":491,"column":60}},"240":{"start":{"line":494,"column":0},"end":{"line":494,"column":36}}},"branchMap":{"1":{"line":21,"type":"cond-expr","locations":[{"start":{"line":21,"column":70},"end":{"line":21,"column":73}},{"start":{"line":21,"column":76},"end":{"line":21,"column":94}}]},"2":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":46},"end":{"line":21,"column":49}},{"start":{"line":21,"column":53},"end":{"line":21,"column":67}}]},"3":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":19},"end":{"line":58,"column":28}},{"start":{"line":58,"column":32},"end":{"line":58,"column":51}}]},"4":{"line":59,"type":"binary-expr","locations":[{"start":{"line":59,"column":19},"end":{"line":59,"column":28}},{"start":{"line":59,"column":32},"end":{"line":59,"column":51}}]},"5":{"line":78,"type":"binary-expr","locations":[{"start":{"line":78,"column":34},"end":{"line":78,"column":52}},{"start":{"line":78,"column":56},"end":{"line":78,"column":74}}]},"6":{"line":81,"type":"binary-expr","locations":[{"start":{"line":81,"column":22},"end":{"line":81,"column":40}},{"start":{"line":81,"column":44},"end":{"line":81,"column":87}}]},"7":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":4},"end":{"line":89,"column":4}},{"start":{"line":89,"column":4},"end":{"line":89,"column":4}}]},"8":{"line":113,"type":"binary-expr","locations":[{"start":{"line":113,"column":25},"end":{"line":113,"column":37}},{"start":{"line":113,"column":41},"end":{"line":113,"column":78}}]},"9":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":4},"end":{"line":114,"column":4}},{"start":{"line":114,"column":4},"end":{"line":114,"column":4}}]},"10":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":4},"end":{"line":120,"column":4}},{"start":{"line":120,"column":4},"end":{"line":120,"column":4}}]},"11":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":4},"end":{"line":129,"column":4}},{"start":{"line":129,"column":4},"end":{"line":129,"column":4}}]},"12":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":6},"end":{"line":131,"column":6}},{"start":{"line":131,"column":6},"end":{"line":131,"column":6}}]},"13":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":8},"end":{"line":133,"column":8}},{"start":{"line":133,"column":8},"end":{"line":133,"column":8}}]},"14":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":8},"end":{"line":136,"column":8}},{"start":{"line":136,"column":8},"end":{"line":136,"column":8}}]},"15":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":4},"end":{"line":153,"column":4}},{"start":{"line":153,"column":4},"end":{"line":153,"column":4}}]},"16":{"line":153,"type":"binary-expr","locations":[{"start":{"line":153,"column":8},"end":{"line":153,"column":26}},{"start":{"line":153,"column":30},"end":{"line":153,"column":45}}]},"17":{"line":154,"type":"binary-expr","locations":[{"start":{"line":154,"column":20},"end":{"line":154,"column":54}},{"start":{"line":154,"column":58},"end":{"line":154,"column":82}}]},"18":{"line":163,"type":"cond-expr","locations":[{"start":{"line":163,"column":25},"end":{"line":163,"column":82}},{"start":{"line":163,"column":85},"end":{"line":163,"column":152}}]},"19":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":4},"end":{"line":169,"column":4}},{"start":{"line":169,"column":4},"end":{"line":169,"column":4}}]},"20":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":4},"end":{"line":176,"column":4}},{"start":{"line":176,"column":4},"end":{"line":176,"column":4}}]},"21":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":4},"end":{"line":181,"column":4}},{"start":{"line":181,"column":4},"end":{"line":181,"column":4}}]},"22":{"line":181,"type":"binary-expr","locations":[{"start":{"line":181,"column":8},"end":{"line":181,"column":22}},{"start":{"line":181,"column":26},"end":{"line":181,"column":84}}]},"23":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":4},"end":{"line":198,"column":4}},{"start":{"line":198,"column":4},"end":{"line":198,"column":4}}]},"24":{"line":233,"type":"if","locations":[{"start":{"line":233,"column":4},"end":{"line":233,"column":4}},{"start":{"line":233,"column":4},"end":{"line":233,"column":4}}]},"25":{"line":235,"type":"if","locations":[{"start":{"line":235,"column":6},"end":{"line":235,"column":6}},{"start":{"line":235,"column":6},"end":{"line":235,"column":6}}]},"26":{"line":239,"type":"if","locations":[{"start":{"line":239,"column":8},"end":{"line":239,"column":8}},{"start":{"line":239,"column":8},"end":{"line":239,"column":8}}]},"27":{"line":252,"type":"if","locations":[{"start":{"line":252,"column":4},"end":{"line":252,"column":4}},{"start":{"line":252,"column":4},"end":{"line":252,"column":4}}]},"28":{"line":254,"type":"if","locations":[{"start":{"line":254,"column":6},"end":{"line":254,"column":6}},{"start":{"line":254,"column":6},"end":{"line":254,"column":6}}]},"29":{"line":257,"type":"if","locations":[{"start":{"line":257,"column":10},"end":{"line":257,"column":10}},{"start":{"line":257,"column":10},"end":{"line":257,"column":10}}]},"30":{"line":269,"type":"if","locations":[{"start":{"line":269,"column":4},"end":{"line":269,"column":4}},{"start":{"line":269,"column":4},"end":{"line":269,"column":4}}]},"31":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":4},"end":{"line":316,"column":4}},{"start":{"line":316,"column":4},"end":{"line":316,"column":4}}]},"32":{"line":323,"type":"if","locations":[{"start":{"line":323,"column":4},"end":{"line":323,"column":4}},{"start":{"line":323,"column":4},"end":{"line":323,"column":4}}]},"33":{"line":324,"type":"binary-expr","locations":[{"start":{"line":324,"column":27},"end":{"line":324,"column":58}},{"start":{"line":324,"column":62},"end":{"line":324,"column":66}}]},"34":{"line":330,"type":"if","locations":[{"start":{"line":330,"column":4},"end":{"line":330,"column":4}},{"start":{"line":330,"column":4},"end":{"line":330,"column":4}}]},"35":{"line":337,"type":"if","locations":[{"start":{"line":337,"column":4},"end":{"line":337,"column":4}},{"start":{"line":337,"column":4},"end":{"line":337,"column":4}}]},"36":{"line":361,"type":"if","locations":[{"start":{"line":361,"column":4},"end":{"line":361,"column":4}},{"start":{"line":361,"column":4},"end":{"line":361,"column":4}}]},"37":{"line":362,"type":"binary-expr","locations":[{"start":{"line":362,"column":20},"end":{"line":362,"column":44}},{"start":{"line":362,"column":48},"end":{"line":362,"column":52}}]},"38":{"line":368,"type":"if","locations":[{"start":{"line":368,"column":4},"end":{"line":368,"column":4}},{"start":{"line":368,"column":4},"end":{"line":368,"column":4}}]},"39":{"line":376,"type":"if","locations":[{"start":{"line":376,"column":4},"end":{"line":376,"column":4}},{"start":{"line":376,"column":4},"end":{"line":376,"column":4}}]},"40":{"line":385,"type":"if","locations":[{"start":{"line":385,"column":4},"end":{"line":385,"column":4}},{"start":{"line":385,"column":4},"end":{"line":385,"column":4}}]},"41":{"line":386,"type":"binary-expr","locations":[{"start":{"line":386,"column":32},"end":{"line":386,"column":68}},{"start":{"line":386,"column":72},"end":{"line":386,"column":76}}]},"42":{"line":392,"type":"if","locations":[{"start":{"line":392,"column":4},"end":{"line":392,"column":4}},{"start":{"line":392,"column":4},"end":{"line":392,"column":4}}]},"43":{"line":394,"type":"if","locations":[{"start":{"line":394,"column":6},"end":{"line":394,"column":6}},{"start":{"line":394,"column":6},"end":{"line":394,"column":6}}]},"44":{"line":394,"type":"binary-expr","locations":[{"start":{"line":394,"column":10},"end":{"line":394,"column":47}},{"start":{"line":394,"column":51},"end":{"line":394,"column":73}},{"start":{"line":394,"column":77},"end":{"line":394,"column":93}}]},"45":{"line":399,"type":"if","locations":[{"start":{"line":399,"column":6},"end":{"line":399,"column":6}},{"start":{"line":399,"column":6},"end":{"line":399,"column":6}}]},"46":{"line":402,"type":"if","locations":[{"start":{"line":402,"column":8},"end":{"line":402,"column":8}},{"start":{"line":402,"column":8},"end":{"line":402,"column":8}}]},"47":{"line":422,"type":"if","locations":[{"start":{"line":422,"column":6},"end":{"line":422,"column":6}},{"start":{"line":422,"column":6},"end":{"line":422,"column":6}}]},"48":{"line":422,"type":"binary-expr","locations":[{"start":{"line":422,"column":10},"end":{"line":422,"column":47}},{"start":{"line":422,"column":51},"end":{"line":422,"column":73}},{"start":{"line":422,"column":77},"end":{"line":422,"column":93}}]},"49":{"line":433,"type":"if","locations":[{"start":{"line":433,"column":4},"end":{"line":433,"column":4}},{"start":{"line":433,"column":4},"end":{"line":433,"column":4}}]},"50":{"line":434,"type":"binary-expr","locations":[{"start":{"line":434,"column":31},"end":{"line":434,"column":68}},{"start":{"line":434,"column":72},"end":{"line":434,"column":76}}]},"51":{"line":435,"type":"if","locations":[{"start":{"line":435,"column":6},"end":{"line":435,"column":6}},{"start":{"line":435,"column":6},"end":{"line":435,"column":6}}]},"52":{"line":444,"type":"if","locations":[{"start":{"line":444,"column":4},"end":{"line":444,"column":4}},{"start":{"line":444,"column":4},"end":{"line":444,"column":4}}]},"53":{"line":446,"type":"if","locations":[{"start":{"line":446,"column":6},"end":{"line":446,"column":6}},{"start":{"line":446,"column":6},"end":{"line":446,"column":6}}]},"54":{"line":456,"type":"if","locations":[{"start":{"line":456,"column":4},"end":{"line":456,"column":4}},{"start":{"line":456,"column":4},"end":{"line":456,"column":4}}]},"55":{"line":458,"type":"if","locations":[{"start":{"line":458,"column":6},"end":{"line":458,"column":6}},{"start":{"line":458,"column":6},"end":{"line":458,"column":6}}]},"56":{"line":458,"type":"binary-expr","locations":[{"start":{"line":458,"column":10},"end":{"line":458,"column":47}},{"start":{"line":458,"column":51},"end":{"line":458,"column":73}},{"start":{"line":458,"column":77},"end":{"line":458,"column":93}}]},"57":{"line":472,"type":"if","locations":[{"start":{"line":472,"column":6},"end":{"line":472,"column":6}},{"start":{"line":472,"column":6},"end":{"line":472,"column":6}}]},"58":{"line":472,"type":"binary-expr","locations":[{"start":{"line":472,"column":10},"end":{"line":472,"column":47}},{"start":{"line":472,"column":51},"end":{"line":472,"column":73}},{"start":{"line":472,"column":77},"end":{"line":472,"column":93}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayMutationQueue"," * "," */","","'use strict';","","var _defineProperty3 = _interopRequireDefault(require('babel-runtime/helpers/defineProperty'));","","var _extends4 = _interopRequireDefault(require('babel-runtime/helpers/extends'));","","var _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","var CLIENT_MUTATION_ID = require('./RelayConnectionInterface').CLIENT_MUTATION_ID;","","var transactionIDCounter = 0;","","/**"," * @internal"," *"," * Coordinates execution of concurrent mutations, including application and"," * rollback of optimistic payloads and enqueueing mutations with the same"," * collision key."," */","","var RelayMutationQueue = function () {","  function RelayMutationQueue(storeData) {","    (0, _classCallCheck3['default'])(this, RelayMutationQueue);","","    this._collisionQueueMap = {};","    this._pendingTransactionMap = {};","    this._queue = [];","    this._storeData = storeData;","    this._willBatchRefreshQueuedData = false;","  }","","  /**","   * High-level API for creating a RelayMutationTransaction from a","   * RelayMutation.","   */","","","  RelayMutationQueue.prototype.createTransaction = function createTransaction(mutation, callbacks) {","    return this.createTransactionWithPendingTransaction(null, function (id, mutationTransaction) {","      return new RelayPendingTransaction({","        id: id,","        mutation: mutation,","        mutationTransaction: mutationTransaction,","        onFailure: callbacks && callbacks.onFailure,","        onSuccess: callbacks && callbacks.onSuccess","      });","    });","  };","","  /**","   * @internal","   *","   * This is a lower-level API used to create transactions based on:","   *","   * - An object that conforms to the PendingTransaction type; or","   * - A function that can build such an object.","   *","   * Used by the high-level `createTransaction` API, but also enables us to","   * run legacy and low-level mutations.","   */","","","  RelayMutationQueue.prototype.createTransactionWithPendingTransaction = function createTransactionWithPendingTransaction(pendingTransaction, transactionBuilder) {","    require('fbjs/lib/invariant')(pendingTransaction || transactionBuilder, 'RelayMutationQueue: `createTransactionWithPendingTransaction()` ' + 'expects a PendingTransaction or TransactionBuilder.');","    var id = getNextID();","    var mutationTransaction = new (require('./RelayMutationTransaction'))(this, id);","    var transaction = pendingTransaction || transactionBuilder(id, mutationTransaction);","    this._pendingTransactionMap[id] = transaction;","    this._queue.push(transaction);","    return mutationTransaction;","  };","","  RelayMutationQueue.prototype.getTransaction = function getTransaction(id) {","    var transaction = this._pendingTransactionMap[id];","    if (transaction) {","      return transaction.mutationTransaction;","    }","    return null;","  };","","  RelayMutationQueue.prototype.getError = function getError(id) {","    return this._get(id).error;","  };","","  RelayMutationQueue.prototype.getStatus = function getStatus(id) {","    return this._get(id).status;","  };","","  RelayMutationQueue.prototype.applyOptimistic = function applyOptimistic(id) {","    var transaction = this._get(id);","    transaction.status = require('./RelayMutationTransactionStatus').UNCOMMITTED;","    transaction.error = null;","    this._handleOptimisticUpdate(transaction);","  };","","  RelayMutationQueue.prototype.commit = function commit(id) {","    var transaction = this._get(id);","    var collisionKey = transaction.getCollisionKey();","    var collisionQueue = collisionKey && this._collisionQueueMap[collisionKey];","    if (collisionQueue) {","      collisionQueue.push(transaction);","      transaction.status = require('./RelayMutationTransactionStatus').COMMIT_QUEUED;","      transaction.error = null;","      return;","    }","    if (collisionKey) {","      this._collisionQueueMap[collisionKey] = [transaction];","    }","    this._handleCommit(transaction);","  };","","  RelayMutationQueue.prototype.rollback = function rollback(id) {","    var transaction = this._get(id);","    var collisionKey = transaction.getCollisionKey();","    if (collisionKey) {","      var collisionQueue = this._collisionQueueMap[collisionKey];","      if (collisionQueue) {","        var index = collisionQueue.indexOf(transaction);","        if (index !== -1) {","          collisionQueue.splice(index, 1);","        }","        if (collisionQueue.length === 0) {","          delete this._collisionQueueMap[collisionKey];","        }","      }","    }","    this._handleRollback(transaction);","  };","","  RelayMutationQueue.prototype._get = function _get(id) {","    var transaction = this._pendingTransactionMap[id];","    require('fbjs/lib/invariant')(transaction, 'RelayMutationQueue: `%s` is not a valid pending transaction ID.', id);","    return transaction;","  };","","  RelayMutationQueue.prototype._handleOptimisticUpdate = function _handleOptimisticUpdate(transaction) {","    var optimisticResponse = transaction.getOptimisticResponse();","    var optimisticQuery = transaction.getOptimisticQuery(this._storeData);","    if (optimisticResponse && optimisticQuery) {","      var configs = transaction.getOptimisticConfigs() || transaction.getConfigs();","      this._storeData.handleUpdatePayload(optimisticQuery, optimisticResponse, {","        configs: configs,","        isOptimisticUpdate: true","      });","    }","  };","","  RelayMutationQueue.prototype._handleCommitFailure = function _handleCommitFailure(transaction, error) {","    var status = error ? require('./RelayMutationTransactionStatus').COMMIT_FAILED : require('./RelayMutationTransactionStatus').COLLISION_COMMIT_FAILED;","    transaction.status = status;","    transaction.error = error;","","    var shouldRollback = true;","    var onFailure = transaction.onFailure;","    if (onFailure) {","      var preventAutoRollback = function preventAutoRollback() {","        shouldRollback = false;","      };","      require('fbjs/lib/ErrorUtils').applyWithGuard(onFailure, null, [transaction.mutationTransaction, preventAutoRollback], null, 'RelayMutationTransaction:onCommitFailure');","    }","","    if (error) {","      this._failCollisionQueue(transaction);","    }","","    // Might have already been rolled back via `onFailure`.","    if (shouldRollback && this._pendingTransactionMap.hasOwnProperty(transaction.id)) {","      this._handleRollback(transaction);","    }","    this._batchRefreshQueuedData();","  };","","  RelayMutationQueue.prototype._handleCommitSuccess = function _handleCommitSuccess(transaction, response) {","    this._advanceCollisionQueue(transaction);","    this._clearPendingTransaction(transaction);","","    this._refreshQueuedData();","    this._storeData.handleUpdatePayload(transaction.getQuery(this._storeData), response[transaction.getCallName()], {","      configs: transaction.getConfigs(),","      isOptimisticUpdate: false","    });","","    var onSuccess = transaction.onSuccess;","    if (onSuccess) {","      require('fbjs/lib/ErrorUtils').applyWithGuard(onSuccess, null, [response], null, 'RelayMutationTransaction:onCommitSuccess');","    }","  };","","  RelayMutationQueue.prototype._handleCommit = function _handleCommit(transaction) {","    var _this = this;","","    transaction.status = require('./RelayMutationTransactionStatus').COMMITTING;","    transaction.error = null;","","    var request = new (require('./RelayMutationRequest'))(transaction.getQuery(this._storeData), transaction.getFiles());","    this._storeData.getNetworkLayer().sendMutation(request);","","    request.done(function (result) {","      return _this._handleCommitSuccess(transaction, result.response);","    }, function (error) {","      return _this._handleCommitFailure(transaction, error);","    });","  };","","  RelayMutationQueue.prototype._handleRollback = function _handleRollback(transaction) {","    this._clearPendingTransaction(transaction);","    this._batchRefreshQueuedData();","  };","","  RelayMutationQueue.prototype._clearPendingTransaction = function _clearPendingTransaction(transaction) {","    delete this._pendingTransactionMap[transaction.id];","    this._queue = this._queue.filter(function (tx) {","      return tx !== transaction;","    });","  };","","  RelayMutationQueue.prototype._advanceCollisionQueue = function _advanceCollisionQueue(transaction) {","    var collisionKey = transaction.getCollisionKey();","    if (collisionKey) {","      var collisionQueue = this._collisionQueueMap[collisionKey];","      if (collisionQueue) {","        // Remove the transaction that called this function.","        collisionQueue.shift();","","        if (collisionQueue.length) {","          this._handleCommit(collisionQueue[0]);","        } else {","          delete this._collisionQueueMap[collisionKey];","        }","      }","    }","  };","","  RelayMutationQueue.prototype._failCollisionQueue = function _failCollisionQueue(failedTransaction) {","    var _this2 = this;","","    var collisionKey = failedTransaction.getCollisionKey();","    if (collisionKey) {","      var collisionQueue = this._collisionQueueMap[collisionKey];","      if (collisionQueue) {","        // Remove the transaction that called this function.","        collisionQueue.forEach(function (queuedTransaction) {","          if (queuedTransaction !== failedTransaction) {","            _this2._handleCommitFailure(queuedTransaction, null);","          }","        });","        delete this._collisionQueueMap[collisionKey];","      }","    }","  };","","  RelayMutationQueue.prototype._batchRefreshQueuedData = function _batchRefreshQueuedData() {","    var _this3 = this;","","    if (!this._willBatchRefreshQueuedData) {","      this._willBatchRefreshQueuedData = true;","      require('fbjs/lib/resolveImmediate')(function () {","        _this3._willBatchRefreshQueuedData = false;","        _this3._refreshQueuedData();","      });","    }","  };","","  RelayMutationQueue.prototype._refreshQueuedData = function _refreshQueuedData() {","    var _this4 = this;","","    this._storeData.clearQueuedData();","    this._queue.forEach(function (transaction) {","      return _this4._handleOptimisticUpdate(transaction);","    });","  };","","  return RelayMutationQueue;","}();","","/**"," * @private"," */","","","var RelayPendingTransaction = function () {","  function RelayPendingTransaction(transactionData) {","    (0, _classCallCheck3['default'])(this, RelayPendingTransaction);","","    this.error = null;","    this.id = transactionData.id;","    this.mutation = transactionData.mutation;","    this.mutationTransaction = transactionData.mutationTransaction;","    this.onFailure = transactionData.onFailure;","    this.onSuccess = transactionData.onSuccess;","    this.status = require('./RelayMutationTransactionStatus').CREATED;","  }","  // $FlowFixMe(>=0.34.0)","","  // $FlowFixMe(>=0.34.0)","","","  // Lazily computed and memoized private properties","","","  RelayPendingTransaction.prototype.getCallName = function getCallName() {","    if (!this._callName) {","      this._callName = this.getMutationNode().calls[0].name;","    }","    return this._callName;","  };","","  RelayPendingTransaction.prototype.getCollisionKey = function getCollisionKey() {","    if (this._collisionKey === undefined) {","      this._collisionKey = this.mutation.getCollisionKey() || null;","    }","    return this._collisionKey;","  };","","  RelayPendingTransaction.prototype.getConfigs = function getConfigs() {","    if (!this._configs) {","      this._configs = this.mutation.getConfigs();","    }","    return this._configs;","  };","","  RelayPendingTransaction.prototype.getFatQuery = function getFatQuery() {","    if (!this._fatQuery) {","      var fragment = require('./fromGraphQL').Fragment(this.mutation.getFatQuery());","      require('fbjs/lib/invariant')(fragment instanceof require('./RelayQuery').Fragment, 'RelayMutationQueue: Expected `getFatQuery` to return a GraphQL ' + 'Fragment');","      this._fatQuery = require('fbjs/lib/nullthrows')(require('./flattenRelayQuery')(fragment, {","        // TODO #10341736","        // This used to be `preserveEmptyNodes: fragment.isPattern()`. We","        // discovered that products were not marking their fat queries as","        // patterns (by adding `@relay(pattern: true)`) which was causing","        // `preserveEmptyNodes` to be false. This meant that empty fields,","        // would be stripped instead of being used to produce an intersection","        // with the tracked query. Products were able to do this because the","        // Babel Relay plugin doesn't produce validation errors for empty","        // fields. It should, and we will make it do so, but for now we're","        // going to set this to `true` always, and make the plugin warn when","        // it encounters an empty field that supports subselections in a","        // non-pattern fragment. Revert this when done.","        preserveEmptyNodes: true,","        shouldRemoveFragments: true","      }));","    }","    return this._fatQuery;","  };","","  RelayPendingTransaction.prototype.getFiles = function getFiles() {","    if (this._files === undefined) {","      this._files = this.mutation.getFiles() || null;","    }","    return this._files;","  };","","  RelayPendingTransaction.prototype.getInputVariable = function getInputVariable() {","    if (!this._inputVariable) {","      var inputVariable = (0, _extends4['default'])({}, this.mutation.getVariables(), (0, _defineProperty3['default'])({}, CLIENT_MUTATION_ID, this.id));","      this._inputVariable = inputVariable;","    }","    return this._inputVariable;","  };","","  RelayPendingTransaction.prototype.getMutationNode = function getMutationNode() {","    if (!this._mutationNode) {","      var mutationNode = require('./QueryBuilder').getMutation(this.mutation.getMutation());","      require('fbjs/lib/invariant')(mutationNode, 'RelayMutation: Expected `getMutation` to return a mutation created ' + 'with Relay.QL`mutation { ... }`.');","      this._mutationNode = mutationNode;","    }","    return this._mutationNode;","  };","","  RelayPendingTransaction.prototype.getOptimisticConfigs = function getOptimisticConfigs() {","    if (this._optimisticConfigs === undefined) {","      this._optimisticConfigs = this.mutation.getOptimisticConfigs() || null;","    }","    return this._optimisticConfigs;","  };","","  RelayPendingTransaction.prototype.getOptimisticQuery = function getOptimisticQuery(storeData) {","    if (this._optimisticQuery === undefined) {","      /* eslint-disable no-console */","      if (process.env.NODE_ENV !== 'production' && console.groupCollapsed && console.groupEnd) {","        console.groupCollapsed('Optimistic query for `' + this.getCallName() + '`');","      }","      /* eslint-enable no-console */","      var optimisticResponse = this._getRawOptimisticResponse();","      if (optimisticResponse) {","        var optimisticConfigs = this.getOptimisticConfigs();","        var tracker = getTracker(storeData);","        if (optimisticConfigs) {","          this._optimisticQuery = require('./RelayMutationQuery').buildQuery({","            configs: optimisticConfigs,","            fatQuery: this.getFatQuery(),","            input: this.getInputVariable(),","            mutationName: this.mutation.constructor.name,","            mutation: this.getMutationNode(),","            tracker: tracker","          });","        } else {","          this._optimisticQuery = require('./RelayMutationQuery').buildQueryForOptimisticUpdate({","            response: optimisticResponse,","            fatQuery: this.getFatQuery(),","            mutation: this.getMutationNode()","          });","        }","      } else {","        this._optimisticQuery = null;","      }","      /* eslint-disable no-console */","      if (process.env.NODE_ENV !== 'production' && console.groupCollapsed && console.groupEnd) {","        require('./RelayMutationDebugPrinter').printOptimisticMutation(this._optimisticQuery, optimisticResponse);","","        console.groupEnd();","      }","      /* eslint-enable no-console */","    }","    return this._optimisticQuery;","  };","","  RelayPendingTransaction.prototype._getRawOptimisticResponse = function _getRawOptimisticResponse() {","    if (this._rawOptimisticResponse === undefined) {","      var optimisticResponse = this.mutation.getOptimisticResponse() || null;","      if (optimisticResponse) {","        optimisticResponse[CLIENT_MUTATION_ID] = this.id;","      }","      this._rawOptimisticResponse = optimisticResponse;","    }","    return this._rawOptimisticResponse;","  };","","  RelayPendingTransaction.prototype.getOptimisticResponse = function getOptimisticResponse() {","    if (this._optimisticResponse === undefined) {","      var optimisticResponse = this._getRawOptimisticResponse();","      if (optimisticResponse) {","        this._optimisticResponse = require('./RelayOptimisticMutationUtils').inferRelayPayloadFromData(optimisticResponse);","      } else {","        this._optimisticResponse = optimisticResponse;","      }","    }","    return this._optimisticResponse;","  };","","  RelayPendingTransaction.prototype.getQuery = function getQuery(storeData) {","    if (!this._query) {","      /* eslint-disable no-console */","      if (process.env.NODE_ENV !== 'production' && console.groupCollapsed && console.groupEnd) {","        console.groupCollapsed('Mutation query for `' + this.getCallName() + '`');","      }","      /* eslint-enable no-console */","      var tracker = getTracker(storeData);","      this._query = require('./RelayMutationQuery').buildQuery({","        configs: this.getConfigs(),","        fatQuery: this.getFatQuery(),","        input: this.getInputVariable(),","        mutationName: this.getMutationNode().name,","        mutation: this.getMutationNode(),","        tracker: tracker","      });","      /* eslint-disable no-console */","      if (process.env.NODE_ENV !== 'production' && console.groupCollapsed && console.groupEnd) {","        require('./RelayMutationDebugPrinter').printMutation(this._query);","        console.groupEnd();","      }","      /* eslint-enable no-console */","    }","    return this._query;","  };","","  return RelayPendingTransaction;","}();","","function getTracker(storeData) {","  var tracker = storeData.getQueryTracker();","  require('fbjs/lib/invariant')(tracker, 'RelayMutationQueue: a RelayQueryTracker was not configured but an ' + 'attempt to process a RelayMutation instance was made. Either use ' + 'RelayGraphQLMutation (which does not require a tracker), or use ' + '`RelayStoreData.injectQueryTracker()` to configure a tracker. Be ' + 'aware that trackers are provided by default, so if you are seeing ' + 'this error it means that somebody has explicitly intended to opt ' + 'out of query tracking.');","  return tracker;","}","","function getNextID() {","  return require('fbjs/lib/base62')(transactionIDCounter++);","}","","module.exports = RelayMutationQueue;"],"l":{"15":1,"17":1,"19":1,"21":3,"23":1,"25":1,"35":1,"36":1,"37":6,"39":6,"40":6,"41":6,"42":6,"43":6,"52":1,"53":0,"54":0,"77":1,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"87":1,"88":0,"89":0,"90":0,"92":0,"95":1,"96":0,"99":1,"100":0,"103":1,"104":0,"105":0,"106":0,"107":0,"110":1,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"120":0,"121":0,"123":0,"126":1,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"136":0,"137":0,"141":0,"144":1,"145":0,"146":0,"147":0,"150":1,"151":0,"152":0,"153":0,"154":0,"155":0,"162":1,"163":0,"164":0,"165":0,"167":0,"168":0,"169":0,"170":0,"171":0,"173":0,"176":0,"177":0,"181":0,"182":0,"184":0,"187":1,"188":0,"189":0,"191":0,"192":0,"197":0,"198":0,"199":0,"203":1,"204":0,"206":0,"207":0,"209":0,"210":0,"212":0,"213":0,"215":0,"219":1,"220":0,"221":0,"224":1,"225":0,"226":0,"227":0,"231":1,"232":0,"233":0,"234":0,"235":0,"237":0,"239":0,"240":0,"242":0,"248":1,"249":0,"251":0,"252":0,"253":0,"254":0,"256":0,"257":0,"258":0,"261":0,"266":1,"267":0,"269":0,"270":0,"271":0,"272":0,"273":0,"278":1,"279":0,"281":0,"282":0,"283":0,"287":1,"295":1,"296":1,"297":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"315":1,"316":0,"317":0,"319":0,"322":1,"323":0,"324":0,"326":0,"329":1,"330":0,"331":0,"333":0,"336":1,"337":0,"338":0,"339":0,"340":0,"357":0,"360":1,"361":0,"362":0,"364":0,"367":1,"368":0,"369":0,"370":0,"372":0,"375":1,"376":0,"377":0,"378":0,"379":0,"381":0,"384":1,"385":0,"386":0,"388":0,"391":1,"392":0,"394":0,"395":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"412":0,"419":0,"422":0,"423":0,"425":0,"429":0,"432":1,"433":0,"434":0,"435":0,"436":0,"438":0,"440":0,"443":1,"444":0,"445":0,"446":0,"447":0,"449":0,"452":0,"455":1,"456":0,"458":0,"459":0,"462":0,"463":0,"472":0,"473":0,"474":0,"478":0,"481":1,"484":1,"485":0,"486":0,"487":0,"490":1,"491":0,"494":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayNetworkLayer.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayNetworkLayer.js","s":{"1":1,"2":1,"3":1,"4":2,"5":1,"6":1,"7":6,"8":6,"9":6,"10":6,"11":1,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":0,"47":1,"48":0,"49":0,"50":0,"51":1,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":1,"64":1,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":1,"75":1},"b":{"1":[1,1],"2":[2,2],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":2,"2":1,"3":6,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":37}}},"2":{"name":"(anonymous_2)","line":26,"loc":{"start":{"line":26,"column":24},"end":{"line":26,"column":36}}},"3":{"name":"RelayNetworkLayer","line":27,"loc":{"start":{"line":27,"column":2},"end":{"line":27,"column":31}}},"4":{"name":"injectDefaultImplementation","line":40,"loc":{"start":{"line":40,"column":60},"end":{"line":40,"column":113}}},"5":{"name":"injectImplementation","line":47,"loc":{"start":{"line":47,"column":53},"end":{"line":47,"column":99}}},"6":{"name":"addNetworkSubscriber","line":54,"loc":{"start":{"line":54,"column":53},"end":{"line":54,"column":116}}},"7":{"name":"remove","line":60,"loc":{"start":{"line":60,"column":14},"end":{"line":60,"column":32}}},"8":{"name":"sendMutation","line":66,"loc":{"start":{"line":66,"column":45},"end":{"line":66,"column":84}}},"9":{"name":"(anonymous_9)","line":68,"loc":{"start":{"line":68,"column":30},"end":{"line":68,"column":46}}},"10":{"name":"sendQueries","line":81,"loc":{"start":{"line":81,"column":44},"end":{"line":81,"column":80}}},"11":{"name":"(anonymous_11)","line":83,"loc":{"start":{"line":83,"column":30},"end":{"line":83,"column":47}}},"12":{"name":"(anonymous_12)","line":87,"loc":{"start":{"line":87,"column":30},"end":{"line":87,"column":49}}},"13":{"name":"supports","line":99,"loc":{"start":{"line":99,"column":41},"end":{"line":99,"column":61}}},"14":{"name":"_getImplementation","line":104,"loc":{"start":{"line":104,"column":51},"end":{"line":104,"column":81}}},"15":{"name":"fetchRelayQuery","line":119,"loc":{"start":{"line":119,"column":48},"end":{"line":119,"column":80}}},"16":{"name":"(anonymous_16)","line":125,"loc":{"start":{"line":125,"column":43},"end":{"line":125,"column":55}}},"17":{"name":"profileQueue","line":144,"loc":{"start":{"line":144,"column":0},"end":{"line":144,"column":36}}},"18":{"name":"(anonymous_18)","line":147,"loc":{"start":{"line":147,"column":23},"end":{"line":147,"column":40}}},"19":{"name":"onSettle","line":149,"loc":{"start":{"line":149,"column":19},"end":{"line":149,"column":39}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":68}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":97}},"4":{"start":{"line":19,"column":39},"end":{"line":19,"column":95}},"5":{"start":{"line":26,"column":0},"end":{"line":137,"column":4}},"6":{"start":{"line":27,"column":2},"end":{"line":33,"column":3}},"7":{"start":{"line":28,"column":4},"end":{"line":28,"column":62}},"8":{"start":{"line":30,"column":4},"end":{"line":30,"column":32}},"9":{"start":{"line":31,"column":4},"end":{"line":31,"column":23}},"10":{"start":{"line":32,"column":4},"end":{"line":32,"column":27}},"11":{"start":{"line":40,"column":2},"end":{"line":45,"column":4}},"12":{"start":{"line":41,"column":4},"end":{"line":43,"column":5}},"13":{"start":{"line":42,"column":6},"end":{"line":42,"column":158}},"14":{"start":{"line":44,"column":4},"end":{"line":44,"column":49}},"15":{"start":{"line":47,"column":2},"end":{"line":52,"column":4}},"16":{"start":{"line":48,"column":4},"end":{"line":50,"column":5}},"17":{"start":{"line":49,"column":6},"end":{"line":49,"column":143}},"18":{"start":{"line":51,"column":4},"end":{"line":51,"column":42}},"19":{"start":{"line":54,"column":2},"end":{"line":64,"column":4}},"20":{"start":{"line":55,"column":4},"end":{"line":55,"column":21}},"21":{"start":{"line":57,"column":4},"end":{"line":57,"column":41}},"22":{"start":{"line":58,"column":4},"end":{"line":58,"column":97}},"23":{"start":{"line":59,"column":4},"end":{"line":63,"column":6}},"24":{"start":{"line":61,"column":8},"end":{"line":61,"column":41}},"25":{"start":{"line":66,"column":2},"end":{"line":79,"column":4}},"26":{"start":{"line":67,"column":4},"end":{"line":67,"column":51}},"27":{"start":{"line":68,"column":4},"end":{"line":74,"column":7}},"28":{"start":{"line":69,"column":6},"end":{"line":69,"column":51}},"29":{"start":{"line":71,"column":6},"end":{"line":73,"column":7}},"30":{"start":{"line":72,"column":8},"end":{"line":72,"column":42}},"31":{"start":{"line":75,"column":4},"end":{"line":75,"column":63}},"32":{"start":{"line":76,"column":4},"end":{"line":78,"column":5}},"33":{"start":{"line":77,"column":6},"end":{"line":77,"column":51}},"34":{"start":{"line":81,"column":2},"end":{"line":97,"column":4}},"35":{"start":{"line":82,"column":4},"end":{"line":82,"column":51}},"36":{"start":{"line":83,"column":4},"end":{"line":92,"column":7}},"37":{"start":{"line":84,"column":6},"end":{"line":84,"column":46}},"38":{"start":{"line":86,"column":6},"end":{"line":91,"column":7}},"39":{"start":{"line":87,"column":8},"end":{"line":90,"column":11}},"40":{"start":{"line":89,"column":10},"end":{"line":89,"column":33}},"41":{"start":{"line":93,"column":4},"end":{"line":93,"column":60}},"42":{"start":{"line":94,"column":4},"end":{"line":96,"column":5}},"43":{"start":{"line":95,"column":6},"end":{"line":95,"column":51}},"44":{"start":{"line":99,"column":2},"end":{"line":102,"column":4}},"45":{"start":{"line":100,"column":4},"end":{"line":100,"column":51}},"46":{"start":{"line":101,"column":4},"end":{"line":101,"column":68}},"47":{"start":{"line":104,"column":2},"end":{"line":108,"column":4}},"48":{"start":{"line":105,"column":4},"end":{"line":105,"column":77}},"49":{"start":{"line":106,"column":4},"end":{"line":106,"column":149}},"50":{"start":{"line":107,"column":4},"end":{"line":107,"column":26}},"51":{"start":{"line":119,"column":2},"end":{"line":134,"column":4}},"52":{"start":{"line":120,"column":4},"end":{"line":120,"column":22}},"53":{"start":{"line":122,"column":4},"end":{"line":122,"column":41}},"54":{"start":{"line":123,"column":4},"end":{"line":130,"column":5}},"55":{"start":{"line":124,"column":6},"end":{"line":124,"column":33}},"56":{"start":{"line":125,"column":6},"end":{"line":129,"column":9}},"57":{"start":{"line":126,"column":8},"end":{"line":126,"column":29}},"58":{"start":{"line":127,"column":8},"end":{"line":127,"column":35}},"59":{"start":{"line":128,"column":8},"end":{"line":128,"column":41}},"60":{"start":{"line":131,"column":4},"end":{"line":131,"column":62}},"61":{"start":{"line":132,"column":4},"end":{"line":132,"column":31}},"62":{"start":{"line":133,"column":4},"end":{"line":133,"column":32}},"63":{"start":{"line":136,"column":2},"end":{"line":136,"column":27}},"64":{"start":{"line":144,"column":0},"end":{"line":158,"column":1}},"65":{"start":{"line":146,"column":2},"end":{"line":146,"column":82}},"66":{"start":{"line":147,"column":2},"end":{"line":157,"column":5}},"67":{"start":{"line":148,"column":4},"end":{"line":148,"column":79}},"68":{"start":{"line":149,"column":4},"end":{"line":155,"column":6}},"69":{"start":{"line":150,"column":6},"end":{"line":150,"column":22}},"70":{"start":{"line":151,"column":6},"end":{"line":154,"column":7}},"71":{"start":{"line":152,"column":8},"end":{"line":152,"column":35}},"72":{"start":{"line":153,"column":8},"end":{"line":153,"column":35}},"73":{"start":{"line":156,"column":4},"end":{"line":156,"column":35}},"74":{"start":{"line":160,"column":0},"end":{"line":163,"column":3}},"75":{"start":{"line":165,"column":0},"end":{"line":165,"column":35}}},"branchMap":{"1":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":70},"end":{"line":19,"column":73}},{"start":{"line":19,"column":76},"end":{"line":19,"column":94}}]},"2":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":46},"end":{"line":19,"column":49}},{"start":{"line":19,"column":53},"end":{"line":19,"column":67}}]},"3":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":4},"end":{"line":41,"column":4}},{"start":{"line":41,"column":4},"end":{"line":41,"column":4}}]},"4":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":4},"end":{"line":48,"column":4}},{"start":{"line":48,"column":4},"end":{"line":48,"column":4}}]},"5":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":6},"end":{"line":71,"column":6}},{"start":{"line":71,"column":6},"end":{"line":71,"column":6}}]},"6":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":4},"end":{"line":76,"column":4}},{"start":{"line":76,"column":4},"end":{"line":76,"column":4}}]},"7":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":6},"end":{"line":86,"column":6}},{"start":{"line":86,"column":6},"end":{"line":86,"column":6}}]},"8":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":4},"end":{"line":94,"column":4}},{"start":{"line":94,"column":4},"end":{"line":94,"column":4}}]},"9":{"line":105,"type":"binary-expr","locations":[{"start":{"line":105,"column":25},"end":{"line":105,"column":45}},{"start":{"line":105,"column":49},"end":{"line":105,"column":76}}]},"10":{"line":122,"type":"binary-expr","locations":[{"start":{"line":122,"column":23},"end":{"line":122,"column":34}},{"start":{"line":122,"column":38},"end":{"line":122,"column":40}}]},"11":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":4},"end":{"line":123,"column":4}},{"start":{"line":123,"column":4},"end":{"line":123,"column":4}}]},"12":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":6},"end":{"line":151,"column":6}},{"start":{"line":151,"column":6},"end":{"line":151,"column":6}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayNetworkLayer"," * "," */","","'use strict';","","var _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));","","var _promise2 = _interopRequireDefault(require('fbjs/lib/Promise'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","/**"," * @internal"," *"," * `RelayNetworkLayer` provides a method to inject custom network behavior."," */","var RelayNetworkLayer = function () {","  function RelayNetworkLayer() {","    (0, _classCallCheck3['default'])(this, RelayNetworkLayer);","","    this._implementation = null;","    this._queue = null;","    this._subscribers = [];","  }","","  /**","   * @internal","   */","","","  RelayNetworkLayer.prototype.injectDefaultImplementation = function injectDefaultImplementation(implementation) {","    if (this._defaultImplementation) {","      require('fbjs/lib/warning')(false, 'RelayNetworkLayer: Call received to injectDefaultImplementation(), ' + 'but a default layer was already injected.');","    }","    this._defaultImplementation = implementation;","  };","","  RelayNetworkLayer.prototype.injectImplementation = function injectImplementation(implementation) {","    if (this._implementation) {","      require('fbjs/lib/warning')(false, 'RelayNetworkLayer: Call received to injectImplementation(), but ' + 'a layer was already injected.');","    }","    this._implementation = implementation;","  };","","  RelayNetworkLayer.prototype.addNetworkSubscriber = function addNetworkSubscriber(queryCallback, mutationCallback) {","    var _this = this;","","    var index = this._subscribers.length;","    this._subscribers.push({ queryCallback: queryCallback, mutationCallback: mutationCallback });","    return {","      remove: function remove() {","        delete _this._subscribers[index];","      }","    };","  };","","  RelayNetworkLayer.prototype.sendMutation = function sendMutation(mutationRequest) {","    var implementation = this._getImplementation();","    this._subscribers.forEach(function (_ref) {","      var mutationCallback = _ref.mutationCallback;","","      if (mutationCallback) {","        mutationCallback(mutationRequest);","      }","    });","    var promise = implementation.sendMutation(mutationRequest);","    if (promise) {","      _promise2['default'].resolve(promise).done();","    }","  };","","  RelayNetworkLayer.prototype.sendQueries = function sendQueries(queryRequests) {","    var implementation = this._getImplementation();","    this._subscribers.forEach(function (_ref2) {","      var queryCallback = _ref2.queryCallback;","","      if (queryCallback) {","        queryRequests.forEach(function (request) {","          // $FlowIssue #10907496 queryCallback was checked above","          queryCallback(request);","        });","      }","    });","    var promise = implementation.sendQueries(queryRequests);","    if (promise) {","      _promise2['default'].resolve(promise).done();","    }","  };","","  RelayNetworkLayer.prototype.supports = function supports() {","    var implementation = this._getImplementation();","    return implementation.supports.apply(implementation, arguments);","  };","","  RelayNetworkLayer.prototype._getImplementation = function _getImplementation() {","    var implementation = this._implementation || this._defaultImplementation;","    require('fbjs/lib/invariant')(implementation, 'RelayNetworkLayer: Use `RelayEnvironment.injectNetworkLayer` to ' + 'configure a network layer.');","    return implementation;","  };","","  /**","   * Schedules the supplied `query` to be sent to the server.","   *","   * This is a low-level transport API; application code should use higher-level","   * interfaces exposed by RelayContainer for retrieving data transparently via","   * queries defined on components.","   */","","","  RelayNetworkLayer.prototype.fetchRelayQuery = function fetchRelayQuery(query) {","    var _this2 = this;","","    var currentQueue = this._queue || [];","    if (!this._queue) {","      this._queue = currentQueue;","      require('fbjs/lib/resolveImmediate')(function () {","        _this2._queue = null;","        profileQueue(currentQueue);","        _this2.sendQueries(currentQueue);","      });","    }","    var request = new (require('./RelayQueryRequest'))(query);","    currentQueue.push(request);","    return request.getPromise();","  };","","  return RelayNetworkLayer;","}();","","/**"," * Profiles time from request to receiving the first server response."," */","","","function profileQueue(currentQueue) {","  // TODO #8783781: remove aggregate `fetchRelayQuery` profiler","  var firstResultProfiler = require('./RelayProfiler').profile('fetchRelayQuery');","  currentQueue.forEach(function (query) {","    var profiler = require('./RelayProfiler').profile('fetchRelayQuery.query');","    var onSettle = function onSettle() {","      profiler.stop();","      if (firstResultProfiler) {","        firstResultProfiler.stop();","        firstResultProfiler = null;","      }","    };","    query.done(onSettle, onSettle);","  });","}","","require('./RelayProfiler').instrumentMethods(RelayNetworkLayer.prototype, {","  sendMutation: 'RelayNetworkLayer.sendMutation',","  sendQueries: 'RelayNetworkLayer.sendQueries'","});","","module.exports = RelayNetworkLayer;"],"l":{"15":1,"17":1,"19":2,"26":1,"27":1,"28":6,"30":6,"31":6,"32":6,"40":1,"41":0,"42":0,"44":0,"47":1,"48":0,"49":0,"51":0,"54":1,"55":0,"57":0,"58":0,"59":0,"61":0,"66":1,"67":0,"68":0,"69":0,"71":0,"72":0,"75":0,"76":0,"77":0,"81":1,"82":0,"83":0,"84":0,"86":0,"87":0,"89":0,"93":0,"94":0,"95":0,"99":1,"100":0,"101":0,"104":1,"105":0,"106":0,"107":0,"119":1,"120":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"131":0,"132":0,"133":0,"136":1,"144":1,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"156":0,"160":1,"165":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayPendingQueryTracker.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayPendingQueryTracker.js","s":{"1":1,"2":1,"3":1,"4":1,"5":3,"6":1,"7":1,"8":6,"9":6,"10":6,"11":6,"12":1,"13":0,"14":1,"15":0,"16":1,"17":0,"18":1,"19":0,"20":1,"21":0,"22":1,"23":1,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":1,"44":0,"45":1,"46":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":0,"56":1,"57":0,"58":0,"59":0,"60":0,"61":1,"62":0,"63":0,"64":0,"65":0,"66":0,"67":1,"68":0,"69":0,"70":0,"71":0,"72":1,"73":0,"74":1,"75":1,"76":0,"77":1},"b":{"1":[2,1],"2":[3,3],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":3,"2":1,"3":6,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":37}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":31},"end":{"line":28,"column":43}}},"3":{"name":"RelayPendingQueryTracker","line":30,"loc":{"start":{"line":30,"column":2},"end":{"line":30,"column":47}}},"4":{"name":"add","line":43,"loc":{"start":{"line":43,"column":43},"end":{"line":43,"column":64}}},"5":{"name":"hasPendingQueries","line":51,"loc":{"start":{"line":51,"column":57},"end":{"line":51,"column":86}}},"6":{"name":"resetPending","line":60,"loc":{"start":{"line":60,"column":52},"end":{"line":60,"column":76}}},"7":{"name":"resolvePreloadQuery","line":64,"loc":{"start":{"line":64,"column":59},"end":{"line":64,"column":105}}},"8":{"name":"rejectPreloadQuery","line":68,"loc":{"start":{"line":68,"column":58},"end":{"line":68,"column":102}}},"9":{"name":"(anonymous_9)","line":80,"loc":{"start":{"line":80,"column":19},"end":{"line":80,"column":31}}},"10":{"name":"PendingFetch","line":81,"loc":{"start":{"line":81,"column":2},"end":{"line":81,"column":37}}},"11":{"name":"isResolvable","line":111,"loc":{"start":{"line":111,"column":40},"end":{"line":111,"column":64}}},"12":{"name":"getQuery","line":115,"loc":{"start":{"line":115,"column":36},"end":{"line":115,"column":56}}},"13":{"name":"getResolvedPromise","line":119,"loc":{"start":{"line":119,"column":46},"end":{"line":119,"column":76}}},"14":{"name":"_handleQuerySuccess","line":123,"loc":{"start":{"line":123,"column":47},"end":{"line":123,"column":84}}},"15":{"name":"(anonymous_15)","line":128,"loc":{"start":{"line":128,"column":43},"end":{"line":128,"column":55}}},"16":{"name":"_handleQueryFailure","line":135,"loc":{"start":{"line":135,"column":47},"end":{"line":135,"column":83}}},"17":{"name":"_markQueryAsResolved","line":139,"loc":{"start":{"line":139,"column":48},"end":{"line":139,"column":80}}},"18":{"name":"_markAsRejected","line":147,"loc":{"start":{"line":147,"column":43},"end":{"line":147,"column":75}}},"19":{"name":"_updateResolvedDeferred","line":157,"loc":{"start":{"line":157,"column":51},"end":{"line":157,"column":86}}},"20":{"name":"_isSettled","line":167,"loc":{"start":{"line":167,"column":38},"end":{"line":167,"column":60}}},"21":{"name":"hasItems","line":174,"loc":{"start":{"line":174,"column":0},"end":{"line":174,"column":23}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":82}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":68}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":97}},"5":{"start":{"line":21,"column":39},"end":{"line":21,"column":95}},"6":{"start":{"line":28,"column":0},"end":{"line":73,"column":4}},"7":{"start":{"line":30,"column":2},"end":{"line":36,"column":3}},"8":{"start":{"line":31,"column":4},"end":{"line":31,"column":69}},"9":{"start":{"line":33,"column":4},"end":{"line":33,"column":31}},"10":{"start":{"line":34,"column":4},"end":{"line":34,"column":67}},"11":{"start":{"line":35,"column":4},"end":{"line":35,"column":32}},"12":{"start":{"line":43,"column":2},"end":{"line":49,"column":4}},"13":{"start":{"line":44,"column":4},"end":{"line":48,"column":7}},"14":{"start":{"line":51,"column":2},"end":{"line":53,"column":4}},"15":{"start":{"line":52,"column":4},"end":{"line":52,"column":43}},"16":{"start":{"line":60,"column":2},"end":{"line":62,"column":4}},"17":{"start":{"line":61,"column":4},"end":{"line":61,"column":31}},"18":{"start":{"line":64,"column":2},"end":{"line":66,"column":4}},"19":{"start":{"line":65,"column":4},"end":{"line":65,"column":54}},"20":{"start":{"line":68,"column":2},"end":{"line":70,"column":4}},"21":{"start":{"line":69,"column":4},"end":{"line":69,"column":52}},"22":{"start":{"line":72,"column":2},"end":{"line":72,"column":34}},"23":{"start":{"line":80,"column":0},"end":{"line":172,"column":4}},"24":{"start":{"line":81,"column":2},"end":{"line":109,"column":3}},"25":{"start":{"line":82,"column":4},"end":{"line":84,"column":27}},"26":{"start":{"line":85,"column":4},"end":{"line":87,"column":36}},"27":{"start":{"line":88,"column":4},"end":{"line":88,"column":57}},"28":{"start":{"line":90,"column":4},"end":{"line":90,"column":32}},"29":{"start":{"line":91,"column":4},"end":{"line":91,"column":34}},"30":{"start":{"line":92,"column":4},"end":{"line":92,"column":44}},"31":{"start":{"line":93,"column":4},"end":{"line":93,"column":44}},"32":{"start":{"line":94,"column":4},"end":{"line":94,"column":24}},"33":{"start":{"line":95,"column":4},"end":{"line":95,"column":66}},"34":{"start":{"line":96,"column":4},"end":{"line":96,"column":32}},"35":{"start":{"line":97,"column":4},"end":{"line":97,"column":32}},"36":{"start":{"line":99,"column":4},"end":{"line":99,"column":170}},"37":{"start":{"line":101,"column":4},"end":{"line":101,"column":31}},"38":{"start":{"line":102,"column":4},"end":{"line":102,"column":23}},"39":{"start":{"line":104,"column":4},"end":{"line":107,"column":6}},"40":{"start":{"line":108,"column":4},"end":{"line":108,"column":107}},"41":{"start":{"line":111,"column":2},"end":{"line":113,"column":4}},"42":{"start":{"line":112,"column":4},"end":{"line":112,"column":31}},"43":{"start":{"line":115,"column":2},"end":{"line":117,"column":4}},"44":{"start":{"line":116,"column":4},"end":{"line":116,"column":23}},"45":{"start":{"line":119,"column":2},"end":{"line":121,"column":4}},"46":{"start":{"line":120,"column":4},"end":{"line":120,"column":47}},"47":{"start":{"line":123,"column":2},"end":{"line":133,"column":4}},"48":{"start":{"line":124,"column":4},"end":{"line":124,"column":21}},"49":{"start":{"line":126,"column":4},"end":{"line":126,"column":30}},"50":{"start":{"line":128,"column":4},"end":{"line":132,"column":83}},"51":{"start":{"line":129,"column":6},"end":{"line":129,"column":37}},"52":{"start":{"line":130,"column":6},"end":{"line":130,"column":196}},"53":{"start":{"line":131,"column":6},"end":{"line":131,"column":85}},"54":{"start":{"line":135,"column":2},"end":{"line":137,"column":4}},"55":{"start":{"line":136,"column":4},"end":{"line":136,"column":32}},"56":{"start":{"line":139,"column":2},"end":{"line":145,"column":4}},"57":{"start":{"line":140,"column":4},"end":{"line":140,"column":42}},"58":{"start":{"line":141,"column":4},"end":{"line":141,"column":42}},"59":{"start":{"line":143,"column":4},"end":{"line":143,"column":31}},"60":{"start":{"line":144,"column":4},"end":{"line":144,"column":35}},"61":{"start":{"line":147,"column":2},"end":{"line":155,"column":4}},"62":{"start":{"line":148,"column":4},"end":{"line":148,"column":42}},"63":{"start":{"line":149,"column":4},"end":{"line":149,"column":42}},"64":{"start":{"line":151,"column":4},"end":{"line":151,"column":32}},"65":{"start":{"line":153,"column":4},"end":{"line":153,"column":24}},"66":{"start":{"line":154,"column":4},"end":{"line":154,"column":35}},"67":{"start":{"line":157,"column":2},"end":{"line":165,"column":4}},"68":{"start":{"line":158,"column":4},"end":{"line":164,"column":5}},"69":{"start":{"line":159,"column":6},"end":{"line":163,"column":7}},"70":{"start":{"line":160,"column":8},"end":{"line":160,"column":51}},"71":{"start":{"line":162,"column":8},"end":{"line":162,"column":50}},"72":{"start":{"line":167,"column":2},"end":{"line":169,"column":4}},"73":{"start":{"line":168,"column":4},"end":{"line":168,"column":48}},"74":{"start":{"line":171,"column":2},"end":{"line":171,"column":22}},"75":{"start":{"line":174,"column":0},"end":{"line":176,"column":1}},"76":{"start":{"line":175,"column":2},"end":{"line":175,"column":46}},"77":{"start":{"line":178,"column":0},"end":{"line":178,"column":42}}},"branchMap":{"1":{"line":21,"type":"cond-expr","locations":[{"start":{"line":21,"column":70},"end":{"line":21,"column":73}},{"start":{"line":21,"column":76},"end":{"line":21,"column":94}}]},"2":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":46},"end":{"line":21,"column":49}},{"start":{"line":21,"column":53},"end":{"line":21,"column":67}}]},"3":{"line":99,"type":"cond-expr","locations":[{"start":{"line":99,"column":82},"end":{"line":99,"column":116}},{"start":{"line":99,"column":119},"end":{"line":99,"column":169}}]},"4":{"line":130,"type":"binary-expr","locations":[{"start":{"line":130,"column":36},"end":{"line":130,"column":44}},{"start":{"line":130,"column":48},"end":{"line":130,"column":76}}]},"5":{"line":130,"type":"cond-expr","locations":[{"start":{"line":130,"column":168},"end":{"line":130,"column":183}},{"start":{"line":130,"column":186},"end":{"line":130,"column":194}}]},"6":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":4},"end":{"line":158,"column":4}},{"start":{"line":158,"column":4},"end":{"line":158,"column":4}}]},"7":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":8},"end":{"line":158,"column":25}},{"start":{"line":158,"column":29},"end":{"line":158,"column":64}}]},"8":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":6},"end":{"line":159,"column":6}},{"start":{"line":159,"column":6},"end":{"line":159,"column":6}}]},"9":{"line":168,"type":"binary-expr","locations":[{"start":{"line":168,"column":11},"end":{"line":168,"column":24}},{"start":{"line":168,"column":28},"end":{"line":168,"column":47}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayPendingQueryTracker"," * "," */","","'use strict';","","var _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));","","var _keys2 = _interopRequireDefault(require('babel-runtime/core-js/object/keys'));","","var _promise2 = _interopRequireDefault(require('fbjs/lib/Promise'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","/**"," * @internal"," *"," * Tracks pending (in-flight) queries."," */","var RelayPendingQueryTracker = function () {","  // Asynchronous mapping from preload query IDs to results.","  function RelayPendingQueryTracker(storeData) {","    (0, _classCallCheck3['default'])(this, RelayPendingQueryTracker);","","    this._pendingFetchMap = {};","    this._preloadQueryMap = new (require('fbjs/lib/PromiseMap'))();","    this._storeData = storeData;","  }","","  /**","   * Used by `GraphQLQueryRunner` to enqueue new queries.","   */","","","  RelayPendingQueryTracker.prototype.add = function add(params) {","    return new PendingFetch(params, {","      pendingFetchMap: this._pendingFetchMap,","      preloadQueryMap: this._preloadQueryMap,","      storeData: this._storeData","    });","  };","","  RelayPendingQueryTracker.prototype.hasPendingQueries = function hasPendingQueries() {","    return hasItems(this._pendingFetchMap);","  };","","  /**","   * Clears all pending query tracking. Does not cancel the queries themselves.","   */","","","  RelayPendingQueryTracker.prototype.resetPending = function resetPending() {","    this._pendingFetchMap = {};","  };","","  RelayPendingQueryTracker.prototype.resolvePreloadQuery = function resolvePreloadQuery(queryID, result) {","    this._preloadQueryMap.resolveKey(queryID, result);","  };","","  RelayPendingQueryTracker.prototype.rejectPreloadQuery = function rejectPreloadQuery(queryID, error) {","    this._preloadQueryMap.rejectKey(queryID, error);","  };","","  return RelayPendingQueryTracker;","}();","","/**"," * @private"," */","","","var PendingFetch = function () {","  function PendingFetch(_ref, _ref2) {","    var fetchMode = _ref.fetchMode,","        forceIndex = _ref.forceIndex,","        query = _ref.query;","    var pendingFetchMap = _ref2.pendingFetchMap,","        preloadQueryMap = _ref2.preloadQueryMap,","        storeData = _ref2.storeData;","    (0, _classCallCheck3['default'])(this, PendingFetch);","","    var queryID = query.getID();","    this._forceIndex = forceIndex;","    this._pendingFetchMap = pendingFetchMap;","    this._preloadQueryMap = preloadQueryMap;","    this._query = query;","    this._resolvedDeferred = new (require('fbjs/lib/Deferred'))();","    this._resolvedQuery = false;","    this._storeData = storeData;","","    this._fetchQueryPromise = fetchMode === require('./RelayFetchMode').PRELOAD ? this._preloadQueryMap.get(queryID) : storeData.getNetworkLayer().fetchRelayQuery(query);","","    this._fetchedQuery = false;","    this._error = null;","","    this._pendingFetchMap[queryID] = {","      fetch: this,","      query: query","    };","    this._fetchQueryPromise.done(this._handleQuerySuccess.bind(this), this._handleQueryFailure.bind(this));","  }","","  PendingFetch.prototype.isResolvable = function isResolvable() {","    return this._resolvedQuery;","  };","","  PendingFetch.prototype.getQuery = function getQuery() {","    return this._query;","  };","","  PendingFetch.prototype.getResolvedPromise = function getResolvedPromise() {","    return this._resolvedDeferred.getPromise();","  };","","  PendingFetch.prototype._handleQuerySuccess = function _handleQuerySuccess(result) {","    var _this = this;","","    this._fetchedQuery = true;","","    this._storeData.getTaskQueue().enqueue(function () {","      var response = result.response;","      require('fbjs/lib/invariant')(response && typeof response === 'object', 'RelayPendingQueryTracker: Expected response to be an object, got ' + '`%s`.', response ? typeof response : response);","      _this._storeData.handleQueryPayload(_this._query, response, _this._forceIndex);","    }).done(this._markQueryAsResolved.bind(this), this._markAsRejected.bind(this));","  };","","  PendingFetch.prototype._handleQueryFailure = function _handleQueryFailure(error) {","    this._markAsRejected(error);","  };","","  PendingFetch.prototype._markQueryAsResolved = function _markQueryAsResolved() {","    var queryID = this.getQuery().getID();","    delete this._pendingFetchMap[queryID];","","    this._resolvedQuery = true;","    this._updateResolvedDeferred();","  };","","  PendingFetch.prototype._markAsRejected = function _markAsRejected(error) {","    var queryID = this.getQuery().getID();","    delete this._pendingFetchMap[queryID];","","    console.warn(error.message);","","    this._error = error;","    this._updateResolvedDeferred();","  };","","  PendingFetch.prototype._updateResolvedDeferred = function _updateResolvedDeferred() {","    if (this._isSettled() && !this._resolvedDeferred.isSettled()) {","      if (this._error) {","        this._resolvedDeferred.reject(this._error);","      } else {","        this._resolvedDeferred.resolve(undefined);","      }","    }","  };","","  PendingFetch.prototype._isSettled = function _isSettled() {","    return !!this._error || this._resolvedQuery;","  };","","  return PendingFetch;","}();","","function hasItems(map) {","  return !!(0, _keys2['default'])(map).length;","}","","module.exports = RelayPendingQueryTracker;"],"l":{"15":1,"17":1,"19":1,"21":3,"28":1,"30":1,"31":6,"33":6,"34":6,"35":6,"43":1,"44":0,"51":1,"52":0,"60":1,"61":0,"64":1,"65":0,"68":1,"69":0,"72":1,"80":1,"81":1,"82":0,"85":0,"88":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"99":0,"101":0,"102":0,"104":0,"108":0,"111":1,"112":0,"115":1,"116":0,"119":1,"120":0,"123":1,"124":0,"126":0,"128":0,"129":0,"130":0,"131":0,"135":1,"136":0,"139":1,"140":0,"141":0,"143":0,"144":0,"147":1,"148":0,"149":0,"151":0,"153":0,"154":0,"157":1,"158":0,"159":0,"160":0,"162":0,"167":1,"168":0,"171":1,"174":1,"175":0,"178":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/GraphQLQueryRunner.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/GraphQLQueryRunner.js","s":{"1":1,"2":1,"3":1,"4":2,"5":1,"6":1,"7":6,"8":6,"9":1,"10":0,"11":0,"12":1,"13":0,"14":0,"15":1,"16":1,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":1},"b":{"1":[2,0],"2":[2,2],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0]},"f":{"1":2,"2":1,"3":6,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":37}}},"2":{"name":"(anonymous_2)","line":32,"loc":{"start":{"line":32,"column":25},"end":{"line":32,"column":37}}},"3":{"name":"GraphQLQueryRunner","line":33,"loc":{"start":{"line":33,"column":2},"end":{"line":33,"column":41}}},"4":{"name":"run","line":45,"loc":{"start":{"line":45,"column":37},"end":{"line":45,"column":70}}},"5":{"name":"forceFetch","line":60,"loc":{"start":{"line":60,"column":44},"end":{"line":60,"column":84}}},"6":{"name":"hasItems","line":68,"loc":{"start":{"line":68,"column":0},"end":{"line":68,"column":23}}},"7":{"name":"splitAndFlattenQueries","line":72,"loc":{"start":{"line":72,"column":0},"end":{"line":72,"column":52}}},"8":{"name":"(anonymous_8)","line":75,"loc":{"start":{"line":75,"column":22},"end":{"line":75,"column":39}}},"9":{"name":"(anonymous_9)","line":83,"loc":{"start":{"line":83,"column":18},"end":{"line":83,"column":35}}},"10":{"name":"runQueries","line":89,"loc":{"start":{"line":89,"column":0},"end":{"line":89,"column":62}}},"11":{"name":"onResolved","line":97,"loc":{"start":{"line":97,"column":2},"end":{"line":97,"column":36}}},"12":{"name":"(anonymous_12)","line":109,"loc":{"start":{"line":109,"column":58},"end":{"line":109,"column":75}}},"13":{"name":"onRejected","line":132,"loc":{"start":{"line":132,"column":2},"end":{"line":132,"column":43}}},"14":{"name":"canResolve","line":136,"loc":{"start":{"line":136,"column":2},"end":{"line":136,"column":29}}},"15":{"name":"(anonymous_15)","line":140,"loc":{"start":{"line":140,"column":35},"end":{"line":140,"column":47}}},"16":{"name":"(anonymous_16)","line":145,"loc":{"start":{"line":145,"column":50},"end":{"line":145,"column":67}}},"17":{"name":"(anonymous_17)","line":151,"loc":{"start":{"line":151,"column":50},"end":{"line":151,"column":67}}},"18":{"name":"(anonymous_18)","line":165,"loc":{"start":{"line":165,"column":29},"end":{"line":165,"column":46}}},"19":{"name":"(anonymous_19)","line":186,"loc":{"start":{"line":186,"column":45},"end":{"line":186,"column":57}}},"20":{"name":"(anonymous_20)","line":188,"loc":{"start":{"line":188,"column":92},"end":{"line":188,"column":109}}},"21":{"name":"onSuccess","line":192,"loc":{"start":{"line":192,"column":25},"end":{"line":192,"column":46}}},"22":{"name":"onFailure","line":198,"loc":{"start":{"line":198,"column":25},"end":{"line":198,"column":51}}},"23":{"name":"abort","line":222,"loc":{"start":{"line":222,"column":11},"end":{"line":222,"column":28}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":82}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":97}},"4":{"start":{"line":19,"column":39},"end":{"line":19,"column":95}},"5":{"start":{"line":32,"column":0},"end":{"line":66,"column":4}},"6":{"start":{"line":33,"column":2},"end":{"line":37,"column":3}},"7":{"start":{"line":34,"column":4},"end":{"line":34,"column":63}},"8":{"start":{"line":36,"column":4},"end":{"line":36,"column":32}},"9":{"start":{"line":45,"column":2},"end":{"line":49,"column":4}},"10":{"start":{"line":46,"column":4},"end":{"line":46,"column":123}},"11":{"start":{"line":48,"column":4},"end":{"line":48,"column":70}},"12":{"start":{"line":60,"column":2},"end":{"line":63,"column":4}},"13":{"start":{"line":61,"column":4},"end":{"line":61,"column":56}},"14":{"start":{"line":62,"column":4},"end":{"line":62,"column":70}},"15":{"start":{"line":65,"column":2},"end":{"line":65,"column":28}},"16":{"start":{"line":68,"column":0},"end":{"line":70,"column":1}},"17":{"start":{"line":69,"column":2},"end":{"line":69,"column":46}},"18":{"start":{"line":72,"column":0},"end":{"line":87,"column":1}},"19":{"start":{"line":73,"column":2},"end":{"line":80,"column":3}},"20":{"start":{"line":74,"column":4},"end":{"line":78,"column":5}},"21":{"start":{"line":75,"column":6},"end":{"line":77,"column":9}},"22":{"start":{"line":76,"column":8},"end":{"line":76,"column":278}},"23":{"start":{"line":79,"column":4},"end":{"line":79,"column":19}},"24":{"start":{"line":82,"column":2},"end":{"line":82,"column":28}},"25":{"start":{"line":83,"column":2},"end":{"line":85,"column":5}},"26":{"start":{"line":84,"column":4},"end":{"line":84,"column":143}},"27":{"start":{"line":86,"column":2},"end":{"line":86,"column":26}},"28":{"start":{"line":89,"column":0},"end":{"line":226,"column":1}},"29":{"start":{"line":90,"column":2},"end":{"line":90,"column":207}},"30":{"start":{"line":92,"column":2},"end":{"line":92,"column":64}},"31":{"start":{"line":94,"column":2},"end":{"line":94,"column":29}},"32":{"start":{"line":95,"column":2},"end":{"line":95,"column":37}},"33":{"start":{"line":97,"column":2},"end":{"line":130,"column":3}},"34":{"start":{"line":98,"column":4},"end":{"line":98,"column":47}},"35":{"start":{"line":99,"column":4},"end":{"line":99,"column":46}},"36":{"start":{"line":100,"column":4},"end":{"line":100,"column":45}},"37":{"start":{"line":101,"column":4},"end":{"line":103,"column":5}},"38":{"start":{"line":102,"column":6},"end":{"line":102,"column":55}},"39":{"start":{"line":105,"column":4},"end":{"line":107,"column":5}},"40":{"start":{"line":106,"column":6},"end":{"line":106,"column":13}},"41":{"start":{"line":109,"column":4},"end":{"line":115,"column":5}},"42":{"start":{"line":110,"column":6},"end":{"line":110,"column":34}},"43":{"start":{"line":114,"column":6},"end":{"line":114,"column":13}},"44":{"start":{"line":117,"column":4},"end":{"line":129,"column":5}},"45":{"start":{"line":118,"column":6},"end":{"line":122,"column":56}},"46":{"start":{"line":124,"column":6},"end":{"line":128,"column":51}},"47":{"start":{"line":132,"column":2},"end":{"line":134,"column":3}},"48":{"start":{"line":133,"column":4},"end":{"line":133,"column":89}},"49":{"start":{"line":136,"column":2},"end":{"line":138,"column":3}},"50":{"start":{"line":137,"column":4},"end":{"line":137,"column":90}},"51":{"start":{"line":140,"column":2},"end":{"line":219,"column":12}},"52":{"start":{"line":141,"column":4},"end":{"line":141,"column":114}},"53":{"start":{"line":143,"column":4},"end":{"line":143,"column":21}},"54":{"start":{"line":144,"column":4},"end":{"line":156,"column":5}},"55":{"start":{"line":145,"column":6},"end":{"line":149,"column":9}},"56":{"start":{"line":146,"column":8},"end":{"line":148,"column":9}},"57":{"start":{"line":147,"column":10},"end":{"line":147,"column":131}},"58":{"start":{"line":151,"column":6},"end":{"line":155,"column":9}},"59":{"start":{"line":152,"column":8},"end":{"line":154,"column":9}},"60":{"start":{"line":153,"column":10},"end":{"line":153,"column":30}},"61":{"start":{"line":158,"column":4},"end":{"line":158,"column":70}},"62":{"start":{"line":160,"column":4},"end":{"line":160,"column":26}},"63":{"start":{"line":161,"column":4},"end":{"line":163,"column":5}},"64":{"start":{"line":162,"column":6},"end":{"line":162,"column":57}},"65":{"start":{"line":165,"column":4},"end":{"line":173,"column":7}},"66":{"start":{"line":166,"column":6},"end":{"line":166,"column":150}},"67":{"start":{"line":167,"column":6},"end":{"line":167,"column":34}},"68":{"start":{"line":168,"column":6},"end":{"line":168,"column":48}},"69":{"start":{"line":169,"column":6},"end":{"line":171,"column":7}},"70":{"start":{"line":170,"column":8},"end":{"line":170,"column":58}},"71":{"start":{"line":172,"column":6},"end":{"line":172,"column":119}},"72":{"start":{"line":175,"column":4},"end":{"line":216,"column":5}},"73":{"start":{"line":176,"column":6},"end":{"line":179,"column":65}},"74":{"start":{"line":181,"column":6},"end":{"line":215,"column":7}},"75":{"start":{"line":182,"column":8},"end":{"line":182,"column":104}},"76":{"start":{"line":184,"column":8},"end":{"line":184,"column":104}},"77":{"start":{"line":186,"column":8},"end":{"line":214,"column":11}},"78":{"start":{"line":187,"column":10},"end":{"line":213,"column":11}},"79":{"start":{"line":188,"column":12},"end":{"line":190,"column":15}},"80":{"start":{"line":189,"column":14},"end":{"line":189,"column":38}},"81":{"start":{"line":191,"column":12},"end":{"line":203,"column":15}},"82":{"start":{"line":193,"column":16},"end":{"line":196,"column":58}},"83":{"start":{"line":199,"column":16},"end":{"line":201,"column":69}},"84":{"start":{"line":205,"column":12},"end":{"line":212,"column":13}},"85":{"start":{"line":206,"column":14},"end":{"line":209,"column":56}},"86":{"start":{"line":211,"column":14},"end":{"line":211,"column":72}},"87":{"start":{"line":218,"column":4},"end":{"line":218,"column":20}},"88":{"start":{"line":221,"column":2},"end":{"line":225,"column":4}},"89":{"start":{"line":223,"column":6},"end":{"line":223,"column":64}},"90":{"start":{"line":228,"column":0},"end":{"line":228,"column":36}}},"branchMap":{"1":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":70},"end":{"line":19,"column":73}},{"start":{"line":19,"column":76},"end":{"line":19,"column":94}}]},"2":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":46},"end":{"line":19,"column":49}},{"start":{"line":19,"column":53},"end":{"line":19,"column":67}}]},"3":{"line":46,"type":"cond-expr","locations":[{"start":{"line":46,"column":73},"end":{"line":46,"column":85}},{"start":{"line":46,"column":88},"end":{"line":46,"column":122}}]},"4":{"line":46,"type":"binary-expr","locations":[{"start":{"line":46,"column":20},"end":{"line":46,"column":40}},{"start":{"line":46,"column":44},"end":{"line":46,"column":70}}]},"5":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":2},"end":{"line":73,"column":2}},{"start":{"line":73,"column":2},"end":{"line":73,"column":2}}]},"6":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":4},"end":{"line":74,"column":4}},{"start":{"line":74,"column":4},"end":{"line":74,"column":4}}]},"7":{"line":90,"type":"cond-expr","locations":[{"start":{"line":90,"column":69},"end":{"line":90,"column":136}},{"start":{"line":90,"column":139},"end":{"line":90,"column":206}}]},"8":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":4},"end":{"line":101,"column":4}},{"start":{"line":101,"column":4},"end":{"line":101,"column":4}}]},"9":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":4},"end":{"line":105,"column":4}},{"start":{"line":105,"column":4},"end":{"line":105,"column":4}}]},"10":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":4},"end":{"line":109,"column":4}},{"start":{"line":109,"column":4},"end":{"line":109,"column":4}}]},"11":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":4},"end":{"line":117,"column":4}},{"start":{"line":117,"column":4},"end":{"line":117,"column":4}}]},"12":{"line":141,"type":"cond-expr","locations":[{"start":{"line":141,"column":73},"end":{"line":141,"column":106}},{"start":{"line":141,"column":109},"end":{"line":141,"column":113}}]},"13":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":4},"end":{"line":144,"column":4}},{"start":{"line":144,"column":4},"end":{"line":144,"column":4}}]},"14":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":8},"end":{"line":146,"column":8}},{"start":{"line":146,"column":8},"end":{"line":146,"column":8}}]},"15":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":8},"end":{"line":152,"column":8}},{"start":{"line":152,"column":8},"end":{"line":152,"column":8}}]},"16":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":4},"end":{"line":161,"column":4}},{"start":{"line":161,"column":4},"end":{"line":161,"column":4}}]},"17":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":6},"end":{"line":169,"column":6}},{"start":{"line":169,"column":6},"end":{"line":169,"column":6}}]},"18":{"line":175,"type":"if","locations":[{"start":{"line":175,"column":4},"end":{"line":175,"column":4}},{"start":{"line":175,"column":4},"end":{"line":175,"column":4}}]},"19":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":6},"end":{"line":181,"column":6}},{"start":{"line":181,"column":6},"end":{"line":181,"column":6}}]},"20":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":10},"end":{"line":187,"column":10}},{"start":{"line":187,"column":10},"end":{"line":187,"column":10}}]},"21":{"line":205,"type":"if","locations":[{"start":{"line":205,"column":12},"end":{"line":205,"column":12}},{"start":{"line":205,"column":12},"end":{"line":205,"column":12}}]},"22":{"line":205,"type":"binary-expr","locations":[{"start":{"line":205,"column":16},"end":{"line":205,"column":86}},{"start":{"line":205,"column":90},"end":{"line":205,"column":125}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule GraphQLQueryRunner"," * "," */","","'use strict';","","var _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));","","var _keys2 = _interopRequireDefault(require('babel-runtime/core-js/object/keys'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","/**"," * This is the high-level entry point for sending queries to the GraphQL"," * endpoint. It provides methods for scheduling queries (`run`), force-fetching"," * queries (ie. ignoring the cache; `forceFetch`)."," *"," * In order to send minimal queries and avoid re-retrieving data,"," * `GraphQLQueryRunner` maintains a registry of pending (in-flight) queries, and"," * \"subtracts\" those from any new queries that callers enqueue."," *"," * @internal"," */","var GraphQLQueryRunner = function () {","  function GraphQLQueryRunner(storeData) {","    (0, _classCallCheck3['default'])(this, GraphQLQueryRunner);","","    this._storeData = storeData;","  }","","  /**","   * Fetches data required to resolve a set of queries. See the `RelayStore`","   * module for documentation on the callback.","   */","","","  GraphQLQueryRunner.prototype.run = function run(querySet, callback) {","    var fetchMode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : require('./RelayFetchMode').CLIENT;","","    return runQueries(this._storeData, querySet, callback, fetchMode);","  };","","  /**","   * Ignores the cache and fetches data required to resolve a set of queries.","   * Uses the data we get back from the server to overwrite data in the cache.","   *","   * Even though we're ignoring the cache, we will still invoke the callback","   * immediately with `ready: true` if `querySet` can be resolved by the cache.","   */","","","  GraphQLQueryRunner.prototype.forceFetch = function forceFetch(querySet, callback) {","    var fetchMode = require('./RelayFetchMode').REFETCH;","    return runQueries(this._storeData, querySet, callback, fetchMode);","  };","","  return GraphQLQueryRunner;","}();","","function hasItems(map) {","  return !!(0, _keys2['default'])(map).length;","}","","function splitAndFlattenQueries(storeData, queries) {","  if (!storeData.getNetworkLayer().supports('defer')) {","    if (process.env.NODE_ENV !== 'production') {","      queries.forEach(function (query) {","        require('fbjs/lib/warning')(!query.hasDeferredDescendant(), 'Relay: Query `%s` contains a deferred fragment (e.g. ' + '`getFragment(\\'foo\\').defer()`) which is not supported by the ' + 'default network layer. This query will be sent without deferral.', query.getName());","      });","    }","    return queries;","  }","","  var flattenedQueries = [];","  queries.forEach(function (query) {","    return flattenedQueries.push.apply(flattenedQueries, require('./flattenSplitRelayQueries')(require('./splitDeferredRelayQueries')(query)));","  });","  return flattenedQueries;","}","","function runQueries(storeData, querySet, callback, fetchMode) {","  var profiler = fetchMode === require('./RelayFetchMode').REFETCH ? require('./RelayProfiler').profile('GraphQLQueryRunner.forceFetch') : require('./RelayProfiler').profile('GraphQLQueryRunner.primeCache');","","  var readyState = new (require('./RelayReadyState'))(callback);","","  var remainingFetchMap = {};","  var remainingRequiredFetchMap = {};","","  function onResolved(pendingFetch) {","    var pendingQuery = pendingFetch.getQuery();","    var pendingQueryID = pendingQuery.getID();","    delete remainingFetchMap[pendingQueryID];","    if (!pendingQuery.isDeferred()) {","      delete remainingRequiredFetchMap[pendingQueryID];","    }","","    if (hasItems(remainingRequiredFetchMap)) {","      return;","    }","","    if (require('fbjs/lib/someObject')(remainingFetchMap, function (query) {","      return query.isResolvable();","    })) {","      // The other resolvable query will resolve imminently and call","      // `readyState.update` instead.","      return;","    }","","    if (hasItems(remainingFetchMap)) {","      readyState.update({","        done: false,","        ready: true,","        stale: false","      }, [{ type: 'NETWORK_QUERY_RECEIVED_REQUIRED' }]);","    } else {","      readyState.update({","        done: true,","        ready: true,","        stale: false","      }, [{ type: 'NETWORK_QUERY_RECEIVED_ALL' }]);","    }","  }","","  function onRejected(pendingFetch, error) {","    readyState.update({ error: error }, [{ type: 'NETWORK_QUERY_ERROR', error: error }]);","  }","","  function canResolve(fetch) {","    return require('./checkRelayQueryData')(storeData.getQueuedStore(), fetch.getQuery());","  }","","  storeData.getTaskQueue().enqueue(function () {","    var forceIndex = fetchMode === require('./RelayFetchMode').REFETCH ? require('./generateForceIndex')() : null;","","    var queries = [];","    if (fetchMode === require('./RelayFetchMode').CLIENT) {","      require('fbjs/lib/forEachObject')(querySet, function (query) {","        if (query) {","          queries.push.apply(queries, require('./diffRelayQuery')(query, storeData.getRecordStore(), storeData.getQueryTracker()));","        }","      });","    } else {","      require('fbjs/lib/forEachObject')(querySet, function (query) {","        if (query) {","          queries.push(query);","        }","      });","    }","","    var flattenedQueries = splitAndFlattenQueries(storeData, queries);","","    var networkEvent = [];","    if (flattenedQueries.length) {","      networkEvent.push({ type: 'NETWORK_QUERY_START' });","    }","","    flattenedQueries.forEach(function (query) {","      var pendingFetch = storeData.getPendingQueryTracker().add({ query: query, fetchMode: fetchMode, forceIndex: forceIndex, storeData: storeData });","      var queryID = query.getID();","      remainingFetchMap[queryID] = pendingFetch;","      if (!query.isDeferred()) {","        remainingRequiredFetchMap[queryID] = pendingFetch;","      }","      pendingFetch.getResolvedPromise().then(onResolved.bind(null, pendingFetch), onRejected.bind(null, pendingFetch));","    });","","    if (!hasItems(remainingFetchMap)) {","      readyState.update({","        done: true,","        ready: true","      }, [].concat(networkEvent, [{ type: 'STORE_FOUND_ALL' }]));","    } else {","      if (!hasItems(remainingRequiredFetchMap)) {","        readyState.update({ ready: true }, [].concat(networkEvent, [{ type: 'STORE_FOUND_REQUIRED' }]));","      } else {","        readyState.update({ ready: false }, [].concat(networkEvent, [{ type: 'CACHE_RESTORE_START' }]));","","        require('fbjs/lib/resolveImmediate')(function () {","          if (storeData.hasCacheManager()) {","            var requiredQueryMap = require('fbjs/lib/mapObject')(remainingRequiredFetchMap, function (value) {","              return value.getQuery();","            });","            storeData.restoreQueriesFromCache(requiredQueryMap, {","              onSuccess: function onSuccess() {","                readyState.update({","                  ready: true,","                  stale: true","                }, [{ type: 'CACHE_RESTORED_REQUIRED' }]);","              },","              onFailure: function onFailure(error) {","                readyState.update({","                  error: error","                }, [{ type: 'CACHE_RESTORE_FAILED', error: error }]);","              }","            });","          } else {","            if (require('fbjs/lib/everyObject')(remainingRequiredFetchMap, canResolve) && hasItems(remainingRequiredFetchMap)) {","              readyState.update({","                ready: true,","                stale: true","              }, [{ type: 'CACHE_RESTORED_REQUIRED' }]);","            } else {","              readyState.update({}, [{ type: 'CACHE_RESTORE_FAILED' }]);","            }","          }","        });","      }","    }","    // Stop profiling when queries have been sent to the network layer.","    profiler.stop();","  }).done();","","  return {","    abort: function abort() {","      readyState.update({ aborted: true }, [{ type: 'ABORT' }]);","    }","  };","}","","module.exports = GraphQLQueryRunner;"],"l":{"15":1,"17":1,"19":2,"32":1,"33":1,"34":6,"36":6,"45":1,"46":0,"48":0,"60":1,"61":0,"62":0,"65":1,"68":1,"69":0,"72":1,"73":0,"74":0,"75":0,"76":0,"79":0,"82":0,"83":0,"84":0,"86":0,"89":1,"90":0,"92":0,"94":0,"95":0,"97":1,"98":0,"99":0,"100":0,"101":0,"102":0,"105":0,"106":0,"109":0,"110":0,"114":0,"117":0,"118":0,"124":0,"132":1,"133":0,"136":1,"137":0,"140":0,"141":0,"143":0,"144":0,"145":0,"146":0,"147":0,"151":0,"152":0,"153":0,"158":0,"160":0,"161":0,"162":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"172":0,"175":0,"176":0,"181":0,"182":0,"184":0,"186":0,"187":0,"188":0,"189":0,"191":0,"193":0,"199":0,"205":0,"206":0,"211":0,"218":0,"221":0,"223":0,"228":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayQueryTracker.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayQueryTracker.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":6,"8":6,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":1,"38":1},"b":{"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":1,"2":1,"3":6,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":37}}},"2":{"name":"(anonymous_2)","line":21,"loc":{"start":{"line":21,"column":24},"end":{"line":21,"column":36}}},"3":{"name":"RelayQueryTracker","line":22,"loc":{"start":{"line":22,"column":2},"end":{"line":22,"column":31}}},"4":{"name":"trackNodeForID","line":28,"loc":{"start":{"line":28,"column":47},"end":{"line":28,"column":85}}},"5":{"name":"getTrackedChildrenForID","line":47,"loc":{"start":{"line":47,"column":56},"end":{"line":47,"column":97}}},"6":{"name":"(anonymous_6)","line":56,"loc":{"start":{"line":56,"column":7},"end":{"line":56,"column":19}}},"7":{"name":"(anonymous_7)","line":58,"loc":{"start":{"line":58,"column":29},"end":{"line":58,"column":53}}},"8":{"name":"untrackNodesForID","line":83,"loc":{"start":{"line":83,"column":50},"end":{"line":83,"column":85}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":97}},"3":{"start":{"line":17,"column":39},"end":{"line":17,"column":95}},"4":{"start":{"line":19,"column":0},"end":{"line":19,"column":22}},"5":{"start":{"line":21,"column":0},"end":{"line":88,"column":4}},"6":{"start":{"line":22,"column":2},"end":{"line":26,"column":3}},"7":{"start":{"line":23,"column":4},"end":{"line":23,"column":62}},"8":{"start":{"line":25,"column":4},"end":{"line":25,"column":32}},"9":{"start":{"line":28,"column":2},"end":{"line":40,"column":4}},"10":{"start":{"line":30,"column":4},"end":{"line":32,"column":5}},"11":{"start":{"line":31,"column":6},"end":{"line":31,"column":13}},"12":{"start":{"line":34,"column":4},"end":{"line":37,"column":6}},"13":{"start":{"line":38,"column":4},"end":{"line":38,"column":59}},"14":{"start":{"line":39,"column":4},"end":{"line":39,"column":52}},"15":{"start":{"line":47,"column":2},"end":{"line":75,"column":4}},"16":{"start":{"line":48,"column":4},"end":{"line":48,"column":58}},"17":{"start":{"line":49,"column":4},"end":{"line":51,"column":5}},"18":{"start":{"line":50,"column":6},"end":{"line":50,"column":16}},"19":{"start":{"line":52,"column":4},"end":{"line":53,"column":53}},"20":{"start":{"line":55,"column":4},"end":{"line":69,"column":5}},"21":{"start":{"line":56,"column":6},"end":{"line":68,"column":11}},"22":{"start":{"line":57,"column":8},"end":{"line":57,"column":33}},"23":{"start":{"line":58,"column":8},"end":{"line":60,"column":11}},"24":{"start":{"line":59,"column":10},"end":{"line":59,"column":82}},"25":{"start":{"line":61,"column":8},"end":{"line":61,"column":32}},"26":{"start":{"line":62,"column":8},"end":{"line":62,"column":41}},"27":{"start":{"line":63,"column":8},"end":{"line":63,"column":148}},"28":{"start":{"line":64,"column":8},"end":{"line":64,"column":70}},"29":{"start":{"line":65,"column":8},"end":{"line":67,"column":9}},"30":{"start":{"line":66,"column":10},"end":{"line":66,"column":43}},"31":{"start":{"line":70,"column":4},"end":{"line":70,"column":38}},"32":{"start":{"line":71,"column":4},"end":{"line":73,"column":5}},"33":{"start":{"line":72,"column":6},"end":{"line":72,"column":39}},"34":{"start":{"line":74,"column":4},"end":{"line":74,"column":14}},"35":{"start":{"line":83,"column":2},"end":{"line":85,"column":4}},"36":{"start":{"line":84,"column":4},"end":{"line":84,"column":42}},"37":{"start":{"line":87,"column":2},"end":{"line":87,"column":27}},"38":{"start":{"line":90,"column":0},"end":{"line":90,"column":35}}},"branchMap":{"1":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":70},"end":{"line":17,"column":73}},{"start":{"line":17,"column":76},"end":{"line":17,"column":94}}]},"2":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":46},"end":{"line":17,"column":49}},{"start":{"line":17,"column":53},"end":{"line":17,"column":67}}]},"3":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":4},"end":{"line":30,"column":4}},{"start":{"line":30,"column":4},"end":{"line":30,"column":4}}]},"4":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":8},"end":{"line":30,"column":53}},{"start":{"line":30,"column":57},"end":{"line":30,"column":86}}]},"5":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":37},"end":{"line":34,"column":67}},{"start":{"line":34,"column":71},"end":{"line":37,"column":5}}]},"6":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":49,"column":4}},{"start":{"line":49,"column":4},"end":{"line":49,"column":4}}]},"7":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":4},"end":{"line":55,"column":4}},{"start":{"line":55,"column":4},"end":{"line":55,"column":4}}]},"8":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":8},"end":{"line":65,"column":8}},{"start":{"line":65,"column":8},"end":{"line":65,"column":8}}]},"9":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":4},"end":{"line":71,"column":4}},{"start":{"line":71,"column":4},"end":{"line":71,"column":4}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayQueryTracker"," * "," */","","'use strict';","","var _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","var TYPE = '__type__';","","var RelayQueryTracker = function () {","  function RelayQueryTracker() {","    (0, _classCallCheck3['default'])(this, RelayQueryTracker);","","    this._trackedNodesByID = {};","  }","","  RelayQueryTracker.prototype.trackNodeForID = function trackNodeForID(node, dataID) {","    // Don't track `__type__` fields","    if (node instanceof require('./RelayQuery').Field && node.getSchemaName() === TYPE) {","      return;","    }","","    this._trackedNodesByID[dataID] = this._trackedNodesByID[dataID] || {","      trackedNodes: [],","      isMerged: false","    };","    this._trackedNodesByID[dataID].trackedNodes.push(node);","    this._trackedNodesByID[dataID].isMerged = false;","  };","","  /**","   * Get the children that are tracked for the given `dataID`, if any.","   */","","","  RelayQueryTracker.prototype.getTrackedChildrenForID = function getTrackedChildrenForID(dataID) {","    var trackedNodesByID = this._trackedNodesByID[dataID];","    if (!trackedNodesByID) {","      return [];","    }","    var isMerged = trackedNodesByID.isMerged,","        trackedNodes = trackedNodesByID.trackedNodes;","","    if (!isMerged) {","      (function () {","        var trackedChildren = [];","        trackedNodes.forEach(function (trackedQuery) {","          trackedChildren.push.apply(trackedChildren, trackedQuery.getChildren());","        });","        trackedNodes.length = 0;","        trackedNodesByID.isMerged = true;","        var containerNode = require('./RelayQuery').Fragment.build('RelayQueryTracker', require('./RelayNodeInterface').NODE_TYPE, trackedChildren);","        containerNode = require('./flattenRelayQuery')(containerNode);","        if (containerNode) {","          trackedNodes.push(containerNode);","        }","      })();","    }","    var trackedNode = trackedNodes[0];","    if (trackedNode) {","      return trackedNode.getChildren();","    }","    return [];","  };","","  /**","   * Removes all nodes that are tracking the given DataID from the","   * query-tracker.","   */","","","  RelayQueryTracker.prototype.untrackNodesForID = function untrackNodesForID(dataID) {","    delete this._trackedNodesByID[dataID];","  };","","  return RelayQueryTracker;","}();","","module.exports = RelayQueryTracker;"],"l":{"15":1,"17":1,"19":1,"21":1,"22":1,"23":6,"25":6,"28":1,"30":0,"31":0,"34":0,"38":0,"39":0,"47":1,"48":0,"49":0,"50":0,"52":0,"55":0,"56":0,"57":0,"58":0,"59":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"70":0,"71":0,"72":0,"74":0,"83":1,"84":0,"87":1,"90":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayTaskQueue.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayTaskQueue.js","s":{"1":1,"2":1,"3":1,"4":2,"5":1,"6":1,"7":6,"8":6,"9":6,"10":6,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":1,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":1,"64":1},"b":{"1":[1,1],"2":[2,2],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":2,"2":1,"3":6,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":37}}},"2":{"name":"(anonymous_2)","line":38,"loc":{"start":{"line":38,"column":21},"end":{"line":38,"column":33}}},"3":{"name":"RelayTaskQueue","line":39,"loc":{"start":{"line":39,"column":2},"end":{"line":39,"column":45}}},"4":{"name":"enqueue","line":89,"loc":{"start":{"line":89,"column":37},"end":{"line":89,"column":56}}},"5":{"name":"(anonymous_5)","line":96,"loc":{"start":{"line":96,"column":43},"end":{"line":96,"column":70}}},"6":{"name":"enqueueNext","line":99,"loc":{"start":{"line":99,"column":24},"end":{"line":99,"column":52}}},"7":{"name":"(anonymous_7)","line":107,"loc":{"start":{"line":107,"column":28},"end":{"line":107,"column":40}}},"8":{"name":"(anonymous_8)","line":108,"loc":{"start":{"line":108,"column":24},"end":{"line":108,"column":36}}},"9":{"name":"injectScheduler","line":136,"loc":{"start":{"line":136,"column":45},"end":{"line":136,"column":89}}},"10":{"name":"_createTaskExecutor","line":140,"loc":{"start":{"line":140,"column":49},"end":{"line":140,"column":88}}},"11":{"name":"(anonymous_11)","line":144,"loc":{"start":{"line":144,"column":11},"end":{"line":144,"column":23}}},"12":{"name":"_invokeWithinScopedQueue","line":153,"loc":{"start":{"line":153,"column":54},"end":{"line":153,"column":98}}},"13":{"name":"_scheduleIfNecessary","line":164,"loc":{"start":{"line":164,"column":50},"end":{"line":164,"column":82}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":68}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":97}},"4":{"start":{"line":19,"column":39},"end":{"line":19,"column":95}},"5":{"start":{"line":38,"column":0},"end":{"line":182,"column":4}},"6":{"start":{"line":39,"column":2},"end":{"line":45,"column":3}},"7":{"start":{"line":40,"column":4},"end":{"line":40,"column":59}},"8":{"start":{"line":42,"column":4},"end":{"line":42,"column":21}},"9":{"start":{"line":43,"column":4},"end":{"line":43,"column":26}},"10":{"start":{"line":44,"column":4},"end":{"line":44,"column":39}},"11":{"start":{"line":89,"column":2},"end":{"line":125,"column":4}},"12":{"start":{"line":90,"column":4},"end":{"line":90,"column":21}},"13":{"start":{"line":92,"column":4},"end":{"line":94,"column":5}},"14":{"start":{"line":93,"column":6},"end":{"line":93,"column":40}},"15":{"start":{"line":96,"column":4},"end":{"line":122,"column":7}},"16":{"start":{"line":97,"column":6},"end":{"line":97,"column":24}},"17":{"start":{"line":98,"column":6},"end":{"line":98,"column":23}},"18":{"start":{"line":99,"column":6},"end":{"line":120,"column":8}},"19":{"start":{"line":100,"column":8},"end":{"line":103,"column":9}},"20":{"start":{"line":101,"column":10},"end":{"line":101,"column":24}},"21":{"start":{"line":102,"column":10},"end":{"line":102,"column":17}},"22":{"start":{"line":104,"column":8},"end":{"line":119,"column":9}},"23":{"start":{"line":105,"column":10},"end":{"line":105,"column":25}},"24":{"start":{"line":107,"column":10},"end":{"line":118,"column":13}},"25":{"start":{"line":108,"column":12},"end":{"line":117,"column":17}},"26":{"start":{"line":109,"column":14},"end":{"line":109,"column":56}},"27":{"start":{"line":110,"column":14},"end":{"line":115,"column":15}},"28":{"start":{"line":111,"column":16},"end":{"line":111,"column":44}},"29":{"start":{"line":113,"column":16},"end":{"line":113,"column":26}},"30":{"start":{"line":114,"column":16},"end":{"line":114,"column":34}},"31":{"start":{"line":116,"column":14},"end":{"line":116,"column":27}},"32":{"start":{"line":121,"column":6},"end":{"line":121,"column":29}},"33":{"start":{"line":123,"column":4},"end":{"line":123,"column":32}},"34":{"start":{"line":124,"column":4},"end":{"line":124,"column":19}},"35":{"start":{"line":136,"column":2},"end":{"line":138,"column":4}},"36":{"start":{"line":137,"column":4},"end":{"line":137,"column":39}},"37":{"start":{"line":140,"column":2},"end":{"line":151,"column":4}},"38":{"start":{"line":141,"column":4},"end":{"line":141,"column":22}},"39":{"start":{"line":143,"column":4},"end":{"line":143,"column":24}},"40":{"start":{"line":144,"column":4},"end":{"line":150,"column":6}},"41":{"start":{"line":145,"column":6},"end":{"line":145,"column":98}},"42":{"start":{"line":146,"column":6},"end":{"line":146,"column":21}},"43":{"start":{"line":147,"column":6},"end":{"line":147,"column":48}},"44":{"start":{"line":148,"column":6},"end":{"line":148,"column":30}},"45":{"start":{"line":149,"column":6},"end":{"line":149,"column":36}},"46":{"start":{"line":153,"column":2},"end":{"line":162,"column":4}},"47":{"start":{"line":154,"column":4},"end":{"line":154,"column":36}},"48":{"start":{"line":155,"column":4},"end":{"line":155,"column":21}},"49":{"start":{"line":156,"column":4},"end":{"line":161,"column":5}},"50":{"start":{"line":157,"column":6},"end":{"line":157,"column":17}},"51":{"start":{"line":159,"column":6},"end":{"line":159,"column":64}},"52":{"start":{"line":160,"column":6},"end":{"line":160,"column":34}},"53":{"start":{"line":164,"column":2},"end":{"line":179,"column":4}},"54":{"start":{"line":165,"column":4},"end":{"line":167,"column":5}},"55":{"start":{"line":166,"column":6},"end":{"line":166,"column":13}},"56":{"start":{"line":168,"column":4},"end":{"line":178,"column":5}},"57":{"start":{"line":169,"column":6},"end":{"line":169,"column":27}},"58":{"start":{"line":170,"column":6},"end":{"line":170,"column":71}},"59":{"start":{"line":171,"column":6},"end":{"line":175,"column":7}},"60":{"start":{"line":172,"column":8},"end":{"line":172,"column":37}},"61":{"start":{"line":174,"column":8},"end":{"line":174,"column":23}},"62":{"start":{"line":177,"column":6},"end":{"line":177,"column":28}},"63":{"start":{"line":181,"column":2},"end":{"line":181,"column":24}},"64":{"start":{"line":184,"column":0},"end":{"line":184,"column":32}}},"branchMap":{"1":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":70},"end":{"line":19,"column":73}},{"start":{"line":19,"column":76},"end":{"line":19,"column":94}}]},"2":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":46},"end":{"line":19,"column":49}},{"start":{"line":19,"column":53},"end":{"line":19,"column":67}}]},"3":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":8},"end":{"line":100,"column":8}},{"start":{"line":100,"column":8},"end":{"line":100,"column":8}}]},"4":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":8},"end":{"line":104,"column":8}},{"start":{"line":104,"column":8},"end":{"line":104,"column":8}}]},"5":{"line":165,"type":"if","locations":[{"start":{"line":165,"column":4},"end":{"line":165,"column":4}},{"start":{"line":165,"column":4},"end":{"line":165,"column":4}}]},"6":{"line":168,"type":"if","locations":[{"start":{"line":168,"column":4},"end":{"line":168,"column":4}},{"start":{"line":168,"column":4},"end":{"line":168,"column":4}}]},"7":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":6},"end":{"line":171,"column":6}},{"start":{"line":171,"column":6},"end":{"line":171,"column":6}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayTaskQueue"," * "," */","","'use strict';","","var _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));","","var _promise2 = _interopRequireDefault(require('fbjs/lib/Promise'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","/**"," * A task queue that can be configured with an optional scheduler function. The"," * scheduling function is invoked with a callback that will execute the next"," * unit of work. The callback will return a promise that resolves with a new"," * callback when the next unit of work is available. For example, a scheduler"," * can defer each task to the next animation frame:"," *"," *   new RelayTaskQueue(executeTask => {"," *     // This function will be invoked whenever a task is enqueued. It will not"," *     // be invoked again until `executeTask` has been invoked. Also, invoking"," *     // `executeTask` more than once is an error."," *     requestAnimationFrame(executeTask);"," *   });"," *"," * By default, the next task is executed synchronously after the previous one is"," * finished. An injected scheduler using `setImmediate` can alter this behavior."," */","var RelayTaskQueue = function () {","  function RelayTaskQueue(injectedScheduler) {","    (0, _classCallCheck3['default'])(this, RelayTaskQueue);","","    this._queue = [];","    this._running = false;","    this._schedule = injectedScheduler;","  }","","  /**","   * @internal","   *","   * Enqueues one or more callbacks that each represent a synchronous unit of","   * work that can be scheduled to be executed at a later time.","   *","   * The return value of each callback will be passed in as an argument to the","   * next callback. If one of the callbacks throw an error, the execution will","   * be aborted and the returned promise be rejected with the thrown error.","   * Otherwise, the returned promise will be resolved with the return value of","   * the last callback. For example:","   *","   *   const taskQueue = new RelayTaskQueue();","   *   taskQueue.enqueue(","   *     function() {","   *       return 'foo';","   *     },","   *     function(foo) {","   *       return 'bar';","   *     }","   *   ).done(","   *     function(bar) {","   *       // ...","   *     }","   *   );","   *","   *   RelayTaskQueue.enqueue(","   *     function() {","   *       return 'foo';","   *     },","   *     function(foo) {","   *       throw new Error();","   *     },","   *     function() {","   *       // Never executed.","   *     }","   *   ).catch(","   *     function(error) {}","   *   );","   */","","","  RelayTaskQueue.prototype.enqueue = function enqueue() {","    var _this = this;","","    for (var _len = arguments.length, callbacks = Array(_len), _key = 0; _key < _len; _key++) {","      callbacks[_key] = arguments[_key];","    }","","    var promise = new _promise2['default'](function (resolve, reject) {","      var nextIndex = 0;","      var error = null;","      var enqueueNext = function enqueueNext(value) {","        if (error) {","          reject(error);","          return;","        }","        if (nextIndex >= callbacks.length) {","          resolve(value);","        } else {","          _this._queue.push(function () {","            enqueueNext(function () {","              var nextCallback = callbacks[nextIndex++];","              try {","                value = nextCallback(value);","              } catch (e) {","                error = e;","                value = undefined;","              }","              return value;","            }());","          });","        }","      };","      enqueueNext(undefined);","    });","    this._scheduleIfNecessary();","    return promise;","  };","","  /**","   * @public","   *","   * Injects a scheduling function that is invoked with a callback that will","   * execute the next unit of work. The callback will return a promise that","   * resolves with a new callback when the next unit of work is available.","   */","","","  RelayTaskQueue.prototype.injectScheduler = function injectScheduler(injectedScheduler) {","    this._schedule = injectedScheduler;","  };","","  RelayTaskQueue.prototype._createTaskExecutor = function _createTaskExecutor(callback) {","    var _this2 = this;","","    var invoked = false;","    return function () {","      require('fbjs/lib/invariant')(!invoked, 'RelayTaskQueue: Tasks can only be executed once.');","      invoked = true;","      _this2._invokeWithinScopedQueue(callback);","      _this2._running = false;","      _this2._scheduleIfNecessary();","    };","  };","","  RelayTaskQueue.prototype._invokeWithinScopedQueue = function _invokeWithinScopedQueue(callback) {","    var originalQueue = this._queue;","    this._queue = [];","    try {","      callback();","    } finally {","      Array.prototype.unshift.apply(originalQueue, this._queue);","      this._queue = originalQueue;","    }","  };","","  RelayTaskQueue.prototype._scheduleIfNecessary = function _scheduleIfNecessary() {","    if (this._running) {","      return;","    }","    if (this._queue.length) {","      this._running = true;","      var _executeTask = this._createTaskExecutor(this._queue.shift());","      if (this._schedule) {","        this._schedule(_executeTask);","      } else {","        _executeTask();","      }","    } else {","      this._running = false;","    }","  };","","  return RelayTaskQueue;","}();","","module.exports = RelayTaskQueue;"],"l":{"15":1,"17":1,"19":2,"38":1,"39":1,"40":6,"42":6,"43":6,"44":6,"89":1,"90":0,"92":0,"93":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"104":0,"105":0,"107":0,"108":0,"109":0,"110":0,"111":0,"113":0,"114":0,"116":0,"121":0,"123":0,"124":0,"136":1,"137":0,"140":1,"141":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"153":1,"154":0,"155":0,"156":0,"157":0,"159":0,"160":0,"164":1,"165":0,"166":0,"168":0,"169":0,"170":0,"171":0,"172":0,"174":0,"177":0,"181":1,"184":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/relayUnstableBatchedUpdates.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/relayUnstableBatchedUpdates.js","s":{"1":6},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":62}}},"branchMap":{},"code":["/**"," * Copyright 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule relayUnstableBatchedUpdates"," * "," */","","'use strict';","","module.exports = require('react-dom').unstable_batchedUpdates;"],"l":{"15":6}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/BabelPluginGraphQL.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/BabelPluginGraphQL.js","s":{"1":1,"2":1,"3":1,"4":2,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":1,"105":0,"106":0,"107":0,"108":0,"109":1,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":1,"122":0,"123":1,"124":0,"125":1,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":1,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":1,"148":0,"149":0,"150":1,"151":0,"152":1,"153":0,"154":1,"155":0,"156":0,"157":0,"158":0,"159":0,"160":1,"161":0,"162":0,"163":1,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":1,"172":0,"173":0,"174":0,"175":0,"176":1},"b":{"1":[2,0],"2":[2,2],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0,0,0,0,0,0],"28":[0,0],"29":[0,0],"30":[0,0]},"f":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":37}}},"2":{"name":"create","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":25}}},"3":{"name":"BabelPluginGraphQL","line":25,"loc":{"start":{"line":25,"column":9},"end":{"line":25,"column":44}}},"4":{"name":"Program","line":33,"loc":{"start":{"line":33,"column":17},"end":{"line":33,"column":47}}},"5":{"name":"TaggedTemplateExpression","line":61,"loc":{"start":{"line":61,"column":34},"end":{"line":61,"column":81}}},"6":{"name":"Directive","line":84,"loc":{"start":{"line":84,"column":23},"end":{"line":84,"column":48}}},"7":{"name":"FragmentSpread","line":96,"loc":{"start":{"line":96,"column":28},"end":{"line":96,"column":58}}},"8":{"name":"(anonymous_8)","line":106,"loc":{"start":{"line":106,"column":17},"end":{"line":106,"column":29}}},"9":{"name":"(anonymous_9)","line":111,"loc":{"start":{"line":111,"column":46},"end":{"line":111,"column":65}}},"10":{"name":"OperationDefinition","line":133,"loc":{"start":{"line":133,"column":33},"end":{"line":133,"column":68}}},"11":{"name":"Variable","line":137,"loc":{"start":{"line":137,"column":22},"end":{"line":137,"column":46}}},"12":{"name":"createOperationArguments","line":197,"loc":{"start":{"line":197,"column":0},"end":{"line":197,"column":58}}},"13":{"name":"(anonymous_13)","line":198,"loc":{"start":{"line":198,"column":51},"end":{"line":198,"column":73}}},"14":{"name":"createFragmentArguments","line":205,"loc":{"start":{"line":205,"column":0},"end":{"line":205,"column":68}}},"15":{"name":"(anonymous_15)","line":207,"loc":{"start":{"line":207,"column":44},"end":{"line":207,"column":60}}},"16":{"name":"(anonymous_16)","line":208,"loc":{"start":{"line":208,"column":54},"end":{"line":208,"column":69}}},"17":{"name":"(anonymous_17)","line":212,"loc":{"start":{"line":212,"column":59},"end":{"line":212,"column":76}}},"18":{"name":"createLocalArgument","line":224,"loc":{"start":{"line":224,"column":0},"end":{"line":224,"column":60}}},"19":{"name":"createRootArgument","line":232,"loc":{"start":{"line":232,"column":0},"end":{"line":232,"column":45}}},"20":{"name":"parseValue","line":236,"loc":{"start":{"line":236,"column":0},"end":{"line":236,"column":30}}},"21":{"name":"(anonymous_21)","line":249,"loc":{"start":{"line":249,"column":48},"end":{"line":249,"column":64}}},"22":{"name":"convertArgument","line":257,"loc":{"start":{"line":257,"column":0},"end":{"line":257,"column":37}}},"23":{"name":"createObject","line":274,"loc":{"start":{"line":274,"column":0},"end":{"line":274,"column":30}}},"24":{"name":"(anonymous_24)","line":275,"loc":{"start":{"line":275,"column":60},"end":{"line":275,"column":75}}},"25":{"name":"createRequireCall","line":280,"loc":{"start":{"line":280,"column":0},"end":{"line":280,"column":42}}},"26":{"name":"createFragmentFromRoot","line":284,"loc":{"start":{"line":284,"column":0},"end":{"line":284,"column":41}}},"27":{"name":"splitRootFields","line":304,"loc":{"start":{"line":304,"column":0},"end":{"line":304,"column":34}}},"28":{"name":"(anonymous_28)","line":305,"loc":{"start":{"line":305,"column":52},"end":{"line":305,"column":73}}},"29":{"name":"createRelayQLTemplate","line":323,"loc":{"start":{"line":323,"column":0},"end":{"line":323,"column":40}}},"30":{"name":"createSubstitutionsForFragmentSpreads","line":328,"loc":{"start":{"line":328,"column":0},"end":{"line":328,"column":61}}},"31":{"name":"(anonymous_31)","line":329,"loc":{"start":{"line":329,"column":47},"end":{"line":329,"column":66}}},"32":{"name":"createGetFragementCall","line":339,"loc":{"start":{"line":339,"column":0},"end":{"line":339,"column":72}}}},"statementMap":{"1":{"start":{"line":14,"column":0},"end":{"line":14,"column":82}},"2":{"start":{"line":16,"column":0},"end":{"line":16,"column":86}},"3":{"start":{"line":18,"column":0},"end":{"line":18,"column":97}},"4":{"start":{"line":18,"column":39},"end":{"line":18,"column":95}},"5":{"start":{"line":20,"column":0},"end":{"line":20,"column":39}},"6":{"start":{"line":24,"column":0},"end":{"line":195,"column":1}},"7":{"start":{"line":25,"column":2},"end":{"line":194,"column":4}},"8":{"start":{"line":26,"column":4},"end":{"line":26,"column":24}},"9":{"start":{"line":28,"column":4},"end":{"line":193,"column":6}},"10":{"start":{"line":34,"column":10},"end":{"line":34,"column":35}},"11":{"start":{"line":35,"column":10},"end":{"line":37,"column":11}},"12":{"start":{"line":36,"column":12},"end":{"line":36,"column":19}},"13":{"start":{"line":38,"column":10},"end":{"line":38,"column":36}},"14":{"start":{"line":39,"column":10},"end":{"line":51,"column":11}},"15":{"start":{"line":40,"column":12},"end":{"line":40,"column":58}},"16":{"start":{"line":41,"column":12},"end":{"line":41,"column":49}},"17":{"start":{"line":42,"column":12},"end":{"line":42,"column":34}},"18":{"start":{"line":43,"column":12},"end":{"line":50,"column":13}},"19":{"start":{"line":44,"column":14},"end":{"line":44,"column":41}},"20":{"start":{"line":45,"column":14},"end":{"line":45,"column":38}},"21":{"start":{"line":46,"column":14},"end":{"line":49,"column":15}},"22":{"start":{"line":47,"column":16},"end":{"line":47,"column":60}},"23":{"start":{"line":48,"column":16},"end":{"line":48,"column":22}},"24":{"start":{"line":52,"column":10},"end":{"line":52,"column":50}},"25":{"start":{"line":53,"column":10},"end":{"line":58,"column":11}},"26":{"start":{"line":54,"column":12},"end":{"line":54,"column":70}},"27":{"start":{"line":55,"column":12},"end":{"line":57,"column":13}},"28":{"start":{"line":56,"column":14},"end":{"line":56,"column":42}},"29":{"start":{"line":59,"column":10},"end":{"line":59,"column":71}},"30":{"start":{"line":62,"column":10},"end":{"line":64,"column":11}},"31":{"start":{"line":63,"column":12},"end":{"line":63,"column":19}},"32":{"start":{"line":66,"column":10},"end":{"line":66,"column":229}},"33":{"start":{"line":68,"column":10},"end":{"line":68,"column":57}},"34":{"start":{"line":69,"column":10},"end":{"line":69,"column":53}},"35":{"start":{"line":71,"column":10},"end":{"line":71,"column":192}},"36":{"start":{"line":72,"column":10},"end":{"line":72,"column":50}},"37":{"start":{"line":73,"column":10},"end":{"line":73,"column":61}},"38":{"start":{"line":74,"column":10},"end":{"line":74,"column":55}},"39":{"start":{"line":75,"column":10},"end":{"line":75,"column":29}},"40":{"start":{"line":77,"column":10},"end":{"line":77,"column":29}},"41":{"start":{"line":78,"column":10},"end":{"line":78,"column":29}},"42":{"start":{"line":79,"column":10},"end":{"line":79,"column":41}},"43":{"start":{"line":80,"column":10},"end":{"line":80,"column":41}},"44":{"start":{"line":81,"column":10},"end":{"line":81,"column":33}},"45":{"start":{"line":83,"column":10},"end":{"line":141,"column":12}},"46":{"start":{"line":85,"column":14},"end":{"line":94,"column":15}},"47":{"start":{"line":87,"column":18},"end":{"line":87,"column":147}},"48":{"start":{"line":88,"column":18},"end":{"line":88,"column":55}},"49":{"start":{"line":89,"column":18},"end":{"line":89,"column":30}},"50":{"start":{"line":91,"column":18},"end":{"line":91,"column":30}},"51":{"start":{"line":93,"column":18},"end":{"line":93,"column":30}},"52":{"start":{"line":97,"column":14},"end":{"line":97,"column":47}},"53":{"start":{"line":99,"column":14},"end":{"line":99,"column":49}},"54":{"start":{"line":100,"column":14},"end":{"line":100,"column":46}},"55":{"start":{"line":101,"column":14},"end":{"line":101,"column":42}},"56":{"start":{"line":103,"column":14},"end":{"line":122,"column":15}},"57":{"start":{"line":104,"column":16},"end":{"line":104,"column":48}},"58":{"start":{"line":106,"column":16},"end":{"line":121,"column":21}},"59":{"start":{"line":108,"column":18},"end":{"line":108,"column":48}},"60":{"start":{"line":109,"column":18},"end":{"line":109,"column":328}},"61":{"start":{"line":110,"column":18},"end":{"line":110,"column":51}},"62":{"start":{"line":111,"column":18},"end":{"line":117,"column":21}},"63":{"start":{"line":112,"column":20},"end":{"line":112,"column":58}},"64":{"start":{"line":113,"column":20},"end":{"line":113,"column":64}},"65":{"start":{"line":114,"column":20},"end":{"line":116,"column":21}},"66":{"start":{"line":115,"column":22},"end":{"line":115,"column":40}},"67":{"start":{"line":118,"column":18},"end":{"line":118,"column":82}},"68":{"start":{"line":119,"column":18},"end":{"line":119,"column":31}},"69":{"start":{"line":120,"column":18},"end":{"line":120,"column":73}},"70":{"start":{"line":124,"column":14},"end":{"line":127,"column":16}},"71":{"start":{"line":128,"column":14},"end":{"line":131,"column":17}},"72":{"start":{"line":134,"column":14},"end":{"line":134,"column":61}},"73":{"start":{"line":135,"column":14},"end":{"line":135,"column":26}},"74":{"start":{"line":138,"column":14},"end":{"line":138,"column":48}},"75":{"start":{"line":139,"column":14},"end":{"line":139,"column":26}},"76":{"start":{"line":142,"column":10},"end":{"line":142,"column":79}},"77":{"start":{"line":143,"column":10},"end":{"line":143,"column":82}},"78":{"start":{"line":144,"column":10},"end":{"line":144,"column":38}},"79":{"start":{"line":146,"column":10},"end":{"line":182,"column":11}},"80":{"start":{"line":147,"column":12},"end":{"line":147,"column":35}},"81":{"start":{"line":148,"column":12},"end":{"line":148,"column":33}},"82":{"start":{"line":149,"column":12},"end":{"line":155,"column":13}},"83":{"start":{"line":150,"column":14},"end":{"line":153,"column":15}},"84":{"start":{"line":151,"column":16},"end":{"line":151,"column":52}},"85":{"start":{"line":152,"column":16},"end":{"line":152,"column":22}},"86":{"start":{"line":154,"column":14},"end":{"line":154,"column":51}},"87":{"start":{"line":156,"column":12},"end":{"line":156,"column":202}},"88":{"start":{"line":158,"column":12},"end":{"line":158,"column":74}},"89":{"start":{"line":159,"column":12},"end":{"line":159,"column":186}},"90":{"start":{"line":160,"column":12},"end":{"line":160,"column":287}},"91":{"start":{"line":161,"column":12},"end":{"line":161,"column":243}},"92":{"start":{"line":162,"column":12},"end":{"line":166,"column":15}},"93":{"start":{"line":167,"column":17},"end":{"line":182,"column":11}},"94":{"start":{"line":168,"column":12},"end":{"line":168,"column":98}},"95":{"start":{"line":169,"column":12},"end":{"line":169,"column":356}},"96":{"start":{"line":170,"column":12},"end":{"line":170,"column":67}},"97":{"start":{"line":171,"column":12},"end":{"line":171,"column":58}},"98":{"start":{"line":172,"column":12},"end":{"line":179,"column":15}},"99":{"start":{"line":181,"column":12},"end":{"line":181,"column":158}},"100":{"start":{"line":184,"column":10},"end":{"line":186,"column":12}},"101":{"start":{"line":187,"column":10},"end":{"line":189,"column":11}},"102":{"start":{"line":188,"column":12},"end":{"line":188,"column":167}},"103":{"start":{"line":190,"column":10},"end":{"line":190,"column":58}},"104":{"start":{"line":197,"column":0},"end":{"line":203,"column":1}},"105":{"start":{"line":198,"column":2},"end":{"line":202,"column":6}},"106":{"start":{"line":199,"column":4},"end":{"line":199,"column":46}},"107":{"start":{"line":200,"column":4},"end":{"line":200,"column":106}},"108":{"start":{"line":201,"column":4},"end":{"line":201,"column":54}},"109":{"start":{"line":205,"column":0},"end":{"line":222,"column":1}},"110":{"start":{"line":206,"column":2},"end":{"line":206,"column":31}},"111":{"start":{"line":207,"column":2},"end":{"line":220,"column":5}},"112":{"start":{"line":208,"column":4},"end":{"line":210,"column":7}},"113":{"start":{"line":209,"column":6},"end":{"line":209,"column":37}},"114":{"start":{"line":211,"column":4},"end":{"line":219,"column":5}},"115":{"start":{"line":212,"column":6},"end":{"line":214,"column":9}},"116":{"start":{"line":213,"column":8},"end":{"line":213,"column":51}},"117":{"start":{"line":215,"column":6},"end":{"line":215,"column":102}},"118":{"start":{"line":216,"column":6},"end":{"line":216,"column":75}},"119":{"start":{"line":218,"column":6},"end":{"line":218,"column":60}},"120":{"start":{"line":221,"column":2},"end":{"line":221,"column":48}},"121":{"start":{"line":224,"column":0},"end":{"line":230,"column":1}},"122":{"start":{"line":225,"column":2},"end":{"line":229,"column":5}},"123":{"start":{"line":232,"column":0},"end":{"line":234,"column":1}},"124":{"start":{"line":233,"column":2},"end":{"line":233,"column":174}},"125":{"start":{"line":236,"column":0},"end":{"line":255,"column":1}},"126":{"start":{"line":237,"column":2},"end":{"line":254,"column":3}},"127":{"start":{"line":239,"column":6},"end":{"line":239,"column":43}},"128":{"start":{"line":241,"column":6},"end":{"line":241,"column":57}},"129":{"start":{"line":243,"column":6},"end":{"line":243,"column":55}},"130":{"start":{"line":245,"column":6},"end":{"line":245,"column":42}},"131":{"start":{"line":247,"column":6},"end":{"line":247,"column":42}},"132":{"start":{"line":249,"column":6},"end":{"line":251,"column":10}},"133":{"start":{"line":250,"column":8},"end":{"line":250,"column":35}},"134":{"start":{"line":253,"column":6},"end":{"line":253,"column":109}},"135":{"start":{"line":257,"column":0},"end":{"line":272,"column":1}},"136":{"start":{"line":258,"column":2},"end":{"line":258,"column":32}},"137":{"start":{"line":259,"column":2},"end":{"line":259,"column":28}},"138":{"start":{"line":260,"column":2},"end":{"line":260,"column":17}},"139":{"start":{"line":261,"column":2},"end":{"line":261,"column":25}},"140":{"start":{"line":262,"column":2},"end":{"line":270,"column":3}},"141":{"start":{"line":264,"column":6},"end":{"line":264,"column":39}},"142":{"start":{"line":265,"column":6},"end":{"line":265,"column":24}},"143":{"start":{"line":266,"column":6},"end":{"line":266,"column":80}},"144":{"start":{"line":267,"column":6},"end":{"line":267,"column":12}},"145":{"start":{"line":269,"column":6},"end":{"line":269,"column":33}},"146":{"start":{"line":271,"column":2},"end":{"line":271,"column":58}},"147":{"start":{"line":274,"column":0},"end":{"line":278,"column":1}},"148":{"start":{"line":275,"column":2},"end":{"line":277,"column":6}},"149":{"start":{"line":276,"column":4},"end":{"line":276,"column":57}},"150":{"start":{"line":280,"column":0},"end":{"line":282,"column":1}},"151":{"start":{"line":281,"column":2},"end":{"line":281,"column":82}},"152":{"start":{"line":284,"column":0},"end":{"line":302,"column":1}},"153":{"start":{"line":285,"column":2},"end":{"line":301,"column":5}},"154":{"start":{"line":304,"column":0},"end":{"line":321,"column":1}},"155":{"start":{"line":305,"column":2},"end":{"line":319,"column":5}},"156":{"start":{"line":306,"column":4},"end":{"line":306,"column":190}},"157":{"start":{"line":307,"column":4},"end":{"line":307,"column":83}},"158":{"start":{"line":308,"column":4},"end":{"line":318,"column":9}},"159":{"start":{"line":320,"column":2},"end":{"line":320,"column":40}},"160":{"start":{"line":323,"column":0},"end":{"line":326,"column":1}},"161":{"start":{"line":324,"column":2},"end":{"line":324,"column":46}},"162":{"start":{"line":325,"column":2},"end":{"line":325,"column":150}},"163":{"start":{"line":328,"column":0},"end":{"line":337,"column":1}},"164":{"start":{"line":329,"column":2},"end":{"line":336,"column":5}},"165":{"start":{"line":330,"column":4},"end":{"line":330,"column":38}},"166":{"start":{"line":331,"column":4},"end":{"line":331,"column":53}},"167":{"start":{"line":332,"column":4},"end":{"line":332,"column":147}},"168":{"start":{"line":333,"column":4},"end":{"line":333,"column":26}},"169":{"start":{"line":334,"column":4},"end":{"line":334,"column":28}},"170":{"start":{"line":335,"column":4},"end":{"line":335,"column":115}},"171":{"start":{"line":339,"column":0},"end":{"line":347,"column":1}},"172":{"start":{"line":340,"column":2},"end":{"line":340,"column":41}},"173":{"start":{"line":342,"column":2},"end":{"line":344,"column":3}},"174":{"start":{"line":343,"column":4},"end":{"line":343,"column":33}},"175":{"start":{"line":346,"column":2},"end":{"line":346,"column":103}},"176":{"start":{"line":349,"column":0},"end":{"line":351,"column":2}}},"branchMap":{"1":{"line":18,"type":"cond-expr","locations":[{"start":{"line":18,"column":70},"end":{"line":18,"column":73}},{"start":{"line":18,"column":76},"end":{"line":18,"column":94}}]},"2":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":46},"end":{"line":18,"column":49}},{"start":{"line":18,"column":53},"end":{"line":18,"column":67}}]},"3":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":10},"end":{"line":35,"column":10}},{"start":{"line":35,"column":10},"end":{"line":35,"column":10}}]},"4":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":10},"end":{"line":39,"column":10}},{"start":{"line":39,"column":10},"end":{"line":39,"column":10}}]},"5":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":14},"end":{"line":39,"column":29}},{"start":{"line":39,"column":33},"end":{"line":39,"column":55}}]},"6":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":27},"end":{"line":40,"column":51}},{"start":{"line":40,"column":55},"end":{"line":40,"column":57}}]},"7":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":14},"end":{"line":46,"column":14}},{"start":{"line":46,"column":14},"end":{"line":46,"column":14}}]},"8":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":10},"end":{"line":53,"column":10}},{"start":{"line":53,"column":10},"end":{"line":53,"column":10}}]},"9":{"line":53,"type":"binary-expr","locations":[{"start":{"line":53,"column":14},"end":{"line":53,"column":22}},{"start":{"line":53,"column":26},"end":{"line":53,"column":39}}]},"10":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":12},"end":{"line":55,"column":12}},{"start":{"line":55,"column":12},"end":{"line":55,"column":12}}]},"11":{"line":59,"type":"binary-expr","locations":[{"start":{"line":59,"column":41},"end":{"line":59,"column":53}},{"start":{"line":59,"column":57},"end":{"line":59,"column":70}}]},"12":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":10},"end":{"line":62,"column":10}},{"start":{"line":62,"column":10},"end":{"line":62,"column":10}}]},"13":{"line":85,"type":"switch","locations":[{"start":{"line":86,"column":16},"end":{"line":89,"column":30}},{"start":{"line":90,"column":16},"end":{"line":91,"column":30}},{"start":{"line":92,"column":16},"end":{"line":93,"column":30}}]},"14":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":14},"end":{"line":103,"column":14}},{"start":{"line":103,"column":14},"end":{"line":103,"column":14}}]},"15":{"line":109,"type":"binary-expr","locations":[{"start":{"line":109,"column":48},"end":{"line":109,"column":71}},{"start":{"line":109,"column":75},"end":{"line":109,"column":111}}]},"16":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":20},"end":{"line":114,"column":20}},{"start":{"line":114,"column":20},"end":{"line":114,"column":20}}]},"17":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":10},"end":{"line":146,"column":10}},{"start":{"line":146,"column":10},"end":{"line":146,"column":10}}]},"18":{"line":150,"type":"if","locations":[{"start":{"line":150,"column":14},"end":{"line":150,"column":14}},{"start":{"line":150,"column":14},"end":{"line":150,"column":14}}]},"19":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":17},"end":{"line":167,"column":17}},{"start":{"line":167,"column":17},"end":{"line":167,"column":17}}]},"20":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":42},"end":{"line":169,"column":60}},{"start":{"line":169,"column":64},"end":{"line":169,"column":122}}]},"21":{"line":185,"type":"cond-expr","locations":[{"start":{"line":185,"column":59},"end":{"line":185,"column":83}},{"start":{"line":185,"column":86},"end":{"line":185,"column":88}}]},"22":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":10},"end":{"line":187,"column":10}},{"start":{"line":187,"column":10},"end":{"line":187,"column":10}}]},"23":{"line":200,"type":"cond-expr","locations":[{"start":{"line":200,"column":49},"end":{"line":200,"column":87}},{"start":{"line":200,"column":90},"end":{"line":200,"column":105}}]},"24":{"line":208,"type":"binary-expr","locations":[{"start":{"line":208,"column":22},"end":{"line":208,"column":41}},{"start":{"line":208,"column":45},"end":{"line":208,"column":47}}]},"25":{"line":211,"type":"if","locations":[{"start":{"line":211,"column":4},"end":{"line":211,"column":4}},{"start":{"line":211,"column":4},"end":{"line":211,"column":4}}]},"26":{"line":215,"type":"cond-expr","locations":[{"start":{"line":215,"column":45},"end":{"line":215,"column":83}},{"start":{"line":215,"column":86},"end":{"line":215,"column":101}}]},"27":{"line":237,"type":"switch","locations":[{"start":{"line":238,"column":4},"end":{"line":239,"column":43}},{"start":{"line":240,"column":4},"end":{"line":241,"column":57}},{"start":{"line":242,"column":4},"end":{"line":243,"column":55}},{"start":{"line":244,"column":4},"end":{"line":245,"column":42}},{"start":{"line":246,"column":4},"end":{"line":247,"column":42}},{"start":{"line":248,"column":4},"end":{"line":251,"column":10}},{"start":{"line":252,"column":4},"end":{"line":253,"column":109}}]},"28":{"line":262,"type":"switch","locations":[{"start":{"line":263,"column":4},"end":{"line":267,"column":12}},{"start":{"line":268,"column":4},"end":{"line":269,"column":33}}]},"29":{"line":307,"type":"cond-expr","locations":[{"start":{"line":307,"column":38},"end":{"line":307,"column":59}},{"start":{"line":307,"column":62},"end":{"line":307,"column":82}}]},"30":{"line":342,"type":"if","locations":[{"start":{"line":342,"column":2},"end":{"line":342,"column":2}},{"start":{"line":342,"column":2},"end":{"line":342,"column":2}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule BabelPluginGraphQL"," */","","'use strict';","","var _keys2 = _interopRequireDefault(require('babel-runtime/core-js/object/keys'));","","var _assign2 = _interopRequireDefault(require('babel-runtime/core-js/object/assign'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","var PROVIDES_MODULE = 'providesModule';","","/* eslint-disable comma-dangle */","","function create(options) {","  return function BabelPluginGraphQL(babel) {","    var t = babel.types;","","    return {","      visitor: {","        /**","         * Extract the module name from `@providesModule`.","         */","        Program: function Program(node, state) {","          var parent = node.parent;","          if (state.file.opts.documentName) {","            return;","          }","          var documentName = void 0;","          if (parent.comments && parent.comments.length) {","            var docblock = parent.comments[0].value || '';","            var propertyRegex = /@(\\S+) *(\\S*)/g;","            var captures = void 0;","            while (captures = propertyRegex.exec(docblock)) {","              var property = captures[1];","              var value = captures[2];","              if (property === PROVIDES_MODULE) {","                documentName = value.replace(/[-.:]/g, '_');","                break;","              }","            }","          }","          var basename = state.file.opts.basename;","          if (basename && !documentName) {","            var _captures = basename.match(/^[_A-Za-z][_0-9A-Za-z]*/);","            if (_captures) {","              documentName = _captures[0];","            }","          }","          state.file.opts.documentName = documentName || 'UnknownFile';","        },","        TaggedTemplateExpression: function TaggedTemplateExpression(path, state) {","          if (!t.isIdentifier(path.node.tag, { name: 'graphql' })) {","            return;","          }","","          require('fbjs/lib/invariant')(path.node.quasi.quasis.length === 1, 'BabelPluginGraphQL: Substitutions are not allowed in ' + 'graphql fragments. Included fragments should be referenced ' + 'as `...MyModule_propName`.');","","          var text = path.node.quasi.quasis[0].value.raw;","          var ast = require('./graphql').parse(text);","","          require('fbjs/lib/invariant')(ast.definitions.length === 1, 'BabelPluginGraphQL: Expected exactly one definition (fragment, ' + 'mutation, query, or subscription) per graphql tag.');","          var mainDefinition = ast.definitions[0];","          var definitionName = ast.definitions[0].name.value;","          var definitionKind = ast.definitions[0].kind;","          var fragmentID = 0;","","          var fragments = {};","          var variables = {};","          var argumentDefinitions = null;","          var variableDefinitions = null;","          var usesParams = false;","","          var visitors = {","            Directive: function Directive(node) {","              switch (node.name.value) {","                case 'argumentDefinitions':","                  require('fbjs/lib/invariant')(!argumentDefinitions, 'BabelPluginGraphQL: Expected only one ' + '@argumentDefinitions directive');","                  argumentDefinitions = node.arguments;","                  return null;","                case 'connection':","                  return null;","                default:","                  return node;","              }","            },","            FragmentSpread: function FragmentSpread(node) {","              var directives = node.directives;","","              var fragmentName = node.name.value;","              var fragmentArgumentsAST = null;","              var substitutionName = null;","","              if (directives.length === 0) {","                substitutionName = fragmentName;","              } else {","                (function () {","                  // TODO: add support for @include and other directives.","                  var directive = directives[0];","                  require('fbjs/lib/invariant')(directives.length === 1 && directive.name.value === 'arguments', 'BabelPluginGraphQL: Unsupported directive `%s` on fragment ' + 'spread `...%s`; only the @arguments directive is supported ' + 'on fragment spreads when using the graphql tag.', directive.name.value, fragmentName);","                  var fragmentArgumentsObject = {};","                  directive.arguments.forEach(function (argNode) {","                    var arg = convertArgument(t, argNode);","                    fragmentArgumentsObject[arg.name] = arg.ast;","                    if (arg.usesParams) {","                      usesParams = true;","                    }","                  });","                  fragmentArgumentsAST = createObject(t, fragmentArgumentsObject);","                  fragmentID++;","                  substitutionName = fragmentName + '_args' + fragmentID;","                })();","              }","","              fragments[substitutionName] = {","                name: fragmentName,","                args: fragmentArgumentsAST","              };","              return (0, _assign2['default'])({}, node, {","                name: { kind: 'Name', value: substitutionName },","                directives: []","              });","            },","            OperationDefinition: function OperationDefinition(node) {","              variableDefinitions = node.variableDefinitions;","              return node;","            },","            Variable: function Variable(node) {","              variables[node.name.value] = null;","              return node;","            }","          };","          var legacyAST = require('./graphql').visit(mainDefinition, visitors);","          var substitutions = createSubstitutionsForFragmentSpreads(t, fragments);","          var transformedAST = void 0;","","          if (definitionKind === 'FragmentDefinition') {","            var currentPath = path;","            var keyName = void 0;","            while (currentPath) {","              if (t.isObjectProperty(currentPath)) {","                keyName = currentPath.node.key.name;","                break;","              }","              currentPath = currentPath.parentPath;","            }","            require('fbjs/lib/invariant')(keyName, 'BabelPluginGraphQL: graphql`...` fragment definitions may ' + 'only appear as a property of an object literal inside a ' + 'createContainer() call.');","","            var fragmentNameParts = definitionName.match(/(^\\w+)_(\\w+)$/);","            require('fbjs/lib/invariant')(fragmentNameParts, 'BabelPluginGraphQL: Fragment names in graphql tags have to ' + 'be named as ModuleName_propName. Got `%s`', definitionName);","            require('fbjs/lib/invariant')(fragmentNameParts[1] === state.file.opts.documentName, 'BabelPluginGraphQL: Fragment names in graphql tags have to ' + 'be named as ModuleName_propName. Got `%s`, but expected `%s`', definitionName, state.file.opts.documentName + '_' + keyName);","            require('fbjs/lib/invariant')(fragmentNameParts[2] === keyName, 'BabelPluginGraphQL: Fragment names in graphql tags have to ' + 'be named as ModuleName_propName. Got `%s`, but the prop is ' + 'named `%s`', definitionName, keyName);","            transformedAST = createObject(t, {","              kind: t.stringLiteral('FragmentDefinition'),","              argumentDefinitions: createFragmentArguments(t, argumentDefinitions, variables),","              node: createRelayQLTemplate(t, legacyAST)","            });","          } else if (definitionKind === 'OperationDefinition') {","            var operationNameParts = definitionName.match(/^(\\w+)(Mutation|Query|Subscription)$/);","            require('fbjs/lib/invariant')(operationNameParts && definitionName.indexOf(state.file.opts.documentName) === 0, 'BabelPluginGraphQL: Operation names in graphql tags have ' + 'to be prefixed with `ModuleName` and end in either \"Mutation\", ' + '\"Query\", or \"Subscription\". Got `%s` in module `%s`.', definitionName, state.file.opts.documentName);","            var fragmentAST = createFragmentFromRoot(t, legacyAST);","            var queryASTs = splitRootFields(t, legacyAST);","            transformedAST = createObject(t, {","              kind: t.stringLiteral('OperationDefinition'),","              argumentDefinitions: createOperationArguments(t, variableDefinitions),","              fragment: fragmentAST,","              name: t.stringLiteral(definitionName),","              operation: t.stringLiteral(legacyAST.operation),","              queries: queryASTs","            });","          } else {","            require('fbjs/lib/invariant')(false, 'BabelPluginGraphQL: Expected a fragment, mutation, query, or ' + 'subscription, got `%s`.', definitionKind);","          }","","          var concreteNode = {","            relay: t.functionExpression(null, usesParams ? [t.identifier('params')] : [], t.blockStatement([t.variableDeclaration('const', [t.variableDeclarator(t.identifier('RelayQL_GENERATED'), createRequireCall(t, 'RelayQL_GENERATED'))].concat(substitutions)), t.returnStatement(transformedAST)]))","          };","          if (options.relayExperimental) {","            concreteNode.relayExperimental = t.functionExpression(null, [], t.blockStatement([t.returnStatement(createRequireCall(t, definitionName + '.relay2ql'))]));","          }","          path.replaceWith(createObject(t, concreteNode));","        }","      }","    };","  };","}","","function createOperationArguments(t, variableDefinitions) {","  return t.arrayExpression(variableDefinitions.map(function (definition) {","    var name = definition.variable.name.value;","    var defaultValue = definition.defaultValue ? parseValue(t, definition.defaultValue) : t.nullLiteral();","    return createLocalArgument(t, name, defaultValue);","  }));","}","","function createFragmentArguments(t, argumentDefinitions, variables) {","  var concreteDefinitions = [];","  (0, _keys2['default'])(variables).forEach(function (name) {","    var definition = (argumentDefinitions || []).find(function (arg) {","      return arg.name.value === name;","    });","    if (definition) {","      var defaultValueField = definition.value.fields.find(function (field) {","        return field.name.value === 'defaultValue';","      });","      var defaultValue = defaultValueField ? parseValue(t, defaultValueField.value) : t.nullLiteral();","      concreteDefinitions.push(createLocalArgument(t, name, defaultValue));","    } else {","      concreteDefinitions.push(createRootArgument(t, name));","    }","  });","  return t.arrayExpression(concreteDefinitions);","}","","function createLocalArgument(t, variableName, defaultValue) {","  return createObject(t, {","    defaultValue: defaultValue,","    kind: t.stringLiteral('LocalArgument'),","    name: t.stringLiteral(variableName)","  });","}","","function createRootArgument(t, variableName) {","  return t.objectExpression([t.objectProperty(t.identifier('kind'), t.stringLiteral('RootArgument')), t.objectProperty(t.identifier('name'), t.stringLiteral(variableName))]);","}","","function parseValue(t, value) {","  switch (value.kind) {","    case 'BooleanValue':","      return t.booleanLiteral(value.value);","    case 'IntValue':","      return t.numericLiteral(parseInt(value.value, 10));","    case 'FloatValue':","      return t.numericLiteral(parseFloat(value.value));","    case 'StringValue':","      return t.stringLiteral(value.value);","    case 'EnumValue':","      return t.stringLiteral(value.value);","    case 'ListValue':","      return t.arrayExpression(value.values.map(function (item) {","        return parseValue(t, item);","      }));","    default:","      require('fbjs/lib/invariant')(false, 'BabelPluginGraphQL: Unsupported literal type `%s`.', value.kind);","  }","}","","function convertArgument(t, argNode) {","  var name = argNode.name.value;","  var value = argNode.value;","  var ast = null;","  var usesParams = false;","  switch (value.kind) {","    case 'Variable':","      var paramName = value.name.value;","      usesParams = true;","      ast = t.memberExpression(t.identifier('params'), t.identifier(paramName));","      break;","    default:","      ast = parseValue(t, value);","  }","  return { name: name, ast: ast, usesParams: usesParams };","}","","function createObject(t, obj) {","  return t.objectExpression((0, _keys2['default'])(obj).map(function (key) {","    return t.objectProperty(t.identifier(key), obj[key]);","  }));","}","","function createRequireCall(t, moduleName) {","  return t.callExpression(t.identifier('require'), [t.stringLiteral(moduleName)]);","}","","function createFragmentFromRoot(t, root) {","  return createRelayQLTemplate(t, {","    kind: 'FragmentDefinition',","    loc: root.loc,","    name: {","      kind: 'Name',","      value: root.name.value + '__fragment'","    },","    typeCondition: {","      kind: 'NamedType',","      name: {","        kind: 'Name',","        value: 'Query'","      }","    },","    directives: root.directives,","    selectionSet: root.selectionSet","  });","}","","function splitRootFields(t, root) {","  var properties = root.selectionSet.selections.map(function (selection) {","    require('fbjs/lib/invariant')(selection.kind === 'Field', 'BabelPluginGraphQL: Expected the root fields of operation `%s` to be ' + 'fields, got `%s`.', root.name.value, selection.kind);","    var queryProp = selection.alias ? selection.alias.value : selection.name.value;","    return t.objectProperty(t.identifier(queryProp), createRelayQLTemplate(t, (0, _assign2['default'])({}, root, {","      name: {","        kind: 'Name',","        value: root.name.value + '_' + queryProp","      },","      selectionSet: (0, _assign2['default'])({}, root.selectionSet, {","        selections: [(0, _assign2['default'])({}, selection, {","          alias: null","        })]","      })","    })));","  });","  return t.objectExpression(properties);","}","","function createRelayQLTemplate(t, node) {","  var text = require('./graphql').print(node);","  return t.taggedTemplateExpression(t.identifier('RelayQL_GENERATED'), t.templateLiteral([t.templateElement({ raw: text, cooked: text }, true)], []));","}","","function createSubstitutionsForFragmentSpreads(t, fragments) {","  return (0, _keys2['default'])(fragments).map(function (varName) {","    var fragment = fragments[varName];","    var match = fragment.name.match(/^(\\w+)_(\\w+)$/);","    require('fbjs/lib/invariant')(match, 'BabelPluginGraphQL: Fragments should be named ' + '`ModuleName_fragmentName`, got `%s`.', fragment.name);","    var module = match[1];","    var propName = match[2];","    return t.variableDeclarator(t.identifier(varName), createGetFragementCall(t, module, propName, fragment.args));","  });","}","","function createGetFragementCall(t, module, propName, fragmentArguments) {","  var args = [t.stringLiteral(propName)];","","  if (fragmentArguments) {","    args.push(fragmentArguments);","  }","","  return t.callExpression(t.memberExpression(t.identifier(module), t.identifier('getFragment')), args);","}","","module.exports = {","  create: create","};"],"l":{"14":1,"16":1,"18":2,"20":1,"24":1,"25":0,"26":0,"28":0,"34":0,"35":0,"36":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"52":0,"53":0,"54":0,"55":0,"56":0,"59":0,"62":0,"63":0,"66":0,"68":0,"69":0,"71":0,"72":0,"73":0,"74":0,"75":0,"77":0,"78":0,"79":0,"80":0,"81":0,"83":0,"85":0,"87":0,"88":0,"89":0,"91":0,"93":0,"97":0,"99":0,"100":0,"101":0,"103":0,"104":0,"106":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"118":0,"119":0,"120":0,"124":0,"128":0,"134":0,"135":0,"138":0,"139":0,"142":0,"143":0,"144":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"154":0,"156":0,"158":0,"159":0,"160":0,"161":0,"162":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"181":0,"184":0,"187":0,"188":0,"190":0,"197":1,"198":0,"199":0,"200":0,"201":0,"205":1,"206":0,"207":0,"208":0,"209":0,"211":0,"212":0,"213":0,"215":0,"216":0,"218":0,"221":0,"224":1,"225":0,"232":1,"233":0,"236":1,"237":0,"239":0,"241":0,"243":0,"245":0,"247":0,"249":0,"250":0,"253":0,"257":1,"258":0,"259":0,"260":0,"261":0,"262":0,"264":0,"265":0,"266":0,"267":0,"269":0,"271":0,"274":1,"275":0,"276":0,"280":1,"281":0,"284":1,"285":0,"304":1,"305":0,"306":0,"307":0,"308":0,"320":0,"323":1,"324":0,"325":0,"328":1,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"339":1,"340":0,"342":0,"343":0,"346":0,"349":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/buildRQL.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/buildRQL.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":1,"68":0,"69":0,"70":1,"71":1},"b":{"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0,0,0],"20":[0,0],"21":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":37}}},"2":{"name":"isDeprecatedCallWithArgCountGreaterThan","line":25,"loc":{"start":{"line":25,"column":0},"end":{"line":25,"column":69}}},"3":{"name":"Fragment","line":50,"loc":{"start":{"line":50,"column":12},"end":{"line":50,"column":55}}},"4":{"name":"Query","line":65,"loc":{"start":{"line":65,"column":9},"end":{"line":65,"column":68}}},"5":{"name":"buildNode","line":93,"loc":{"start":{"line":93,"column":0},"end":{"line":93,"column":63}}},"6":{"name":"(anonymous_6)","line":103,"loc":{"start":{"line":103,"column":7},"end":{"line":103,"column":19}}},"7":{"name":"(anonymous_7)","line":107,"loc":{"start":{"line":107,"column":33},"end":{"line":107,"column":50}}},"8":{"name":"(anonymous_8)","line":117,"loc":{"start":{"line":117,"column":78},"end":{"line":117,"column":97}}},"9":{"name":"toVariables","line":131,"loc":{"start":{"line":131,"column":0},"end":{"line":131,"column":32}}},"10":{"name":"(anonymous_10)","line":132,"loc":{"start":{"line":132,"column":50},"end":{"line":132,"column":69}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":81}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":97}},"3":{"start":{"line":17,"column":39},"end":{"line":17,"column":95}},"4":{"start":{"line":20,"column":0},"end":{"line":20,"column":52}},"5":{"start":{"line":23,"column":0},"end":{"line":23,"column":49}},"6":{"start":{"line":25,"column":0},"end":{"line":37,"column":1}},"7":{"start":{"line":26,"column":2},"end":{"line":26,"column":37}},"8":{"start":{"line":27,"column":2},"end":{"line":35,"column":3}},"9":{"start":{"line":28,"column":4},"end":{"line":28,"column":31}},"10":{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},"11":{"start":{"line":30,"column":6},"end":{"line":30,"column":51}},"12":{"start":{"line":32,"column":4},"end":{"line":34,"column":5}},"13":{"start":{"line":33,"column":6},"end":{"line":33,"column":34}},"14":{"start":{"line":36,"column":2},"end":{"line":36,"column":27}},"15":{"start":{"line":49,"column":0},"end":{"line":88,"column":2}},"16":{"start":{"line":51,"column":4},"end":{"line":51,"column":50}},"17":{"start":{"line":52,"column":4},"end":{"line":54,"column":5}},"18":{"start":{"line":53,"column":6},"end":{"line":53,"column":57}},"19":{"start":{"line":55,"column":4},"end":{"line":55,"column":40}},"20":{"start":{"line":56,"column":4},"end":{"line":56,"column":210}},"21":{"start":{"line":57,"column":4},"end":{"line":57,"column":38}},"22":{"start":{"line":58,"column":4},"end":{"line":58,"column":85}},"23":{"start":{"line":59,"column":4},"end":{"line":61,"column":5}},"24":{"start":{"line":60,"column":6},"end":{"line":60,"column":22}},"25":{"start":{"line":62,"column":4},"end":{"line":62,"column":49}},"26":{"start":{"line":63,"column":4},"end":{"line":63,"column":20}},"27":{"start":{"line":66,"column":4},"end":{"line":66,"column":72}},"28":{"start":{"line":67,"column":4},"end":{"line":67,"column":22}},"29":{"start":{"line":68,"column":4},"end":{"line":82,"column":5}},"30":{"start":{"line":69,"column":6},"end":{"line":69,"column":67}},"31":{"start":{"line":71,"column":6},"end":{"line":71,"column":56}},"32":{"start":{"line":72,"column":6},"end":{"line":77,"column":7}},"33":{"start":{"line":73,"column":8},"end":{"line":73,"column":57}},"34":{"start":{"line":74,"column":8},"end":{"line":74,"column":53}},"35":{"start":{"line":76,"column":8},"end":{"line":76,"column":45}},"36":{"start":{"line":78,"column":6},"end":{"line":80,"column":7}},"37":{"start":{"line":79,"column":8},"end":{"line":79,"column":69}},"38":{"start":{"line":81,"column":6},"end":{"line":81,"column":42}},"39":{"start":{"line":83,"column":4},"end":{"line":85,"column":5}},"40":{"start":{"line":84,"column":6},"end":{"line":84,"column":67}},"41":{"start":{"line":86,"column":4},"end":{"line":86,"column":16}},"42":{"start":{"line":93,"column":0},"end":{"line":129,"column":1}},"43":{"start":{"line":94,"column":2},"end":{"line":94,"column":38}},"44":{"start":{"line":95,"column":2},"end":{"line":95,"column":215}},"45":{"start":{"line":96,"column":2},"end":{"line":96,"column":20}},"46":{"start":{"line":97,"column":2},"end":{"line":127,"column":3}},"47":{"start":{"line":98,"column":4},"end":{"line":98,"column":46}},"48":{"start":{"line":100,"column":4},"end":{"line":100,"column":46}},"49":{"start":{"line":101,"column":4},"end":{"line":101,"column":57}},"50":{"start":{"line":102,"column":4},"end":{"line":126,"column":5}},"51":{"start":{"line":103,"column":6},"end":{"line":125,"column":11}},"52":{"start":{"line":104,"column":8},"end":{"line":104,"column":32}},"53":{"start":{"line":105,"column":8},"end":{"line":105,"column":39}},"54":{"start":{"line":106,"column":8},"end":{"line":113,"column":9}},"55":{"start":{"line":107,"column":10},"end":{"line":112,"column":13}},"56":{"start":{"line":108,"column":12},"end":{"line":111,"column":13}},"57":{"start":{"line":109,"column":14},"end":{"line":109,"column":69}},"58":{"start":{"line":110,"column":14},"end":{"line":110,"column":134}},"59":{"start":{"line":114,"column":8},"end":{"line":124,"column":9}},"60":{"start":{"line":115,"column":10},"end":{"line":115,"column":73}},"61":{"start":{"line":116,"column":10},"end":{"line":116,"column":192}},"62":{"start":{"line":117,"column":10},"end":{"line":119,"column":13}},"63":{"start":{"line":118,"column":12},"end":{"line":118,"column":47}},"64":{"start":{"line":120,"column":10},"end":{"line":120,"column":77}},"65":{"start":{"line":121,"column":10},"end":{"line":123,"column":13}},"66":{"start":{"line":128,"column":2},"end":{"line":128,"column":14}},"67":{"start":{"line":131,"column":0},"end":{"line":135,"column":1}},"68":{"start":{"line":132,"column":2},"end":{"line":134,"column":5}},"69":{"start":{"line":133,"column":4},"end":{"line":133,"column":62}},"70":{"start":{"line":137,"column":0},"end":{"line":140,"column":3}},"71":{"start":{"line":142,"column":0},"end":{"line":142,"column":26}}},"branchMap":{"1":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":70},"end":{"line":17,"column":73}},{"start":{"line":17,"column":76},"end":{"line":17,"column":94}}]},"2":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":46},"end":{"line":17,"column":49}},{"start":{"line":17,"column":53},"end":{"line":17,"column":67}}]},"3":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":2},"end":{"line":27,"column":2}},{"start":{"line":27,"column":2},"end":{"line":27,"column":2}}]},"4":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":11},"end":{"line":29,"column":19}},{"start":{"line":29,"column":23},"end":{"line":29,"column":54}}]},"5":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":32,"column":4}},{"start":{"line":32,"column":4},"end":{"line":32,"column":4}}]},"6":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":4},"end":{"line":52,"column":4}},{"start":{"line":52,"column":4},"end":{"line":52,"column":4}}]},"7":{"line":58,"type":"cond-expr","locations":[{"start":{"line":58,"column":34},"end":{"line":58,"column":77}},{"start":{"line":58,"column":80},"end":{"line":58,"column":84}}]},"8":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":4},"end":{"line":59,"column":4}},{"start":{"line":59,"column":4},"end":{"line":59,"column":4}}]},"9":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":4},"end":{"line":68,"column":4}},{"start":{"line":68,"column":4},"end":{"line":68,"column":4}}]},"10":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":6},"end":{"line":72,"column":6}},{"start":{"line":72,"column":6},"end":{"line":72,"column":6}}]},"11":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":6},"end":{"line":78,"column":6}},{"start":{"line":78,"column":6},"end":{"line":78,"column":6}}]},"12":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":4},"end":{"line":83,"column":4}},{"start":{"line":83,"column":4},"end":{"line":83,"column":4}}]},"13":{"line":84,"type":"binary-expr","locations":[{"start":{"line":84,"column":13},"end":{"line":84,"column":53}},{"start":{"line":84,"column":57},"end":{"line":84,"column":66}}]},"14":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":2},"end":{"line":97,"column":2}},{"start":{"line":97,"column":2},"end":{"line":97,"column":2}}]},"15":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":4},"end":{"line":102,"column":4}},{"start":{"line":102,"column":4},"end":{"line":102,"column":4}}]},"16":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":8},"end":{"line":106,"column":8}},{"start":{"line":106,"column":8},"end":{"line":106,"column":8}}]},"17":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12}},{"start":{"line":108,"column":12},"end":{"line":108,"column":12}}]},"18":{"line":109,"type":"binary-expr","locations":[{"start":{"line":109,"column":28},"end":{"line":109,"column":39}},{"start":{"line":109,"column":43},"end":{"line":109,"column":68}}]},"19":{"line":110,"type":"binary-expr","locations":[{"start":{"line":110,"column":36},"end":{"line":110,"column":55}},{"start":{"line":110,"column":59},"end":{"line":110,"column":81}},{"start":{"line":110,"column":86},"end":{"line":110,"column":101}},{"start":{"line":110,"column":105},"end":{"line":110,"column":132}}]},"20":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":8},"end":{"line":114,"column":8}},{"start":{"line":114,"column":8},"end":{"line":114,"column":8}}]},"21":{"line":115,"type":"cond-expr","locations":[{"start":{"line":115,"column":42},"end":{"line":115,"column":67}},{"start":{"line":115,"column":70},"end":{"line":115,"column":72}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule buildRQL"," * "," */","","'use strict';","","var _extends3 = _interopRequireDefault(require('babel-runtime/helpers/extends'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","// Cache results of executing fragment query builders.","var fragmentCache = new (require('fbjs/lib/Map'))();","","// Cache results of executing component-specific route query builders.","var queryCache = new (require('fbjs/lib/Map'))();","","function isDeprecatedCallWithArgCountGreaterThan(nodeBuilder, count) {","  var argLength = nodeBuilder.length;","  if (process.env.NODE_ENV !== 'production') {","    var mockImpl = nodeBuilder;","    while (mockImpl && mockImpl._getMockImplementation) {","      mockImpl = mockImpl._getMockImplementation();","    }","    if (mockImpl) {","      argLength = mockImpl.length;","    }","  }","  return argLength > count;","}","","/**"," * @internal"," *"," * Builds a static node representation using a supplied query or fragment"," * builder. This is used for routes, containers, and mutations."," *"," * If the supplied fragment builder produces an invalid node (e.g. the wrong"," * node type), these will return `undefined`. This is not to be confused with"," * a return value of `null`, which may result from the lack of a node."," */","var buildRQL = {","  Fragment: function Fragment(fragmentBuilder, values) {","    var node = fragmentCache.get(fragmentBuilder);","    if (node) {","      return require('./QueryBuilder').getFragment(node);","    }","    var variables = toVariables(values);","    require('fbjs/lib/invariant')(!isDeprecatedCallWithArgCountGreaterThan(fragmentBuilder, 1), 'Relay.QL: Deprecated usage detected. If you are trying to define a ' + 'fragment, use `variables => Relay.QL`.');","    node = fragmentBuilder(variables);","    var fragment = node != null ? require('./QueryBuilder').getFragment(node) : null;","    if (!fragment) {","      return fragment;","    }","    fragmentCache.set(fragmentBuilder, fragment);","    return fragment;","  },","  Query: function Query(queryBuilder, Component, queryName, values) {","    var queryCacheEnabled = require('./RelayQueryCaching').getEnabled();","    var node = void 0;","    if (!queryCacheEnabled) {","      node = buildNode(queryBuilder, Component, queryName, values);","    } else {","      var componentCache = queryCache.get(queryBuilder);","      if (!componentCache) {","        componentCache = new (require('fbjs/lib/Map'))();","        queryCache.set(queryBuilder, componentCache);","      } else {","        node = componentCache.get(Component);","      }","      if (!node) {","        node = buildNode(queryBuilder, Component, queryName, values);","      }","      componentCache.set(Component, node);","    }","    if (node) {","      return require('./QueryBuilder').getQuery(node) || undefined;","    }","    return null;","  }","};","","/**"," * @internal"," */","function buildNode(queryBuilder, Component, queryName, values) {","  var variables = toVariables(values);","  require('fbjs/lib/invariant')(!isDeprecatedCallWithArgCountGreaterThan(queryBuilder, 2), 'Relay.QL: Deprecated usage detected. If you are trying to define a ' + 'query, use `(Component, variables) => Relay.QL`.');","  var node = void 0;","  if (isDeprecatedCallWithArgCountGreaterThan(queryBuilder, 0)) {","    node = queryBuilder(Component, variables);","  } else {","    node = queryBuilder(Component, variables);","    var query = require('./QueryBuilder').getQuery(node);","    if (query) {","      (function () {","        var hasFragment = false;","        var hasScalarFieldsOnly = true;","        if (query.children) {","          query.children.forEach(function (child) {","            if (child) {","              hasFragment = hasFragment || child.kind === 'Fragment';","              hasScalarFieldsOnly = hasScalarFieldsOnly && child.kind === 'Field' && (!child.children || child.children.length === 0);","            }","          });","        }","        if (!hasFragment) {","          var children = query.children ? [].concat(query.children) : [];","          require('fbjs/lib/invariant')(hasScalarFieldsOnly, 'Relay.QL: Expected query `%s` to be empty. For example, use ' + '`node(id: $id)`, not `node(id: $id) { ... }`.', query.fieldName);","          var fragmentVariables = require('fbjs/lib/filterObject')(variables, function (_, name) {","            return Component.hasVariable(name);","          });","          children.push(Component.getFragment(queryName, fragmentVariables));","          node = (0, _extends3['default'])({}, query, {","            children: children","          });","        }","      })();","    }","  }","  return node;","}","","function toVariables(variables) {","  return require('fbjs/lib/mapObject')(variables, function (_, name) {","    return require('./QueryBuilder').createCallVariable(name);","  });","}","","require('./RelayProfiler').instrumentMethods(buildRQL, {","  Fragment: 'buildRQL.Fragment',","  Query: 'buildRQL.Query'","});","","module.exports = buildRQL;"],"l":{"15":1,"17":1,"20":1,"23":1,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"32":0,"33":0,"36":0,"49":1,"51":0,"52":0,"53":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"62":0,"63":0,"66":0,"67":0,"68":0,"69":0,"71":0,"72":0,"73":0,"74":0,"76":0,"78":0,"79":0,"81":0,"83":0,"84":0,"86":0,"93":1,"94":0,"95":0,"96":0,"97":0,"98":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"114":0,"115":0,"116":0,"117":0,"118":0,"120":0,"121":0,"128":0,"131":1,"132":0,"133":0,"137":1,"142":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/callsFromGraphQL.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/callsFromGraphQL.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1},"b":{"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0,0,0]},"f":{"1":1,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":37}}},"2":{"name":"callsFromGraphQL","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":52}}},"3":{"name":"(anonymous_3)","line":34,"loc":{"start":{"line":34,"column":28},"end":{"line":34,"column":43}}},"4":{"name":"getCallValue","line":56,"loc":{"start":{"line":56,"column":0},"end":{"line":56,"column":48}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":90}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":97}},"3":{"start":{"line":17,"column":39},"end":{"line":17,"column":95}},"4":{"start":{"line":24,"column":0},"end":{"line":54,"column":1}},"5":{"start":{"line":26,"column":2},"end":{"line":26,"column":40}},"6":{"start":{"line":27,"column":2},"end":{"line":27,"column":24}},"7":{"start":{"line":28,"column":2},"end":{"line":52,"column":3}},"8":{"start":{"line":29,"column":4},"end":{"line":29,"column":48}},"9":{"start":{"line":30,"column":4},"end":{"line":30,"column":39}},"10":{"start":{"line":32,"column":4},"end":{"line":43,"column":5}},"11":{"start":{"line":33,"column":6},"end":{"line":42,"column":7}},"12":{"start":{"line":34,"column":8},"end":{"line":36,"column":11}},"13":{"start":{"line":35,"column":10},"end":{"line":35,"column":46}},"14":{"start":{"line":37,"column":13},"end":{"line":42,"column":7}},"15":{"start":{"line":39,"column":8},"end":{"line":39,"column":22}},"16":{"start":{"line":41,"column":8},"end":{"line":41,"column":49}},"17":{"start":{"line":44,"column":4},"end":{"line":45,"column":37}},"18":{"start":{"line":47,"column":4},"end":{"line":47,"column":53}},"19":{"start":{"line":48,"column":4},"end":{"line":50,"column":5}},"20":{"start":{"line":49,"column":6},"end":{"line":49,"column":40}},"21":{"start":{"line":51,"column":4},"end":{"line":51,"column":35}},"22":{"start":{"line":53,"column":2},"end":{"line":53,"column":22}},"23":{"start":{"line":56,"column":0},"end":{"line":70,"column":1}},"24":{"start":{"line":57,"column":2},"end":{"line":57,"column":25}},"25":{"start":{"line":58,"column":2},"end":{"line":64,"column":3}},"26":{"start":{"line":59,"column":4},"end":{"line":59,"column":40}},"27":{"start":{"line":61,"column":4},"end":{"line":61,"column":54}},"28":{"start":{"line":62,"column":4},"end":{"line":62,"column":158}},"29":{"start":{"line":63,"column":4},"end":{"line":63,"column":40}},"30":{"start":{"line":67,"column":2},"end":{"line":67,"column":35}},"31":{"start":{"line":68,"column":2},"end":{"line":68,"column":318}},"32":{"start":{"line":69,"column":2},"end":{"line":69,"column":19}},"33":{"start":{"line":72,"column":0},"end":{"line":72,"column":34}}},"branchMap":{"1":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":70},"end":{"line":17,"column":73}},{"start":{"line":17,"column":76},"end":{"line":17,"column":94}}]},"2":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":46},"end":{"line":17,"column":49}},{"start":{"line":17,"column":53},"end":{"line":17,"column":67}}]},"3":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":32,"column":4}},{"start":{"line":32,"column":4},"end":{"line":32,"column":4}}]},"4":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":6},"end":{"line":33,"column":6}},{"start":{"line":33,"column":6},"end":{"line":33,"column":6}}]},"5":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":13},"end":{"line":37,"column":13}},{"start":{"line":37,"column":13},"end":{"line":37,"column":13}}]},"6":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":4},"end":{"line":48,"column":4}},{"start":{"line":48,"column":4},"end":{"line":48,"column":4}}]},"7":{"line":48,"type":"binary-expr","locations":[{"start":{"line":48,"column":8},"end":{"line":48,"column":17}},{"start":{"line":48,"column":21},"end":{"line":48,"column":35}}]},"8":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":2},"end":{"line":58,"column":2}},{"start":{"line":58,"column":2},"end":{"line":58,"column":2}}]},"9":{"line":68,"type":"binary-expr","locations":[{"start":{"line":68,"column":32},"end":{"line":68,"column":49}},{"start":{"line":68,"column":53},"end":{"line":68,"column":76}},{"start":{"line":68,"column":80},"end":{"line":68,"column":102}},{"start":{"line":68,"column":106},"end":{"line":68,"column":128}},{"start":{"line":68,"column":132},"end":{"line":68,"column":154}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule callsFromGraphQL"," * "," */","","'use strict';","","var _stringify2 = _interopRequireDefault(require('babel-runtime/core-js/json/stringify'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","/**"," * @internal"," *"," * Convert from GraphQL call nodes to plain object `{name,value}` calls."," */","function callsFromGraphQL(concreteCalls, variables) {","  // $FlowIssue: ConcreteCall should flow into CallOrDirective","  var callsOrDirectives = concreteCalls;","  var orderedCalls = [];","  for (var ii = 0; ii < callsOrDirectives.length; ii++) {","    var callOrDirective = callsOrDirectives[ii];","    var _value = callOrDirective.value;","","    if (_value != null) {","      if (Array.isArray(_value)) {","        _value = _value.map(function (arg) {","          return getCallValue(arg, variables);","        });","      } else if (_value.kind === 'BatchCallVariable') {","        // Batch calls are handled separately","        _value = null;","      } else {","        _value = getCallValue(_value, variables);","      }","    }","    var _metadata = callOrDirective.metadata,","        _name = callOrDirective.name;","","    var orderedCall = { name: _name, value: _value };","    if (_metadata && _metadata.type) {","      orderedCall.type = _metadata.type;","    }","    orderedCalls.push(orderedCall);","  }","  return orderedCalls;","}","","function getCallValue(concreteValue, variables) {","  var callValue = void 0;","  if (concreteValue.kind === 'CallValue') {","    callValue = concreteValue.callValue;","  } else {","    var variableName = concreteValue.callVariableName;","    require('fbjs/lib/invariant')(variables.hasOwnProperty(variableName), 'callsFromGraphQL(): Expected a declared value for variable, `$%s`.', variableName);","    callValue = variables[variableName];","  }","  // Perform a shallow check to ensure the value conforms to `CallValue` type:","  // For performance reasons, skip recursively testing array/object values.","  var valueType = typeof callValue;","  require('fbjs/lib/invariant')(callValue == null || valueType === 'boolean' || valueType === 'number' || valueType === 'string' || valueType === 'object', 'callsFromGraphQL(): Expected argument value `%s` to either be null or a ' + 'boolean, number, string, or array/object.', (0, _stringify2['default'])(callValue));","  return callValue;","}","","module.exports = callsFromGraphQL;"],"l":{"15":1,"17":1,"24":1,"26":0,"27":0,"28":0,"29":0,"30":0,"32":0,"33":0,"34":0,"35":0,"37":0,"39":0,"41":0,"44":0,"47":0,"48":0,"49":0,"51":0,"53":0,"56":1,"57":0,"58":0,"59":0,"61":0,"62":0,"63":0,"67":0,"68":0,"69":0,"72":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/callsToGraphQL.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/callsToGraphQL.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"callsToGraphQL","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":31}}},"2":{"name":"(anonymous_2)","line":21,"loc":{"start":{"line":21,"column":19},"end":{"line":21,"column":35}}}},"statementMap":{"1":{"start":{"line":20,"column":0},"end":{"line":34,"column":1}},"2":{"start":{"line":21,"column":2},"end":{"line":33,"column":5}},"3":{"start":{"line":22,"column":4},"end":{"line":24,"column":27}},"4":{"start":{"line":26,"column":4},"end":{"line":26,"column":29}},"5":{"start":{"line":27,"column":4},"end":{"line":31,"column":5}},"6":{"start":{"line":28,"column":6},"end":{"line":28,"column":75}},"7":{"start":{"line":29,"column":11},"end":{"line":31,"column":5}},"8":{"start":{"line":30,"column":6},"end":{"line":30,"column":71}},"9":{"start":{"line":32,"column":4},"end":{"line":32,"column":75}},"10":{"start":{"line":36,"column":0},"end":{"line":36,"column":32}}},"branchMap":{"1":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":4},"end":{"line":27,"column":4}},{"start":{"line":27,"column":4},"end":{"line":27,"column":4}}]},"2":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":11},"end":{"line":29,"column":11}},{"start":{"line":29,"column":11},"end":{"line":29,"column":11}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule callsToGraphQL"," * "," */","","'use strict';","","/**"," * @internal"," *"," * Convert from plain object `{name, value}` calls to GraphQL call nodes."," */","function callsToGraphQL(calls) {","  return calls.map(function (_ref) {","    var name = _ref.name,","        type = _ref.type,","        value = _ref.value;","","    var concreteValue = null;","    if (Array.isArray(value)) {","      concreteValue = value.map(require('./QueryBuilder').createCallValue);","    } else if (value != null) {","      concreteValue = require('./QueryBuilder').createCallValue(value);","    }","    return require('./QueryBuilder').createCall(name, concreteValue, type);","  });","}","","module.exports = callsToGraphQL;"],"l":{"20":1,"21":0,"22":0,"26":0,"27":0,"28":0,"29":0,"30":0,"32":0,"36":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/checkRelayQueryData.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/checkRelayQueryData.js","s":{"1":1,"2":1,"3":1,"4":1,"5":3,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":1,"61":0,"62":0,"63":0,"64":1,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":1,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":1,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":1,"104":0,"105":0,"106":0,"107":0,"108":1,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":1,"118":1},"b":{"1":[3,0],"2":[3,3],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0]},"f":{"1":3,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":37}}},"2":{"name":"checkRelayQueryData","line":34,"loc":{"start":{"line":34,"column":0},"end":{"line":34,"column":43}}},"3":{"name":"(anonymous_3)","line":48,"loc":{"start":{"line":48,"column":24},"end":{"line":48,"column":54}}},"4":{"name":"RelayQueryChecker","line":51,"loc":{"start":{"line":51,"column":2},"end":{"line":51,"column":36}}},"5":{"name":"traverse","line":65,"loc":{"start":{"line":65,"column":41},"end":{"line":65,"column":72}}},"6":{"name":"visitRoot","line":75,"loc":{"start":{"line":75,"column":42},"end":{"line":75,"column":74}}},"7":{"name":"(anonymous_7)","line":79,"loc":{"start":{"line":79,"column":42},"end":{"line":79,"column":58}}},"8":{"name":"visitFragment","line":97,"loc":{"start":{"line":97,"column":46},"end":{"line":97,"column":86}}},"9":{"name":"visitField","line":105,"loc":{"start":{"line":105,"column":43},"end":{"line":105,"column":77}}},"10":{"name":"_checkScalar","line":130,"loc":{"start":{"line":130,"column":45},"end":{"line":130,"column":81}}},"11":{"name":"_checkPlural","line":137,"loc":{"start":{"line":137,"column":45},"end":{"line":137,"column":81}}},"12":{"name":"_checkConnection","line":159,"loc":{"start":{"line":159,"column":49},"end":{"line":159,"column":89}}},"13":{"name":"_checkEdges","line":179,"loc":{"start":{"line":179,"column":44},"end":{"line":179,"column":79}}},"14":{"name":"_checkPageInfo","line":204,"loc":{"start":{"line":204,"column":47},"end":{"line":204,"column":85}}},"15":{"name":"_checkLinkedField","line":212,"loc":{"start":{"line":212,"column":50},"end":{"line":212,"column":91}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":117}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":83}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":97}},"5":{"start":{"line":21,"column":39},"end":{"line":21,"column":95}},"6":{"start":{"line":23,"column":0},"end":{"line":24,"column":64}},"7":{"start":{"line":34,"column":0},"end":{"line":46,"column":1}},"8":{"start":{"line":36,"column":2},"end":{"line":36,"column":45}},"9":{"start":{"line":38,"column":2},"end":{"line":42,"column":4}},"10":{"start":{"line":44,"column":2},"end":{"line":44,"column":30}},"11":{"start":{"line":45,"column":2},"end":{"line":45,"column":22}},"12":{"start":{"line":48,"column":0},"end":{"line":230,"column":34}},"13":{"start":{"line":49,"column":2},"end":{"line":49,"column":68}},"14":{"start":{"line":51,"column":2},"end":{"line":58,"column":3}},"15":{"start":{"line":52,"column":4},"end":{"line":52,"column":62}},"16":{"start":{"line":54,"column":4},"end":{"line":54,"column":97}},"17":{"start":{"line":56,"column":4},"end":{"line":56,"column":25}},"18":{"start":{"line":57,"column":4},"end":{"line":57,"column":17}},"19":{"start":{"line":65,"column":2},"end":{"line":73,"column":4}},"20":{"start":{"line":66,"column":4},"end":{"line":66,"column":38}},"21":{"start":{"line":67,"column":4},"end":{"line":72,"column":5}},"22":{"start":{"line":68,"column":6},"end":{"line":70,"column":7}},"23":{"start":{"line":69,"column":8},"end":{"line":69,"column":15}},"24":{"start":{"line":71,"column":6},"end":{"line":71,"column":38}},"25":{"start":{"line":75,"column":2},"end":{"line":95,"column":4}},"26":{"start":{"line":76,"column":4},"end":{"line":76,"column":22}},"27":{"start":{"line":78,"column":4},"end":{"line":78,"column":42}},"28":{"start":{"line":79,"column":4},"end":{"line":94,"column":7}},"29":{"start":{"line":80,"column":6},"end":{"line":80,"column":53}},"30":{"start":{"line":82,"column":6},"end":{"line":82,"column":74}},"31":{"start":{"line":83,"column":6},"end":{"line":93,"column":7}},"32":{"start":{"line":84,"column":8},"end":{"line":84,"column":29}},"33":{"start":{"line":86,"column":8},"end":{"line":90,"column":10}},"34":{"start":{"line":91,"column":8},"end":{"line":91,"column":41}},"35":{"start":{"line":92,"column":8},"end":{"line":92,"column":56}},"36":{"start":{"line":97,"column":2},"end":{"line":103,"column":4}},"37":{"start":{"line":98,"column":4},"end":{"line":98,"column":30}},"38":{"start":{"line":100,"column":4},"end":{"line":102,"column":5}},"39":{"start":{"line":101,"column":6},"end":{"line":101,"column":37}},"40":{"start":{"line":105,"column":2},"end":{"line":128,"column":4}},"41":{"start":{"line":106,"column":4},"end":{"line":106,"column":30}},"42":{"start":{"line":107,"column":4},"end":{"line":107,"column":67}},"43":{"start":{"line":108,"column":4},"end":{"line":113,"column":5}},"44":{"start":{"line":109,"column":6},"end":{"line":109,"column":27}},"45":{"start":{"line":110,"column":6},"end":{"line":110,"column":13}},"46":{"start":{"line":111,"column":11},"end":{"line":113,"column":5}},"47":{"start":{"line":112,"column":6},"end":{"line":112,"column":13}},"48":{"start":{"line":114,"column":4},"end":{"line":114,"column":36}},"49":{"start":{"line":115,"column":4},"end":{"line":127,"column":5}},"50":{"start":{"line":116,"column":6},"end":{"line":116,"column":37}},"51":{"start":{"line":117,"column":11},"end":{"line":127,"column":5}},"52":{"start":{"line":118,"column":6},"end":{"line":118,"column":40}},"53":{"start":{"line":119,"column":11},"end":{"line":127,"column":5}},"54":{"start":{"line":120,"column":6},"end":{"line":120,"column":38}},"55":{"start":{"line":121,"column":11},"end":{"line":127,"column":5}},"56":{"start":{"line":122,"column":6},"end":{"line":122,"column":38}},"57":{"start":{"line":123,"column":11},"end":{"line":127,"column":5}},"58":{"start":{"line":124,"column":6},"end":{"line":124,"column":42}},"59":{"start":{"line":126,"column":6},"end":{"line":126,"column":43}},"60":{"start":{"line":130,"column":2},"end":{"line":135,"column":4}},"61":{"start":{"line":131,"column":4},"end":{"line":131,"column":94}},"62":{"start":{"line":132,"column":4},"end":{"line":134,"column":5}},"63":{"start":{"line":133,"column":6},"end":{"line":133,"column":27}},"64":{"start":{"line":137,"column":2},"end":{"line":157,"column":4}},"65":{"start":{"line":138,"column":4},"end":{"line":138,"column":102}},"66":{"start":{"line":139,"column":4},"end":{"line":142,"column":5}},"67":{"start":{"line":140,"column":6},"end":{"line":140,"column":27}},"68":{"start":{"line":141,"column":6},"end":{"line":141,"column":13}},"69":{"start":{"line":143,"column":4},"end":{"line":156,"column":5}},"70":{"start":{"line":144,"column":6},"end":{"line":155,"column":7}},"71":{"start":{"line":145,"column":8},"end":{"line":147,"column":9}},"72":{"start":{"line":146,"column":10},"end":{"line":146,"column":16}},"73":{"start":{"line":148,"column":8},"end":{"line":152,"column":10}},"74":{"start":{"line":153,"column":8},"end":{"line":153,"column":40}},"75":{"start":{"line":154,"column":8},"end":{"line":154,"column":40}},"76":{"start":{"line":159,"column":2},"end":{"line":177,"column":4}},"77":{"start":{"line":160,"column":4},"end":{"line":160,"column":43}},"78":{"start":{"line":161,"column":4},"end":{"line":161,"column":100}},"79":{"start":{"line":162,"column":4},"end":{"line":165,"column":5}},"80":{"start":{"line":163,"column":6},"end":{"line":163,"column":27}},"81":{"start":{"line":164,"column":6},"end":{"line":164,"column":13}},"82":{"start":{"line":166,"column":4},"end":{"line":170,"column":6}},"83":{"start":{"line":171,"column":4},"end":{"line":171,"column":63}},"84":{"start":{"line":172,"column":4},"end":{"line":174,"column":5}},"85":{"start":{"line":173,"column":6},"end":{"line":173,"column":37}},"86":{"start":{"line":175,"column":4},"end":{"line":175,"column":36}},"87":{"start":{"line":176,"column":4},"end":{"line":176,"column":52}},"88":{"start":{"line":179,"column":2},"end":{"line":202,"column":4}},"89":{"start":{"line":180,"column":4},"end":{"line":180,"column":36}},"90":{"start":{"line":181,"column":4},"end":{"line":184,"column":5}},"91":{"start":{"line":182,"column":6},"end":{"line":182,"column":27}},"92":{"start":{"line":183,"column":6},"end":{"line":183,"column":13}},"93":{"start":{"line":185,"column":4},"end":{"line":188,"column":5}},"94":{"start":{"line":186,"column":6},"end":{"line":186,"column":27}},"95":{"start":{"line":187,"column":6},"end":{"line":187,"column":13}},"96":{"start":{"line":189,"column":4},"end":{"line":189,"column":40}},"97":{"start":{"line":190,"column":4},"end":{"line":201,"column":5}},"98":{"start":{"line":191,"column":6},"end":{"line":193,"column":7}},"99":{"start":{"line":192,"column":8},"end":{"line":192,"column":14}},"100":{"start":{"line":194,"column":6},"end":{"line":198,"column":8}},"101":{"start":{"line":199,"column":6},"end":{"line":199,"column":38}},"102":{"start":{"line":200,"column":6},"end":{"line":200,"column":38}},"103":{"start":{"line":204,"column":2},"end":{"line":210,"column":4}},"104":{"start":{"line":205,"column":4},"end":{"line":205,"column":36}},"105":{"start":{"line":206,"column":4},"end":{"line":209,"column":5}},"106":{"start":{"line":207,"column":6},"end":{"line":207,"column":27}},"107":{"start":{"line":208,"column":6},"end":{"line":208,"column":13}},"108":{"start":{"line":212,"column":2},"end":{"line":227,"column":4}},"109":{"start":{"line":213,"column":4},"end":{"line":213,"column":100}},"110":{"start":{"line":214,"column":4},"end":{"line":217,"column":5}},"111":{"start":{"line":215,"column":6},"end":{"line":215,"column":27}},"112":{"start":{"line":216,"column":6},"end":{"line":216,"column":13}},"113":{"start":{"line":218,"column":4},"end":{"line":226,"column":5}},"114":{"start":{"line":219,"column":6},"end":{"line":223,"column":8}},"115":{"start":{"line":224,"column":6},"end":{"line":224,"column":38}},"116":{"start":{"line":225,"column":6},"end":{"line":225,"column":54}},"117":{"start":{"line":229,"column":2},"end":{"line":229,"column":27}},"118":{"start":{"line":232,"column":0},"end":{"line":232,"column":99}}},"branchMap":{"1":{"line":21,"type":"cond-expr","locations":[{"start":{"line":21,"column":70},"end":{"line":21,"column":73}},{"start":{"line":21,"column":76},"end":{"line":21,"column":94}}]},"2":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":46},"end":{"line":21,"column":49}},{"start":{"line":21,"column":53},"end":{"line":21,"column":67}}]},"3":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":6},"end":{"line":68,"column":6}},{"start":{"line":68,"column":6},"end":{"line":68,"column":6}}]},"4":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":6},"end":{"line":83,"column":6}},{"start":{"line":83,"column":6},"end":{"line":83,"column":6}}]},"5":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":23},"end":{"line":92,"column":35}},{"start":{"line":92,"column":39},"end":{"line":92,"column":55}}]},"6":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":4},"end":{"line":100,"column":4}},{"start":{"line":100,"column":4},"end":{"line":100,"column":4}}]},"7":{"line":100,"type":"binary-expr","locations":[{"start":{"line":100,"column":8},"end":{"line":100,"column":14}},{"start":{"line":100,"column":18},"end":{"line":100,"column":99}}]},"8":{"line":107,"type":"binary-expr","locations":[{"start":{"line":107,"column":22},"end":{"line":107,"column":28}},{"start":{"line":107,"column":32},"end":{"line":107,"column":66}}]},"9":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":4},"end":{"line":108,"column":4}},{"start":{"line":108,"column":4},"end":{"line":108,"column":4}}]},"10":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":11},"end":{"line":111,"column":11}},{"start":{"line":111,"column":11},"end":{"line":111,"column":11}}]},"11":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":4},"end":{"line":115,"column":4}},{"start":{"line":115,"column":4},"end":{"line":115,"column":4}}]},"12":{"line":115,"type":"binary-expr","locations":[{"start":{"line":115,"column":8},"end":{"line":115,"column":17}},{"start":{"line":115,"column":21},"end":{"line":115,"column":52}}]},"13":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":11},"end":{"line":117,"column":11}},{"start":{"line":117,"column":11},"end":{"line":117,"column":11}}]},"14":{"line":117,"type":"binary-expr","locations":[{"start":{"line":117,"column":15},"end":{"line":117,"column":24}},{"start":{"line":117,"column":28},"end":{"line":117,"column":63}}]},"15":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":11},"end":{"line":119,"column":11}},{"start":{"line":119,"column":11},"end":{"line":119,"column":11}}]},"16":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":11},"end":{"line":121,"column":11}},{"start":{"line":121,"column":11},"end":{"line":121,"column":11}}]},"17":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":11},"end":{"line":123,"column":11}},{"start":{"line":123,"column":11},"end":{"line":123,"column":11}}]},"18":{"line":131,"type":"binary-expr","locations":[{"start":{"line":131,"column":20},"end":{"line":131,"column":32}},{"start":{"line":131,"column":36},"end":{"line":131,"column":93}}]},"19":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":4},"end":{"line":132,"column":4}},{"start":{"line":132,"column":4},"end":{"line":132,"column":4}}]},"20":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":18},"end":{"line":138,"column":30}},{"start":{"line":138,"column":34},"end":{"line":138,"column":101}}]},"21":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":4},"end":{"line":139,"column":4}},{"start":{"line":139,"column":4},"end":{"line":139,"column":4}}]},"22":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":4},"end":{"line":143,"column":4}},{"start":{"line":143,"column":4},"end":{"line":143,"column":4}}]},"23":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":8},"end":{"line":145,"column":8}},{"start":{"line":145,"column":8},"end":{"line":145,"column":8}}]},"24":{"line":161,"type":"binary-expr","locations":[{"start":{"line":161,"column":17},"end":{"line":161,"column":29}},{"start":{"line":161,"column":33},"end":{"line":161,"column":99}}]},"25":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":4},"end":{"line":162,"column":4}},{"start":{"line":162,"column":4},"end":{"line":162,"column":4}}]},"26":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":4},"end":{"line":172,"column":4}},{"start":{"line":172,"column":4},"end":{"line":172,"column":4}}]},"27":{"line":176,"type":"binary-expr","locations":[{"start":{"line":176,"column":19},"end":{"line":176,"column":31}},{"start":{"line":176,"column":35},"end":{"line":176,"column":51}}]},"28":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":4},"end":{"line":181,"column":4}},{"start":{"line":181,"column":4},"end":{"line":181,"column":4}}]},"29":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":4},"end":{"line":185,"column":4}},{"start":{"line":185,"column":4},"end":{"line":185,"column":4}}]},"30":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":6},"end":{"line":191,"column":6}},{"start":{"line":191,"column":6},"end":{"line":191,"column":6}}]},"31":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":4},"end":{"line":206,"column":4}},{"start":{"line":206,"column":4},"end":{"line":206,"column":4}}]},"32":{"line":206,"type":"binary-expr","locations":[{"start":{"line":206,"column":8},"end":{"line":206,"column":18}},{"start":{"line":206,"column":22},"end":{"line":206,"column":41}}]},"33":{"line":213,"type":"binary-expr","locations":[{"start":{"line":213,"column":17},"end":{"line":213,"column":29}},{"start":{"line":213,"column":33},"end":{"line":213,"column":99}}]},"34":{"line":214,"type":"if","locations":[{"start":{"line":214,"column":4},"end":{"line":214,"column":4}},{"start":{"line":214,"column":4},"end":{"line":214,"column":4}}]},"35":{"line":218,"type":"if","locations":[{"start":{"line":218,"column":4},"end":{"line":218,"column":4}},{"start":{"line":218,"column":4},"end":{"line":218,"column":4}}]},"36":{"line":225,"type":"binary-expr","locations":[{"start":{"line":225,"column":21},"end":{"line":225,"column":33}},{"start":{"line":225,"column":37},"end":{"line":225,"column":53}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule checkRelayQueryData"," * "," */","","'use strict';","","var _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));","","var _possibleConstructorReturn3 = _interopRequireDefault(require('babel-runtime/helpers/possibleConstructorReturn'));","","var _inherits3 = _interopRequireDefault(require('babel-runtime/helpers/inherits'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","var EDGES = require('./RelayConnectionInterface').EDGES,","    PAGE_INFO = require('./RelayConnectionInterface').PAGE_INFO;","","/**"," * @internal"," *"," * Traverses a query and data in the record store to determine whether we have"," * enough data to satisfy the query."," */","","","function checkRelayQueryData(store, query) {","","  var checker = new RelayQueryChecker(store);","","  var state = {","    dataID: undefined,","    rangeInfo: undefined,","    result: true","  };","","  checker.visit(query, state);","  return state.result;","}","","var RelayQueryChecker = function (_RelayQueryVisitor) {","  (0, _inherits3['default'])(RelayQueryChecker, _RelayQueryVisitor);","","  function RelayQueryChecker(store) {","    (0, _classCallCheck3['default'])(this, RelayQueryChecker);","","    var _this = (0, _possibleConstructorReturn3['default'])(this, _RelayQueryVisitor.call(this));","","    _this._store = store;","    return _this;","  }","","  /**","   * Skip visiting children if result is already false.","   */","","","  RelayQueryChecker.prototype.traverse = function traverse(node, state) {","    var children = node.getChildren();","    for (var ii = 0; ii < children.length; ii++) {","      if (!state.result) {","        return;","      }","      this.visit(children[ii], state);","    }","  };","","  RelayQueryChecker.prototype.visitRoot = function visitRoot(root, state) {","    var _this2 = this;","","    var storageKey = root.getStorageKey();","    require('./forEachRootCallArg')(root, function (_ref) {","      var identifyingArgKey = _ref.identifyingArgKey;","","      var dataID = _this2._store.getDataID(storageKey, identifyingArgKey);","      if (dataID == null) {","        state.result = false;","      } else {","        var nextState = {","          dataID: dataID,","          rangeInfo: undefined,","          result: true","        };","        _this2.traverse(root, nextState);","        state.result = state.result && nextState.result;","      }","    });","  };","","  RelayQueryChecker.prototype.visitFragment = function visitFragment(fragment, state) {","    var dataID = state.dataID;","    // The dataID check is for Flow; it must be non-null to have gotten here.","    if (dataID && require('./isCompatibleRelayFragmentType')(fragment, this._store.getType(dataID))) {","      this.traverse(fragment, state);","    }","  };","","  RelayQueryChecker.prototype.visitField = function visitField(field, state) {","    var dataID = state.dataID;","    var recordState = dataID && this._store.getRecordState(dataID);","    if (recordState === require('./RelayRecordState').UNKNOWN) {","      state.result = false;","      return;","    } else if (recordState === require('./RelayRecordState').NONEXISTENT) {","      return;","    }","    var rangeInfo = state.rangeInfo;","    if (rangeInfo && field.getSchemaName() === EDGES) {","      this._checkEdges(field, state);","    } else if (rangeInfo && field.getSchemaName() === PAGE_INFO) {","      this._checkPageInfo(field, state);","    } else if (!field.canHaveSubselections()) {","      this._checkScalar(field, state);","    } else if (field.isPlural()) {","      this._checkPlural(field, state);","    } else if (field.isConnection()) {","      this._checkConnection(field, state);","    } else {","      this._checkLinkedField(field, state);","    }","  };","","  RelayQueryChecker.prototype._checkScalar = function _checkScalar(field, state) {","    var fieldData = state.dataID && this._store.getField(state.dataID, field.getStorageKey());","    if (fieldData === undefined) {","      state.result = false;","    }","  };","","  RelayQueryChecker.prototype._checkPlural = function _checkPlural(field, state) {","    var dataIDs = state.dataID && this._store.getLinkedRecordIDs(state.dataID, field.getStorageKey());","    if (dataIDs === undefined) {","      state.result = false;","      return;","    }","    if (dataIDs) {","      for (var ii = 0; ii < dataIDs.length; ii++) {","        if (!state.result) {","          break;","        }","        var nextState = {","          dataID: dataIDs[ii],","          rangeInfo: undefined,","          result: true","        };","        this.traverse(field, nextState);","        state.result = nextState.result;","      }","    }","  };","","  RelayQueryChecker.prototype._checkConnection = function _checkConnection(field, state) {","    var calls = field.getCallsWithValues();","    var dataID = state.dataID && this._store.getLinkedRecordID(state.dataID, field.getStorageKey());","    if (dataID === undefined) {","      state.result = false;","      return;","    }","    var nextState = {","      dataID: dataID,","      rangeInfo: null, // Flow rejects `undefined` here","      result: true","    };","    var metadata = this._store.getRangeMetadata(dataID, calls);","    if (metadata) {","      nextState.rangeInfo = metadata;","    }","    this.traverse(field, nextState);","    state.result = state.result && nextState.result;","  };","","  RelayQueryChecker.prototype._checkEdges = function _checkEdges(field, state) {","    var rangeInfo = state.rangeInfo;","    if (!rangeInfo) {","      state.result = false;","      return;","    }","    if (rangeInfo.diffCalls.length) {","      state.result = false;","      return;","    }","    var edges = rangeInfo.filteredEdges;","    for (var ii = 0; ii < edges.length; ii++) {","      if (!state.result) {","        break;","      }","      var nextState = {","        dataID: edges[ii].edgeID,","        rangeInfo: undefined,","        result: true","      };","      this.traverse(field, nextState);","      state.result = nextState.result;","    }","  };","","  RelayQueryChecker.prototype._checkPageInfo = function _checkPageInfo(field, state) {","    var rangeInfo = state.rangeInfo;","    if (!rangeInfo || !rangeInfo.pageInfo) {","      state.result = false;","      return;","    }","  };","","  RelayQueryChecker.prototype._checkLinkedField = function _checkLinkedField(field, state) {","    var dataID = state.dataID && this._store.getLinkedRecordID(state.dataID, field.getStorageKey());","    if (dataID === undefined) {","      state.result = false;","      return;","    }","    if (dataID) {","      var nextState = {","        dataID: dataID,","        rangeInfo: undefined,","        result: true","      };","      this.traverse(field, nextState);","      state.result = state.result && nextState.result;","    }","  };","","  return RelayQueryChecker;","}(require('./RelayQueryVisitor'));","","module.exports = require('./RelayProfiler').instrument('checkRelayQueryData', checkRelayQueryData);"],"l":{"15":1,"17":1,"19":1,"21":3,"23":1,"34":1,"36":0,"38":0,"44":0,"45":0,"48":1,"49":1,"51":1,"52":0,"54":0,"56":0,"57":0,"65":1,"66":0,"67":0,"68":0,"69":0,"71":0,"75":1,"76":0,"78":0,"79":0,"80":0,"82":0,"83":0,"84":0,"86":0,"91":0,"92":0,"97":1,"98":0,"100":0,"101":0,"105":1,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"126":0,"130":1,"131":0,"132":0,"133":0,"137":1,"138":0,"139":0,"140":0,"141":0,"143":0,"144":0,"145":0,"146":0,"148":0,"153":0,"154":0,"159":1,"160":0,"161":0,"162":0,"163":0,"164":0,"166":0,"171":0,"172":0,"173":0,"175":0,"176":0,"179":1,"180":0,"181":0,"182":0,"183":0,"185":0,"186":0,"187":0,"189":0,"190":0,"191":0,"192":0,"194":0,"199":0,"200":0,"204":1,"205":0,"206":0,"207":0,"208":0,"212":1,"213":0,"214":0,"215":0,"216":0,"218":0,"219":0,"224":0,"225":0,"229":1,"232":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/ConcreteQuery.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/ConcreteQuery.js","s":{},"b":{},"f":{},"fnMap":{},"statementMap":{},"branchMap":{},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule ConcreteQuery"," * "," */","","'use strict';"],"l":{}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/containsRelayQueryRootCall.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/containsRelayQueryRootCall.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":1,"29":0,"30":0,"31":0,"32":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"containsRelayQueryRootCall","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":56}}},"2":{"name":"(anonymous_2)","line":39,"loc":{"start":{"line":39,"column":15},"end":{"line":39,"column":27}}},"3":{"name":"(anonymous_3)","line":43,"loc":{"start":{"line":43,"column":29},"end":{"line":43,"column":50}}},"4":{"name":"(anonymous_4)","line":57,"loc":{"start":{"line":57,"column":29},"end":{"line":57,"column":50}}},"5":{"name":"getCanonicalName","line":76,"loc":{"start":{"line":76,"column":0},"end":{"line":76,"column":32}}}},"statementMap":{"1":{"start":{"line":21,"column":0},"end":{"line":64,"column":1}},"2":{"start":{"line":22,"column":2},"end":{"line":24,"column":3}},"3":{"start":{"line":23,"column":4},"end":{"line":23,"column":16}},"4":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"5":{"start":{"line":26,"column":4},"end":{"line":26,"column":17}},"6":{"start":{"line":28,"column":2},"end":{"line":28,"column":56}},"7":{"start":{"line":29,"column":2},"end":{"line":29,"column":56}},"8":{"start":{"line":30,"column":2},"end":{"line":30,"column":73}},"9":{"start":{"line":31,"column":2},"end":{"line":31,"column":73}},"10":{"start":{"line":32,"column":2},"end":{"line":34,"column":3}},"11":{"start":{"line":33,"column":4},"end":{"line":33,"column":16}},"12":{"start":{"line":35,"column":2},"end":{"line":37,"column":3}},"13":{"start":{"line":36,"column":4},"end":{"line":36,"column":17}},"14":{"start":{"line":38,"column":2},"end":{"line":63,"column":3}},"15":{"start":{"line":39,"column":4},"end":{"line":52,"column":8}},"16":{"start":{"line":40,"column":6},"end":{"line":40,"column":32}},"17":{"start":{"line":41,"column":6},"end":{"line":51,"column":7}},"18":{"start":{"line":42,"column":8},"end":{"line":46,"column":10}},"19":{"start":{"line":44,"column":12},"end":{"line":44,"column":53}},"20":{"start":{"line":48,"column":8},"end":{"line":50,"column":10}},"21":{"start":{"line":54,"column":4},"end":{"line":54,"column":48}},"22":{"start":{"line":54,"column":34},"end":{"line":54,"column":48}},"23":{"start":{"line":56,"column":4},"end":{"line":62,"column":5}},"24":{"start":{"line":57,"column":6},"end":{"line":59,"column":9}},"25":{"start":{"line":58,"column":8},"end":{"line":58,"column":39}},"26":{"start":{"line":61,"column":6},"end":{"line":61,"column":37}},"27":{"start":{"line":66,"column":0},"end":{"line":69,"column":2}},"28":{"start":{"line":76,"column":0},"end":{"line":81,"column":1}},"29":{"start":{"line":77,"column":2},"end":{"line":79,"column":3}},"30":{"start":{"line":78,"column":4},"end":{"line":78,"column":36}},"31":{"start":{"line":80,"column":2},"end":{"line":80,"column":14}},"32":{"start":{"line":83,"column":0},"end":{"line":83,"column":44}}},"branchMap":{"1":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":2},"end":{"line":22,"column":2}},{"start":{"line":22,"column":2},"end":{"line":22,"column":2}}]},"2":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"3":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":18},"end":{"line":30,"column":36}},{"start":{"line":30,"column":40},"end":{"line":30,"column":64}},{"start":{"line":30,"column":68},"end":{"line":30,"column":72}}]},"4":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":18},"end":{"line":31,"column":36}},{"start":{"line":31,"column":40},"end":{"line":31,"column":64}},{"start":{"line":31,"column":68},"end":{"line":31,"column":72}}]},"5":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":32,"column":2}},{"start":{"line":32,"column":2},"end":{"line":32,"column":2}}]},"6":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":6},"end":{"line":32,"column":23}},{"start":{"line":32,"column":27},"end":{"line":32,"column":44}}]},"7":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":2},"end":{"line":35,"column":2}},{"start":{"line":35,"column":2},"end":{"line":35,"column":2}}]},"8":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":6},"end":{"line":35,"column":23}},{"start":{"line":35,"column":27},"end":{"line":35,"column":44}}]},"9":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":2},"end":{"line":38,"column":2}},{"start":{"line":38,"column":2},"end":{"line":38,"column":2}}]},"10":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":6},"end":{"line":41,"column":6}},{"start":{"line":41,"column":6},"end":{"line":41,"column":6}}]},"11":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":4},"end":{"line":54,"column":4}},{"start":{"line":54,"column":4},"end":{"line":54,"column":4}}]},"12":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":4},"end":{"line":56,"column":4}},{"start":{"line":56,"column":4},"end":{"line":56,"column":4}}]},"13":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":2},"end":{"line":77,"column":2}},{"start":{"line":77,"column":2},"end":{"line":77,"column":2}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule containsRelayQueryRootCall"," * "," */","","'use strict';","","/**"," * @internal"," *"," * Compares two query root nodes and returns true if the nodes fetched by"," * `thisRoot` would be a superset of the nodes fetched by `thatRoot`."," */","function containsRelayQueryRootCall(thisRoot, thatRoot) {","  if (thisRoot === thatRoot) {","    return true;","  }","  if (getCanonicalName(thisRoot.getFieldName()) !== getCanonicalName(thatRoot.getFieldName())) {","    return false;","  }","  var thisIdentifyingArg = thisRoot.getIdentifyingArg();","  var thatIdentifyingArg = thatRoot.getIdentifyingArg();","  var thisValue = thisIdentifyingArg && thisIdentifyingArg.value || null;","  var thatValue = thatIdentifyingArg && thatIdentifyingArg.value || null;","  if (thisValue == null && thatValue == null) {","    return true;","  }","  if (thisValue == null || thatValue == null) {","    return false;","  }","  if (Array.isArray(thisValue)) {","    var _ret = function () {","      var thisArray = thisValue;","      if (Array.isArray(thatValue)) {","        return {","          v: thatValue.every(function (eachValue) {","            return thisArray.indexOf(eachValue) >= 0;","          })","        };","      } else {","        return {","          v: thisValue.indexOf(thatValue) >= 0","        };","      }","    }();","","    if (typeof _ret === \"object\") return _ret.v;","  } else {","    if (Array.isArray(thatValue)) {","      return thatValue.every(function (eachValue) {","        return eachValue === thisValue;","      });","    } else {","      return thatValue === thisValue;","    }","  }","}","","var canonicalRootCalls = {","  'nodes': 'node',","  'usernames': 'username'","};","","/**"," * @private"," *"," * This is required to support legacy versions of GraphQL."," */","function getCanonicalName(name) {","  if (canonicalRootCalls.hasOwnProperty(name)) {","    return canonicalRootCalls[name];","  }","  return name;","}","","module.exports = containsRelayQueryRootCall;"],"l":{"21":1,"22":0,"23":0,"25":0,"26":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"35":0,"36":0,"38":0,"39":0,"40":0,"41":0,"42":0,"44":0,"48":0,"54":0,"56":0,"57":0,"58":0,"61":0,"66":1,"76":1,"77":0,"78":0,"80":0,"83":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/createRelayQuery.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/createRelayQuery.js","s":{"1":1,"2":0,"3":0,"4":1},"b":{"1":[0,0,0]},"f":{"1":0},"fnMap":{"1":{"name":"createRelayQuery","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":43}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":18,"column":1}},"2":{"start":{"line":16,"column":2},"end":{"line":16,"column":167}},"3":{"start":{"line":17,"column":2},"end":{"line":17,"column":116}},"4":{"start":{"line":20,"column":0},"end":{"line":20,"column":34}}},"branchMap":{"1":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":32},"end":{"line":16,"column":61}},{"start":{"line":16,"column":65},"end":{"line":16,"column":82}},{"start":{"line":16,"column":86},"end":{"line":16,"column":111}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule createRelayQuery"," * "," */","","'use strict';","","function createRelayQuery(node, variables) {","  require('fbjs/lib/invariant')(typeof variables === 'object' && variables != null && !Array.isArray(variables), 'Relay.Query: Expected `variables` to be an object.');","  return require('./RelayQuery').Root.create(node, require('./RelayMetaRoute').get('$createRelayQuery'), variables);","}","","module.exports = createRelayQuery;"],"l":{"15":1,"16":0,"17":0,"20":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/dedent.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/dedent.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"dedent","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":24}}},"2":{"name":"(anonymous_2)","line":37,"loc":{"start":{"line":37,"column":37},"end":{"line":37,"column":58}}},"3":{"name":"(anonymous_3)","line":45,"loc":{"start":{"line":45,"column":19},"end":{"line":45,"column":35}}}},"statementMap":{"1":{"start":{"line":23,"column":0},"end":{"line":51,"column":1}},"2":{"start":{"line":24,"column":2},"end":{"line":24,"column":87}},"3":{"start":{"line":26,"column":2},"end":{"line":26,"column":26}},"4":{"start":{"line":27,"column":2},"end":{"line":27,"column":33}},"5":{"start":{"line":30,"column":2},"end":{"line":32,"column":3}},"6":{"start":{"line":31,"column":4},"end":{"line":31,"column":18}},"7":{"start":{"line":33,"column":2},"end":{"line":35,"column":3}},"8":{"start":{"line":34,"column":4},"end":{"line":34,"column":16}},"9":{"start":{"line":37,"column":2},"end":{"line":43,"column":15}},"10":{"start":{"line":38,"column":4},"end":{"line":40,"column":5}},"11":{"start":{"line":39,"column":6},"end":{"line":39,"column":17}},"12":{"start":{"line":41,"column":4},"end":{"line":41,"column":49}},"13":{"start":{"line":42,"column":4},"end":{"line":42,"column":78}},"14":{"start":{"line":45,"column":2},"end":{"line":50,"column":16}},"15":{"start":{"line":46,"column":4},"end":{"line":48,"column":5}},"16":{"start":{"line":47,"column":6},"end":{"line":47,"column":16}},"17":{"start":{"line":49,"column":4},"end":{"line":49,"column":49}},"18":{"start":{"line":53,"column":0},"end":{"line":53,"column":24}}},"branchMap":{"1":{"line":24,"type":"cond-expr","locations":[{"start":{"line":24,"column":69},"end":{"line":24,"column":81}},{"start":{"line":24,"column":84},"end":{"line":24,"column":86}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":16},"end":{"line":24,"column":36}},{"start":{"line":24,"column":40},"end":{"line":24,"column":66}}]},"3":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":30,"column":2}},{"start":{"line":30,"column":2},"end":{"line":30,"column":2}}]},"4":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":6},"end":{"line":30,"column":18}},{"start":{"line":30,"column":22},"end":{"line":30,"column":47}}]},"5":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":2},"end":{"line":33,"column":2}},{"start":{"line":33,"column":2},"end":{"line":33,"column":2}}]},"6":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":6},"end":{"line":33,"column":18}},{"start":{"line":33,"column":22},"end":{"line":33,"column":62}}]},"7":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":4},"end":{"line":38,"column":4}},{"start":{"line":38,"column":4},"end":{"line":38,"column":4}}]},"8":{"line":42,"type":"cond-expr","locations":[{"start":{"line":42,"column":45},"end":{"line":42,"column":72}},{"start":{"line":42,"column":75},"end":{"line":42,"column":76}}]},"9":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":46,"column":4}},{"start":{"line":46,"column":4},"end":{"line":46,"column":4}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule dedent"," * "," */","","'use strict';","","/**"," * Strips leading indentation from a multi-line string, enabling you to use"," * template literals in tests while maintaining nice nesting."," *"," * An optional padding string can be supplied to force a fixed indent to be"," * applied back after stripping."," */","","function dedent(string) {","  var padding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';","","  var blankLine = /^\\s*$/;","  var lines = string.split('\\n');","","  // Remove any entirely blank leading or trailing lines.","  if (lines.length && lines[0].match(blankLine)) {","    lines.shift();","  }","  if (lines.length && lines[lines.length - 1].match(blankLine)) {","    lines.pop();","  }","","  var minLeadingSpace = lines.reduce(function (acc, line) {","    if (line.match(blankLine)) {","      return acc;","    }","    var leadingWhitespace = line.match(/^(\\s*)/);","    return Math.min(acc, leadingWhitespace ? leadingWhitespace[1].length : 0);","  }, Infinity);","","  return lines.map(function (line) {","    if (line.match(blankLine)) {","      return '';","    }","    return padding + line.slice(minLeadingSpace);","  }).join('\\n');","}","","module.exports = dedent;"],"l":{"23":1,"24":0,"26":0,"27":0,"30":0,"31":0,"33":0,"34":0,"37":0,"38":0,"39":0,"41":0,"42":0,"45":0,"46":0,"47":0,"49":0,"53":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/diffRelayQuery.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/diffRelayQuery.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":1,"41":0,"42":0,"43":0,"44":0,"45":1,"46":0,"47":1,"48":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":1,"57":0,"58":1,"59":0,"60":1,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":1,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":1,"134":0,"135":0,"136":0,"137":1,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":1,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":1,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":1,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":1,"233":1,"234":0,"235":1,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":1,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":1},"b":{"1":[1,0],"2":[1,1],"3":[0,0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0]},"f":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":37}}},"2":{"name":"diffRelayQuery","line":58,"loc":{"start":{"line":58,"column":0},"end":{"line":58,"column":51}}},"3":{"name":"(anonymous_3)","line":78,"loc":{"start":{"line":78,"column":40},"end":{"line":78,"column":56}}},"4":{"name":"(anonymous_4)","line":130,"loc":{"start":{"line":130,"column":28},"end":{"line":130,"column":40}}},"5":{"name":"RelayDiffQueryBuilder","line":131,"loc":{"start":{"line":131,"column":2},"end":{"line":131,"column":54}}},"6":{"name":"splitQuery","line":139,"loc":{"start":{"line":139,"column":47},"end":{"line":139,"column":73}}},"7":{"name":"getSplitQueries","line":143,"loc":{"start":{"line":143,"column":52},"end":{"line":143,"column":79}}},"8":{"name":"visit","line":147,"loc":{"start":{"line":147,"column":42},"end":{"line":147,"column":76}}},"9":{"name":"visitRoot","line":157,"loc":{"start":{"line":157,"column":46},"end":{"line":157,"column":84}}},"10":{"name":"visitFragment","line":161,"loc":{"start":{"line":161,"column":50},"end":{"line":161,"column":92}}},"11":{"name":"visitField","line":171,"loc":{"start":{"line":171,"column":47},"end":{"line":171,"column":86}}},"12":{"name":"traverse","line":222,"loc":{"start":{"line":222,"column":45},"end":{"line":222,"column":82}}},"13":{"name":"(anonymous_13)","line":232,"loc":{"start":{"line":232,"column":31},"end":{"line":232,"column":48}}},"14":{"name":"diffScalar","line":329,"loc":{"start":{"line":329,"column":47},"end":{"line":329,"column":82}}},"15":{"name":"diffLink","line":345,"loc":{"start":{"line":345,"column":45},"end":{"line":345,"column":84}}},"16":{"name":"diffPluralLink","line":369,"loc":{"start":{"line":369,"column":51},"end":{"line":369,"column":96}}},"17":{"name":"(anonymous_17)","line":386,"loc":{"start":{"line":386,"column":17},"end":{"line":386,"column":29}}},"18":{"name":"(anonymous_18)","line":392,"loc":{"start":{"line":392,"column":26},"end":{"line":392,"column":44}}},"19":{"name":"(anonymous_19)","line":417,"loc":{"start":{"line":417,"column":18},"end":{"line":417,"column":30}}},"20":{"name":"(anonymous_20)","line":425,"loc":{"start":{"line":425,"column":23},"end":{"line":425,"column":41}}},"21":{"name":"diffConnection","line":460,"loc":{"start":{"line":460,"column":51},"end":{"line":460,"column":96}}},"22":{"name":"(anonymous_22)","line":493,"loc":{"start":{"line":493,"column":26},"end":{"line":493,"column":42}}},"23":{"name":"diffConnectionEdge","line":551,"loc":{"start":{"line":551,"column":55},"end":{"line":551,"column":136}}},"24":{"name":"makeScope","line":617,"loc":{"start":{"line":617,"column":0},"end":{"line":617,"column":27}}},"25":{"name":"splitNodeAndEdgesFields","line":668,"loc":{"start":{"line":668,"column":0},"end":{"line":668,"column":49}}},"26":{"name":"buildRoot","line":719,"loc":{"start":{"line":719,"column":0},"end":{"line":719,"column":58}}},"27":{"name":"(anonymous_27)","line":722,"loc":{"start":{"line":722,"column":16},"end":{"line":722,"column":32}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":97}},"3":{"start":{"line":17,"column":39},"end":{"line":17,"column":95}},"4":{"start":{"line":19,"column":0},"end":{"line":22,"column":56}},"5":{"start":{"line":24,"column":0},"end":{"line":26,"column":64}},"6":{"start":{"line":28,"column":0},"end":{"line":34,"column":3}},"7":{"start":{"line":35,"column":0},"end":{"line":41,"column":3}},"8":{"start":{"line":42,"column":0},"end":{"line":49,"column":3}},"9":{"start":{"line":58,"column":0},"end":{"line":108,"column":1}},"10":{"start":{"line":59,"column":2},"end":{"line":59,"column":54}},"11":{"start":{"line":60,"column":2},"end":{"line":60,"column":19}},"12":{"start":{"line":62,"column":2},"end":{"line":62,"column":63}},"13":{"start":{"line":63,"column":2},"end":{"line":63,"column":52}},"14":{"start":{"line":64,"column":2},"end":{"line":64,"column":87}},"15":{"start":{"line":65,"column":2},"end":{"line":65,"column":98}},"16":{"start":{"line":66,"column":2},"end":{"line":66,"column":24}},"17":{"start":{"line":67,"column":2},"end":{"line":75,"column":3}},"18":{"start":{"line":68,"column":4},"end":{"line":74,"column":6}},"19":{"start":{"line":76,"column":2},"end":{"line":76,"column":38}},"20":{"start":{"line":77,"column":2},"end":{"line":77,"column":40}},"21":{"start":{"line":78,"column":2},"end":{"line":106,"column":5}},"22":{"start":{"line":79,"column":4},"end":{"line":80,"column":51}},"23":{"start":{"line":82,"column":4},"end":{"line":82,"column":26}},"24":{"start":{"line":83,"column":4},"end":{"line":89,"column":5}},"25":{"start":{"line":84,"column":6},"end":{"line":84,"column":186}},"26":{"start":{"line":85,"column":6},"end":{"line":85,"column":148}},"27":{"start":{"line":88,"column":6},"end":{"line":88,"column":22}},"28":{"start":{"line":92,"column":4},"end":{"line":92,"column":64}},"29":{"start":{"line":93,"column":4},"end":{"line":96,"column":5}},"30":{"start":{"line":94,"column":6},"end":{"line":94,"column":29}},"31":{"start":{"line":95,"column":6},"end":{"line":95,"column":13}},"32":{"start":{"line":99,"column":4},"end":{"line":99,"column":34}},"33":{"start":{"line":100,"column":4},"end":{"line":100,"column":58}},"34":{"start":{"line":101,"column":4},"end":{"line":101,"column":59}},"35":{"start":{"line":102,"column":4},"end":{"line":105,"column":5}},"36":{"start":{"line":103,"column":6},"end":{"line":103,"column":143}},"37":{"start":{"line":104,"column":6},"end":{"line":104,"column":29}},"38":{"start":{"line":107,"column":2},"end":{"line":107,"column":51}},"39":{"start":{"line":130,"column":0},"end":{"line":610,"column":4}},"40":{"start":{"line":131,"column":2},"end":{"line":137,"column":3}},"41":{"start":{"line":132,"column":4},"end":{"line":132,"column":66}},"42":{"start":{"line":134,"column":4},"end":{"line":134,"column":24}},"43":{"start":{"line":135,"column":4},"end":{"line":135,"column":28}},"44":{"start":{"line":136,"column":4},"end":{"line":136,"column":38}},"45":{"start":{"line":139,"column":2},"end":{"line":141,"column":4}},"46":{"start":{"line":140,"column":4},"end":{"line":140,"column":34}},"47":{"start":{"line":143,"column":2},"end":{"line":145,"column":4}},"48":{"start":{"line":144,"column":4},"end":{"line":144,"column":30}},"49":{"start":{"line":147,"column":2},"end":{"line":155,"column":4}},"50":{"start":{"line":148,"column":4},"end":{"line":154,"column":5}},"51":{"start":{"line":149,"column":6},"end":{"line":149,"column":48}},"52":{"start":{"line":150,"column":11},"end":{"line":154,"column":5}},"53":{"start":{"line":151,"column":6},"end":{"line":151,"column":51}},"54":{"start":{"line":152,"column":11},"end":{"line":154,"column":5}},"55":{"start":{"line":153,"column":6},"end":{"line":153,"column":47}},"56":{"start":{"line":157,"column":2},"end":{"line":159,"column":4}},"57":{"start":{"line":158,"column":4},"end":{"line":158,"column":44}},"58":{"start":{"line":161,"column":2},"end":{"line":163,"column":4}},"59":{"start":{"line":162,"column":4},"end":{"line":162,"column":44}},"60":{"start":{"line":171,"column":2},"end":{"line":215,"column":4}},"61":{"start":{"line":172,"column":4},"end":{"line":175,"column":36}},"62":{"start":{"line":178,"column":4},"end":{"line":198,"column":5}},"63":{"start":{"line":179,"column":6},"end":{"line":197,"column":7}},"64":{"start":{"line":181,"column":8},"end":{"line":186,"column":9}},"65":{"start":{"line":182,"column":10},"end":{"line":183,"column":86}},"66":{"start":{"line":185,"column":10},"end":{"line":185,"column":22}},"67":{"start":{"line":191,"column":8},"end":{"line":196,"column":9}},"68":{"start":{"line":192,"column":10},"end":{"line":195,"column":19}},"69":{"start":{"line":201,"column":4},"end":{"line":214,"column":5}},"70":{"start":{"line":202,"column":6},"end":{"line":202,"column":43}},"71":{"start":{"line":203,"column":11},"end":{"line":214,"column":5}},"72":{"start":{"line":204,"column":6},"end":{"line":207,"column":8}},"73":{"start":{"line":208,"column":11},"end":{"line":214,"column":5}},"74":{"start":{"line":209,"column":6},"end":{"line":209,"column":53}},"75":{"start":{"line":210,"column":11},"end":{"line":214,"column":5}},"76":{"start":{"line":211,"column":6},"end":{"line":211,"column":53}},"77":{"start":{"line":213,"column":6},"end":{"line":213,"column":47}},"78":{"start":{"line":222,"column":2},"end":{"line":322,"column":4}},"79":{"start":{"line":223,"column":4},"end":{"line":223,"column":21}},"80":{"start":{"line":225,"column":4},"end":{"line":225,"column":26}},"81":{"start":{"line":226,"column":4},"end":{"line":226,"column":30}},"82":{"start":{"line":227,"column":4},"end":{"line":227,"column":29}},"83":{"start":{"line":228,"column":4},"end":{"line":228,"column":33}},"84":{"start":{"line":229,"column":4},"end":{"line":229,"column":29}},"85":{"start":{"line":230,"column":4},"end":{"line":230,"column":32}},"86":{"start":{"line":232,"column":4},"end":{"line":302,"column":7}},"87":{"start":{"line":233,"column":6},"end":{"line":301,"column":7}},"88":{"start":{"line":234,"column":8},"end":{"line":234,"column":62}},"89":{"start":{"line":235,"column":8},"end":{"line":235,"column":64}},"90":{"start":{"line":236,"column":8},"end":{"line":236,"column":93}},"91":{"start":{"line":239,"column":8},"end":{"line":255,"column":9}},"92":{"start":{"line":240,"column":10},"end":{"line":240,"column":44}},"93":{"start":{"line":241,"column":10},"end":{"line":241,"column":39}},"94":{"start":{"line":242,"column":10},"end":{"line":242,"column":66}},"95":{"start":{"line":243,"column":15},"end":{"line":255,"column":9}},"96":{"start":{"line":253,"column":10},"end":{"line":253,"column":44}},"97":{"start":{"line":254,"column":10},"end":{"line":254,"column":35}},"98":{"start":{"line":256,"column":8},"end":{"line":266,"column":9}},"99":{"start":{"line":258,"column":10},"end":{"line":265,"column":11}},"100":{"start":{"line":259,"column":12},"end":{"line":259,"column":52}},"101":{"start":{"line":260,"column":12},"end":{"line":260,"column":47}},"102":{"start":{"line":261,"column":12},"end":{"line":261,"column":77}},"103":{"start":{"line":262,"column":17},"end":{"line":265,"column":11}},"104":{"start":{"line":263,"column":12},"end":{"line":263,"column":52}},"105":{"start":{"line":264,"column":12},"end":{"line":264,"column":40}},"106":{"start":{"line":267,"column":13},"end":{"line":301,"column":7}},"107":{"start":{"line":268,"column":8},"end":{"line":268,"column":117}},"108":{"start":{"line":269,"column":8},"end":{"line":300,"column":9}},"109":{"start":{"line":270,"column":10},"end":{"line":278,"column":11}},"110":{"start":{"line":271,"column":12},"end":{"line":271,"column":48}},"111":{"start":{"line":272,"column":12},"end":{"line":277,"column":13}},"112":{"start":{"line":273,"column":14},"end":{"line":276,"column":16}},"113":{"start":{"line":280,"column":10},"end":{"line":280,"column":63}},"114":{"start":{"line":281,"column":10},"end":{"line":281,"column":69}},"115":{"start":{"line":282,"column":10},"end":{"line":282,"column":75}},"116":{"start":{"line":284,"column":10},"end":{"line":288,"column":11}},"117":{"start":{"line":285,"column":12},"end":{"line":285,"column":46}},"118":{"start":{"line":286,"column":12},"end":{"line":286,"column":42}},"119":{"start":{"line":287,"column":12},"end":{"line":287,"column":32}},"120":{"start":{"line":289,"column":10},"end":{"line":293,"column":11}},"121":{"start":{"line":290,"column":12},"end":{"line":290,"column":52}},"122":{"start":{"line":291,"column":12},"end":{"line":291,"column":48}},"123":{"start":{"line":292,"column":12},"end":{"line":292,"column":35}},"124":{"start":{"line":298,"column":10},"end":{"line":298,"column":44}},"125":{"start":{"line":299,"column":10},"end":{"line":299,"column":35}},"126":{"start":{"line":305,"column":4},"end":{"line":307,"column":5}},"127":{"start":{"line":306,"column":6},"end":{"line":306,"column":42}},"128":{"start":{"line":308,"column":4},"end":{"line":310,"column":5}},"129":{"start":{"line":309,"column":6},"end":{"line":309,"column":48}},"130":{"start":{"line":314,"column":4},"end":{"line":316,"column":5}},"131":{"start":{"line":315,"column":6},"end":{"line":315,"column":67}},"132":{"start":{"line":318,"column":4},"end":{"line":321,"column":6}},"133":{"start":{"line":329,"column":2},"end":{"line":337,"column":4}},"134":{"start":{"line":330,"column":4},"end":{"line":335,"column":5}},"135":{"start":{"line":331,"column":6},"end":{"line":334,"column":8}},"136":{"start":{"line":336,"column":4},"end":{"line":336,"column":16}},"137":{"start":{"line":345,"column":2},"end":{"line":361,"column":4}},"138":{"start":{"line":346,"column":4},"end":{"line":346,"column":82}},"139":{"start":{"line":347,"column":4},"end":{"line":352,"column":5}},"140":{"start":{"line":348,"column":6},"end":{"line":351,"column":8}},"141":{"start":{"line":353,"column":4},"end":{"line":358,"column":5}},"142":{"start":{"line":354,"column":6},"end":{"line":357,"column":8}},"143":{"start":{"line":360,"column":4},"end":{"line":360,"column":117}},"144":{"start":{"line":369,"column":2},"end":{"line":450,"column":4}},"145":{"start":{"line":370,"column":4},"end":{"line":370,"column":22}},"146":{"start":{"line":372,"column":4},"end":{"line":372,"column":82}},"147":{"start":{"line":373,"column":4},"end":{"line":448,"column":5}},"148":{"start":{"line":375,"column":6},"end":{"line":378,"column":8}},"149":{"start":{"line":379,"column":11},"end":{"line":448,"column":5}},"150":{"start":{"line":381,"column":6},"end":{"line":384,"column":8}},"151":{"start":{"line":385,"column":11},"end":{"line":448,"column":5}},"152":{"start":{"line":386,"column":6},"end":{"line":413,"column":10}},"153":{"start":{"line":391,"column":8},"end":{"line":391,"column":36}},"154":{"start":{"line":392,"column":8},"end":{"line":402,"column":11}},"155":{"start":{"line":393,"column":10},"end":{"line":393,"column":126}},"156":{"start":{"line":394,"column":10},"end":{"line":401,"column":11}},"157":{"start":{"line":396,"column":12},"end":{"line":396,"column":97}},"158":{"start":{"line":398,"column":12},"end":{"line":400,"column":13}},"159":{"start":{"line":399,"column":14},"end":{"line":399,"column":165}},"160":{"start":{"line":405,"column":8},"end":{"line":412,"column":9}},"161":{"start":{"line":406,"column":10},"end":{"line":411,"column":12}},"162":{"start":{"line":415,"column":6},"end":{"line":415,"column":50}},"163":{"start":{"line":415,"column":36},"end":{"line":415,"column":50}},"164":{"start":{"line":417,"column":6},"end":{"line":445,"column":10}},"165":{"start":{"line":422,"column":8},"end":{"line":422,"column":49}},"166":{"start":{"line":423,"column":8},"end":{"line":423,"column":49}},"167":{"start":{"line":425,"column":8},"end":{"line":435,"column":11}},"168":{"start":{"line":426,"column":10},"end":{"line":426,"column":126}},"169":{"start":{"line":427,"column":10},"end":{"line":429,"column":11}},"170":{"start":{"line":428,"column":12},"end":{"line":428,"column":48}},"171":{"start":{"line":430,"column":10},"end":{"line":432,"column":11}},"172":{"start":{"line":431,"column":12},"end":{"line":431,"column":48}},"173":{"start":{"line":434,"column":10},"end":{"line":434,"column":78}},"174":{"start":{"line":437,"column":8},"end":{"line":444,"column":9}},"175":{"start":{"line":438,"column":10},"end":{"line":443,"column":12}},"176":{"start":{"line":447,"column":6},"end":{"line":447,"column":52}},"177":{"start":{"line":447,"column":37},"end":{"line":447,"column":52}},"178":{"start":{"line":449,"column":4},"end":{"line":449,"column":16}},"179":{"start":{"line":460,"column":2},"end":{"line":541,"column":4}},"180":{"start":{"line":461,"column":4},"end":{"line":461,"column":22}},"181":{"start":{"line":463,"column":4},"end":{"line":463,"column":28}},"182":{"start":{"line":464,"column":4},"end":{"line":464,"column":78}},"183":{"start":{"line":465,"column":4},"end":{"line":465,"column":85}},"184":{"start":{"line":467,"column":4},"end":{"line":472,"column":5}},"185":{"start":{"line":468,"column":6},"end":{"line":471,"column":8}},"186":{"start":{"line":475,"column":4},"end":{"line":480,"column":5}},"187":{"start":{"line":476,"column":6},"end":{"line":479,"column":15}},"188":{"start":{"line":484,"column":4},"end":{"line":486,"column":5}},"189":{"start":{"line":485,"column":6},"end":{"line":485,"column":123}},"190":{"start":{"line":487,"column":4},"end":{"line":488,"column":48}},"191":{"start":{"line":492,"column":4},"end":{"line":492,"column":32}},"192":{"start":{"line":493,"column":4},"end":{"line":506,"column":7}},"193":{"start":{"line":494,"column":6},"end":{"line":499,"column":8}},"194":{"start":{"line":500,"column":6},"end":{"line":500,"column":116}},"195":{"start":{"line":503,"column":6},"end":{"line":505,"column":7}},"196":{"start":{"line":504,"column":8},"end":{"line":504,"column":70}},"197":{"start":{"line":509,"column":4},"end":{"line":514,"column":6}},"198":{"start":{"line":516,"column":4},"end":{"line":516,"column":113}},"199":{"start":{"line":517,"column":4},"end":{"line":517,"column":59}},"200":{"start":{"line":518,"column":4},"end":{"line":518,"column":65}},"201":{"start":{"line":519,"column":4},"end":{"line":521,"column":5}},"202":{"start":{"line":520,"column":6},"end":{"line":520,"column":81}},"203":{"start":{"line":533,"column":4},"end":{"line":535,"column":5}},"204":{"start":{"line":534,"column":6},"end":{"line":534,"column":26}},"205":{"start":{"line":537,"column":4},"end":{"line":540,"column":6}},"206":{"start":{"line":551,"column":2},"end":{"line":607,"column":4}},"207":{"start":{"line":553,"column":4},"end":{"line":553,"column":32}},"208":{"start":{"line":554,"column":4},"end":{"line":554,"column":127}},"209":{"start":{"line":555,"column":4},"end":{"line":555,"column":59}},"210":{"start":{"line":556,"column":4},"end":{"line":556,"column":65}},"211":{"start":{"line":557,"column":4},"end":{"line":557,"column":61}},"212":{"start":{"line":559,"column":4},"end":{"line":595,"column":5}},"213":{"start":{"line":560,"column":6},"end":{"line":594,"column":7}},"214":{"start":{"line":561,"column":8},"end":{"line":561,"column":471}},"215":{"start":{"line":563,"column":8},"end":{"line":565,"column":55}},"216":{"start":{"line":570,"column":8},"end":{"line":575,"column":9}},"217":{"start":{"line":571,"column":10},"end":{"line":571,"column":33}},"218":{"start":{"line":572,"column":10},"end":{"line":572,"column":65}},"219":{"start":{"line":573,"column":10},"end":{"line":573,"column":164}},"220":{"start":{"line":574,"column":10},"end":{"line":574,"column":162}},"221":{"start":{"line":579,"column":8},"end":{"line":593,"column":9}},"222":{"start":{"line":580,"column":10},"end":{"line":592,"column":11}},"223":{"start":{"line":581,"column":12},"end":{"line":581,"column":99}},"224":{"start":{"line":582,"column":12},"end":{"line":582,"column":150}},"225":{"start":{"line":583,"column":12},"end":{"line":589,"column":13}},"226":{"start":{"line":584,"column":14},"end":{"line":584,"column":37}},"227":{"start":{"line":586,"column":14},"end":{"line":586,"column":120}},"228":{"start":{"line":587,"column":14},"end":{"line":587,"column":120}},"229":{"start":{"line":588,"column":14},"end":{"line":588,"column":47}},"230":{"start":{"line":591,"column":12},"end":{"line":591,"column":247}},"231":{"start":{"line":603,"column":4},"end":{"line":606,"column":13}},"232":{"start":{"line":609,"column":2},"end":{"line":609,"column":31}},"233":{"start":{"line":617,"column":0},"end":{"line":624,"column":1}},"234":{"start":{"line":618,"column":2},"end":{"line":623,"column":4}},"235":{"start":{"line":668,"column":0},"end":{"line":717,"column":1}},"236":{"start":{"line":669,"column":2},"end":{"line":669,"column":46}},"237":{"start":{"line":670,"column":2},"end":{"line":670,"column":24}},"238":{"start":{"line":671,"column":2},"end":{"line":671,"column":23}},"239":{"start":{"line":672,"column":2},"end":{"line":672,"column":24}},"240":{"start":{"line":673,"column":2},"end":{"line":673,"column":27}},"241":{"start":{"line":674,"column":2},"end":{"line":709,"column":3}},"242":{"start":{"line":675,"column":4},"end":{"line":675,"column":29}},"243":{"start":{"line":676,"column":4},"end":{"line":708,"column":5}},"244":{"start":{"line":677,"column":6},"end":{"line":694,"column":7}},"245":{"start":{"line":678,"column":8},"end":{"line":678,"column":44}},"246":{"start":{"line":679,"column":8},"end":{"line":679,"column":54}},"247":{"start":{"line":681,"column":8},"end":{"line":690,"column":9}},"248":{"start":{"line":682,"column":10},"end":{"line":689,"column":11}},"249":{"start":{"line":683,"column":12},"end":{"line":683,"column":40}},"250":{"start":{"line":684,"column":12},"end":{"line":686,"column":13}},"251":{"start":{"line":685,"column":14},"end":{"line":685,"column":32}},"252":{"start":{"line":688,"column":12},"end":{"line":688,"column":30}},"253":{"start":{"line":692,"column":8},"end":{"line":692,"column":33}},"254":{"start":{"line":693,"column":8},"end":{"line":693,"column":60}},"255":{"start":{"line":695,"column":11},"end":{"line":708,"column":5}},"256":{"start":{"line":696,"column":6},"end":{"line":698,"column":46}},"257":{"start":{"line":700,"column":6},"end":{"line":703,"column":7}},"258":{"start":{"line":701,"column":8},"end":{"line":701,"column":34}},"259":{"start":{"line":702,"column":8},"end":{"line":702,"column":28}},"260":{"start":{"line":704,"column":6},"end":{"line":707,"column":7}},"261":{"start":{"line":705,"column":8},"end":{"line":705,"column":33}},"262":{"start":{"line":706,"column":8},"end":{"line":706,"column":26}},"263":{"start":{"line":711,"column":2},"end":{"line":716,"column":4}},"264":{"start":{"line":719,"column":0},"end":{"line":738,"column":1}},"265":{"start":{"line":720,"column":2},"end":{"line":720,"column":38}},"266":{"start":{"line":721,"column":2},"end":{"line":721,"column":18}},"267":{"start":{"line":722,"column":2},"end":{"line":728,"column":5}},"268":{"start":{"line":723,"column":4},"end":{"line":727,"column":5}},"269":{"start":{"line":724,"column":6},"end":{"line":724,"column":24}},"270":{"start":{"line":726,"column":6},"end":{"line":726,"column":26}},"271":{"start":{"line":729,"column":2},"end":{"line":729,"column":116}},"272":{"start":{"line":731,"column":2},"end":{"line":737,"column":16}},"273":{"start":{"line":740,"column":0},"end":{"line":740,"column":89}}},"branchMap":{"1":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":70},"end":{"line":17,"column":73}},{"start":{"line":17,"column":76},"end":{"line":17,"column":94}}]},"2":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":46},"end":{"line":17,"column":49}},{"start":{"line":17,"column":53},"end":{"line":17,"column":67}}]},"3":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":32},"end":{"line":64,"column":50}},{"start":{"line":64,"column":54},"end":{"line":64,"column":78}},{"start":{"line":64,"column":82},"end":{"line":64,"column":86}}]},"4":{"line":65,"type":"binary-expr","locations":[{"start":{"line":65,"column":21},"end":{"line":65,"column":59}},{"start":{"line":65,"column":63},"end":{"line":65,"column":97}}]},"5":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":2},"end":{"line":67,"column":2}},{"start":{"line":67,"column":2},"end":{"line":67,"column":2}}]},"6":{"line":70,"type":"cond-expr","locations":[{"start":{"line":70,"column":60},"end":{"line":70,"column":83}},{"start":{"line":70,"column":86},"end":{"line":70,"column":93}}]},"7":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":4},"end":{"line":83,"column":4}},{"start":{"line":83,"column":4},"end":{"line":83,"column":4}}]},"8":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":4},"end":{"line":93,"column":4}},{"start":{"line":93,"column":4},"end":{"line":93,"column":4}}]},"9":{"line":101,"type":"cond-expr","locations":[{"start":{"line":101,"column":32},"end":{"line":101,"column":51}},{"start":{"line":101,"column":54},"end":{"line":101,"column":58}}]},"10":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":4},"end":{"line":102,"column":4}},{"start":{"line":102,"column":4},"end":{"line":102,"column":4}}]},"11":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":4},"end":{"line":148,"column":4}},{"start":{"line":148,"column":4},"end":{"line":148,"column":4}}]},"12":{"line":150,"type":"if","locations":[{"start":{"line":150,"column":11},"end":{"line":150,"column":11}},{"start":{"line":150,"column":11},"end":{"line":150,"column":11}}]},"13":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":11},"end":{"line":152,"column":11}},{"start":{"line":152,"column":11},"end":{"line":152,"column":11}}]},"14":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":4},"end":{"line":178,"column":4}},{"start":{"line":178,"column":4},"end":{"line":178,"column":4}}]},"15":{"line":178,"type":"binary-expr","locations":[{"start":{"line":178,"column":8},"end":{"line":178,"column":23}},{"start":{"line":178,"column":27},"end":{"line":178,"column":36}}]},"16":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":6},"end":{"line":179,"column":6}},{"start":{"line":179,"column":6},"end":{"line":179,"column":6}}]},"17":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":8},"end":{"line":181,"column":8}},{"start":{"line":181,"column":8},"end":{"line":181,"column":8}}]},"18":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":8},"end":{"line":191,"column":8}},{"start":{"line":191,"column":8},"end":{"line":191,"column":8}}]},"19":{"line":191,"type":"binary-expr","locations":[{"start":{"line":191,"column":12},"end":{"line":191,"column":42}},{"start":{"line":191,"column":46},"end":{"line":191,"column":80}}]},"20":{"line":192,"type":"cond-expr","locations":[{"start":{"line":192,"column":50},"end":{"line":195,"column":11}},{"start":{"line":195,"column":14},"end":{"line":195,"column":18}}]},"21":{"line":201,"type":"if","locations":[{"start":{"line":201,"column":4},"end":{"line":201,"column":4}},{"start":{"line":201,"column":4},"end":{"line":201,"column":4}}]},"22":{"line":203,"type":"if","locations":[{"start":{"line":203,"column":11},"end":{"line":203,"column":11}},{"start":{"line":203,"column":11},"end":{"line":203,"column":11}}]},"23":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":11},"end":{"line":208,"column":11}},{"start":{"line":208,"column":11},"end":{"line":208,"column":11}}]},"24":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":11},"end":{"line":210,"column":11}},{"start":{"line":210,"column":11},"end":{"line":210,"column":11}}]},"25":{"line":233,"type":"if","locations":[{"start":{"line":233,"column":6},"end":{"line":233,"column":6}},{"start":{"line":233,"column":6},"end":{"line":233,"column":6}}]},"26":{"line":235,"type":"cond-expr","locations":[{"start":{"line":235,"column":37},"end":{"line":235,"column":56}},{"start":{"line":235,"column":59},"end":{"line":235,"column":63}}]},"27":{"line":236,"type":"cond-expr","locations":[{"start":{"line":236,"column":63},"end":{"line":236,"column":85}},{"start":{"line":236,"column":88},"end":{"line":236,"column":92}}]},"28":{"line":236,"type":"binary-expr","locations":[{"start":{"line":236,"column":27},"end":{"line":236,"column":37}},{"start":{"line":236,"column":41},"end":{"line":236,"column":60}}]},"29":{"line":239,"type":"if","locations":[{"start":{"line":239,"column":8},"end":{"line":239,"column":8}},{"start":{"line":239,"column":8},"end":{"line":239,"column":8}}]},"30":{"line":240,"type":"binary-expr","locations":[{"start":{"line":240,"column":25},"end":{"line":240,"column":37}},{"start":{"line":240,"column":41},"end":{"line":240,"column":43}}]},"31":{"line":242,"type":"binary-expr","locations":[{"start":{"line":242,"column":25},"end":{"line":242,"column":37}},{"start":{"line":242,"column":41},"end":{"line":242,"column":65}}]},"32":{"line":243,"type":"if","locations":[{"start":{"line":243,"column":15},"end":{"line":243,"column":15}},{"start":{"line":243,"column":15},"end":{"line":243,"column":15}}]},"33":{"line":243,"type":"binary-expr","locations":[{"start":{"line":243,"column":19},"end":{"line":243,"column":38}},{"start":{"line":243,"column":42},"end":{"line":243,"column":58}}]},"34":{"line":253,"type":"binary-expr","locations":[{"start":{"line":253,"column":25},"end":{"line":253,"column":37}},{"start":{"line":253,"column":41},"end":{"line":253,"column":43}}]},"35":{"line":256,"type":"if","locations":[{"start":{"line":256,"column":8},"end":{"line":256,"column":8}},{"start":{"line":256,"column":8},"end":{"line":256,"column":8}}]},"36":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":10},"end":{"line":258,"column":10}},{"start":{"line":258,"column":10},"end":{"line":258,"column":10}}]},"37":{"line":259,"type":"binary-expr","locations":[{"start":{"line":259,"column":30},"end":{"line":259,"column":45}},{"start":{"line":259,"column":49},"end":{"line":259,"column":51}}]},"38":{"line":261,"type":"binary-expr","locations":[{"start":{"line":261,"column":30},"end":{"line":261,"column":45}},{"start":{"line":261,"column":49},"end":{"line":261,"column":76}}]},"39":{"line":262,"type":"if","locations":[{"start":{"line":262,"column":17},"end":{"line":262,"column":17}},{"start":{"line":262,"column":17},"end":{"line":262,"column":17}}]},"40":{"line":263,"type":"binary-expr","locations":[{"start":{"line":263,"column":30},"end":{"line":263,"column":45}},{"start":{"line":263,"column":49},"end":{"line":263,"column":51}}]},"41":{"line":267,"type":"if","locations":[{"start":{"line":267,"column":13},"end":{"line":267,"column":13}},{"start":{"line":267,"column":13},"end":{"line":267,"column":13}}]},"42":{"line":269,"type":"if","locations":[{"start":{"line":269,"column":8},"end":{"line":269,"column":8}},{"start":{"line":269,"column":8},"end":{"line":269,"column":8}}]},"43":{"line":270,"type":"if","locations":[{"start":{"line":270,"column":10},"end":{"line":270,"column":10}},{"start":{"line":270,"column":10},"end":{"line":270,"column":10}}]},"44":{"line":272,"type":"if","locations":[{"start":{"line":272,"column":12},"end":{"line":272,"column":12}},{"start":{"line":272,"column":12},"end":{"line":272,"column":12}}]},"45":{"line":281,"type":"cond-expr","locations":[{"start":{"line":281,"column":41},"end":{"line":281,"column":61}},{"start":{"line":281,"column":64},"end":{"line":281,"column":68}}]},"46":{"line":282,"type":"cond-expr","locations":[{"start":{"line":282,"column":44},"end":{"line":282,"column":67}},{"start":{"line":282,"column":70},"end":{"line":282,"column":74}}]},"47":{"line":284,"type":"if","locations":[{"start":{"line":284,"column":10},"end":{"line":284,"column":10}},{"start":{"line":284,"column":10},"end":{"line":284,"column":10}}]},"48":{"line":285,"type":"binary-expr","locations":[{"start":{"line":285,"column":27},"end":{"line":285,"column":39}},{"start":{"line":285,"column":43},"end":{"line":285,"column":45}}]},"49":{"line":289,"type":"if","locations":[{"start":{"line":289,"column":10},"end":{"line":289,"column":10}},{"start":{"line":289,"column":10},"end":{"line":289,"column":10}}]},"50":{"line":290,"type":"binary-expr","locations":[{"start":{"line":290,"column":30},"end":{"line":290,"column":45}},{"start":{"line":290,"column":49},"end":{"line":290,"column":51}}]},"51":{"line":298,"type":"binary-expr","locations":[{"start":{"line":298,"column":25},"end":{"line":298,"column":37}},{"start":{"line":298,"column":41},"end":{"line":298,"column":43}}]},"52":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":4},"end":{"line":305,"column":4}},{"start":{"line":305,"column":4},"end":{"line":305,"column":4}}]},"53":{"line":305,"type":"binary-expr","locations":[{"start":{"line":305,"column":8},"end":{"line":305,"column":20}},{"start":{"line":305,"column":24},"end":{"line":305,"column":36}}]},"54":{"line":308,"type":"if","locations":[{"start":{"line":308,"column":4},"end":{"line":308,"column":4}},{"start":{"line":308,"column":4},"end":{"line":308,"column":4}}]},"55":{"line":308,"type":"binary-expr","locations":[{"start":{"line":308,"column":8},"end":{"line":308,"column":23}},{"start":{"line":308,"column":27},"end":{"line":308,"column":42}}]},"56":{"line":314,"type":"if","locations":[{"start":{"line":314,"column":4},"end":{"line":314,"column":4}},{"start":{"line":314,"column":4},"end":{"line":314,"column":4}}]},"57":{"line":314,"type":"binary-expr","locations":[{"start":{"line":314,"column":8},"end":{"line":314,"column":26}},{"start":{"line":314,"column":30},"end":{"line":314,"column":41}},{"start":{"line":314,"column":45},"end":{"line":314,"column":103}}]},"58":{"line":330,"type":"if","locations":[{"start":{"line":330,"column":4},"end":{"line":330,"column":4}},{"start":{"line":330,"column":4},"end":{"line":330,"column":4}}]},"59":{"line":347,"type":"if","locations":[{"start":{"line":347,"column":4},"end":{"line":347,"column":4}},{"start":{"line":347,"column":4},"end":{"line":347,"column":4}}]},"60":{"line":353,"type":"if","locations":[{"start":{"line":353,"column":4},"end":{"line":353,"column":4}},{"start":{"line":353,"column":4},"end":{"line":353,"column":4}}]},"61":{"line":356,"type":"cond-expr","locations":[{"start":{"line":356,"column":42},"end":{"line":356,"column":47}},{"start":{"line":356,"column":50},"end":{"line":356,"column":54}}]},"62":{"line":373,"type":"if","locations":[{"start":{"line":373,"column":4},"end":{"line":373,"column":4}},{"start":{"line":373,"column":4},"end":{"line":373,"column":4}}]},"63":{"line":379,"type":"if","locations":[{"start":{"line":379,"column":11},"end":{"line":379,"column":11}},{"start":{"line":379,"column":11},"end":{"line":379,"column":11}}]},"64":{"line":379,"type":"binary-expr","locations":[{"start":{"line":379,"column":15},"end":{"line":379,"column":33}},{"start":{"line":379,"column":37},"end":{"line":379,"column":59}}]},"65":{"line":383,"type":"cond-expr","locations":[{"start":{"line":383,"column":42},"end":{"line":383,"column":47}},{"start":{"line":383,"column":50},"end":{"line":383,"column":54}}]},"66":{"line":385,"type":"if","locations":[{"start":{"line":385,"column":11},"end":{"line":385,"column":11}},{"start":{"line":385,"column":11},"end":{"line":385,"column":11}}]},"67":{"line":394,"type":"if","locations":[{"start":{"line":394,"column":10},"end":{"line":394,"column":10}},{"start":{"line":394,"column":10},"end":{"line":394,"column":10}}]},"68":{"line":396,"type":"binary-expr","locations":[{"start":{"line":396,"column":30},"end":{"line":396,"column":45}},{"start":{"line":396,"column":49},"end":{"line":396,"column":72}},{"start":{"line":396,"column":76},"end":{"line":396,"column":96}}]},"69":{"line":398,"type":"if","locations":[{"start":{"line":398,"column":12},"end":{"line":398,"column":12}},{"start":{"line":398,"column":12},"end":{"line":398,"column":12}}]},"70":{"line":405,"type":"if","locations":[{"start":{"line":405,"column":8},"end":{"line":405,"column":8}},{"start":{"line":405,"column":8},"end":{"line":405,"column":8}}]},"71":{"line":409,"type":"cond-expr","locations":[{"start":{"line":409,"column":50},"end":{"line":409,"column":55}},{"start":{"line":409,"column":58},"end":{"line":409,"column":62}}]},"72":{"line":415,"type":"if","locations":[{"start":{"line":415,"column":6},"end":{"line":415,"column":6}},{"start":{"line":415,"column":6},"end":{"line":415,"column":6}}]},"73":{"line":427,"type":"if","locations":[{"start":{"line":427,"column":10},"end":{"line":427,"column":10}},{"start":{"line":427,"column":10},"end":{"line":427,"column":10}}]},"74":{"line":427,"type":"binary-expr","locations":[{"start":{"line":427,"column":14},"end":{"line":427,"column":23}},{"start":{"line":427,"column":27},"end":{"line":427,"column":45}}]},"75":{"line":430,"type":"if","locations":[{"start":{"line":430,"column":10},"end":{"line":430,"column":10}},{"start":{"line":430,"column":10},"end":{"line":430,"column":10}}]},"76":{"line":430,"type":"binary-expr","locations":[{"start":{"line":430,"column":14},"end":{"line":430,"column":23}},{"start":{"line":430,"column":27},"end":{"line":430,"column":48}}]},"77":{"line":434,"type":"binary-expr","locations":[{"start":{"line":434,"column":17},"end":{"line":434,"column":45}},{"start":{"line":434,"column":49},"end":{"line":434,"column":77}}]},"78":{"line":437,"type":"if","locations":[{"start":{"line":437,"column":8},"end":{"line":437,"column":8}},{"start":{"line":437,"column":8},"end":{"line":437,"column":8}}]},"79":{"line":437,"type":"binary-expr","locations":[{"start":{"line":437,"column":12},"end":{"line":437,"column":40}},{"start":{"line":437,"column":44},"end":{"line":437,"column":72}}]},"80":{"line":440,"type":"cond-expr","locations":[{"start":{"line":440,"column":55},"end":{"line":440,"column":60}},{"start":{"line":440,"column":63},"end":{"line":440,"column":67}}]},"81":{"line":441,"type":"cond-expr","locations":[{"start":{"line":441,"column":58},"end":{"line":441,"column":63}},{"start":{"line":441,"column":66},"end":{"line":441,"column":70}}]},"82":{"line":447,"type":"if","locations":[{"start":{"line":447,"column":6},"end":{"line":447,"column":6}},{"start":{"line":447,"column":6},"end":{"line":447,"column":6}}]},"83":{"line":467,"type":"if","locations":[{"start":{"line":467,"column":4},"end":{"line":467,"column":4}},{"start":{"line":467,"column":4},"end":{"line":467,"column":4}}]},"84":{"line":475,"type":"if","locations":[{"start":{"line":475,"column":4},"end":{"line":475,"column":4}},{"start":{"line":475,"column":4},"end":{"line":475,"column":4}}]},"85":{"line":476,"type":"cond-expr","locations":[{"start":{"line":476,"column":34},"end":{"line":479,"column":7}},{"start":{"line":479,"column":10},"end":{"line":479,"column":14}}]},"86":{"line":484,"type":"if","locations":[{"start":{"line":484,"column":4},"end":{"line":484,"column":4}},{"start":{"line":484,"column":4},"end":{"line":484,"column":4}}]},"87":{"line":503,"type":"if","locations":[{"start":{"line":503,"column":6},"end":{"line":503,"column":6}},{"start":{"line":503,"column":6},"end":{"line":503,"column":6}}]},"88":{"line":504,"type":"binary-expr","locations":[{"start":{"line":504,"column":26},"end":{"line":504,"column":41}},{"start":{"line":504,"column":45},"end":{"line":504,"column":69}}]},"89":{"line":517,"type":"cond-expr","locations":[{"start":{"line":517,"column":32},"end":{"line":517,"column":51}},{"start":{"line":517,"column":54},"end":{"line":517,"column":58}}]},"90":{"line":518,"type":"cond-expr","locations":[{"start":{"line":518,"column":35},"end":{"line":518,"column":57}},{"start":{"line":518,"column":60},"end":{"line":518,"column":64}}]},"91":{"line":519,"type":"if","locations":[{"start":{"line":519,"column":4},"end":{"line":519,"column":4}},{"start":{"line":519,"column":4},"end":{"line":519,"column":4}}]},"92":{"line":519,"type":"binary-expr","locations":[{"start":{"line":519,"column":8},"end":{"line":519,"column":24}},{"start":{"line":519,"column":28},"end":{"line":519,"column":77}}]},"93":{"line":533,"type":"if","locations":[{"start":{"line":533,"column":4},"end":{"line":533,"column":4}},{"start":{"line":533,"column":4},"end":{"line":533,"column":4}}]},"94":{"line":539,"type":"cond-expr","locations":[{"start":{"line":539,"column":40},"end":{"line":539,"column":51}},{"start":{"line":539,"column":54},"end":{"line":539,"column":58}}]},"95":{"line":555,"type":"cond-expr","locations":[{"start":{"line":555,"column":32},"end":{"line":555,"column":51}},{"start":{"line":555,"column":54},"end":{"line":555,"column":58}}]},"96":{"line":556,"type":"cond-expr","locations":[{"start":{"line":556,"column":35},"end":{"line":556,"column":57}},{"start":{"line":556,"column":60},"end":{"line":556,"column":64}}]},"97":{"line":559,"type":"if","locations":[{"start":{"line":559,"column":4},"end":{"line":559,"column":4}},{"start":{"line":559,"column":4},"end":{"line":559,"column":4}}]},"98":{"line":560,"type":"if","locations":[{"start":{"line":560,"column":6},"end":{"line":560,"column":6}},{"start":{"line":560,"column":6},"end":{"line":560,"column":6}}]},"99":{"line":560,"type":"binary-expr","locations":[{"start":{"line":560,"column":10},"end":{"line":560,"column":17}},{"start":{"line":560,"column":21},"end":{"line":560,"column":64}}]},"100":{"line":570,"type":"if","locations":[{"start":{"line":570,"column":8},"end":{"line":570,"column":8}},{"start":{"line":570,"column":8},"end":{"line":570,"column":8}}]},"101":{"line":579,"type":"if","locations":[{"start":{"line":579,"column":8},"end":{"line":579,"column":8}},{"start":{"line":579,"column":8},"end":{"line":579,"column":8}}]},"102":{"line":580,"type":"if","locations":[{"start":{"line":580,"column":10},"end":{"line":580,"column":10}},{"start":{"line":580,"column":10},"end":{"line":580,"column":10}}]},"103":{"line":583,"type":"if","locations":[{"start":{"line":583,"column":12},"end":{"line":583,"column":12}},{"start":{"line":583,"column":12},"end":{"line":583,"column":12}}]},"104":{"line":603,"type":"cond-expr","locations":[{"start":{"line":603,"column":32},"end":{"line":606,"column":5}},{"start":{"line":606,"column":8},"end":{"line":606,"column":12}}]},"105":{"line":605,"type":"cond-expr","locations":[{"start":{"line":605,"column":37},"end":{"line":605,"column":46}},{"start":{"line":605,"column":49},"end":{"line":605,"column":60}}]},"106":{"line":676,"type":"if","locations":[{"start":{"line":676,"column":4},"end":{"line":676,"column":4}},{"start":{"line":676,"column":4},"end":{"line":676,"column":4}}]},"107":{"line":677,"type":"if","locations":[{"start":{"line":677,"column":6},"end":{"line":677,"column":6}},{"start":{"line":677,"column":6},"end":{"line":677,"column":6}}]},"108":{"line":681,"type":"if","locations":[{"start":{"line":681,"column":8},"end":{"line":681,"column":8}},{"start":{"line":681,"column":8},"end":{"line":681,"column":8}}]},"109":{"line":682,"type":"if","locations":[{"start":{"line":682,"column":10},"end":{"line":682,"column":10}},{"start":{"line":682,"column":10},"end":{"line":682,"column":10}}]},"110":{"line":684,"type":"if","locations":[{"start":{"line":684,"column":12},"end":{"line":684,"column":12}},{"start":{"line":684,"column":12},"end":{"line":684,"column":12}}]},"111":{"line":684,"type":"binary-expr","locations":[{"start":{"line":684,"column":16},"end":{"line":684,"column":68}},{"start":{"line":684,"column":72},"end":{"line":684,"column":103}}]},"112":{"line":693,"type":"binary-expr","locations":[{"start":{"line":693,"column":23},"end":{"line":693,"column":35}},{"start":{"line":693,"column":39},"end":{"line":693,"column":59}}]},"113":{"line":695,"type":"if","locations":[{"start":{"line":695,"column":11},"end":{"line":695,"column":11}},{"start":{"line":695,"column":11},"end":{"line":695,"column":11}}]},"114":{"line":700,"type":"if","locations":[{"start":{"line":700,"column":6},"end":{"line":700,"column":6}},{"start":{"line":700,"column":6},"end":{"line":700,"column":6}}]},"115":{"line":704,"type":"if","locations":[{"start":{"line":704,"column":6},"end":{"line":704,"column":6}},{"start":{"line":704,"column":6},"end":{"line":704,"column":6}}]},"116":{"line":712,"type":"cond-expr","locations":[{"start":{"line":712,"column":26},"end":{"line":712,"column":60}},{"start":{"line":712,"column":63},"end":{"line":712,"column":67}}]},"117":{"line":713,"type":"binary-expr","locations":[{"start":{"line":713,"column":10},"end":{"line":713,"column":19}},{"start":{"line":713,"column":23},"end":{"line":715,"column":6}}]},"118":{"line":723,"type":"if","locations":[{"start":{"line":723,"column":4},"end":{"line":723,"column":4}},{"start":{"line":723,"column":4},"end":{"line":723,"column":4}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule diffRelayQuery"," * "," */","","'use strict';","","var _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","var ID = require('./RelayNodeInterface').ID,","    ID_TYPE = require('./RelayNodeInterface').ID_TYPE,","    NODE_TYPE = require('./RelayNodeInterface').NODE_TYPE,","    TYPENAME = require('./RelayNodeInterface').TYPENAME;","","var EDGES = require('./RelayConnectionInterface').EDGES,","    NODE = require('./RelayConnectionInterface').NODE,","    PAGE_INFO = require('./RelayConnectionInterface').PAGE_INFO;","","var idField = require('./RelayQuery').Field.build({","  fieldName: ID,","  metadata: {","    isRequisite: true","  },","  type: 'String'","});","var typeField = require('./RelayQuery').Field.build({","  fieldName: TYPENAME,","  metadata: {","    isRequisite: true","  },","  type: 'String'","});","var nodeWithID = require('./RelayQuery').Field.build({","  fieldName: require('./RelayNodeInterface').NODE,","  children: [idField, typeField],","  metadata: {","    canHaveSubselections: true","  },","  type: NODE_TYPE","});","","/**"," * @internal"," *"," * Computes the difference between the data requested in `root` and the data"," * available in `store`. It returns a minimal set of queries that will fulfill"," * the difference, or an empty array if the query can be resolved locally."," */","function diffRelayQuery(root, store, queryTracker) {","  var path = require('./RelayQueryPath').create(root);","  var queries = [];","","  var visitor = new RelayDiffQueryBuilder(store, queryTracker);","  var rootIdentifyingArg = root.getIdentifyingArg();","  var rootIdentifyingArgValue = rootIdentifyingArg && rootIdentifyingArg.value || null;","  var isPluralCall = Array.isArray(rootIdentifyingArgValue) && rootIdentifyingArgValue.length > 1;","  var metadata = void 0;","  if (rootIdentifyingArg != null) {","    metadata = {","      identifyingArgName: rootIdentifyingArg.name,","      identifyingArgType: rootIdentifyingArg.type != null ? rootIdentifyingArg.type : ID_TYPE,","      isAbstract: root.isAbstract(),","      isDeferred: false,","      isPlural: false","    };","  }","  var fieldName = root.getFieldName();","  var storageKey = root.getStorageKey();","  require('./forEachRootCallArg')(root, function (_ref) {","    var identifyingArgValue = _ref.identifyingArgValue,","        identifyingArgKey = _ref.identifyingArgKey;","","    var nodeRoot = void 0;","    if (isPluralCall) {","      require('fbjs/lib/invariant')(identifyingArgValue != null, 'diffRelayQuery(): Unexpected null or undefined value in root call ' + 'argument array for query, `%s(...).', fieldName);","      nodeRoot = require('./RelayQuery').Root.build(root.getName(), fieldName, [identifyingArgValue], root.getChildren(), metadata, root.getType());","    } else {","      // Reuse `root` if it only maps to one result.","      nodeRoot = root;","    }","","    // The whole query must be fetched if the root dataID is unknown.","    var dataID = store.getDataID(storageKey, identifyingArgKey);","    if (dataID == null) {","      queries.push(nodeRoot);","      return;","    }","","    // Diff the current dataID","    var scope = makeScope(dataID);","    var diffOutput = visitor.visit(nodeRoot, path, scope);","    var diffNode = diffOutput ? diffOutput.diffNode : null;","    if (diffNode) {","      require('fbjs/lib/invariant')(diffNode instanceof require('./RelayQuery').Root, 'diffRelayQuery(): Expected result to be a root query.');","      queries.push(diffNode);","    }","  });","  return queries.concat(visitor.getSplitQueries());","}","","/**"," * @internal"," *"," * A transform for (node + store) -> (diff + tracked queries). It is analagous"," * to `RelayQueryTransform` with the main differences as follows:"," * - there is no `state` (which allowed for passing data up and down the tree)."," * - data is passed down via `scope`, which flows from a parent field down"," *   through intermediary fragments to the nearest child field."," * - data is passed up via the return type `{diffNode, trackedNode}`, where:"," *   - `diffNode`: subset of the input that could not diffed out"," *   - `trackedNode`: subset of the input that must be tracked"," *"," * The provided `queryTracker`, if any, is updated whenever the traversal of a"," * node results in a `trackedNode` being created. New top-level queries are not"," * returned up the tree, and instead are available via `getSplitQueries()`."," *"," * @note If no `queryTracker` is provided, all tracking-related functionality is"," * skipped."," */","","var RelayDiffQueryBuilder = function () {","  function RelayDiffQueryBuilder(store, queryTracker) {","    (0, _classCallCheck3['default'])(this, RelayDiffQueryBuilder);","","    this._store = store;","    this._splitQueries = [];","    this._queryTracker = queryTracker;","  }","","  RelayDiffQueryBuilder.prototype.splitQuery = function splitQuery(root) {","    this._splitQueries.push(root);","  };","","  RelayDiffQueryBuilder.prototype.getSplitQueries = function getSplitQueries() {","    return this._splitQueries;","  };","","  RelayDiffQueryBuilder.prototype.visit = function visit(node, path, scope) {","    if (node instanceof require('./RelayQuery').Field) {","      return this.visitField(node, path, scope);","    } else if (node instanceof require('./RelayQuery').Fragment) {","      return this.visitFragment(node, path, scope);","    } else if (node instanceof require('./RelayQuery').Root) {","      return this.visitRoot(node, path, scope);","    }","  };","","  RelayDiffQueryBuilder.prototype.visitRoot = function visitRoot(node, path, scope) {","    return this.traverse(node, path, scope);","  };","","  RelayDiffQueryBuilder.prototype.visitFragment = function visitFragment(node, path, scope) {","    return this.traverse(node, path, scope);","  };","","  /**","   * Diffs the field conditionally based on the `scope` from the nearest","   * ancestor field.","   */","","","  RelayDiffQueryBuilder.prototype.visitField = function visitField(node, path, _ref2) {","    var connectionField = _ref2.connectionField,","        dataID = _ref2.dataID,","        edgeID = _ref2.edgeID,","        rangeInfo = _ref2.rangeInfo;","","    // special case when inside a connection traversal","    if (connectionField && rangeInfo) {","      if (edgeID) {","        // When traversing a specific connection edge only look at `edges`","        if (node.getSchemaName() === EDGES) {","          return this.diffConnectionEdge(connectionField, node, // edge field","          require('./RelayQueryPath').getPath(path, node, edgeID), edgeID, rangeInfo);","        } else {","          return null;","        }","      } else {","        // When traversing connection metadata fields, edges/page_info are","        // only kept if there are range extension calls. Other fields fall","        // through to regular diffing.","        if (node.getSchemaName() === EDGES || node.getSchemaName() === PAGE_INFO) {","          return rangeInfo.diffCalls.length > 0 ? {","            diffNode: node,","            trackedNode: null","          } : null;","        }","      }","    }","","    // default field diffing algorithm","    if (!node.canHaveSubselections()) {","      return this.diffScalar(node, dataID);","    } else if (node.isGenerated()) {","      return {","        diffNode: node,","        trackedNode: null","      };","    } else if (node.isConnection()) {","      return this.diffConnection(node, path, dataID);","    } else if (node.isPlural()) {","      return this.diffPluralLink(node, path, dataID);","    } else {","      return this.diffLink(node, path, dataID);","    }","  };","","  /**","   * Visit all the children of the given `node` and merge their results.","   */","","","  RelayDiffQueryBuilder.prototype.traverse = function traverse(node, path, scope) {","    var _this = this;","","    var diffNode = void 0;","    var diffChildren = void 0;","    var trackedNode = void 0;","    var trackedChildren = void 0;","    var hasDiffField = false;","    var hasTrackedField = false;","","    node.getChildren().forEach(function (child) {","      if (child instanceof require('./RelayQuery').Field) {","        var diffOutput = _this.visitField(child, path, scope);","        var diffChild = diffOutput ? diffOutput.diffNode : null;","        var trackedChild = diffOutput && _this._queryTracker ? diffOutput.trackedNode : null;","","        // Diff uses child nodes and keeps requisite fields","        if (diffChild) {","          diffChildren = diffChildren || [];","          diffChildren.push(diffChild);","          hasDiffField = hasDiffField || !diffChild.isGenerated();","        } else if (child.isRequisite() && !scope.rangeInfo) {","          // The presence of `rangeInfo` indicates that we are traversing","          // connection metadata fields, in which case `visitField` will ensure","          // that `edges` and `page_info` are kept when necessary. The requisite","          // check alone could cause these fields to be added back when not","          // needed.","          //","          // Example: `friends.first(3) {count, edges {...}, page_info {...} }","          // If all `edges` were fetched but `count` is unfetched, the diff","          // should be `friends.first(3) {count}` and not include `page_info`.","          diffChildren = diffChildren || [];","          diffChildren.push(child);","        }","        if (_this._queryTracker) {","          // Tracker uses tracked children and keeps requisite fields","          if (trackedChild) {","            trackedChildren = trackedChildren || [];","            trackedChildren.push(trackedChild);","            hasTrackedField = hasTrackedField || !trackedChild.isGenerated();","          } else if (child.isRequisite()) {","            trackedChildren = trackedChildren || [];","            trackedChildren.push(child);","          }","        }","      } else if (child instanceof require('./RelayQuery').Fragment) {","        var isCompatibleType = require('./isCompatibleRelayFragmentType')(child, _this._store.getType(scope.dataID));","        if (isCompatibleType) {","          if (child.isTrackingEnabled()) {","            var hash = child.getCompositeHash();","            if (_this._store.hasFragmentData(scope.dataID, hash)) {","              return {","                diffNode: null,","                trackedNode: null","              };","            }","          }","","          var _diffOutput = _this.traverse(child, path, scope);","          var _diffChild = _diffOutput ? _diffOutput.diffNode : null;","          var _trackedChild = _diffOutput ? _diffOutput.trackedNode : null;","","          if (_diffChild) {","            diffChildren = diffChildren || [];","            diffChildren.push(_diffChild);","            hasDiffField = true;","          }","          if (_trackedChild) {","            trackedChildren = trackedChildren || [];","            trackedChildren.push(_trackedChild);","            hasTrackedField = true;","          }","        } else {","          // Non-matching fragment types are similar to requisite fields:","          // they don't need to be diffed against and should only be included","          // if something *else* is missing from the node.","          diffChildren = diffChildren || [];","          diffChildren.push(child);","        }","      }","    });","","    // Only return diff/tracked node if there are non-generated fields","    if (diffChildren && hasDiffField) {","      diffNode = node.clone(diffChildren);","    }","    if (trackedChildren && hasTrackedField) {","      trackedNode = node.clone(trackedChildren);","    }","    // Record tracked nodes. Fragments can be skipped because these will","    // always be composed into, and therefore tracked by, their nearest","    // non-fragment parent.","    if (this._queryTracker && trackedNode && !(trackedNode instanceof require('./RelayQuery').Fragment)) {","      this._queryTracker.trackNodeForID(trackedNode, scope.dataID);","    }","","    return {","      diffNode: diffNode,","      trackedNode: trackedNode","    };","  };","","  /**","   * Diff a scalar field such as `name` or `id`.","   */","","","  RelayDiffQueryBuilder.prototype.diffScalar = function diffScalar(field, dataID) {","    if (this._store.getField(dataID, field.getStorageKey()) === undefined) {","      return {","        diffNode: field,","        trackedNode: null","      };","    }","    return null;","  };","","  /**","   * Diff a field-of-fields such as `profile_picture {...}`. Returns early if","   * the field has not been fetched, otherwise the result of traversal.","   */","","","  RelayDiffQueryBuilder.prototype.diffLink = function diffLink(field, path, dataID) {","    var nextDataID = this._store.getLinkedRecordID(dataID, field.getStorageKey());","    if (nextDataID === undefined) {","      return {","        diffNode: field,","        trackedNode: null","      };","    }","    if (nextDataID === null) {","      return {","        diffNode: null,","        trackedNode: this._queryTracker ? field : null","      };","    }","","    return this.traverse(field, require('./RelayQueryPath').getPath(path, field, nextDataID), makeScope(nextDataID));","  };","","  /**","   * Diffs a non-connection plural field against each of the fetched items.","   * Note that scalar plural fields are handled by `_diffScalar`.","   */","","","  RelayDiffQueryBuilder.prototype.diffPluralLink = function diffPluralLink(field, path, dataID) {","    var _this2 = this;","","    var linkedIDs = this._store.getLinkedRecordIDs(dataID, field.getStorageKey());","    if (linkedIDs === undefined) {","      // not fetched","      return {","        diffNode: field,","        trackedNode: null","      };","    } else if (linkedIDs === null || linkedIDs.length === 0) {","      // Don't fetch if array is null or empty, but still track the fragment","      return {","        diffNode: null,","        trackedNode: this._queryTracker ? field : null","      };","    } else if (field.getInferredRootCallName() === NODE) {","      var _ret = function () {","        // The items in this array are fetchable and may have been filled in","        // from other sources, so check them all. For example, `Story{actors}`","        // is an array (but not a range), and the Actors in that array likely","        // had data fetched for them elsewhere (like `viewer(){actor}`).","        var hasSplitQueries = false;","        linkedIDs.forEach(function (itemID) {","          var itemState = _this2.traverse(field, require('./RelayQueryPath').getPath(path, field, itemID), makeScope(itemID));","          if (itemState) {","            // If any child was tracked then `field` will also be tracked","            hasSplitQueries = hasSplitQueries || !!itemState.trackedNode || !!itemState.diffNode;","            // split diff nodes into root queries","            if (itemState.diffNode) {","              _this2.splitQuery(buildRoot(itemID, itemState.diffNode.getChildren(), require('./RelayQueryPath').getName(path), field.getType(), field.isAbstract()));","            }","          }","        });","        // if sub-queries are split then this *entire* field will be tracked,","        // therefore we don't need to merge the `trackedNode` from each item","        if (hasSplitQueries) {","          return {","            v: {","              diffNode: null,","              trackedNode: _this2._queryTracker ? field : null","            }","          };","        }","      }();","","      if (typeof _ret === \"object\") return _ret.v;","    } else {","      var _ret2 = function () {","        // The items in this array are not fetchable by ID, so nothing else could","        // have fetched additional data for individual items. If any item in this","        // list is missing data, refetch the whole field.","","        var atLeastOneItemHasMissingData = false;","        var atLeastOneItemHasTrackedData = false;","","        linkedIDs.some(function (itemID) {","          var itemState = _this2.traverse(field, require('./RelayQueryPath').getPath(path, field, itemID), makeScope(itemID));","          if (itemState && itemState.diffNode) {","            atLeastOneItemHasMissingData = true;","          }","          if (itemState && itemState.trackedNode) {","            atLeastOneItemHasTrackedData = true;","          }","          // Exit early if possible","          return atLeastOneItemHasMissingData && atLeastOneItemHasTrackedData;","        });","","        if (atLeastOneItemHasMissingData || atLeastOneItemHasTrackedData) {","          return {","            v: {","              diffNode: atLeastOneItemHasMissingData ? field : null,","              trackedNode: atLeastOneItemHasTrackedData ? field : null","            }","          };","        }","      }();","","      if (typeof _ret2 === \"object\") return _ret2.v;","    }","    return null;","  };","","  /**","   * Diff a connection field such as `news_feed.first(3)`. Returns early if","   * the range has not been fetched or the entire range has already been","   * fetched. Otherwise the diff output is a clone of `field` with updated","   * after/first and before/last calls.","   */","","","  RelayDiffQueryBuilder.prototype.diffConnection = function diffConnection(field, path, dataID) {","    var _this3 = this;","","    var store = this._store;","    var connectionID = store.getLinkedRecordID(dataID, field.getStorageKey());","    var rangeInfo = store.getRangeMetadata(connectionID, field.getCallsWithValues());","    // Keep the field if the connection is unfetched","    if (connectionID === undefined) {","      return {","        diffNode: field,","        trackedNode: null","      };","    }","    // Don't fetch if connection is null, but continue to track the fragment if","    // appropriate.","    if (connectionID === null) {","      return this._queryTracker ? {","        diffNode: null,","        trackedNode: field","      } : null;","    }","    // If metadata fields but not edges are fetched, diff as a normal field.","    // In practice, `rangeInfo` is `undefined` if unfetched, `null` if the","    // connection was deleted (in which case `connectionID` is null too).","    if (rangeInfo == null) {","      return this.traverse(field, require('./RelayQueryPath').getPath(path, field, connectionID), makeScope(connectionID));","    }","    var diffCalls = rangeInfo.diffCalls,","        filteredEdges = rangeInfo.filteredEdges;","","    // check existing edges for missing fields","","    var hasSplitQueries = false;","    filteredEdges.forEach(function (edge) {","      var scope = {","        connectionField: field,","        dataID: connectionID,","        edgeID: edge.edgeID,","        rangeInfo: rangeInfo","      };","      var diffOutput = _this3.traverse(field, require('./RelayQueryPath').getPath(path, field, edge.edgeID), scope);","      // If any edges were missing data (resulting in a split query),","      // then the entire original connection field must be tracked.","      if (diffOutput) {","        hasSplitQueries = hasSplitQueries || !!diffOutput.trackedNode;","      }","    });","","    // Scope has null `edgeID` to skip looking at `edges` fields.","    var scope = {","      connectionField: field,","      dataID: connectionID,","      edgeID: null,","      rangeInfo: rangeInfo","    };","    // diff non-`edges` fields such as `count`","    var diffOutput = this.traverse(field, require('./RelayQueryPath').getPath(path, field, connectionID), scope);","    var diffNode = diffOutput ? diffOutput.diffNode : null;","    var trackedNode = diffOutput ? diffOutput.trackedNode : null;","    if (diffCalls.length && diffNode instanceof require('./RelayQuery').Field) {","      diffNode = diffNode.cloneFieldWithCalls(diffNode.getChildren(), diffCalls);","    }","    // if a sub-query was split, then we must track the entire field, which will","    // be a superset of the `trackedNode` from traversing any metadata fields.","    // Example:","    // dataID: `4`","    // node: `friends.first(3)`","    // diffNode: null","    // splitQueries: `node(friend1) {...}`, `node(friend2) {...}`","    //","    // In this case the two fetched `node` queries do not reflect the fact that","    // `friends.first(3)` were fetched for item `4`, so `friends.first(3)` has","    // to be tracked as-is.","    if (hasSplitQueries) {","      trackedNode = field;","    }","","    return {","      diffNode: diffNode,","      trackedNode: this._queryTracker ? trackedNode : null","    };","  };","","  /**","   * Diff an `edges` field for the edge rooted at `edgeID`, splitting a new","   * root query to fetch any missing data (via a `node(id)` root if the","   * field is refetchable or a `...{connection.find(id){}}` query if the","   * field is not refetchable).","   */","","","  RelayDiffQueryBuilder.prototype.diffConnectionEdge = function diffConnectionEdge(connectionField, edgeField, path, edgeID, rangeInfo) {","","    var hasSplitQueries = false;","    var diffOutput = this.traverse(edgeField, require('./RelayQueryPath').getPath(path, edgeField, edgeID), makeScope(edgeID));","    var diffNode = diffOutput ? diffOutput.diffNode : null;","    var trackedNode = diffOutput ? diffOutput.trackedNode : null;","    var nodeID = this._store.getLinkedRecordID(edgeID, NODE);","","    if (diffNode) {","      if (!nodeID || require('./RelayRecord').isClientID(nodeID)) {","        require('fbjs/lib/warning')(connectionField.isConnectionWithoutNodeID(), 'RelayDiffQueryBuilder: Field `node` on connection `%s` cannot be ' + 'retrieved if it does not have an `id` field. If you expect fields ' + 'to be retrieved on this field, add an `id` field in the schema. ' + 'If you choose to ignore this warning, you can silence it by ' + 'adding `@relay(isConnectionWithoutNodeID: true)` to the ' + 'connection field.', connectionField.getStorageKey());","      } else {","        var _splitNodeAndEdgesFie = splitNodeAndEdgesFields(diffNode),","            diffEdgesField = _splitNodeAndEdgesFie.edges,","            diffNodeField = _splitNodeAndEdgesFie.node;","","        // split missing `node` fields into a `node(id)` root query","","","        if (diffNodeField) {","          hasSplitQueries = true;","          var nodeField = edgeField.getFieldByStorageKey('node');","          require('fbjs/lib/invariant')(nodeField, 'RelayDiffQueryBuilder: Expected connection `%s` to have a ' + '`node` field.', connectionField.getSchemaName());","          this.splitQuery(buildRoot(nodeID, diffNodeField.getChildren(), require('./RelayQueryPath').getName(path), nodeField.getType(), nodeField.isAbstract()));","        }","","        // split missing `edges` fields into a `connection.find(id)` query","        // if `find` is supported, otherwise warn","        if (diffEdgesField) {","          if (connectionField.isFindable()) {","            diffEdgesField = diffEdgesField.clone(diffEdgesField.getChildren().concat(nodeWithID));","            var connectionFind = connectionField.cloneFieldWithCalls([diffEdgesField], rangeInfo.filterCalls.concat({ name: 'find', value: nodeID }));","            if (connectionFind) {","              hasSplitQueries = true;","              // current path has `parent`, `connection`, `edges`; pop to parent","              var connectionParent = require('./RelayQueryPath').getParent(require('./RelayQueryPath').getParent(path));","              var connectionQuery = require('./RelayQueryPath').getQuery(this._store, connectionParent, connectionFind);","              this.splitQuery(connectionQuery);","            }","          } else {","            require('fbjs/lib/warning')(false, 'RelayDiffQueryBuilder: connection `edges{*}` fields can only ' + 'be refetched if the connection supports the `find` call. ' + 'Cannot refetch data for field `%s`.', connectionField.getStorageKey());","          }","        }","      }","    }","","    // Connection edges will never return diff nodes; instead missing fields","    // are fetched by new root queries. Tracked nodes are returned if either","    // a child field was tracked or missing fields were split into a new query.","    // The returned `trackedNode` is never tracked directly: instead it serves","    // as an indicator to `diffConnection` that the entire connection field must","    // be tracked.","    return this._queryTracker ? {","      diffNode: null,","      trackedNode: hasSplitQueries ? edgeField : trackedNode","    } : null;","  };","","  return RelayDiffQueryBuilder;","}();","","/**"," * Helper to construct a plain scope for the given `dataID`."," */","","","function makeScope(dataID) {","  return {","    connectionField: null,","    dataID: dataID,","    edgeID: null,","    rangeInfo: null","  };","}","","/**"," * Returns a clone of the input with `edges` and `node` sub-fields split into"," * separate `edges` and `node` roots. Example:"," *"," * Input:"," * edges {"," *   edge_field,"," *   node {"," *     a,"," *     b"," *   },"," *   ${"," *     Fragment {"," *       edge_field_2,"," *       node {"," *         c"," *       }"," *     }"," *   }"," * }"," *"," * Output:"," * node:"," *   edges {"," *     a,      // flattened"," *     b,      // flattend"," *     ${"," *       Fragment {"," *         c  // flattened"," *       }"," *     }"," *   }"," * edges:"," *   edges {"," *     edge_field,"," *     ${"," *       Fragment {"," *         edge_field_2"," *       }"," *     }"," *   }"," */","function splitNodeAndEdgesFields(edgeOrFragment) {","  var children = edgeOrFragment.getChildren();","  var edgeChildren = [];","  var nodeChild = null;","  var nodeChildren = [];","  var hasEdgeChild = false;","  for (var ii = 0; ii < children.length; ii++) {","    var child = children[ii];","    if (child instanceof require('./RelayQuery').Field) {","      if (child.getSchemaName() === NODE) {","        var subFields = child.getChildren();","        nodeChildren = nodeChildren.concat(subFields);","        // can skip if `node` only has an `id` field","        if (!nodeChild) {","          if (subFields.length === 1) {","            var subField = subFields[0];","            if (!(subField instanceof require('./RelayQuery').Field) || subField.getSchemaName() !== ID) {","              nodeChild = child;","            }","          } else {","            nodeChild = child;","          }","        }","      } else {","        edgeChildren.push(child);","        hasEdgeChild = hasEdgeChild || !child.isRequisite();","      }","    } else if (child instanceof require('./RelayQuery').Fragment) {","      var _splitNodeAndEdgesFie2 = splitNodeAndEdgesFields(child),","          _edges = _splitNodeAndEdgesFie2.edges,","          _node = _splitNodeAndEdgesFie2.node;","","      if (_edges) {","        edgeChildren.push(_edges);","        hasEdgeChild = true;","      }","      if (_node) {","        nodeChildren.push(_node);","        nodeChild = _node;","      }","    }","  }","","  return {","    edges: hasEdgeChild ? edgeOrFragment.clone(edgeChildren) : null,","    node: nodeChild && require('./RelayQuery').Fragment.build('diffRelayQuery', nodeChild.getType(), nodeChildren, {","      isAbstract: nodeChild.isAbstract()","    })","  };","}","","function buildRoot(rootID, nodes, name, type, isAbstract) {","  var children = [idField, typeField];","  var fields = [];","  nodes.forEach(function (node) {","    if (node instanceof require('./RelayQuery').Field) {","      fields.push(node);","    } else {","      children.push(node);","    }","  });","  children.push(require('./RelayQuery').Fragment.build('diffRelayQuery', type, fields, { isAbstract: isAbstract }));","","  return require('./RelayQuery').Root.build(name, NODE, rootID, children, {","    identifyingArgName: ID,","    identifyingArgType: ID_TYPE,","    isAbstract: true,","    isDeferred: false,","    isPlural: false","  }, NODE_TYPE);","}","","module.exports = require('./RelayProfiler').instrument('diffRelayQuery', diffRelayQuery);"],"l":{"15":1,"17":1,"19":1,"24":1,"28":1,"35":1,"42":1,"58":1,"59":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"76":0,"77":0,"78":0,"79":0,"82":0,"83":0,"84":0,"85":0,"88":0,"92":0,"93":0,"94":0,"95":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"107":0,"130":1,"131":1,"132":0,"134":0,"135":0,"136":0,"139":1,"140":0,"143":1,"144":0,"147":1,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"157":1,"158":0,"161":1,"162":0,"171":1,"172":0,"178":0,"179":0,"181":0,"182":0,"185":0,"191":0,"192":0,"201":0,"202":0,"203":0,"204":0,"208":0,"209":0,"210":0,"211":0,"213":0,"222":1,"223":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"232":0,"233":0,"234":0,"235":0,"236":0,"239":0,"240":0,"241":0,"242":0,"243":0,"253":0,"254":0,"256":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"280":0,"281":0,"282":0,"284":0,"285":0,"286":0,"287":0,"289":0,"290":0,"291":0,"292":0,"298":0,"299":0,"305":0,"306":0,"308":0,"309":0,"314":0,"315":0,"318":0,"329":1,"330":0,"331":0,"336":0,"345":1,"346":0,"347":0,"348":0,"353":0,"354":0,"360":0,"369":1,"370":0,"372":0,"373":0,"375":0,"379":0,"381":0,"385":0,"386":0,"391":0,"392":0,"393":0,"394":0,"396":0,"398":0,"399":0,"405":0,"406":0,"415":0,"417":0,"422":0,"423":0,"425":0,"426":0,"427":0,"428":0,"430":0,"431":0,"434":0,"437":0,"438":0,"447":0,"449":0,"460":1,"461":0,"463":0,"464":0,"465":0,"467":0,"468":0,"475":0,"476":0,"484":0,"485":0,"487":0,"492":0,"493":0,"494":0,"500":0,"503":0,"504":0,"509":0,"516":0,"517":0,"518":0,"519":0,"520":0,"533":0,"534":0,"537":0,"551":1,"553":0,"554":0,"555":0,"556":0,"557":0,"559":0,"560":0,"561":0,"563":0,"570":0,"571":0,"572":0,"573":0,"574":0,"579":0,"580":0,"581":0,"582":0,"583":0,"584":0,"586":0,"587":0,"588":0,"591":0,"603":0,"609":1,"617":1,"618":0,"668":1,"669":0,"670":0,"671":0,"672":0,"673":0,"674":0,"675":0,"676":0,"677":0,"678":0,"679":0,"681":0,"682":0,"683":0,"684":0,"685":0,"688":0,"692":0,"693":0,"695":0,"696":0,"700":0,"701":0,"702":0,"704":0,"705":0,"706":0,"711":0,"719":1,"720":0,"721":0,"722":0,"723":0,"724":0,"726":0,"729":0,"731":0,"740":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/directivesToGraphQL.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/directivesToGraphQL.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"directivesToGraphQL","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":41}}},"2":{"name":"(anonymous_2)","line":22,"loc":{"start":{"line":22,"column":24},"end":{"line":22,"column":40}}},"3":{"name":"(anonymous_3)","line":26,"loc":{"start":{"line":26,"column":37},"end":{"line":26,"column":54}}}},"statementMap":{"1":{"start":{"line":21,"column":0},"end":{"line":40,"column":1}},"2":{"start":{"line":22,"column":2},"end":{"line":39,"column":5}},"3":{"start":{"line":23,"column":4},"end":{"line":24,"column":25}},"4":{"start":{"line":26,"column":4},"end":{"line":37,"column":7}},"5":{"start":{"line":27,"column":6},"end":{"line":28,"column":30}},"6":{"start":{"line":30,"column":6},"end":{"line":30,"column":34}},"7":{"start":{"line":31,"column":6},"end":{"line":35,"column":7}},"8":{"start":{"line":32,"column":8},"end":{"line":32,"column":80}},"9":{"start":{"line":33,"column":13},"end":{"line":35,"column":7}},"10":{"start":{"line":34,"column":8},"end":{"line":34,"column":76}},"11":{"start":{"line":36,"column":6},"end":{"line":36,"column":90}},"12":{"start":{"line":38,"column":4},"end":{"line":38,"column":87}},"13":{"start":{"line":42,"column":0},"end":{"line":42,"column":37}}},"branchMap":{"1":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":6},"end":{"line":31,"column":6}},{"start":{"line":31,"column":6},"end":{"line":31,"column":6}}]},"2":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":13},"end":{"line":33,"column":13}},{"start":{"line":33,"column":13},"end":{"line":33,"column":13}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule directivesToGraphQL"," * "," */","","'use strict';","","/**"," * @internal"," *"," * Convert plain object `{name, arguments}` directives to GraphQL directive"," * nodes."," */","function directivesToGraphQL(directives) {","  return directives.map(function (_ref) {","    var directiveName = _ref.name,","        args = _ref.args;","","    var concreteArguments = args.map(function (_ref2) {","      var argName = _ref2.name,","          value = _ref2.value;","","      var concreteArgument = null;","      if (Array.isArray(value)) {","        concreteArgument = value.map(require('./QueryBuilder').createCallValue);","      } else if (value != null) {","        concreteArgument = require('./QueryBuilder').createCallValue(value);","      }","      return require('./QueryBuilder').createDirectiveArgument(argName, concreteArgument);","    });","    return require('./QueryBuilder').createDirective(directiveName, concreteArguments);","  });","}","","module.exports = directivesToGraphQL;"],"l":{"21":1,"22":0,"23":0,"26":0,"27":0,"30":0,"31":0,"32":0,"33":0,"34":0,"36":0,"38":0,"42":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/filterExclusiveKeys.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/filterExclusiveKeys.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1},"b":{"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":37}}},"2":{"name":"filterExclusiveKeys","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":35}}},"3":{"name":"(anonymous_3)","line":31,"loc":{"start":{"line":31,"column":23},"end":{"line":31,"column":38}}},"4":{"name":"(anonymous_4)","line":33,"loc":{"start":{"line":33,"column":19},"end":{"line":33,"column":34}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":82}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":97}},"3":{"start":{"line":17,"column":39},"end":{"line":17,"column":95}},"4":{"start":{"line":19,"column":0},"end":{"line":19,"column":53}},"5":{"start":{"line":24,"column":0},"end":{"line":36,"column":1}},"6":{"start":{"line":25,"column":2},"end":{"line":25,"column":49}},"7":{"start":{"line":26,"column":2},"end":{"line":26,"column":49}},"8":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"9":{"start":{"line":29,"column":4},"end":{"line":29,"column":26}},"10":{"start":{"line":31,"column":2},"end":{"line":35,"column":6}},"11":{"start":{"line":32,"column":4},"end":{"line":32,"column":40}},"12":{"start":{"line":34,"column":4},"end":{"line":34,"column":40}},"13":{"start":{"line":38,"column":0},"end":{"line":38,"column":37}}},"branchMap":{"1":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":70},"end":{"line":17,"column":73}},{"start":{"line":17,"column":76},"end":{"line":17,"column":94}}]},"2":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":46},"end":{"line":17,"column":49}},{"start":{"line":17,"column":53},"end":{"line":17,"column":67}}]},"3":{"line":25,"type":"cond-expr","locations":[{"start":{"line":25,"column":18},"end":{"line":25,"column":43}},{"start":{"line":25,"column":46},"end":{"line":25,"column":48}}]},"4":{"line":26,"type":"cond-expr","locations":[{"start":{"line":26,"column":18},"end":{"line":26,"column":43}},{"start":{"line":26,"column":46},"end":{"line":26,"column":48}}]},"5":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"6":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":6},"end":{"line":28,"column":24}},{"start":{"line":28,"column":28},"end":{"line":28,"column":46}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule filterExclusiveKeys"," * "," */","","'use strict';","","var _keys2 = _interopRequireDefault(require('babel-runtime/core-js/object/keys'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","var hasOwnProperty = Object.prototype.hasOwnProperty;","","/**"," * Returns two arrays of keys that contain each object's exclusive keys."," */","function filterExclusiveKeys(a, b) {","  var keysA = a ? (0, _keys2['default'])(a) : [];","  var keysB = b ? (0, _keys2['default'])(b) : [];","","  if (keysA.length === 0 || keysB.length === 0) {","    return [keysA, keysB];","  }","  return [keysA.filter(function (key) {","    return !hasOwnProperty.call(b, key);","  }), keysB.filter(function (key) {","    return !hasOwnProperty.call(a, key);","  })];","}","","module.exports = filterExclusiveKeys;"],"l":{"15":1,"17":1,"19":1,"24":1,"25":0,"26":0,"28":0,"29":0,"31":0,"32":0,"34":0,"38":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/filterRelayQuery.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/filterRelayQuery.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":1},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"filterRelayQuery","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":42}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":45},"end":{"line":24,"column":62}}}},"statementMap":{"1":{"start":{"line":22,"column":0},"end":{"line":29,"column":1}},"2":{"start":{"line":23,"column":2},"end":{"line":27,"column":3}},"3":{"start":{"line":24,"column":4},"end":{"line":26,"column":8}},"4":{"start":{"line":25,"column":6},"end":{"line":25,"column":47}},"5":{"start":{"line":28,"column":2},"end":{"line":28,"column":14}},"6":{"start":{"line":31,"column":0},"end":{"line":31,"column":34}}},"branchMap":{"1":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":2},"end":{"line":23,"column":2}},{"start":{"line":23,"column":2},"end":{"line":23,"column":2}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule filterRelayQuery"," * "," */","","'use strict';","","/**"," * @internal"," *"," * `filterRelayQuery` filters query nodes for which `callback` returns false."," * This is intended as a generic filter module and therefore contains no special"," * logic for handling requisite or generated fields."," */","function filterRelayQuery(node, callback) {","  if (callback(node)) {","    return node.clone(node.getChildren().map(function (child) {","      return filterRelayQuery(child, callback);","    }));","  }","  return null;","}","","module.exports = filterRelayQuery;"],"l":{"22":1,"23":0,"24":0,"25":0,"28":0,"31":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/findRelayQueryLeaves.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/findRelayQueryLeaves.js","s":{"1":1,"2":1,"3":1,"4":1,"5":3,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":1,"65":0,"66":0,"67":0,"68":1,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":1,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":1,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":1,"109":0,"110":0,"111":0,"112":0,"113":1,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":1,"123":0,"124":0,"125":0,"126":0,"127":1,"128":1},"b":{"1":[3,0],"2":[3,3],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0]},"f":{"1":3,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":37}}},"2":{"name":"findRelayQueryLeaves","line":39,"loc":{"start":{"line":39,"column":0},"end":{"line":39,"column":89}}},"3":{"name":"(anonymous_3)","line":56,"loc":{"start":{"line":56,"column":29},"end":{"line":56,"column":59}}},"4":{"name":"RelayQueryLeavesFinder","line":59,"loc":{"start":{"line":59,"column":2},"end":{"line":59,"column":41}}},"5":{"name":"getPendingNodeStates","line":71,"loc":{"start":{"line":71,"column":58},"end":{"line":71,"column":90}}},"6":{"name":"traverse","line":80,"loc":{"start":{"line":80,"column":46},"end":{"line":80,"column":77}}},"7":{"name":"visitFragment","line":90,"loc":{"start":{"line":90,"column":51},"end":{"line":90,"column":91}}},"8":{"name":"visitField","line":105,"loc":{"start":{"line":105,"column":48},"end":{"line":105,"column":82}}},"9":{"name":"_visitScalar","line":137,"loc":{"start":{"line":137,"column":50},"end":{"line":137,"column":86}}},"10":{"name":"_visitPlural","line":144,"loc":{"start":{"line":144,"column":50},"end":{"line":144,"column":86}}},"11":{"name":"_visitConnection","line":168,"loc":{"start":{"line":168,"column":54},"end":{"line":168,"column":94}}},"12":{"name":"_visitEdges","line":192,"loc":{"start":{"line":192,"column":49},"end":{"line":192,"column":84}}},"13":{"name":"_visitPageInfo","line":220,"loc":{"start":{"line":220,"column":52},"end":{"line":220,"column":90}}},"14":{"name":"_visitLinkedField","line":229,"loc":{"start":{"line":229,"column":55},"end":{"line":229,"column":96}}},"15":{"name":"_handleMissingData","line":248,"loc":{"start":{"line":248,"column":56},"end":{"line":248,"column":97}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":117}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":83}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":97}},"5":{"start":{"line":21,"column":39},"end":{"line":21,"column":95}},"6":{"start":{"line":23,"column":0},"end":{"line":24,"column":64}},"7":{"start":{"line":39,"column":0},"end":{"line":54,"column":1}},"8":{"start":{"line":40,"column":2},"end":{"line":40,"column":64}},"9":{"start":{"line":42,"column":2},"end":{"line":48,"column":4}},"10":{"start":{"line":49,"column":2},"end":{"line":49,"column":33}},"11":{"start":{"line":50,"column":2},"end":{"line":53,"column":4}},"12":{"start":{"line":56,"column":0},"end":{"line":267,"column":34}},"13":{"start":{"line":57,"column":2},"end":{"line":57,"column":73}},"14":{"start":{"line":59,"column":2},"end":{"line":69,"column":3}},"15":{"start":{"line":60,"column":4},"end":{"line":60,"column":95}},"16":{"start":{"line":61,"column":4},"end":{"line":61,"column":67}},"17":{"start":{"line":63,"column":4},"end":{"line":63,"column":97}},"18":{"start":{"line":65,"column":4},"end":{"line":65,"column":25}},"19":{"start":{"line":66,"column":4},"end":{"line":66,"column":41}},"20":{"start":{"line":67,"column":4},"end":{"line":67,"column":34}},"21":{"start":{"line":68,"column":4},"end":{"line":68,"column":17}},"22":{"start":{"line":71,"column":2},"end":{"line":73,"column":4}},"23":{"start":{"line":72,"column":4},"end":{"line":72,"column":35}},"24":{"start":{"line":80,"column":2},"end":{"line":88,"column":4}},"25":{"start":{"line":81,"column":4},"end":{"line":81,"column":38}},"26":{"start":{"line":82,"column":4},"end":{"line":87,"column":5}},"27":{"start":{"line":83,"column":6},"end":{"line":85,"column":7}},"28":{"start":{"line":84,"column":8},"end":{"line":84,"column":15}},"29":{"start":{"line":86,"column":6},"end":{"line":86,"column":38}},"30":{"start":{"line":90,"column":2},"end":{"line":103,"column":4}},"31":{"start":{"line":91,"column":4},"end":{"line":91,"column":30}},"32":{"start":{"line":92,"column":4},"end":{"line":92,"column":57}},"33":{"start":{"line":93,"column":4},"end":{"line":98,"column":5}},"34":{"start":{"line":94,"column":6},"end":{"line":94,"column":47}},"35":{"start":{"line":95,"column":6},"end":{"line":95,"column":13}},"36":{"start":{"line":96,"column":11},"end":{"line":98,"column":5}},"37":{"start":{"line":97,"column":6},"end":{"line":97,"column":13}},"38":{"start":{"line":100,"column":4},"end":{"line":102,"column":5}},"39":{"start":{"line":101,"column":6},"end":{"line":101,"column":37}},"40":{"start":{"line":105,"column":2},"end":{"line":135,"column":4}},"41":{"start":{"line":106,"column":4},"end":{"line":106,"column":30}},"42":{"start":{"line":107,"column":4},"end":{"line":107,"column":57}},"43":{"start":{"line":108,"column":4},"end":{"line":113,"column":5}},"44":{"start":{"line":109,"column":6},"end":{"line":109,"column":44}},"45":{"start":{"line":110,"column":6},"end":{"line":110,"column":13}},"46":{"start":{"line":111,"column":11},"end":{"line":113,"column":5}},"47":{"start":{"line":112,"column":6},"end":{"line":112,"column":13}},"48":{"start":{"line":115,"column":4},"end":{"line":120,"column":5}},"49":{"start":{"line":116,"column":6},"end":{"line":116,"column":76}},"50":{"start":{"line":117,"column":6},"end":{"line":119,"column":7}},"51":{"start":{"line":118,"column":8},"end":{"line":118,"column":35}},"52":{"start":{"line":121,"column":4},"end":{"line":121,"column":36}},"53":{"start":{"line":122,"column":4},"end":{"line":134,"column":5}},"54":{"start":{"line":123,"column":6},"end":{"line":123,"column":37}},"55":{"start":{"line":124,"column":11},"end":{"line":134,"column":5}},"56":{"start":{"line":125,"column":6},"end":{"line":125,"column":40}},"57":{"start":{"line":126,"column":11},"end":{"line":134,"column":5}},"58":{"start":{"line":127,"column":6},"end":{"line":127,"column":38}},"59":{"start":{"line":128,"column":11},"end":{"line":134,"column":5}},"60":{"start":{"line":129,"column":6},"end":{"line":129,"column":38}},"61":{"start":{"line":130,"column":11},"end":{"line":134,"column":5}},"62":{"start":{"line":131,"column":6},"end":{"line":131,"column":42}},"63":{"start":{"line":133,"column":6},"end":{"line":133,"column":43}},"64":{"start":{"line":137,"column":2},"end":{"line":142,"column":4}},"65":{"start":{"line":138,"column":4},"end":{"line":138,"column":78}},"66":{"start":{"line":139,"column":4},"end":{"line":141,"column":5}},"67":{"start":{"line":140,"column":6},"end":{"line":140,"column":44}},"68":{"start":{"line":144,"column":2},"end":{"line":166,"column":4}},"69":{"start":{"line":145,"column":4},"end":{"line":145,"column":86}},"70":{"start":{"line":146,"column":4},"end":{"line":149,"column":5}},"71":{"start":{"line":147,"column":6},"end":{"line":147,"column":44}},"72":{"start":{"line":148,"column":6},"end":{"line":148,"column":13}},"73":{"start":{"line":150,"column":4},"end":{"line":165,"column":5}},"74":{"start":{"line":151,"column":6},"end":{"line":164,"column":7}},"75":{"start":{"line":152,"column":8},"end":{"line":154,"column":9}},"76":{"start":{"line":153,"column":10},"end":{"line":153,"column":16}},"77":{"start":{"line":155,"column":8},"end":{"line":161,"column":10}},"78":{"start":{"line":162,"column":8},"end":{"line":162,"column":40}},"79":{"start":{"line":163,"column":8},"end":{"line":163,"column":50}},"80":{"start":{"line":168,"column":2},"end":{"line":190,"column":4}},"81":{"start":{"line":169,"column":4},"end":{"line":169,"column":43}},"82":{"start":{"line":170,"column":4},"end":{"line":170,"column":84}},"83":{"start":{"line":171,"column":4},"end":{"line":174,"column":5}},"84":{"start":{"line":172,"column":6},"end":{"line":172,"column":44}},"85":{"start":{"line":173,"column":6},"end":{"line":173,"column":13}},"86":{"start":{"line":175,"column":4},"end":{"line":189,"column":5}},"87":{"start":{"line":176,"column":6},"end":{"line":182,"column":8}},"88":{"start":{"line":183,"column":6},"end":{"line":183,"column":65}},"89":{"start":{"line":184,"column":6},"end":{"line":186,"column":7}},"90":{"start":{"line":185,"column":8},"end":{"line":185,"column":39}},"91":{"start":{"line":187,"column":6},"end":{"line":187,"column":38}},"92":{"start":{"line":188,"column":6},"end":{"line":188,"column":69}},"93":{"start":{"line":192,"column":2},"end":{"line":218,"column":4}},"94":{"start":{"line":193,"column":4},"end":{"line":193,"column":36}},"95":{"start":{"line":195,"column":4},"end":{"line":198,"column":5}},"96":{"start":{"line":196,"column":6},"end":{"line":196,"column":44}},"97":{"start":{"line":197,"column":6},"end":{"line":197,"column":13}},"98":{"start":{"line":199,"column":4},"end":{"line":202,"column":5}},"99":{"start":{"line":200,"column":6},"end":{"line":200,"column":31}},"100":{"start":{"line":201,"column":6},"end":{"line":201,"column":13}},"101":{"start":{"line":203,"column":4},"end":{"line":203,"column":45}},"102":{"start":{"line":204,"column":4},"end":{"line":217,"column":5}},"103":{"start":{"line":205,"column":6},"end":{"line":207,"column":7}},"104":{"start":{"line":206,"column":8},"end":{"line":206,"column":14}},"105":{"start":{"line":208,"column":6},"end":{"line":214,"column":8}},"106":{"start":{"line":215,"column":6},"end":{"line":215,"column":38}},"107":{"start":{"line":216,"column":6},"end":{"line":216,"column":69}},"108":{"start":{"line":220,"column":2},"end":{"line":227,"column":4}},"109":{"start":{"line":221,"column":4},"end":{"line":221,"column":36}},"110":{"start":{"line":223,"column":4},"end":{"line":226,"column":5}},"111":{"start":{"line":224,"column":6},"end":{"line":224,"column":44}},"112":{"start":{"line":225,"column":6},"end":{"line":225,"column":13}},"113":{"start":{"line":229,"column":2},"end":{"line":246,"column":4}},"114":{"start":{"line":230,"column":4},"end":{"line":230,"column":84}},"115":{"start":{"line":231,"column":4},"end":{"line":234,"column":5}},"116":{"start":{"line":232,"column":6},"end":{"line":232,"column":44}},"117":{"start":{"line":233,"column":6},"end":{"line":233,"column":13}},"118":{"start":{"line":235,"column":4},"end":{"line":245,"column":5}},"119":{"start":{"line":236,"column":6},"end":{"line":242,"column":8}},"120":{"start":{"line":243,"column":6},"end":{"line":243,"column":38}},"121":{"start":{"line":244,"column":6},"end":{"line":244,"column":69}},"122":{"start":{"line":248,"column":2},"end":{"line":264,"column":4}},"123":{"start":{"line":249,"column":4},"end":{"line":249,"column":30}},"124":{"start":{"line":250,"column":4},"end":{"line":263,"column":5}},"125":{"start":{"line":253,"column":6},"end":{"line":253,"column":31}},"126":{"start":{"line":257,"column":6},"end":{"line":262,"column":9}},"127":{"start":{"line":266,"column":2},"end":{"line":266,"column":32}},"128":{"start":{"line":269,"column":0},"end":{"line":269,"column":101}}},"branchMap":{"1":{"line":21,"type":"cond-expr","locations":[{"start":{"line":21,"column":70},"end":{"line":21,"column":73}},{"start":{"line":21,"column":76},"end":{"line":21,"column":94}}]},"2":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":46},"end":{"line":21,"column":49}},{"start":{"line":21,"column":53},"end":{"line":21,"column":67}}]},"3":{"line":60,"type":"cond-expr","locations":[{"start":{"line":60,"column":77},"end":{"line":60,"column":89}},{"start":{"line":60,"column":92},"end":{"line":60,"column":94}}]},"4":{"line":60,"type":"binary-expr","locations":[{"start":{"line":60,"column":24},"end":{"line":60,"column":44}},{"start":{"line":60,"column":48},"end":{"line":60,"column":74}}]},"5":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":6},"end":{"line":83,"column":6}},{"start":{"line":83,"column":6},"end":{"line":83,"column":6}}]},"6":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":4},"end":{"line":93,"column":4}},{"start":{"line":93,"column":4},"end":{"line":93,"column":4}}]},"7":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":11},"end":{"line":96,"column":11}},{"start":{"line":96,"column":11},"end":{"line":96,"column":11}}]},"8":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":4},"end":{"line":100,"column":4}},{"start":{"line":100,"column":4},"end":{"line":100,"column":4}}]},"9":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":4},"end":{"line":108,"column":4}},{"start":{"line":108,"column":4},"end":{"line":108,"column":4}}]},"10":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":11},"end":{"line":111,"column":11}},{"start":{"line":111,"column":11},"end":{"line":111,"column":11}}]},"11":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":4},"end":{"line":115,"column":4}},{"start":{"line":115,"column":4},"end":{"line":115,"column":4}}]},"12":{"line":115,"type":"binary-expr","locations":[{"start":{"line":115,"column":8},"end":{"line":115,"column":24}},{"start":{"line":115,"column":28},"end":{"line":115,"column":44}}]},"13":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":6},"end":{"line":117,"column":6}},{"start":{"line":117,"column":6},"end":{"line":117,"column":6}}]},"14":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":4},"end":{"line":122,"column":4}},{"start":{"line":122,"column":4},"end":{"line":122,"column":4}}]},"15":{"line":122,"type":"binary-expr","locations":[{"start":{"line":122,"column":8},"end":{"line":122,"column":17}},{"start":{"line":122,"column":21},"end":{"line":122,"column":52}}]},"16":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":11},"end":{"line":124,"column":11}},{"start":{"line":124,"column":11},"end":{"line":124,"column":11}}]},"17":{"line":124,"type":"binary-expr","locations":[{"start":{"line":124,"column":15},"end":{"line":124,"column":24}},{"start":{"line":124,"column":28},"end":{"line":124,"column":63}}]},"18":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":11},"end":{"line":126,"column":11}},{"start":{"line":126,"column":11},"end":{"line":126,"column":11}}]},"19":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":11},"end":{"line":128,"column":11}},{"start":{"line":128,"column":11},"end":{"line":128,"column":11}}]},"20":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":11},"end":{"line":130,"column":11}},{"start":{"line":130,"column":11},"end":{"line":130,"column":11}}]},"21":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":4},"end":{"line":139,"column":4}},{"start":{"line":139,"column":4},"end":{"line":139,"column":4}}]},"22":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":4},"end":{"line":146,"column":4}},{"start":{"line":146,"column":4},"end":{"line":146,"column":4}}]},"23":{"line":150,"type":"if","locations":[{"start":{"line":150,"column":4},"end":{"line":150,"column":4}},{"start":{"line":150,"column":4},"end":{"line":150,"column":4}}]},"24":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":8},"end":{"line":152,"column":8}},{"start":{"line":152,"column":8},"end":{"line":152,"column":8}}]},"25":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":4},"end":{"line":171,"column":4}},{"start":{"line":171,"column":4},"end":{"line":171,"column":4}}]},"26":{"line":175,"type":"if","locations":[{"start":{"line":175,"column":4},"end":{"line":175,"column":4}},{"start":{"line":175,"column":4},"end":{"line":175,"column":4}}]},"27":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":6},"end":{"line":184,"column":6}},{"start":{"line":184,"column":6},"end":{"line":184,"column":6}}]},"28":{"line":188,"type":"binary-expr","locations":[{"start":{"line":188,"column":26},"end":{"line":188,"column":43}},{"start":{"line":188,"column":47},"end":{"line":188,"column":68}}]},"29":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":4},"end":{"line":195,"column":4}},{"start":{"line":195,"column":4},"end":{"line":195,"column":4}}]},"30":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":4},"end":{"line":199,"column":4}},{"start":{"line":199,"column":4},"end":{"line":199,"column":4}}]},"31":{"line":205,"type":"if","locations":[{"start":{"line":205,"column":6},"end":{"line":205,"column":6}},{"start":{"line":205,"column":6},"end":{"line":205,"column":6}}]},"32":{"line":216,"type":"binary-expr","locations":[{"start":{"line":216,"column":26},"end":{"line":216,"column":43}},{"start":{"line":216,"column":47},"end":{"line":216,"column":68}}]},"33":{"line":223,"type":"if","locations":[{"start":{"line":223,"column":4},"end":{"line":223,"column":4}},{"start":{"line":223,"column":4},"end":{"line":223,"column":4}}]},"34":{"line":223,"type":"binary-expr","locations":[{"start":{"line":223,"column":8},"end":{"line":223,"column":18}},{"start":{"line":223,"column":22},"end":{"line":223,"column":41}}]},"35":{"line":231,"type":"if","locations":[{"start":{"line":231,"column":4},"end":{"line":231,"column":4}},{"start":{"line":231,"column":4},"end":{"line":231,"column":4}}]},"36":{"line":235,"type":"if","locations":[{"start":{"line":235,"column":4},"end":{"line":235,"column":4}},{"start":{"line":235,"column":4},"end":{"line":235,"column":4}}]},"37":{"line":244,"type":"binary-expr","locations":[{"start":{"line":244,"column":26},"end":{"line":244,"column":43}},{"start":{"line":244,"column":47},"end":{"line":244,"column":68}}]},"38":{"line":250,"type":"if","locations":[{"start":{"line":250,"column":4},"end":{"line":250,"column":4}},{"start":{"line":250,"column":4},"end":{"line":250,"column":4}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule findRelayQueryLeaves"," * "," */","","'use strict';","","var _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));","","var _possibleConstructorReturn3 = _interopRequireDefault(require('babel-runtime/helpers/possibleConstructorReturn'));","","var _inherits3 = _interopRequireDefault(require('babel-runtime/helpers/inherits'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","var EDGES = require('./RelayConnectionInterface').EDGES,","    PAGE_INFO = require('./RelayConnectionInterface').PAGE_INFO;","","/**"," * @internal"," *"," * Traverses a query and data in the record store to determine if there are"," * additional nodes that needs to be read from disk cache. If it  ncounters"," * a node that is not in `cachedRecords`, it will queued that node by adding it"," * into the `pendingNodeStates` list. If it encounters a node that was already read"," * but still missing data, then it will short circuit the evaluation since"," * there is no way for us to satisfy this query even with additional data from"," * disk cache and resturn"," */","","","function findRelayQueryLeaves(store, cachedRecords, queryNode, dataID, path, rangeCalls) {","  var finder = new RelayQueryLeavesFinder(store, cachedRecords);","","  var state = {","    dataID: dataID,","    missingData: false,","    path: path,","    rangeCalls: rangeCalls,","    rangeInfo: undefined","  };","  finder.visit(queryNode, state);","  return {","    missingData: state.missingData,","    pendingNodeStates: finder.getPendingNodeStates()","  };","}","","var RelayQueryLeavesFinder = function (_RelayQueryVisitor) {","  (0, _inherits3['default'])(RelayQueryLeavesFinder, _RelayQueryVisitor);","","  function RelayQueryLeavesFinder(store) {","    var cachedRecords = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};","    (0, _classCallCheck3['default'])(this, RelayQueryLeavesFinder);","","    var _this = (0, _possibleConstructorReturn3['default'])(this, _RelayQueryVisitor.call(this));","","    _this._store = store;","    _this._cachedRecords = cachedRecords;","    _this._pendingNodeStates = [];","    return _this;","  }","","  RelayQueryLeavesFinder.prototype.getPendingNodeStates = function getPendingNodeStates() {","    return this._pendingNodeStates;","  };","","  /**","   * Skip visiting children if missingData is already false.","   */","","","  RelayQueryLeavesFinder.prototype.traverse = function traverse(node, state) {","    var children = node.getChildren();","    for (var ii = 0; ii < children.length; ii++) {","      if (state.missingData) {","        return;","      }","      this.visit(children[ii], state);","    }","  };","","  RelayQueryLeavesFinder.prototype.visitFragment = function visitFragment(fragment, state) {","    var dataID = state.dataID;","    var recordState = this._store.getRecordState(dataID);","    if (recordState === require('./RelayRecordState').UNKNOWN) {","      this._handleMissingData(fragment, state);","      return;","    } else if (recordState === require('./RelayRecordState').NONEXISTENT) {","      return;","    }","","    if (require('./isCompatibleRelayFragmentType')(fragment, this._store.getType(dataID))) {","      this.traverse(fragment, state);","    }","  };","","  RelayQueryLeavesFinder.prototype.visitField = function visitField(field, state) {","    var dataID = state.dataID;","    var recordState = this._store.getRecordState(dataID);","    if (recordState === require('./RelayRecordState').UNKNOWN) {","      this._handleMissingData(field, state);","      return;","    } else if (recordState === require('./RelayRecordState').NONEXISTENT) {","      return;","    }","","    if (state.rangeCalls && !state.rangeInfo) {","      var metadata = this._store.getRangeMetadata(dataID, state.rangeCalls);","      if (metadata) {","        state.rangeInfo = metadata;","      }","    }","    var rangeInfo = state.rangeInfo;","    if (rangeInfo && field.getSchemaName() === EDGES) {","      this._visitEdges(field, state);","    } else if (rangeInfo && field.getSchemaName() === PAGE_INFO) {","      this._visitPageInfo(field, state);","    } else if (!field.canHaveSubselections()) {","      this._visitScalar(field, state);","    } else if (field.isPlural()) {","      this._visitPlural(field, state);","    } else if (field.isConnection()) {","      this._visitConnection(field, state);","    } else {","      this._visitLinkedField(field, state);","    }","  };","","  RelayQueryLeavesFinder.prototype._visitScalar = function _visitScalar(field, state) {","    var fieldData = this._store.getField(state.dataID, field.getStorageKey());","    if (fieldData === undefined) {","      this._handleMissingData(field, state);","    }","  };","","  RelayQueryLeavesFinder.prototype._visitPlural = function _visitPlural(field, state) {","    var dataIDs = this._store.getLinkedRecordIDs(state.dataID, field.getStorageKey());","    if (dataIDs === undefined) {","      this._handleMissingData(field, state);","      return;","    }","    if (dataIDs) {","      for (var ii = 0; ii < dataIDs.length; ii++) {","        if (state.missingData) {","          break;","        }","        var nextState = {","          dataID: dataIDs[ii],","          missingData: false,","          path: require('./RelayQueryPath').getPath(state.path, field, dataIDs[ii]),","          rangeCalls: undefined,","          rangeInfo: undefined","        };","        this.traverse(field, nextState);","        state.missingData = nextState.missingData;","      }","    }","  };","","  RelayQueryLeavesFinder.prototype._visitConnection = function _visitConnection(field, state) {","    var calls = field.getCallsWithValues();","    var dataID = this._store.getLinkedRecordID(state.dataID, field.getStorageKey());","    if (dataID === undefined) {","      this._handleMissingData(field, state);","      return;","    }","    if (dataID) {","      var nextState = {","        dataID: dataID,","        missingData: false,","        path: require('./RelayQueryPath').getPath(state.path, field, dataID),","        rangeCalls: calls,","        rangeInfo: null","      };","      var metadata = this._store.getRangeMetadata(dataID, calls);","      if (metadata) {","        nextState.rangeInfo = metadata;","      }","      this.traverse(field, nextState);","      state.missingData = state.missingData || nextState.missingData;","    }","  };","","  RelayQueryLeavesFinder.prototype._visitEdges = function _visitEdges(field, state) {","    var rangeInfo = state.rangeInfo;","    // Doesn't have  `__range__` loaded","    if (!rangeInfo) {","      this._handleMissingData(field, state);","      return;","    }","    if (rangeInfo.diffCalls.length) {","      state.missingData = true;","      return;","    }","    var edgeIDs = rangeInfo.requestedEdgeIDs;","    for (var ii = 0; ii < edgeIDs.length; ii++) {","      if (state.missingData) {","        break;","      }","      var nextState = {","        dataID: edgeIDs[ii],","        missingData: false,","        path: require('./RelayQueryPath').getPath(state.path, field, edgeIDs[ii]),","        rangeCalls: undefined,","        rangeInfo: undefined","      };","      this.traverse(field, nextState);","      state.missingData = state.missingData || nextState.missingData;","    }","  };","","  RelayQueryLeavesFinder.prototype._visitPageInfo = function _visitPageInfo(field, state) {","    var rangeInfo = state.rangeInfo;","","    if (!rangeInfo || !rangeInfo.pageInfo) {","      this._handleMissingData(field, state);","      return;","    }","  };","","  RelayQueryLeavesFinder.prototype._visitLinkedField = function _visitLinkedField(field, state) {","    var dataID = this._store.getLinkedRecordID(state.dataID, field.getStorageKey());","    if (dataID === undefined) {","      this._handleMissingData(field, state);","      return;","    }","    if (dataID) {","      var nextState = {","        dataID: dataID,","        missingData: false,","        path: require('./RelayQueryPath').getPath(state.path, field, dataID),","        rangeCalls: undefined,","        rangeInfo: undefined","      };","      this.traverse(field, nextState);","      state.missingData = state.missingData || nextState.missingData;","    }","  };","","  RelayQueryLeavesFinder.prototype._handleMissingData = function _handleMissingData(node, state) {","    var dataID = state.dataID;","    if (this._cachedRecords.hasOwnProperty(dataID)) {","      // We have read data for this `dataID` from disk, but","      // we still don't have data for the relevant field.","      state.missingData = true;","    } else {","      // Store node in `pendingNodeStates` because we have not read data for","      // this `dataID` from disk.","      this._pendingNodeStates.push({","        dataID: dataID,","        node: node,","        path: state.path,","        rangeCalls: state.rangeCalls","      });","    }","  };","","  return RelayQueryLeavesFinder;","}(require('./RelayQueryVisitor'));","","module.exports = require('./RelayProfiler').instrument('findRelayQueryLeaves', findRelayQueryLeaves);"],"l":{"15":1,"17":1,"19":1,"21":3,"23":1,"39":1,"40":0,"42":0,"49":0,"50":0,"56":1,"57":1,"59":1,"60":0,"61":0,"63":0,"65":0,"66":0,"67":0,"68":0,"71":1,"72":0,"80":1,"81":0,"82":0,"83":0,"84":0,"86":0,"90":1,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"100":0,"101":0,"105":1,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"115":0,"116":0,"117":0,"118":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"133":0,"137":1,"138":0,"139":0,"140":0,"144":1,"145":0,"146":0,"147":0,"148":0,"150":0,"151":0,"152":0,"153":0,"155":0,"162":0,"163":0,"168":1,"169":0,"170":0,"171":0,"172":0,"173":0,"175":0,"176":0,"183":0,"184":0,"185":0,"187":0,"188":0,"192":1,"193":0,"195":0,"196":0,"197":0,"199":0,"200":0,"201":0,"203":0,"204":0,"205":0,"206":0,"208":0,"215":0,"216":0,"220":1,"221":0,"223":0,"224":0,"225":0,"229":1,"230":0,"231":0,"232":0,"233":0,"235":0,"236":0,"243":0,"244":0,"248":1,"249":0,"250":0,"253":0,"257":0,"266":1,"269":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/flattenRelayQuery.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/flattenRelayQuery.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":4,"7":1,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":1,"29":1,"30":0,"31":0,"32":0,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":1,"52":1},"b":{"1":[4,0],"2":[4,4],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":4,"2":0,"3":0,"4":0,"5":0,"6":1,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":37}}},"2":{"name":"flattenRelayQuery","line":34,"loc":{"start":{"line":34,"column":0},"end":{"line":34,"column":42}}},"3":{"name":"toQuery","line":46,"loc":{"start":{"line":46,"column":0},"end":{"line":46,"column":49}}},"4":{"name":"(anonymous_4)","line":52,"loc":{"start":{"line":52,"column":18},"end":{"line":52,"column":35}}},"5":{"name":"(anonymous_5)","line":58,"loc":{"start":{"line":58,"column":62},"end":{"line":58,"column":78}}},"6":{"name":"(anonymous_6)","line":72,"loc":{"start":{"line":72,"column":26},"end":{"line":72,"column":56}}},"7":{"name":"RelayQueryFlattener","line":75,"loc":{"start":{"line":75,"column":2},"end":{"line":75,"column":54}}},"8":{"name":"visitFragment","line":84,"loc":{"start":{"line":84,"column":48},"end":{"line":84,"column":84}}},"9":{"name":"visitField","line":103,"loc":{"start":{"line":103,"column":45},"end":{"line":103,"column":78}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":117}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":83}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":81}},"5":{"start":{"line":23,"column":0},"end":{"line":23,"column":97}},"6":{"start":{"line":23,"column":39},"end":{"line":23,"column":95}},"7":{"start":{"line":34,"column":0},"end":{"line":44,"column":1}},"8":{"start":{"line":35,"column":2},"end":{"line":35,"column":84}},"9":{"start":{"line":36,"column":2},"end":{"line":41,"column":4}},"10":{"start":{"line":42,"column":2},"end":{"line":42,"column":34}},"11":{"start":{"line":43,"column":2},"end":{"line":43,"column":73}},"12":{"start":{"line":46,"column":0},"end":{"line":70,"column":1}},"13":{"start":{"line":47,"column":2},"end":{"line":48,"column":55}},"14":{"start":{"line":50,"column":2},"end":{"line":50,"column":20}},"15":{"start":{"line":51,"column":2},"end":{"line":51,"column":98}},"16":{"start":{"line":52,"column":2},"end":{"line":57,"column":5}},"17":{"start":{"line":53,"column":4},"end":{"line":53,"column":45}},"18":{"start":{"line":54,"column":4},"end":{"line":56,"column":5}},"19":{"start":{"line":55,"column":6},"end":{"line":55,"column":68}},"20":{"start":{"line":58,"column":2},"end":{"line":63,"column":5}},"21":{"start":{"line":59,"column":4},"end":{"line":59,"column":50}},"22":{"start":{"line":60,"column":4},"end":{"line":62,"column":5}},"23":{"start":{"line":61,"column":6},"end":{"line":61,"column":74}},"24":{"start":{"line":66,"column":2},"end":{"line":68,"column":3}},"25":{"start":{"line":67,"column":4},"end":{"line":67,"column":16}},"26":{"start":{"line":69,"column":2},"end":{"line":69,"column":30}},"27":{"start":{"line":72,"column":0},"end":{"line":119,"column":34}},"28":{"start":{"line":73,"column":2},"end":{"line":73,"column":70}},"29":{"start":{"line":75,"column":2},"end":{"line":82,"column":3}},"30":{"start":{"line":76,"column":4},"end":{"line":76,"column":64}},"31":{"start":{"line":78,"column":4},"end":{"line":78,"column":97}},"32":{"start":{"line":80,"column":4},"end":{"line":80,"column":59}},"33":{"start":{"line":81,"column":4},"end":{"line":81,"column":17}},"34":{"start":{"line":84,"column":2},"end":{"line":101,"column":4}},"35":{"start":{"line":85,"column":4},"end":{"line":85,"column":30}},"36":{"start":{"line":86,"column":4},"end":{"line":89,"column":5}},"37":{"start":{"line":87,"column":6},"end":{"line":87,"column":33}},"38":{"start":{"line":88,"column":6},"end":{"line":88,"column":13}},"39":{"start":{"line":90,"column":4},"end":{"line":90,"column":65}},"40":{"start":{"line":91,"column":4},"end":{"line":99,"column":5}},"41":{"start":{"line":92,"column":6},"end":{"line":97,"column":8}},"42":{"start":{"line":98,"column":6},"end":{"line":98,"column":62}},"43":{"start":{"line":100,"column":4},"end":{"line":100,"column":43}},"44":{"start":{"line":103,"column":2},"end":{"line":116,"column":4}},"45":{"start":{"line":104,"column":4},"end":{"line":104,"column":37}},"46":{"start":{"line":105,"column":4},"end":{"line":105,"column":59}},"47":{"start":{"line":106,"column":4},"end":{"line":114,"column":5}},"48":{"start":{"line":107,"column":6},"end":{"line":112,"column":8}},"49":{"start":{"line":113,"column":6},"end":{"line":113,"column":56}},"50":{"start":{"line":115,"column":4},"end":{"line":115,"column":40}},"51":{"start":{"line":118,"column":2},"end":{"line":118,"column":29}},"52":{"start":{"line":121,"column":0},"end":{"line":121,"column":95}}},"branchMap":{"1":{"line":23,"type":"cond-expr","locations":[{"start":{"line":23,"column":70},"end":{"line":23,"column":73}},{"start":{"line":23,"column":76},"end":{"line":23,"column":94}}]},"2":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":46},"end":{"line":23,"column":49}},{"start":{"line":23,"column":53},"end":{"line":23,"column":67}}]},"3":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":42},"end":{"line":35,"column":49}},{"start":{"line":35,"column":53},"end":{"line":35,"column":82}}]},"4":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":33},"end":{"line":43,"column":40}},{"start":{"line":43,"column":44},"end":{"line":43,"column":70}}]},"5":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":4},"end":{"line":54,"column":4}},{"start":{"line":54,"column":4},"end":{"line":54,"column":4}}]},"6":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":4},"end":{"line":60,"column":4}},{"start":{"line":60,"column":4},"end":{"line":60,"column":4}}]},"7":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":2},"end":{"line":66,"column":2}},{"start":{"line":66,"column":2},"end":{"line":66,"column":2}}]},"8":{"line":66,"type":"binary-expr","locations":[{"start":{"line":66,"column":6},"end":{"line":66,"column":24}},{"start":{"line":66,"column":28},"end":{"line":66,"column":55}},{"start":{"line":66,"column":59},"end":{"line":66,"column":75}}]},"9":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":4},"end":{"line":86,"column":4}},{"start":{"line":86,"column":4},"end":{"line":86,"column":4}}]},"10":{"line":86,"type":"binary-expr","locations":[{"start":{"line":86,"column":8},"end":{"line":86,"column":35}},{"start":{"line":86,"column":39},"end":{"line":86,"column":58}}]},"11":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":4},"end":{"line":91,"column":4}},{"start":{"line":91,"column":4},"end":{"line":91,"column":4}}]},"12":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":4},"end":{"line":106,"column":4}},{"start":{"line":106,"column":4},"end":{"line":106,"column":4}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule flattenRelayQuery"," * "," */","","'use strict';","","var _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));","","var _possibleConstructorReturn3 = _interopRequireDefault(require('babel-runtime/helpers/possibleConstructorReturn'));","","var _inherits3 = _interopRequireDefault(require('babel-runtime/helpers/inherits'));","","var _from2 = _interopRequireDefault(require('babel-runtime/core-js/array/from'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","/**"," * @internal"," *"," * `flattenRelayQuery(query)` returns a clone of `query` with fields inside of"," * fragments recursively flattened into the nearest ancestor field."," *"," * The result can be null if `node` only contains empty fragments or fragments"," * that only contain empty fragments."," */","function flattenRelayQuery(node, options) {","  var flattener = new RelayQueryFlattener(options && options.shouldRemoveFragments);","  var state = {","    node: node,","    type: node.getType(),","    flattenedFieldMap: new (require('fbjs/lib/Map'))(),","    flattenedFragmentMap: new (require('fbjs/lib/Map'))()","  };","  flattener.traverse(node, state);","  return toQuery(node, state, !!(options && options.preserveEmptyNodes));","}","","function toQuery(node, _ref, preserveEmptyNodes) {","  var flattenedFieldMap = _ref.flattenedFieldMap,","      flattenedFragmentMap = _ref.flattenedFragmentMap;","","  var children = [];","  var aliases = (0, _from2['default'])(flattenedFieldMap.keys()).sort(require('./sortTypeFirst'));","  aliases.forEach(function (alias) {","    var field = flattenedFieldMap.get(alias);","    if (field) {","      children.push(toQuery(field.node, field, preserveEmptyNodes));","    }","  });","  (0, _from2['default'])(flattenedFragmentMap.keys()).forEach(function (type) {","    var fragment = flattenedFragmentMap.get(type);","    if (fragment) {","      children.push(toQuery(fragment.node, fragment, preserveEmptyNodes));","    }","  });","  // Pattern nodes may contain non-scalar fields without children that","  // should not be removed.","  if (preserveEmptyNodes && node.canHaveSubselections() && !children.length) {","    return node;","  }","  return node.clone(children);","}","","var RelayQueryFlattener = function (_RelayQueryVisitor) {","  (0, _inherits3['default'])(RelayQueryFlattener, _RelayQueryVisitor);","","  function RelayQueryFlattener(shouldRemoveFragments) {","    (0, _classCallCheck3['default'])(this, RelayQueryFlattener);","","    var _this = (0, _possibleConstructorReturn3['default'])(this, _RelayQueryVisitor.call(this));","","    _this._shouldRemoveFragments = !!shouldRemoveFragments;","    return _this;","  }","","  RelayQueryFlattener.prototype.visitFragment = function visitFragment(node, state) {","    var type = node.getType();","    if (this._shouldRemoveFragments || type === state.type) {","      this.traverse(node, state);","      return;","    }","    var flattenedFragment = state.flattenedFragmentMap.get(type);","    if (!flattenedFragment) {","      flattenedFragment = {","        node: node,","        type: type,","        flattenedFieldMap: new (require('fbjs/lib/Map'))(),","        flattenedFragmentMap: new (require('fbjs/lib/Map'))()","      };","      state.flattenedFragmentMap.set(type, flattenedFragment);","    }","    this.traverse(node, flattenedFragment);","  };","","  RelayQueryFlattener.prototype.visitField = function visitField(node, state) {","    var hash = node.getShallowHash();","    var flattenedField = state.flattenedFieldMap.get(hash);","    if (!flattenedField) {","      flattenedField = {","        node: node,","        type: node.getType(),","        flattenedFieldMap: new (require('fbjs/lib/Map'))(),","        flattenedFragmentMap: new (require('fbjs/lib/Map'))()","      };","      state.flattenedFieldMap.set(hash, flattenedField);","    }","    this.traverse(node, flattenedField);","  };","","  return RelayQueryFlattener;","}(require('./RelayQueryVisitor'));","","module.exports = require('./RelayProfiler').instrument('flattenRelayQuery', flattenRelayQuery);"],"l":{"15":1,"17":1,"19":1,"21":1,"23":4,"34":1,"35":0,"36":0,"42":0,"43":0,"46":1,"47":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"58":0,"59":0,"60":0,"61":0,"66":0,"67":0,"69":0,"72":1,"73":1,"75":1,"76":0,"78":0,"80":0,"81":0,"84":1,"85":0,"86":0,"87":0,"88":0,"90":0,"91":0,"92":0,"98":0,"100":0,"103":1,"104":0,"105":0,"106":0,"107":0,"113":0,"115":0,"118":1,"121":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/flattenSplitRelayQueries.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/flattenSplitRelayQueries.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"flattenSplitRelayQueries","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":48}}}},"statementMap":{"1":{"start":{"line":23,"column":0},"end":{"line":40,"column":1}},"2":{"start":{"line":24,"column":2},"end":{"line":24,"column":28}},"3":{"start":{"line":25,"column":2},"end":{"line":25,"column":29}},"4":{"start":{"line":26,"column":2},"end":{"line":38,"column":3}},"5":{"start":{"line":27,"column":4},"end":{"line":27,"column":33}},"6":{"start":{"line":28,"column":4},"end":{"line":30,"column":42}},"7":{"start":{"line":32,"column":4},"end":{"line":34,"column":5}},"8":{"start":{"line":33,"column":6},"end":{"line":33,"column":38}},"9":{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},"10":{"start":{"line":36,"column":6},"end":{"line":36,"column":40}},"11":{"start":{"line":39,"column":2},"end":{"line":39,"column":26}},"12":{"start":{"line":42,"column":0},"end":{"line":42,"column":42}}},"branchMap":{"1":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":32,"column":4}},{"start":{"line":32,"column":4},"end":{"line":32,"column":4}}]},"2":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":4},"end":{"line":35,"column":4}},{"start":{"line":35,"column":4},"end":{"line":35,"column":4}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule flattenSplitRelayQueries"," * "," */","","'use strict';","","/**"," * Flattens the nested structure returned by `splitDeferredRelayQueries`."," *"," * Right now our internals discard the information about the relationship"," * between the queries that is encoded in the nested structure."," *"," * @internal"," */","function flattenSplitRelayQueries(splitQueries) {","  var flattenedQueries = [];","  var queue = [splitQueries];","  while (queue.length) {","    splitQueries = queue.shift();","    var _splitQueries = splitQueries,","        required = _splitQueries.required,","        deferred = _splitQueries.deferred;","","    if (required) {","      flattenedQueries.push(required);","    }","    if (deferred.length) {","      queue.push.apply(queue, deferred);","    }","  }","  return flattenedQueries;","}","","module.exports = flattenSplitRelayQueries;"],"l":{"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"32":0,"33":0,"35":0,"36":0,"39":0,"42":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/forEachRootCallArg.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/forEachRootCallArg.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"forEachRootCallArg","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":45}}},"2":{"name":"each","line":24,"loc":{"start":{"line":24,"column":2},"end":{"line":24,"column":41}}},"3":{"name":"(anonymous_3)","line":26,"loc":{"start":{"line":26,"column":34},"end":{"line":26,"column":51}}}},"statementMap":{"1":{"start":{"line":22,"column":0},"end":{"line":39,"column":1}},"2":{"start":{"line":23,"column":2},"end":{"line":23,"column":122}},"3":{"start":{"line":24,"column":2},"end":{"line":35,"column":3}},"4":{"start":{"line":25,"column":4},"end":{"line":34,"column":5}},"5":{"start":{"line":26,"column":6},"end":{"line":28,"column":9}},"6":{"start":{"line":27,"column":8},"end":{"line":27,"column":31}},"7":{"start":{"line":30,"column":6},"end":{"line":33,"column":9}},"8":{"start":{"line":36,"column":2},"end":{"line":36,"column":49}},"9":{"start":{"line":37,"column":2},"end":{"line":37,"column":75}},"10":{"start":{"line":38,"column":2},"end":{"line":38,"column":38}},"11":{"start":{"line":41,"column":0},"end":{"line":41,"column":36}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":25,"column":4}},{"start":{"line":25,"column":4},"end":{"line":25,"column":4}}]},"2":{"line":32,"type":"cond-expr","locations":[{"start":{"line":32,"column":57},"end":{"line":32,"column":61}},{"start":{"line":32,"column":64},"end":{"line":32,"column":177}}]},"3":{"line":32,"type":"cond-expr","locations":[{"start":{"line":32,"column":106},"end":{"line":32,"column":125}},{"start":{"line":32,"column":128},"end":{"line":32,"column":177}}]},"4":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":28},"end":{"line":37,"column":42}},{"start":{"line":37,"column":46},"end":{"line":37,"column":66}},{"start":{"line":37,"column":70},"end":{"line":37,"column":74}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule forEachRootCallArg"," * "," */","","'use strict';","","/**"," * @internal"," *"," * Iterates over the identifying arguments in the supplied root call."," * If the identifying value is null or undefined, the supplied callback will be"," * invoked once."," */","function forEachRootCallArg(query, callback) {","  require('fbjs/lib/invariant')(!query.getBatchCall(), 'forEachRootCallArg(): Cannot iterate over batch call variables.');","  function each(identifyingArgValue, fn) {","    if (Array.isArray(identifyingArgValue)) {","      identifyingArgValue.forEach(function (value) {","        return each(value, fn);","      });","    } else {","      fn({","        identifyingArgValue: identifyingArgValue,","        identifyingArgKey: identifyingArgValue == null ? null : typeof identifyingArgValue === 'string' ? identifyingArgValue : require('./stableStringify')(identifyingArgValue)","      });","    }","  }","  var identifyingArg = query.getIdentifyingArg();","  var identifyingArgValue = identifyingArg && identifyingArg.value || null;","  each(identifyingArgValue, callback);","}","","module.exports = forEachRootCallArg;"],"l":{"22":1,"23":0,"24":1,"25":0,"26":0,"27":0,"30":0,"36":0,"37":0,"38":0,"41":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/fromGraphQL.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/fromGraphQL.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":1,"7":0,"8":0,"9":0,"10":1,"11":0,"12":1,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":1,"24":0,"25":1,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":1},"b":{},"f":{"1":1,"2":0,"3":0,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0},"fnMap":{"1":{"name":"(anonymous_1)","line":21,"loc":{"start":{"line":21,"column":9},"end":{"line":21,"column":27}}},"2":{"name":"Field","line":22,"loc":{"start":{"line":22,"column":4},"end":{"line":22,"column":23}}},"3":{"name":"(anonymous_3)","line":26,"loc":{"start":{"line":26,"column":21},"end":{"line":26,"column":33}}},"4":{"name":"(anonymous_4)","line":31,"loc":{"start":{"line":31,"column":4},"end":{"line":31,"column":21}}},"5":{"name":"(anonymous_5)","line":36,"loc":{"start":{"line":36,"column":12},"end":{"line":36,"column":33}}},"6":{"name":"Fragment","line":37,"loc":{"start":{"line":37,"column":4},"end":{"line":37,"column":27}}},"7":{"name":"(anonymous_7)","line":41,"loc":{"start":{"line":41,"column":24},"end":{"line":41,"column":36}}},"8":{"name":"(anonymous_8)","line":46,"loc":{"start":{"line":46,"column":4},"end":{"line":46,"column":21}}},"9":{"name":"Query","line":51,"loc":{"start":{"line":51,"column":9},"end":{"line":51,"column":31}}},"10":{"name":"(anonymous_10)","line":56,"loc":{"start":{"line":56,"column":13},"end":{"line":56,"column":35}}},"11":{"name":"Operation","line":57,"loc":{"start":{"line":57,"column":4},"end":{"line":57,"column":28}}},"12":{"name":"(anonymous_12)","line":61,"loc":{"start":{"line":61,"column":25},"end":{"line":61,"column":37}}},"13":{"name":"(anonymous_13)","line":66,"loc":{"start":{"line":66,"column":4},"end":{"line":66,"column":21}}},"14":{"name":"createNode","line":73,"loc":{"start":{"line":73,"column":0},"end":{"line":73,"column":40}}}},"statementMap":{"1":{"start":{"line":20,"column":0},"end":{"line":71,"column":2}},"2":{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},"3":{"start":{"line":23,"column":6},"end":{"line":23,"column":43}},"4":{"start":{"line":26,"column":4},"end":{"line":28,"column":6}},"5":{"start":{"line":27,"column":6},"end":{"line":27,"column":31}},"6":{"start":{"line":30,"column":4},"end":{"line":30,"column":17}},"7":{"start":{"line":32,"column":4},"end":{"line":32,"column":64}},"8":{"start":{"line":33,"column":4},"end":{"line":33,"column":136}},"9":{"start":{"line":34,"column":4},"end":{"line":34,"column":16}},"10":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"11":{"start":{"line":38,"column":6},"end":{"line":38,"column":46}},"12":{"start":{"line":41,"column":4},"end":{"line":43,"column":6}},"13":{"start":{"line":42,"column":6},"end":{"line":42,"column":34}},"14":{"start":{"line":45,"column":4},"end":{"line":45,"column":20}},"15":{"start":{"line":47,"column":4},"end":{"line":47,"column":67}},"16":{"start":{"line":48,"column":4},"end":{"line":48,"column":145}},"17":{"start":{"line":49,"column":4},"end":{"line":49,"column":16}},"18":{"start":{"line":52,"column":4},"end":{"line":52,"column":63}},"19":{"start":{"line":53,"column":4},"end":{"line":53,"column":126}},"20":{"start":{"line":54,"column":4},"end":{"line":54,"column":16}},"21":{"start":{"line":57,"column":4},"end":{"line":59,"column":5}},"22":{"start":{"line":58,"column":6},"end":{"line":58,"column":47}},"23":{"start":{"line":61,"column":4},"end":{"line":63,"column":6}},"24":{"start":{"line":62,"column":6},"end":{"line":62,"column":35}},"25":{"start":{"line":65,"column":4},"end":{"line":65,"column":21}},"26":{"start":{"line":67,"column":4},"end":{"line":67,"column":68}},"27":{"start":{"line":68,"column":4},"end":{"line":68,"column":152}},"28":{"start":{"line":69,"column":4},"end":{"line":69,"column":16}},"29":{"start":{"line":73,"column":0},"end":{"line":77,"column":1}},"30":{"start":{"line":74,"column":2},"end":{"line":74,"column":21}},"31":{"start":{"line":75,"column":2},"end":{"line":75,"column":62}},"32":{"start":{"line":76,"column":2},"end":{"line":76,"column":53}},"33":{"start":{"line":79,"column":0},"end":{"line":79,"column":29}}},"branchMap":{},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule fromGraphQL"," * "," */","","'use strict';","","/**"," * @internal"," *"," * Converts GraphQL nodes to RelayQuery nodes."," */","var fromGraphQL = {","  Field: function (_Field) {","    function Field(_x) {","      return _Field.apply(this, arguments);","    }","","    Field.toString = function () {","      return _Field.toString();","    };","","    return Field;","  }(function (query) {","    var node = createNode(query, require('./RelayQuery').Field);","    require('fbjs/lib/invariant')(node instanceof require('./RelayQuery').Field, 'fromGraphQL.Field(): Expected a GraphQL field node.');","    return node;","  }),","  Fragment: function (_Fragment) {","    function Fragment(_x2) {","      return _Fragment.apply(this, arguments);","    }","","    Fragment.toString = function () {","      return _Fragment.toString();","    };","","    return Fragment;","  }(function (query) {","    var node = createNode(query, require('./RelayQuery').Fragment);","    require('fbjs/lib/invariant')(node instanceof require('./RelayQuery').Fragment, 'fromGraphQL.Fragment(): Expected a GraphQL fragment node.');","    return node;","  }),","  Query: function Query(query) {","    var node = createNode(query, require('./RelayQuery').Root);","    require('fbjs/lib/invariant')(node instanceof require('./RelayQuery').Root, 'fromGraphQL.Query(): Expected a root node.');","    return node;","  },","  Operation: function (_Operation) {","    function Operation(_x3) {","      return _Operation.apply(this, arguments);","    }","","    Operation.toString = function () {","      return _Operation.toString();","    };","","    return Operation;","  }(function (query) {","    var node = createNode(query, require('./RelayQuery').Operation);","    require('fbjs/lib/invariant')(node instanceof require('./RelayQuery').Operation, 'fromGraphQL.Operation(): Expected a mutation/subscription node.');","    return node;","  })","};","","function createNode(query, desiredType) {","  var variables = {};","  var route = require('./RelayMetaRoute').get('$fromGraphQL');","  return desiredType.create(query, route, variables);","}","","module.exports = fromGraphQL;"],"l":{"20":1,"22":1,"23":0,"26":1,"27":0,"30":1,"32":0,"33":0,"34":0,"37":1,"38":0,"41":1,"42":0,"45":1,"47":0,"48":0,"49":0,"52":0,"53":0,"54":0,"57":1,"58":0,"61":1,"62":0,"65":1,"67":0,"68":0,"69":0,"73":1,"74":0,"75":0,"76":0,"79":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/generateClientEdgeID.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/generateClientEdgeID.js","s":{"1":1,"2":0,"3":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"generateClientEdgeID","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":47}}}},"statementMap":{"1":{"start":{"line":22,"column":0},"end":{"line":24,"column":1}},"2":{"start":{"line":23,"column":2},"end":{"line":23,"column":44}},"3":{"start":{"line":26,"column":0},"end":{"line":26,"column":38}}},"branchMap":{},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule generateClientEdgeID"," * "," */","","'use strict';","","/**"," * Generate an edge client id for edges on connections based on the range it"," * belongs to and the node it contains."," *"," * @internal"," */","","function generateClientEdgeID(rangeID, nodeID) {","  return 'client:' + rangeID + ':' + nodeID;","}","","module.exports = generateClientEdgeID;"],"l":{"22":1,"23":0,"26":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/generateClientID.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/generateClientID.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"generateClientID","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":28}}}},"statementMap":{"1":{"start":{"line":14,"column":0},"end":{"line":14,"column":18}},"2":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"3":{"start":{"line":23,"column":0},"end":{"line":25,"column":1}},"4":{"start":{"line":24,"column":2},"end":{"line":24,"column":31}},"5":{"start":{"line":27,"column":0},"end":{"line":27,"column":34}}},"branchMap":{},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule generateClientID"," */","","'use strict';","","var _clientID = 1;","var _prefix = 'client:' + require('fbjs/lib/crc32')('' + require('fbjs/lib/performanceNow')());","","/**"," * Generate a unique clientID for GraphQL data objects that do not already have"," * an ID or their ID = null"," *"," * @internal"," */","function generateClientID() {","  return _prefix + _clientID++;","}","","module.exports = generateClientID;"],"l":{"14":1,"15":1,"23":1,"24":0,"27":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/generateConcreteFragmentID.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/generateConcreteFragmentID.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"generateConcreteFragmentID","line":30,"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":38}}}},"statementMap":{"1":{"start":{"line":18,"column":0},"end":{"line":18,"column":24}},"2":{"start":{"line":20,"column":0},"end":{"line":20,"column":24}},"3":{"start":{"line":30,"column":0},"end":{"line":32,"column":1}},"4":{"start":{"line":31,"column":2},"end":{"line":31,"column":64}},"5":{"start":{"line":34,"column":0},"end":{"line":34,"column":44}}},"branchMap":{},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule generateConcreteFragmentID"," * "," */","","'use strict';","","// Static ids always end with `:<HASH>` where HASH is an alphanumeric transform","// of an auto-incrementing index. A double-colon is used to distinguish between","// client ids and static ids that happen to hash to `:client`.","var SUFFIX = '::client';","","var _nextFragmentID = 0;","","/**"," * The \"concrete fragment id\" uniquely identifies a Relay.QL`fragment ...`"," * within the source code of an application and will remain the same across"," * runs of a particular version of an application."," *"," * This function can be used to generate a unique id for fragments constructed"," * at runtime and is guaranteed not to conflict with statically created ids."," */","function generateConcreteFragmentID() {","  return require('fbjs/lib/base62')(_nextFragmentID++) + SUFFIX;","}","","module.exports = generateConcreteFragmentID;"],"l":{"18":1,"20":1,"30":1,"31":0,"34":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/generateForceIndex.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/generateForceIndex.js","s":{"1":1,"2":1,"3":0,"4":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"generateForceIndex","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":30}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":15}},"2":{"start":{"line":23,"column":0},"end":{"line":25,"column":1}},"3":{"start":{"line":24,"column":2},"end":{"line":24,"column":18}},"4":{"start":{"line":27,"column":0},"end":{"line":27,"column":36}}},"branchMap":{},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule generateForceIndex"," * "," */","","'use strict';","","var _index = 1;","","/**"," * Generate a new force index used to write GraphQL data in the store. A new"," * force index can be used to overwrite previous ranges."," *"," * @internal"," */","function generateForceIndex() {","  return _index++;","}","","module.exports = generateForceIndex;"],"l":{"15":1,"23":1,"24":0,"27":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/generateRQLFieldAlias.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/generateRQLFieldAlias.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":1},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"generateRQLFieldAlias","line":31,"loc":{"start":{"line":31,"column":0},"end":{"line":31,"column":38}}}},"statementMap":{"1":{"start":{"line":17,"column":0},"end":{"line":17,"column":17}},"2":{"start":{"line":31,"column":0},"end":{"line":39,"column":1}},"3":{"start":{"line":33,"column":2},"end":{"line":33,"column":33}},"4":{"start":{"line":34,"column":2},"end":{"line":36,"column":3}},"5":{"start":{"line":35,"column":4},"end":{"line":35,"column":17}},"6":{"start":{"line":38,"column":2},"end":{"line":38,"column":110}},"7":{"start":{"line":41,"column":0},"end":{"line":41,"column":39}}},"branchMap":{"1":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule generateRQLFieldAlias"," * "," */","","'use strict';","","/* eslint-disable no-bitwise */","","var PREFIX = '_';","","/**"," * @internal"," *"," * Sanitizes a stringified GraphQL field (including any calls and their values)"," * to produce a valid alias."," *"," * This is used to auto-alias fields in generated queries, so that developers"," * composing multiple components together don't have to worry about collisions"," * between components requesting the same fields. (Explicit aliases are only"," * needed within a single component when it uses the same field multiple times,"," * in order to differentiate these fields in the props)."," */","function generateRQLFieldAlias(input) {","  // Field names with no calls can be used as aliases without encoding","  var index = input.indexOf('.');","  if (index === -1) {","    return input;","  }","  // Unsign crc32 hash so we do not base62 encode a negative number.","  return PREFIX + input.substr(0, index) + require('fbjs/lib/base62')(require('fbjs/lib/crc32')(input) >>> 0);","}","","module.exports = generateRQLFieldAlias;"],"l":{"17":1,"31":1,"33":0,"34":0,"35":0,"38":0,"41":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/getRangeBehavior.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/getRangeBehavior.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"getRangeBehavior","line":25,"loc":{"start":{"line":25,"column":0},"end":{"line":25,"column":49}}},"2":{"name":"getObjectFromCalls","line":50,"loc":{"start":{"line":50,"column":0},"end":{"line":50,"column":35}}},"3":{"name":"(anonymous_3)","line":52,"loc":{"start":{"line":52,"column":16},"end":{"line":52,"column":32}}}},"statementMap":{"1":{"start":{"line":25,"column":0},"end":{"line":38,"column":1}},"2":{"start":{"line":26,"column":2},"end":{"line":37,"column":3}},"3":{"start":{"line":27,"column":4},"end":{"line":27,"column":53}},"4":{"start":{"line":28,"column":4},"end":{"line":28,"column":44}},"5":{"start":{"line":30,"column":4},"end":{"line":30,"column":100}},"6":{"start":{"line":31,"column":4},"end":{"line":31,"column":52}},"7":{"start":{"line":32,"column":4},"end":{"line":34,"column":5}},"8":{"start":{"line":33,"column":6},"end":{"line":33,"column":18}},"9":{"start":{"line":35,"column":4},"end":{"line":35,"column":183}},"10":{"start":{"line":36,"column":4},"end":{"line":36,"column":20}},"11":{"start":{"line":50,"column":0},"end":{"line":56,"column":1}},"12":{"start":{"line":51,"column":2},"end":{"line":51,"column":21}},"13":{"start":{"line":52,"column":2},"end":{"line":54,"column":5}},"14":{"start":{"line":53,"column":4},"end":{"line":53,"column":38}},"15":{"start":{"line":55,"column":2},"end":{"line":55,"column":19}},"16":{"start":{"line":58,"column":0},"end":{"line":58,"column":34}}},"branchMap":{"1":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":26,"column":2}},{"start":{"line":26,"column":2},"end":{"line":26,"column":2}}]},"2":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":32,"column":4}},{"start":{"line":32,"column":4},"end":{"line":32,"column":4}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule getRangeBehavior"," * "," */","","'use strict';","","/**"," * Return the action (prepend/append) to use when adding an item to"," * the range with the specified calls."," *"," * Ex:"," * rangeBehaviors: `{'orderby(recent)': 'append'}`"," * calls: `[{name: 'orderby', value: 'recent'}]`"," *"," * Returns `'append'`"," */","function getRangeBehavior(rangeBehaviors, calls) {","  if (typeof rangeBehaviors === 'function') {","    var rangeFilterCalls = getObjectFromCalls(calls);","    return rangeBehaviors(rangeFilterCalls);","  } else {","    var rangeBehaviorKey = calls.map(require('./serializeRelayQueryCall')).sort().join('').slice(1);","    var behavior = rangeBehaviors[rangeBehaviorKey];","    if (behavior == null) {","      return null;","    }","    require('fbjs/lib/invariant')(typeof behavior === 'string', 'getRangeBehavior(): Expected range behavior for key `%s` to be a ' + 'string, got `%s`.', rangeBehaviorKey, behavior);","    return behavior;","  }","}","","/**"," * Returns an object representation of the rangeFilterCalls that"," * will be passed to config.rangeBehaviors"," *"," * Example:"," * calls: `[{name: 'orderby', value: 'recent'}]`"," *"," * Returns:"," * `{orderby: 'recent'}`","*/","function getObjectFromCalls(calls) {","  var behaviors = {};","  calls.forEach(function (call) {","    behaviors[call.name] = call.value;","  });","  return behaviors;","}","","module.exports = getRangeBehavior;"],"l":{"25":1,"26":0,"27":0,"28":0,"30":0,"31":0,"32":0,"33":0,"35":0,"36":0,"50":1,"51":0,"52":0,"53":0,"55":0,"58":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/getRelayQueries.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/getRelayQueries.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1},"b":{"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":37}}},"2":{"name":"getRelayQueries","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":43}}},"3":{"name":"buildQuerySet","line":48,"loc":{"start":{"line":48,"column":0},"end":{"line":48,"column":41}}},"4":{"name":"(anonymous_4)","line":50,"loc":{"start":{"line":50,"column":39},"end":{"line":50,"column":63}}},"5":{"name":"(anonymous_5)","line":53,"loc":{"start":{"line":53,"column":48},"end":{"line":53,"column":69}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":82}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":97}},"3":{"start":{"line":17,"column":39},"end":{"line":17,"column":95}},"4":{"start":{"line":19,"column":0},"end":{"line":19,"column":49}},"5":{"start":{"line":26,"column":0},"end":{"line":43,"column":1}},"6":{"start":{"line":27,"column":2},"end":{"line":27,"column":72}},"7":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"8":{"start":{"line":29,"column":4},"end":{"line":29,"column":43}},"9":{"start":{"line":31,"column":2},"end":{"line":31,"column":40}},"10":{"start":{"line":32,"column":2},"end":{"line":35,"column":3}},"11":{"start":{"line":33,"column":4},"end":{"line":33,"column":15}},"12":{"start":{"line":34,"column":4},"end":{"line":34,"column":37}},"13":{"start":{"line":36,"column":2},"end":{"line":36,"column":79}},"14":{"start":{"line":37,"column":2},"end":{"line":39,"column":3}},"15":{"start":{"line":38,"column":4},"end":{"line":38,"column":27}},"16":{"start":{"line":40,"column":2},"end":{"line":40,"column":49}},"17":{"start":{"line":41,"column":2},"end":{"line":41,"column":29}},"18":{"start":{"line":42,"column":2},"end":{"line":42,"column":18}},"19":{"start":{"line":48,"column":0},"end":{"line":74,"column":1}},"20":{"start":{"line":49,"column":2},"end":{"line":49,"column":20}},"21":{"start":{"line":50,"column":2},"end":{"line":52,"column":5}},"22":{"start":{"line":51,"column":4},"end":{"line":51,"column":34}},"23":{"start":{"line":53,"column":2},"end":{"line":72,"column":5}},"24":{"start":{"line":54,"column":4},"end":{"line":57,"column":5}},"25":{"start":{"line":55,"column":6},"end":{"line":55,"column":201}},"26":{"start":{"line":56,"column":6},"end":{"line":56,"column":13}},"27":{"start":{"line":58,"column":4},"end":{"line":58,"column":48}},"28":{"start":{"line":59,"column":4},"end":{"line":70,"column":5}},"29":{"start":{"line":60,"column":6},"end":{"line":60,"column":104}},"30":{"start":{"line":61,"column":6},"end":{"line":61,"column":205}},"31":{"start":{"line":62,"column":6},"end":{"line":69,"column":7}},"32":{"start":{"line":63,"column":8},"end":{"line":63,"column":134}},"33":{"start":{"line":64,"column":8},"end":{"line":64,"column":59}},"34":{"start":{"line":65,"column":8},"end":{"line":68,"column":9}},"35":{"start":{"line":66,"column":10},"end":{"line":66,"column":42}},"36":{"start":{"line":67,"column":10},"end":{"line":67,"column":17}},"37":{"start":{"line":71,"column":4},"end":{"line":71,"column":31}},"38":{"start":{"line":73,"column":2},"end":{"line":73,"column":18}},"39":{"start":{"line":76,"column":0},"end":{"line":76,"column":92}}},"branchMap":{"1":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":70},"end":{"line":17,"column":73}},{"start":{"line":17,"column":76},"end":{"line":17,"column":94}}]},"2":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":46},"end":{"line":17,"column":49}},{"start":{"line":17,"column":53},"end":{"line":17,"column":67}}]},"3":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"4":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":32,"column":2}},{"start":{"line":32,"column":2},"end":{"line":32,"column":2}}]},"5":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]},"6":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":4},"end":{"line":54,"column":4}},{"start":{"line":54,"column":4},"end":{"line":54,"column":4}}]},"7":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":4},"end":{"line":59,"column":4}},{"start":{"line":59,"column":4},"end":{"line":59,"column":4}}]},"8":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":6},"end":{"line":62,"column":6}},{"start":{"line":62,"column":6},"end":{"line":62,"column":6}}]},"9":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":8},"end":{"line":65,"column":8}},{"start":{"line":65,"column":8},"end":{"line":65,"column":8}}]},"10":{"line":65,"type":"binary-expr","locations":[{"start":{"line":65,"column":12},"end":{"line":65,"column":27}},{"start":{"line":65,"column":31},"end":{"line":65,"column":65}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule getRelayQueries"," * "," */","","'use strict';","","var _keys2 = _interopRequireDefault(require('babel-runtime/core-js/object/keys'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","var queryCache = new (require('fbjs/lib/Map'))();","","/**"," * @internal"," *"," * `getRelayQueries` retrieves all queries for a component given a route."," */","function getRelayQueries(Component, route) {","  var queryCachingEnabled = require('./RelayQueryCaching').getEnabled();","  if (!queryCachingEnabled) {","    return buildQuerySet(Component, route);","  }","  var cache = queryCache.get(Component);","  if (!cache) {","    cache = {};","    queryCache.set(Component, cache);","  }","  var cacheKey = route.name + ':' + require('./stableStringify')(route.params);","  if (cache.hasOwnProperty(cacheKey)) {","    return cache[cacheKey];","  }","  var querySet = buildQuerySet(Component, route);","  cache[cacheKey] = querySet;","  return querySet;","}","","/**"," * @internal"," */","function buildQuerySet(Component, route) {","  var querySet = {};","  Component.getFragmentNames().forEach(function (fragmentName) {","    querySet[fragmentName] = null;","  });","  (0, _keys2['default'])(route.queries).forEach(function (queryName) {","    if (!Component.hasFragment(queryName)) {","      require('fbjs/lib/warning')(false, 'Relay.QL: query `%s.queries.%s` is invalid, expected fragment ' + '`%s.fragments.%s` to be defined.', route.name, queryName, Component.displayName, queryName);","      return;","    }","    var queryBuilder = route.queries[queryName];","    if (queryBuilder) {","      var concreteQuery = require('./buildRQL').Query(queryBuilder, Component, queryName, route.params);","      require('fbjs/lib/invariant')(concreteQuery !== undefined, 'Relay.QL: query `%s.queries.%s` is invalid, a typical query is ' + 'defined using: () => Relay.QL`query { ... }`.', route.name, queryName);","      if (concreteQuery) {","        var rootQuery = require('./RelayQuery').Root.create(concreteQuery, require('./RelayMetaRoute').get(route.name), route.params);","        var identifyingArg = rootQuery.getIdentifyingArg();","        if (!identifyingArg || identifyingArg.value !== undefined) {","          querySet[queryName] = rootQuery;","          return;","        }","      }","    }","    querySet[queryName] = null;","  });","  return querySet;","}","","module.exports = require('./RelayProfiler').instrument('Relay.getQueries', getRelayQueries);"],"l":{"15":1,"17":1,"19":1,"26":1,"27":0,"28":0,"29":0,"31":0,"32":0,"33":0,"34":0,"36":0,"37":0,"38":0,"40":0,"41":0,"42":0,"48":1,"49":0,"50":0,"51":0,"53":0,"54":0,"55":0,"56":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"71":0,"73":0,"76":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/GraphQLMutatorConstants.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/GraphQLMutatorConstants.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":14,"column":0},"end":{"line":34,"column":2}},"2":{"start":{"line":36,"column":0},"end":{"line":36,"column":90}},"3":{"start":{"line":37,"column":0},"end":{"line":37,"column":88}},"4":{"start":{"line":38,"column":0},"end":{"line":38,"column":91}},"5":{"start":{"line":40,"column":0},"end":{"line":40,"column":87}},"6":{"start":{"line":41,"column":0},"end":{"line":41,"column":83}},"7":{"start":{"line":42,"column":0},"end":{"line":42,"column":83}},"8":{"start":{"line":44,"column":0},"end":{"line":44,"column":80}},"9":{"start":{"line":45,"column":0},"end":{"line":45,"column":80}},"10":{"start":{"line":46,"column":0},"end":{"line":46,"column":81}},"11":{"start":{"line":47,"column":0},"end":{"line":47,"column":81}},"12":{"start":{"line":48,"column":0},"end":{"line":48,"column":80}},"13":{"start":{"line":50,"column":0},"end":{"line":50,"column":41}}},"branchMap":{},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule GraphQLMutatorConstants"," */","","'use strict';","","var GraphQLMutatorConstants = {","  APPEND: 'append',","  IGNORE: 'ignore',","  PREPEND: 'prepend',","  REFETCH: 'refetch',","  REMOVE: 'remove',","","  NODE_DELETE_HANDLER: 'node_delete',","  RANGE_ADD_HANDLER: 'range_add',","  RANGE_DELETE_HANDLER: 'range_delete',","","  HANDLER_TYPES: {},","","  OPTIMISTIC_UPDATE: 'optimistic',","  SERVER_UPDATE: 'server',","  POLLER_UPDATE: 'poller',","","  UPDATE_TYPES: {},","","  RANGE_OPERATIONS: {}","};","","GraphQLMutatorConstants.HANDLER_TYPES[GraphQLMutatorConstants.NODE_DELETE_HANDLER] = true;","GraphQLMutatorConstants.HANDLER_TYPES[GraphQLMutatorConstants.RANGE_ADD_HANDLER] = true;","GraphQLMutatorConstants.HANDLER_TYPES[GraphQLMutatorConstants.RANGE_DELETE_HANDLER] = true;","","GraphQLMutatorConstants.UPDATE_TYPES[GraphQLMutatorConstants.OPTIMISTIC_UPDATE] = true;","GraphQLMutatorConstants.UPDATE_TYPES[GraphQLMutatorConstants.SERVER_UPDATE] = true;","GraphQLMutatorConstants.UPDATE_TYPES[GraphQLMutatorConstants.POLLER_UPDATE] = true;","","GraphQLMutatorConstants.RANGE_OPERATIONS[GraphQLMutatorConstants.APPEND] = true;","GraphQLMutatorConstants.RANGE_OPERATIONS[GraphQLMutatorConstants.IGNORE] = true;","GraphQLMutatorConstants.RANGE_OPERATIONS[GraphQLMutatorConstants.PREPEND] = true;","GraphQLMutatorConstants.RANGE_OPERATIONS[GraphQLMutatorConstants.REFETCH] = true;","GraphQLMutatorConstants.RANGE_OPERATIONS[GraphQLMutatorConstants.REMOVE] = true;","","module.exports = GraphQLMutatorConstants;"],"l":{"14":1,"36":1,"37":1,"38":1,"40":1,"41":1,"42":1,"44":1,"45":1,"46":1,"47":1,"48":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/GraphQLRange.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/GraphQLRange.js","s":{"1":1,"2":1,"3":1,"4":1,"5":3,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":1,"28":0,"29":0,"30":0,"31":1,"32":0,"33":1,"34":0,"35":0,"36":1,"37":0,"38":1,"39":1,"40":0,"41":0,"42":1,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":0,"50":1,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":1,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":1,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":1,"112":0,"113":1,"114":0,"115":1,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":1,"123":0,"124":0,"125":0,"126":0,"127":0,"128":1,"129":0,"130":0,"131":0,"132":0,"133":0,"134":1,"135":0,"136":0,"137":0,"138":0,"139":1,"140":0,"141":0,"142":0,"143":0,"144":1,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":1,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":1,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":1,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":1,"247":0,"248":0,"249":1,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":1,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":1,"273":0,"274":1,"275":0,"276":1,"277":0,"278":1,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":1,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":1,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":1,"405":0,"406":1,"407":0,"408":1,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":1,"416":0,"417":0,"418":1,"419":1,"420":0,"421":0,"422":1},"b":{"1":[3,0],"2":[3,3],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0],"11":[0,0],"12":[0,0,0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0,0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0,0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0,0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0,0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0,0],"94":[0,0],"95":[0,0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0,0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0,0],"115":[0,0],"116":[0,0,0],"117":[0,0],"118":[0,0],"119":[0,0]},"f":{"1":3,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":37}}},"2":{"name":"callsArrayToObject","line":33,"loc":{"start":{"line":33,"column":0},"end":{"line":33,"column":40}}},"3":{"name":"isStaticCall","line":70,"loc":{"start":{"line":70,"column":0},"end":{"line":70,"column":29}}},"4":{"name":"isValidRangeCall","line":81,"loc":{"start":{"line":81,"column":0},"end":{"line":81,"column":33}}},"5":{"name":"isValidRangeCallValues","line":98,"loc":{"start":{"line":98,"column":0},"end":{"line":98,"column":39}}},"6":{"name":"validateEdge","line":107,"loc":{"start":{"line":107,"column":0},"end":{"line":107,"column":28}}},"7":{"name":"validateEdges","line":115,"loc":{"start":{"line":115,"column":0},"end":{"line":115,"column":30}}},"8":{"name":"(anonymous_8)","line":150,"loc":{"start":{"line":150,"column":19},"end":{"line":150,"column":31}}},"9":{"name":"GraphQLRange","line":151,"loc":{"start":{"line":151,"column":2},"end":{"line":151,"column":26}}},"10":{"name":"reset","line":157,"loc":{"start":{"line":157,"column":33},"end":{"line":157,"column":50}}},"11":{"name":"_resetSegment","line":180,"loc":{"start":{"line":180,"column":41},"end":{"line":180,"column":71}}},"12":{"name":"_getSegmentIndexByCursor","line":191,"loc":{"start":{"line":191,"column":52},"end":{"line":191,"column":94}}},"13":{"name":"_getSegmentIndexByID","line":210,"loc":{"start":{"line":210,"column":48},"end":{"line":210,"column":82}}},"14":{"name":"_addStaticEdges","line":228,"loc":{"start":{"line":228,"column":43},"end":{"line":228,"column":87}}},"15":{"name":"addItems","line":254,"loc":{"start":{"line":254,"column":36},"end":{"line":254,"column":83}}},"16":{"name":"getFirstSegment","line":348,"loc":{"start":{"line":348,"column":43},"end":{"line":348,"column":70}}},"17":{"name":"getLastSegment","line":357,"loc":{"start":{"line":357,"column":42},"end":{"line":357,"column":68}}},"18":{"name":"_concatSegments","line":372,"loc":{"start":{"line":372,"column":43},"end":{"line":372,"column":82}}},"19":{"name":"prependEdge","line":390,"loc":{"start":{"line":390,"column":39},"end":{"line":390,"column":66}}},"20":{"name":"appendEdge","line":405,"loc":{"start":{"line":405,"column":38},"end":{"line":405,"column":64}}},"21":{"name":"_removeEdgeIfApplicable","line":419,"loc":{"start":{"line":419,"column":51},"end":{"line":419,"column":90}}},"22":{"name":"_dedupEdgesAgainstRange","line":435,"loc":{"start":{"line":435,"column":51},"end":{"line":435,"column":91}}},"23":{"name":"(anonymous_23)","line":438,"loc":{"start":{"line":438,"column":24},"end":{"line":438,"column":40}}},"24":{"name":"_addAfterFirstItems","line":455,"loc":{"start":{"line":455,"column":47},"end":{"line":455,"column":123}}},"25":{"name":"_reconcileAfterFirstEdges","line":531,"loc":{"start":{"line":531,"column":53},"end":{"line":531,"column":112}}},"26":{"name":"_addBeforeLastItems","line":558,"loc":{"start":{"line":558,"column":47},"end":{"line":558,"column":123}}},"27":{"name":"_reconcileBeforeLastEdges","line":634,"loc":{"start":{"line":634,"column":53},"end":{"line":634,"column":112}}},"28":{"name":"removeEdgeWithID","line":659,"loc":{"start":{"line":659,"column":44},"end":{"line":659,"column":74}}},"29":{"name":"retrieveRangeInfoForQuery","line":672,"loc":{"start":{"line":672,"column":53},"end":{"line":672,"column":114}}},"30":{"name":"_retrieveRangeInfoForStaticCalls","line":718,"loc":{"start":{"line":718,"column":60},"end":{"line":718,"column":114}}},"31":{"name":"_getAppendedIDsForQueuedRecord","line":747,"loc":{"start":{"line":747,"column":58},"end":{"line":747,"column":112}}},"32":{"name":"_getRemovedIDsForQueuedRecord","line":757,"loc":{"start":{"line":757,"column":57},"end":{"line":757,"column":110}}},"33":{"name":"_getPrependedIDsForQueuedRecord","line":767,"loc":{"start":{"line":767,"column":59},"end":{"line":767,"column":114}}},"34":{"name":"_retrieveRangeInfoForFirstQuery","line":778,"loc":{"start":{"line":778,"column":59},"end":{"line":778,"column":126}}},"35":{"name":"(anonymous_35)","line":858,"loc":{"start":{"line":858,"column":51},"end":{"line":858,"column":69}}},"36":{"name":"_retrieveRangeInfoForLastQuery","line":881,"loc":{"start":{"line":881,"column":58},"end":{"line":881,"column":124}}},"37":{"name":"(anonymous_37)","line":961,"loc":{"start":{"line":961,"column":51},"end":{"line":961,"column":69}}},"38":{"name":"fromJSON","line":978,"loc":{"start":{"line":978,"column":26},"end":{"line":978,"column":56}}},"39":{"name":"(anonymous_39)","line":988,"loc":{"start":{"line":988,"column":49},"end":{"line":988,"column":78}}},"40":{"name":"toJSON","line":994,"loc":{"start":{"line":994,"column":34},"end":{"line":994,"column":52}}},"41":{"name":"__debug","line":998,"loc":{"start":{"line":998,"column":35},"end":{"line":998,"column":54}}},"42":{"name":"getEdgeIDs","line":1004,"loc":{"start":{"line":1004,"column":38},"end":{"line":1004,"column":60}}},"43":{"name":"(anonymous_43)","line":1006,"loc":{"start":{"line":1006,"column":34},"end":{"line":1006,"column":53}}},"44":{"name":"(anonymous_44)","line":1009,"loc":{"start":{"line":1009,"column":62},"end":{"line":1009,"column":79}}},"45":{"name":"getSegmentedEdgeIDs","line":1015,"loc":{"start":{"line":1015,"column":47},"end":{"line":1015,"column":78}}},"46":{"name":"(anonymous_46)","line":1016,"loc":{"start":{"line":1016,"column":37},"end":{"line":1016,"column":56}}},"47":{"name":"_callsToString","line":1030,"loc":{"start":{"line":1030,"column":0},"end":{"line":1030,"column":31}}},"48":{"name":"(anonymous_48)","line":1031,"loc":{"start":{"line":1031,"column":19},"end":{"line":1031,"column":35}}}},"statementMap":{"1":{"start":{"line":14,"column":0},"end":{"line":14,"column":81}},"2":{"start":{"line":16,"column":0},"end":{"line":16,"column":95}},"3":{"start":{"line":18,"column":0},"end":{"line":18,"column":95}},"4":{"start":{"line":20,"column":0},"end":{"line":20,"column":97}},"5":{"start":{"line":20,"column":39},"end":{"line":20,"column":95}},"6":{"start":{"line":22,"column":0},"end":{"line":25,"column":70}},"7":{"start":{"line":33,"column":0},"end":{"line":60,"column":1}},"8":{"start":{"line":34,"column":2},"end":{"line":34,"column":17}},"9":{"start":{"line":35,"column":2},"end":{"line":50,"column":3}},"10":{"start":{"line":36,"column":4},"end":{"line":49,"column":5}},"11":{"start":{"line":37,"column":6},"end":{"line":37,"column":37}},"12":{"start":{"line":38,"column":6},"end":{"line":38,"column":34}},"13":{"start":{"line":41,"column":6},"end":{"line":43,"column":7}},"14":{"start":{"line":42,"column":8},"end":{"line":42,"column":25}},"15":{"start":{"line":45,"column":6},"end":{"line":47,"column":7}},"16":{"start":{"line":46,"column":8},"end":{"line":46,"column":17}},"17":{"start":{"line":48,"column":6},"end":{"line":48,"column":36}},"18":{"start":{"line":52,"column":2},"end":{"line":58,"column":3}},"19":{"start":{"line":53,"column":4},"end":{"line":53,"column":142}},"20":{"start":{"line":54,"column":4},"end":{"line":54,"column":31}},"21":{"start":{"line":55,"column":9},"end":{"line":58,"column":3}},"22":{"start":{"line":56,"column":4},"end":{"line":56,"column":139}},"23":{"start":{"line":57,"column":4},"end":{"line":57,"column":29}},"24":{"start":{"line":59,"column":2},"end":{"line":59,"column":15}},"25":{"start":{"line":70,"column":0},"end":{"line":72,"column":1}},"26":{"start":{"line":71,"column":2},"end":{"line":71,"column":75}},"27":{"start":{"line":81,"column":0},"end":{"line":90,"column":1}},"28":{"start":{"line":82,"column":2},"end":{"line":82,"column":47}},"29":{"start":{"line":83,"column":2},"end":{"line":83,"column":45}},"30":{"start":{"line":89,"column":2},"end":{"line":89,"column":57}},"31":{"start":{"line":98,"column":0},"end":{"line":100,"column":1}},"32":{"start":{"line":99,"column":2},"end":{"line":99,"column":108}},"33":{"start":{"line":107,"column":0},"end":{"line":110,"column":1}},"34":{"start":{"line":108,"column":2},"end":{"line":108,"column":141}},"35":{"start":{"line":109,"column":2},"end":{"line":109,"column":104}},"36":{"start":{"line":115,"column":0},"end":{"line":117,"column":1}},"37":{"start":{"line":116,"column":2},"end":{"line":116,"column":30}},"38":{"start":{"line":150,"column":0},"end":{"line":1022,"column":4}},"39":{"start":{"line":151,"column":2},"end":{"line":155,"column":3}},"40":{"start":{"line":152,"column":4},"end":{"line":152,"column":57}},"41":{"start":{"line":154,"column":4},"end":{"line":154,"column":17}},"42":{"start":{"line":157,"column":2},"end":{"line":173,"column":4}},"43":{"start":{"line":163,"column":4},"end":{"line":163,"column":103}},"44":{"start":{"line":169,"column":4},"end":{"line":169,"column":32}},"45":{"start":{"line":171,"column":4},"end":{"line":171,"column":27}},"46":{"start":{"line":172,"column":4},"end":{"line":172,"column":26}},"47":{"start":{"line":180,"column":2},"end":{"line":183,"column":4}},"48":{"start":{"line":181,"column":4},"end":{"line":181,"column":123}},"49":{"start":{"line":182,"column":4},"end":{"line":182,"column":71}},"50":{"start":{"line":191,"column":2},"end":{"line":202,"column":4}},"51":{"start":{"line":192,"column":4},"end":{"line":192,"column":28}},"52":{"start":{"line":194,"column":4},"end":{"line":200,"column":5}},"53":{"start":{"line":195,"column":6},"end":{"line":199,"column":7}},"54":{"start":{"line":196,"column":8},"end":{"line":196,"column":18}},"55":{"start":{"line":197,"column":13},"end":{"line":199,"column":7}},"56":{"start":{"line":198,"column":8},"end":{"line":198,"column":26}},"57":{"start":{"line":201,"column":4},"end":{"line":201,"column":24}},"58":{"start":{"line":210,"column":2},"end":{"line":218,"column":4}},"59":{"start":{"line":212,"column":4},"end":{"line":216,"column":5}},"60":{"start":{"line":213,"column":6},"end":{"line":215,"column":7}},"61":{"start":{"line":214,"column":8},"end":{"line":214,"column":18}},"62":{"start":{"line":217,"column":4},"end":{"line":217,"column":16}},"63":{"start":{"line":228,"column":2},"end":{"line":243,"column":4}},"64":{"start":{"line":229,"column":4},"end":{"line":229,"column":43}},"65":{"start":{"line":230,"column":4},"end":{"line":230,"column":28}},"66":{"start":{"line":231,"column":4},"end":{"line":231,"column":28}},"67":{"start":{"line":233,"column":4},"end":{"line":237,"column":5}},"68":{"start":{"line":234,"column":6},"end":{"line":234,"column":27}},"69":{"start":{"line":235,"column":6},"end":{"line":235,"column":77}},"70":{"start":{"line":236,"column":6},"end":{"line":236,"column":39}},"71":{"start":{"line":239,"column":4},"end":{"line":242,"column":6}},"72":{"start":{"line":254,"column":2},"end":{"line":341,"column":4}},"73":{"start":{"line":255,"column":4},"end":{"line":255,"column":25}},"74":{"start":{"line":256,"column":4},"end":{"line":256,"column":47}},"75":{"start":{"line":257,"column":4},"end":{"line":258,"column":30}},"76":{"start":{"line":260,"column":4},"end":{"line":263,"column":5}},"77":{"start":{"line":261,"column":6},"end":{"line":261,"column":46}},"78":{"start":{"line":262,"column":6},"end":{"line":262,"column":13}},"79":{"start":{"line":265,"column":4},"end":{"line":268,"column":5}},"80":{"start":{"line":266,"column":6},"end":{"line":266,"column":236}},"81":{"start":{"line":267,"column":6},"end":{"line":267,"column":13}},"82":{"start":{"line":271,"column":4},"end":{"line":274,"column":5}},"83":{"start":{"line":272,"column":6},"end":{"line":272,"column":63}},"84":{"start":{"line":273,"column":6},"end":{"line":273,"column":13}},"85":{"start":{"line":276,"column":4},"end":{"line":340,"column":5}},"86":{"start":{"line":278,"column":6},"end":{"line":307,"column":7}},"87":{"start":{"line":280,"column":8},"end":{"line":291,"column":9}},"88":{"start":{"line":281,"column":10},"end":{"line":283,"column":11}},"89":{"start":{"line":282,"column":12},"end":{"line":282,"column":79}},"90":{"start":{"line":286,"column":10},"end":{"line":286,"column":92}},"91":{"start":{"line":290,"column":10},"end":{"line":290,"column":81}},"92":{"start":{"line":294,"column":8},"end":{"line":305,"column":9}},"93":{"start":{"line":295,"column":10},"end":{"line":295,"column":27}},"94":{"start":{"line":296,"column":10},"end":{"line":296,"column":59}},"95":{"start":{"line":297,"column":10},"end":{"line":304,"column":11}},"96":{"start":{"line":303,"column":12},"end":{"line":303,"column":45}},"97":{"start":{"line":306,"column":8},"end":{"line":306,"column":92}},"98":{"start":{"line":308,"column":11},"end":{"line":340,"column":5}},"99":{"start":{"line":310,"column":6},"end":{"line":339,"column":7}},"100":{"start":{"line":312,"column":8},"end":{"line":323,"column":9}},"101":{"start":{"line":313,"column":10},"end":{"line":315,"column":11}},"102":{"start":{"line":314,"column":12},"end":{"line":314,"column":76}},"103":{"start":{"line":318,"column":10},"end":{"line":318,"column":91}},"104":{"start":{"line":322,"column":10},"end":{"line":322,"column":80}},"105":{"start":{"line":326,"column":8},"end":{"line":337,"column":9}},"106":{"start":{"line":327,"column":10},"end":{"line":327,"column":58}},"107":{"start":{"line":328,"column":10},"end":{"line":328,"column":58}},"108":{"start":{"line":329,"column":10},"end":{"line":336,"column":11}},"109":{"start":{"line":335,"column":12},"end":{"line":335,"column":45}},"110":{"start":{"line":338,"column":8},"end":{"line":338,"column":92}},"111":{"start":{"line":348,"column":2},"end":{"line":350,"column":4}},"112":{"start":{"line":349,"column":4},"end":{"line":349,"column":36}},"113":{"start":{"line":357,"column":2},"end":{"line":359,"column":4}},"114":{"start":{"line":358,"column":4},"end":{"line":358,"column":67}},"115":{"start":{"line":372,"column":2},"end":{"line":381,"column":4}},"116":{"start":{"line":373,"column":4},"end":{"line":373,"column":185}},"117":{"start":{"line":374,"column":4},"end":{"line":374,"column":59}},"118":{"start":{"line":375,"column":4},"end":{"line":375,"column":64}},"119":{"start":{"line":376,"column":4},"end":{"line":380,"column":5}},"120":{"start":{"line":377,"column":6},"end":{"line":377,"column":56}},"121":{"start":{"line":379,"column":6},"end":{"line":379,"column":114}},"122":{"start":{"line":390,"column":2},"end":{"line":396,"column":4}},"123":{"start":{"line":391,"column":4},"end":{"line":391,"column":23}},"124":{"start":{"line":392,"column":4},"end":{"line":392,"column":26}},"125":{"start":{"line":393,"column":4},"end":{"line":393,"column":39}},"126":{"start":{"line":394,"column":4},"end":{"line":394,"column":41}},"127":{"start":{"line":395,"column":4},"end":{"line":395,"column":30}},"128":{"start":{"line":405,"column":2},"end":{"line":411,"column":4}},"129":{"start":{"line":406,"column":4},"end":{"line":406,"column":23}},"130":{"start":{"line":407,"column":4},"end":{"line":407,"column":25}},"131":{"start":{"line":408,"column":4},"end":{"line":408,"column":39}},"132":{"start":{"line":409,"column":4},"end":{"line":409,"column":40}},"133":{"start":{"line":410,"column":4},"end":{"line":410,"column":29}},"134":{"start":{"line":419,"column":2},"end":{"line":425,"column":4}},"135":{"start":{"line":420,"column":4},"end":{"line":420,"column":63}},"136":{"start":{"line":421,"column":4},"end":{"line":421,"column":46}},"137":{"start":{"line":422,"column":4},"end":{"line":424,"column":5}},"138":{"start":{"line":423,"column":6},"end":{"line":423,"column":50}},"139":{"start":{"line":435,"column":2},"end":{"line":442,"column":4}},"140":{"start":{"line":436,"column":4},"end":{"line":436,"column":21}},"141":{"start":{"line":438,"column":4},"end":{"line":441,"column":7}},"142":{"start":{"line":439,"column":6},"end":{"line":439,"column":65}},"143":{"start":{"line":440,"column":6},"end":{"line":440,"column":52}},"144":{"start":{"line":455,"column":2},"end":{"line":516,"column":4}},"145":{"start":{"line":456,"column":4},"end":{"line":456,"column":25}},"146":{"start":{"line":457,"column":4},"end":{"line":457,"column":30}},"147":{"start":{"line":458,"column":4},"end":{"line":458,"column":28}},"148":{"start":{"line":459,"column":4},"end":{"line":485,"column":5}},"149":{"start":{"line":460,"column":6},"end":{"line":460,"column":64}},"150":{"start":{"line":461,"column":6},"end":{"line":464,"column":7}},"151":{"start":{"line":462,"column":8},"end":{"line":462,"column":118}},"152":{"start":{"line":463,"column":8},"end":{"line":463,"column":15}},"153":{"start":{"line":465,"column":6},"end":{"line":465,"column":52}},"154":{"start":{"line":466,"column":6},"end":{"line":466,"column":43}},"155":{"start":{"line":467,"column":6},"end":{"line":473,"column":7}},"156":{"start":{"line":468,"column":8},"end":{"line":468,"column":76}},"157":{"start":{"line":469,"column":8},"end":{"line":469,"column":33}},"158":{"start":{"line":470,"column":8},"end":{"line":472,"column":9}},"159":{"start":{"line":471,"column":10},"end":{"line":471,"column":17}},"160":{"start":{"line":475,"column":6},"end":{"line":475,"column":23}},"161":{"start":{"line":476,"column":6},"end":{"line":476,"column":52}},"162":{"start":{"line":477,"column":6},"end":{"line":477,"column":43}},"163":{"start":{"line":478,"column":6},"end":{"line":484,"column":7}},"164":{"start":{"line":479,"column":8},"end":{"line":479,"column":63}},"165":{"start":{"line":480,"column":8},"end":{"line":480,"column":33}},"166":{"start":{"line":481,"column":8},"end":{"line":483,"column":9}},"167":{"start":{"line":482,"column":10},"end":{"line":482,"column":17}},"168":{"start":{"line":486,"column":4},"end":{"line":486,"column":62}},"169":{"start":{"line":487,"column":4},"end":{"line":495,"column":5}},"170":{"start":{"line":488,"column":6},"end":{"line":494,"column":7}},"171":{"start":{"line":489,"column":8},"end":{"line":489,"column":81}},"172":{"start":{"line":490,"column":8},"end":{"line":490,"column":15}},"173":{"start":{"line":491,"column":13},"end":{"line":494,"column":7}},"174":{"start":{"line":492,"column":8},"end":{"line":492,"column":144}},"175":{"start":{"line":493,"column":8},"end":{"line":493,"column":15}},"176":{"start":{"line":497,"column":4},"end":{"line":499,"column":5}},"177":{"start":{"line":498,"column":6},"end":{"line":498,"column":28}},"178":{"start":{"line":501,"column":4},"end":{"line":501,"column":60}},"179":{"start":{"line":502,"column":4},"end":{"line":502,"column":60}},"180":{"start":{"line":503,"column":4},"end":{"line":515,"column":5}},"181":{"start":{"line":504,"column":6},"end":{"line":514,"column":7}},"182":{"start":{"line":508,"column":8},"end":{"line":508,"column":43}},"183":{"start":{"line":510,"column":8},"end":{"line":510,"column":29}},"184":{"start":{"line":513,"column":8},"end":{"line":513,"column":104}},"185":{"start":{"line":531,"column":2},"end":{"line":546,"column":4}},"186":{"start":{"line":532,"column":4},"end":{"line":532,"column":76}},"187":{"start":{"line":533,"column":4},"end":{"line":533,"column":35}},"188":{"start":{"line":534,"column":4},"end":{"line":537,"column":5}},"189":{"start":{"line":536,"column":6},"end":{"line":536,"column":23}},"190":{"start":{"line":539,"column":4},"end":{"line":544,"column":5}},"191":{"start":{"line":540,"column":6},"end":{"line":543,"column":7}},"192":{"start":{"line":541,"column":8},"end":{"line":541,"column":243}},"193":{"start":{"line":542,"column":8},"end":{"line":542,"column":25}},"194":{"start":{"line":545,"column":4},"end":{"line":545,"column":39}},"195":{"start":{"line":558,"column":2},"end":{"line":619,"column":4}},"196":{"start":{"line":559,"column":4},"end":{"line":559,"column":25}},"197":{"start":{"line":560,"column":4},"end":{"line":560,"column":30}},"198":{"start":{"line":561,"column":4},"end":{"line":561,"column":29}},"199":{"start":{"line":562,"column":4},"end":{"line":588,"column":5}},"200":{"start":{"line":563,"column":6},"end":{"line":563,"column":65}},"201":{"start":{"line":564,"column":6},"end":{"line":567,"column":7}},"202":{"start":{"line":565,"column":8},"end":{"line":565,"column":119}},"203":{"start":{"line":566,"column":8},"end":{"line":566,"column":15}},"204":{"start":{"line":568,"column":6},"end":{"line":568,"column":52}},"205":{"start":{"line":569,"column":6},"end":{"line":569,"column":45}},"206":{"start":{"line":570,"column":6},"end":{"line":576,"column":7}},"207":{"start":{"line":571,"column":8},"end":{"line":571,"column":77}},"208":{"start":{"line":572,"column":8},"end":{"line":572,"column":35}},"209":{"start":{"line":573,"column":8},"end":{"line":575,"column":9}},"210":{"start":{"line":574,"column":10},"end":{"line":574,"column":17}},"211":{"start":{"line":578,"column":6},"end":{"line":578,"column":54}},"212":{"start":{"line":579,"column":6},"end":{"line":579,"column":52}},"213":{"start":{"line":580,"column":6},"end":{"line":580,"column":45}},"214":{"start":{"line":581,"column":6},"end":{"line":587,"column":7}},"215":{"start":{"line":582,"column":8},"end":{"line":582,"column":77}},"216":{"start":{"line":583,"column":8},"end":{"line":583,"column":35}},"217":{"start":{"line":584,"column":8},"end":{"line":586,"column":9}},"218":{"start":{"line":585,"column":10},"end":{"line":585,"column":17}},"219":{"start":{"line":589,"column":4},"end":{"line":589,"column":62}},"220":{"start":{"line":590,"column":4},"end":{"line":598,"column":5}},"221":{"start":{"line":591,"column":6},"end":{"line":597,"column":7}},"222":{"start":{"line":592,"column":8},"end":{"line":592,"column":85}},"223":{"start":{"line":593,"column":8},"end":{"line":593,"column":15}},"224":{"start":{"line":594,"column":13},"end":{"line":597,"column":7}},"225":{"start":{"line":595,"column":8},"end":{"line":595,"column":146}},"226":{"start":{"line":596,"column":8},"end":{"line":596,"column":15}},"227":{"start":{"line":600,"column":4},"end":{"line":602,"column":5}},"228":{"start":{"line":601,"column":6},"end":{"line":601,"column":27}},"229":{"start":{"line":604,"column":4},"end":{"line":604,"column":60}},"230":{"start":{"line":605,"column":4},"end":{"line":605,"column":62}},"231":{"start":{"line":606,"column":4},"end":{"line":618,"column":5}},"232":{"start":{"line":607,"column":6},"end":{"line":617,"column":7}},"233":{"start":{"line":611,"column":8},"end":{"line":611,"column":47}},"234":{"start":{"line":613,"column":8},"end":{"line":613,"column":30}},"235":{"start":{"line":616,"column":8},"end":{"line":616,"column":54}},"236":{"start":{"line":634,"column":2},"end":{"line":649,"column":4}},"237":{"start":{"line":635,"column":4},"end":{"line":635,"column":77}},"238":{"start":{"line":636,"column":4},"end":{"line":636,"column":35}},"239":{"start":{"line":637,"column":4},"end":{"line":640,"column":5}},"240":{"start":{"line":639,"column":6},"end":{"line":639,"column":23}},"241":{"start":{"line":642,"column":4},"end":{"line":647,"column":5}},"242":{"start":{"line":643,"column":6},"end":{"line":646,"column":7}},"243":{"start":{"line":644,"column":8},"end":{"line":644,"column":243}},"244":{"start":{"line":645,"column":8},"end":{"line":645,"column":25}},"245":{"start":{"line":648,"column":4},"end":{"line":648,"column":57}},"246":{"start":{"line":659,"column":2},"end":{"line":663,"column":4}},"247":{"start":{"line":660,"column":4},"end":{"line":662,"column":5}},"248":{"start":{"line":661,"column":6},"end":{"line":661,"column":51}},"249":{"start":{"line":672,"column":2},"end":{"line":710,"column":4}},"250":{"start":{"line":673,"column":4},"end":{"line":673,"column":47}},"251":{"start":{"line":675,"column":4},"end":{"line":677,"column":5}},"252":{"start":{"line":676,"column":6},"end":{"line":676,"column":63}},"253":{"start":{"line":681,"column":4},"end":{"line":688,"column":5}},"254":{"start":{"line":682,"column":6},"end":{"line":682,"column":236}},"255":{"start":{"line":683,"column":6},"end":{"line":687,"column":8}},"256":{"start":{"line":689,"column":4},"end":{"line":696,"column":5}},"257":{"start":{"line":691,"column":6},"end":{"line":695,"column":8}},"258":{"start":{"line":697,"column":4},"end":{"line":704,"column":5}},"259":{"start":{"line":698,"column":6},"end":{"line":698,"column":117}},"260":{"start":{"line":699,"column":6},"end":{"line":703,"column":8}},"261":{"start":{"line":705,"column":4},"end":{"line":709,"column":5}},"262":{"start":{"line":706,"column":6},"end":{"line":706,"column":76}},"263":{"start":{"line":707,"column":11},"end":{"line":709,"column":5}},"264":{"start":{"line":708,"column":6},"end":{"line":708,"column":75}},"265":{"start":{"line":718,"column":2},"end":{"line":739,"column":4}},"266":{"start":{"line":719,"column":4},"end":{"line":719,"column":43}},"267":{"start":{"line":720,"column":4},"end":{"line":720,"column":51}},"268":{"start":{"line":722,"column":4},"end":{"line":730,"column":5}},"269":{"start":{"line":723,"column":6},"end":{"line":723,"column":20}},"270":{"start":{"line":725,"column":6},"end":{"line":729,"column":8}},"271":{"start":{"line":734,"column":4},"end":{"line":738,"column":6}},"272":{"start":{"line":747,"column":2},"end":{"line":749,"column":4}},"273":{"start":{"line":748,"column":4},"end":{"line":748,"column":111}},"274":{"start":{"line":757,"column":2},"end":{"line":759,"column":4}},"275":{"start":{"line":758,"column":4},"end":{"line":758,"column":111}},"276":{"start":{"line":767,"column":2},"end":{"line":769,"column":4}},"277":{"start":{"line":768,"column":4},"end":{"line":768,"column":112}},"278":{"start":{"line":778,"column":2},"end":{"line":872,"column":4}},"279":{"start":{"line":779,"column":4},"end":{"line":779,"column":31}},"280":{"start":{"line":780,"column":4},"end":{"line":780,"column":32}},"281":{"start":{"line":781,"column":4},"end":{"line":781,"column":27}},"282":{"start":{"line":782,"column":4},"end":{"line":786,"column":5}},"283":{"start":{"line":783,"column":6},"end":{"line":783,"column":72}},"284":{"start":{"line":784,"column":6},"end":{"line":784,"column":74}},"285":{"start":{"line":785,"column":6},"end":{"line":785,"column":67}},"286":{"start":{"line":787,"column":4},"end":{"line":787,"column":47}},"287":{"start":{"line":788,"column":4},"end":{"line":788,"column":71}},"288":{"start":{"line":789,"column":4},"end":{"line":789,"column":25}},"289":{"start":{"line":790,"column":4},"end":{"line":790,"column":30}},"290":{"start":{"line":791,"column":4},"end":{"line":791,"column":109}},"291":{"start":{"line":793,"column":4},"end":{"line":793,"column":34}},"292":{"start":{"line":794,"column":4},"end":{"line":811,"column":5}},"293":{"start":{"line":795,"column":6},"end":{"line":795,"column":64}},"294":{"start":{"line":796,"column":6},"end":{"line":803,"column":7}},"295":{"start":{"line":797,"column":8},"end":{"line":797,"column":95}},"296":{"start":{"line":798,"column":8},"end":{"line":802,"column":10}},"297":{"start":{"line":804,"column":6},"end":{"line":804,"column":52}},"298":{"start":{"line":806,"column":6},"end":{"line":806,"column":73}},"299":{"start":{"line":807,"column":6},"end":{"line":807,"column":39}},"300":{"start":{"line":809,"column":6},"end":{"line":809,"column":23}},"301":{"start":{"line":810,"column":6},"end":{"line":810,"column":52}},"302":{"start":{"line":813,"column":4},"end":{"line":813,"column":85}},"303":{"start":{"line":814,"column":4},"end":{"line":814,"column":53}},"304":{"start":{"line":815,"column":4},"end":{"line":815,"column":53}},"305":{"start":{"line":816,"column":4},"end":{"line":816,"column":23}},"306":{"start":{"line":817,"column":4},"end":{"line":820,"column":5}},"307":{"start":{"line":818,"column":6},"end":{"line":818,"column":51}},"308":{"start":{"line":819,"column":6},"end":{"line":819,"column":75}},"309":{"start":{"line":821,"column":4},"end":{"line":821,"column":63}},"310":{"start":{"line":824,"column":4},"end":{"line":848,"column":5}},"311":{"start":{"line":825,"column":6},"end":{"line":825,"column":37}},"312":{"start":{"line":826,"column":6},"end":{"line":847,"column":7}},"313":{"start":{"line":827,"column":8},"end":{"line":827,"column":47}},"314":{"start":{"line":828,"column":8},"end":{"line":828,"column":49}},"315":{"start":{"line":830,"column":8},"end":{"line":846,"column":9}},"316":{"start":{"line":831,"column":10},"end":{"line":831,"column":64}},"317":{"start":{"line":833,"column":10},"end":{"line":835,"column":11}},"318":{"start":{"line":834,"column":12},"end":{"line":834,"column":65}},"319":{"start":{"line":838,"column":10},"end":{"line":844,"column":11}},"320":{"start":{"line":839,"column":12},"end":{"line":839,"column":70}},"321":{"start":{"line":840,"column":12},"end":{"line":840,"column":59}},"322":{"start":{"line":841,"column":12},"end":{"line":843,"column":13}},"323":{"start":{"line":842,"column":14},"end":{"line":842,"column":69}},"324":{"start":{"line":845,"column":10},"end":{"line":845,"column":64}},"325":{"start":{"line":850,"column":4},"end":{"line":865,"column":5}},"326":{"start":{"line":851,"column":6},"end":{"line":853,"column":7}},"327":{"start":{"line":852,"column":8},"end":{"line":852,"column":67}},"328":{"start":{"line":854,"column":6},"end":{"line":856,"column":7}},"329":{"start":{"line":855,"column":8},"end":{"line":855,"column":66}},"330":{"start":{"line":857,"column":6},"end":{"line":861,"column":7}},"331":{"start":{"line":858,"column":8},"end":{"line":860,"column":11}},"332":{"start":{"line":859,"column":10},"end":{"line":859,"column":50}},"333":{"start":{"line":862,"column":6},"end":{"line":864,"column":7}},"334":{"start":{"line":863,"column":8},"end":{"line":863,"column":66}},"335":{"start":{"line":867,"column":4},"end":{"line":871,"column":6}},"336":{"start":{"line":881,"column":2},"end":{"line":976,"column":4}},"337":{"start":{"line":882,"column":4},"end":{"line":882,"column":31}},"338":{"start":{"line":883,"column":4},"end":{"line":883,"column":32}},"339":{"start":{"line":884,"column":4},"end":{"line":884,"column":27}},"340":{"start":{"line":885,"column":4},"end":{"line":889,"column":5}},"341":{"start":{"line":886,"column":6},"end":{"line":886,"column":72}},"342":{"start":{"line":887,"column":6},"end":{"line":887,"column":74}},"343":{"start":{"line":888,"column":6},"end":{"line":888,"column":67}},"344":{"start":{"line":890,"column":4},"end":{"line":890,"column":47}},"345":{"start":{"line":891,"column":4},"end":{"line":891,"column":70}},"346":{"start":{"line":892,"column":4},"end":{"line":892,"column":25}},"347":{"start":{"line":893,"column":4},"end":{"line":893,"column":30}},"348":{"start":{"line":894,"column":4},"end":{"line":894,"column":109}},"349":{"start":{"line":896,"column":4},"end":{"line":896,"column":36}},"350":{"start":{"line":897,"column":4},"end":{"line":914,"column":5}},"351":{"start":{"line":898,"column":6},"end":{"line":898,"column":65}},"352":{"start":{"line":899,"column":6},"end":{"line":906,"column":7}},"353":{"start":{"line":900,"column":8},"end":{"line":900,"column":96}},"354":{"start":{"line":901,"column":8},"end":{"line":905,"column":10}},"355":{"start":{"line":907,"column":6},"end":{"line":907,"column":52}},"356":{"start":{"line":909,"column":6},"end":{"line":909,"column":70}},"357":{"start":{"line":910,"column":6},"end":{"line":910,"column":38}},"358":{"start":{"line":912,"column":6},"end":{"line":912,"column":54}},"359":{"start":{"line":913,"column":6},"end":{"line":913,"column":52}},"360":{"start":{"line":916,"column":4},"end":{"line":916,"column":87}},"361":{"start":{"line":917,"column":4},"end":{"line":917,"column":53}},"362":{"start":{"line":918,"column":4},"end":{"line":918,"column":53}},"363":{"start":{"line":919,"column":4},"end":{"line":919,"column":23}},"364":{"start":{"line":920,"column":4},"end":{"line":923,"column":5}},"365":{"start":{"line":921,"column":6},"end":{"line":921,"column":51}},"366":{"start":{"line":922,"column":6},"end":{"line":922,"column":75}},"367":{"start":{"line":924,"column":4},"end":{"line":924,"column":38}},"368":{"start":{"line":927,"column":4},"end":{"line":951,"column":5}},"369":{"start":{"line":928,"column":6},"end":{"line":928,"column":37}},"370":{"start":{"line":929,"column":6},"end":{"line":950,"column":7}},"371":{"start":{"line":930,"column":8},"end":{"line":930,"column":47}},"372":{"start":{"line":931,"column":8},"end":{"line":931,"column":51}},"373":{"start":{"line":933,"column":8},"end":{"line":949,"column":9}},"374":{"start":{"line":934,"column":10},"end":{"line":934,"column":62}},"375":{"start":{"line":936,"column":10},"end":{"line":938,"column":11}},"376":{"start":{"line":937,"column":12},"end":{"line":937,"column":67}},"377":{"start":{"line":941,"column":10},"end":{"line":947,"column":11}},"378":{"start":{"line":942,"column":12},"end":{"line":942,"column":70}},"379":{"start":{"line":943,"column":12},"end":{"line":943,"column":57}},"380":{"start":{"line":944,"column":12},"end":{"line":946,"column":13}},"381":{"start":{"line":945,"column":14},"end":{"line":945,"column":67}},"382":{"start":{"line":948,"column":10},"end":{"line":948,"column":63}},"383":{"start":{"line":953,"column":4},"end":{"line":969,"column":5}},"384":{"start":{"line":954,"column":6},"end":{"line":956,"column":7}},"385":{"start":{"line":955,"column":8},"end":{"line":955,"column":66}},"386":{"start":{"line":957,"column":6},"end":{"line":959,"column":7}},"387":{"start":{"line":958,"column":8},"end":{"line":958,"column":67}},"388":{"start":{"line":960,"column":6},"end":{"line":964,"column":7}},"389":{"start":{"line":961,"column":8},"end":{"line":963,"column":11}},"390":{"start":{"line":962,"column":10},"end":{"line":962,"column":50}},"391":{"start":{"line":965,"column":6},"end":{"line":968,"column":7}},"392":{"start":{"line":966,"column":8},"end":{"line":966,"column":45}},"393":{"start":{"line":967,"column":8},"end":{"line":967,"column":79}},"394":{"start":{"line":971,"column":4},"end":{"line":975,"column":6}},"395":{"start":{"line":978,"column":2},"end":{"line":992,"column":4}},"396":{"start":{"line":979,"column":4},"end":{"line":982,"column":40}},"397":{"start":{"line":984,"column":4},"end":{"line":984,"column":35}},"398":{"start":{"line":985,"column":4},"end":{"line":985,"column":31}},"399":{"start":{"line":986,"column":4},"end":{"line":986,"column":29}},"400":{"start":{"line":987,"column":4},"end":{"line":987,"column":47}},"401":{"start":{"line":988,"column":4},"end":{"line":990,"column":7}},"402":{"start":{"line":989,"column":6},"end":{"line":989,"column":69}},"403":{"start":{"line":991,"column":4},"end":{"line":991,"column":17}},"404":{"start":{"line":994,"column":2},"end":{"line":996,"column":4}},"405":{"start":{"line":995,"column":4},"end":{"line":995,"column":90}},"406":{"start":{"line":998,"column":2},"end":{"line":1002,"column":4}},"407":{"start":{"line":999,"column":4},"end":{"line":1001,"column":6}},"408":{"start":{"line":1004,"column":2},"end":{"line":1013,"column":4}},"409":{"start":{"line":1005,"column":4},"end":{"line":1005,"column":21}},"410":{"start":{"line":1006,"column":4},"end":{"line":1008,"column":7}},"411":{"start":{"line":1007,"column":6},"end":{"line":1007,"column":56}},"412":{"start":{"line":1009,"column":4},"end":{"line":1011,"column":7}},"413":{"start":{"line":1010,"column":6},"end":{"line":1010,"column":49}},"414":{"start":{"line":1012,"column":4},"end":{"line":1012,"column":19}},"415":{"start":{"line":1015,"column":2},"end":{"line":1019,"column":4}},"416":{"start":{"line":1016,"column":4},"end":{"line":1018,"column":7}},"417":{"start":{"line":1017,"column":6},"end":{"line":1017,"column":34}},"418":{"start":{"line":1021,"column":2},"end":{"line":1021,"column":22}},"419":{"start":{"line":1030,"column":0},"end":{"line":1034,"column":1}},"420":{"start":{"line":1031,"column":2},"end":{"line":1033,"column":15}},"421":{"start":{"line":1032,"column":4},"end":{"line":1032,"column":67}},"422":{"start":{"line":1036,"column":0},"end":{"line":1036,"column":30}}},"branchMap":{"1":{"line":20,"type":"cond-expr","locations":[{"start":{"line":20,"column":70},"end":{"line":20,"column":73}},{"start":{"line":20,"column":76},"end":{"line":20,"column":94}}]},"2":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":46},"end":{"line":20,"column":49}},{"start":{"line":20,"column":53},"end":{"line":20,"column":67}}]},"3":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":4},"end":{"line":36,"column":4}},{"start":{"line":36,"column":4},"end":{"line":36,"column":4}}]},"4":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":6},"end":{"line":41,"column":6}},{"start":{"line":41,"column":6},"end":{"line":41,"column":6}}]},"5":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":10},"end":{"line":41,"column":30}},{"start":{"line":41,"column":34},"end":{"line":41,"column":46}}]},"6":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":6},"end":{"line":45,"column":6}},{"start":{"line":45,"column":6},"end":{"line":45,"column":6}}]},"7":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":2},"end":{"line":52,"column":2}},{"start":{"line":52,"column":2},"end":{"line":52,"column":2}}]},"8":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":9},"end":{"line":55,"column":9}},{"start":{"line":55,"column":9},"end":{"line":55,"column":9}}]},"9":{"line":71,"type":"binary-expr","locations":[{"start":{"line":71,"column":9},"end":{"line":71,"column":42}},{"start":{"line":71,"column":46},"end":{"line":71,"column":74}}]},"10":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":10},"end":{"line":89,"column":18}},{"start":{"line":89,"column":22},"end":{"line":89,"column":29}},{"start":{"line":89,"column":34},"end":{"line":89,"column":56}}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":36},"end":{"line":89,"column":44}},{"start":{"line":89,"column":48},"end":{"line":89,"column":55}}]},"12":{"line":99,"type":"binary-expr","locations":[{"start":{"line":99,"column":9},"end":{"line":99,"column":38}},{"start":{"line":99,"column":42},"end":{"line":99,"column":57}},{"start":{"line":99,"column":61},"end":{"line":99,"column":89}},{"start":{"line":99,"column":93},"end":{"line":99,"column":107}}]},"13":{"line":181,"type":"binary-expr","locations":[{"start":{"line":181,"column":34},"end":{"line":181,"column":44}},{"start":{"line":181,"column":48},"end":{"line":181,"column":84}}]},"14":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":6},"end":{"line":195,"column":6}},{"start":{"line":195,"column":6},"end":{"line":195,"column":6}}]},"15":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":13},"end":{"line":197,"column":13}},{"start":{"line":197,"column":13},"end":{"line":197,"column":13}}]},"16":{"line":213,"type":"if","locations":[{"start":{"line":213,"column":6},"end":{"line":213,"column":6}},{"start":{"line":213,"column":6},"end":{"line":213,"column":6}}]},"17":{"line":260,"type":"if","locations":[{"start":{"line":260,"column":4},"end":{"line":260,"column":4}},{"start":{"line":260,"column":4},"end":{"line":260,"column":4}}]},"18":{"line":265,"type":"if","locations":[{"start":{"line":265,"column":4},"end":{"line":265,"column":4}},{"start":{"line":265,"column":4},"end":{"line":265,"column":4}}]},"19":{"line":271,"type":"if","locations":[{"start":{"line":271,"column":4},"end":{"line":271,"column":4}},{"start":{"line":271,"column":4},"end":{"line":271,"column":4}}]},"20":{"line":271,"type":"binary-expr","locations":[{"start":{"line":271,"column":8},"end":{"line":271,"column":29}},{"start":{"line":271,"column":33},"end":{"line":271,"column":53}}]},"21":{"line":276,"type":"if","locations":[{"start":{"line":276,"column":4},"end":{"line":276,"column":4}},{"start":{"line":276,"column":4},"end":{"line":276,"column":4}}]},"22":{"line":278,"type":"if","locations":[{"start":{"line":278,"column":6},"end":{"line":278,"column":6}},{"start":{"line":278,"column":6},"end":{"line":278,"column":6}}]},"23":{"line":278,"type":"binary-expr","locations":[{"start":{"line":278,"column":10},"end":{"line":278,"column":22}},{"start":{"line":278,"column":26},"end":{"line":278,"column":38}}]},"24":{"line":280,"type":"if","locations":[{"start":{"line":280,"column":8},"end":{"line":280,"column":8}},{"start":{"line":280,"column":8},"end":{"line":280,"column":8}}]},"25":{"line":280,"type":"binary-expr","locations":[{"start":{"line":280,"column":12},"end":{"line":280,"column":44}},{"start":{"line":280,"column":48},"end":{"line":280,"column":66}}]},"26":{"line":281,"type":"if","locations":[{"start":{"line":281,"column":10},"end":{"line":281,"column":10}},{"start":{"line":281,"column":10},"end":{"line":281,"column":10}}]},"27":{"line":294,"type":"if","locations":[{"start":{"line":294,"column":8},"end":{"line":294,"column":8}},{"start":{"line":294,"column":8},"end":{"line":294,"column":8}}]},"28":{"line":297,"type":"if","locations":[{"start":{"line":297,"column":10},"end":{"line":297,"column":10}},{"start":{"line":297,"column":10},"end":{"line":297,"column":10}}]},"29":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":14},"end":{"line":297,"column":26}},{"start":{"line":297,"column":31},"end":{"line":297,"column":57}},{"start":{"line":297,"column":61},"end":{"line":297,"column":88}},{"start":{"line":297,"column":93},"end":{"line":297,"column":133}}]},"30":{"line":308,"type":"if","locations":[{"start":{"line":308,"column":11},"end":{"line":308,"column":11}},{"start":{"line":308,"column":11},"end":{"line":308,"column":11}}]},"31":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":6},"end":{"line":310,"column":6}},{"start":{"line":310,"column":6},"end":{"line":310,"column":6}}]},"32":{"line":310,"type":"binary-expr","locations":[{"start":{"line":310,"column":10},"end":{"line":310,"column":21}},{"start":{"line":310,"column":25},"end":{"line":310,"column":38}}]},"33":{"line":312,"type":"if","locations":[{"start":{"line":312,"column":8},"end":{"line":312,"column":8}},{"start":{"line":312,"column":8},"end":{"line":312,"column":8}}]},"34":{"line":312,"type":"binary-expr","locations":[{"start":{"line":312,"column":12},"end":{"line":312,"column":44}},{"start":{"line":312,"column":48},"end":{"line":312,"column":66}}]},"35":{"line":313,"type":"if","locations":[{"start":{"line":313,"column":10},"end":{"line":313,"column":10}},{"start":{"line":313,"column":10},"end":{"line":313,"column":10}}]},"36":{"line":326,"type":"if","locations":[{"start":{"line":326,"column":8},"end":{"line":326,"column":8}},{"start":{"line":326,"column":8},"end":{"line":326,"column":8}}]},"37":{"line":329,"type":"if","locations":[{"start":{"line":329,"column":10},"end":{"line":329,"column":10}},{"start":{"line":329,"column":10},"end":{"line":329,"column":10}}]},"38":{"line":329,"type":"binary-expr","locations":[{"start":{"line":329,"column":14},"end":{"line":329,"column":26}},{"start":{"line":329,"column":31},"end":{"line":329,"column":56}},{"start":{"line":329,"column":60},"end":{"line":329,"column":87}},{"start":{"line":329,"column":92},"end":{"line":329,"column":130}}]},"39":{"line":373,"type":"binary-expr","locations":[{"start":{"line":373,"column":34},"end":{"line":373,"column":81}},{"start":{"line":373,"column":85},"end":{"line":373,"column":102}}]},"40":{"line":376,"type":"if","locations":[{"start":{"line":376,"column":4},"end":{"line":376,"column":4}},{"start":{"line":376,"column":4},"end":{"line":376,"column":4}}]},"41":{"line":422,"type":"if","locations":[{"start":{"line":422,"column":4},"end":{"line":422,"column":4}},{"start":{"line":422,"column":4},"end":{"line":422,"column":4}}]},"42":{"line":459,"type":"if","locations":[{"start":{"line":459,"column":4},"end":{"line":459,"column":4}},{"start":{"line":459,"column":4},"end":{"line":459,"column":4}}]},"43":{"line":461,"type":"if","locations":[{"start":{"line":461,"column":6},"end":{"line":461,"column":6}},{"start":{"line":461,"column":6},"end":{"line":461,"column":6}}]},"44":{"line":467,"type":"if","locations":[{"start":{"line":467,"column":6},"end":{"line":467,"column":6}},{"start":{"line":467,"column":6},"end":{"line":467,"column":6}}]},"45":{"line":470,"type":"if","locations":[{"start":{"line":470,"column":8},"end":{"line":470,"column":8}},{"start":{"line":470,"column":8},"end":{"line":470,"column":8}}]},"46":{"line":478,"type":"if","locations":[{"start":{"line":478,"column":6},"end":{"line":478,"column":6}},{"start":{"line":478,"column":6},"end":{"line":478,"column":6}}]},"47":{"line":481,"type":"if","locations":[{"start":{"line":481,"column":8},"end":{"line":481,"column":8}},{"start":{"line":481,"column":8},"end":{"line":481,"column":8}}]},"48":{"line":487,"type":"if","locations":[{"start":{"line":487,"column":4},"end":{"line":487,"column":4}},{"start":{"line":487,"column":4},"end":{"line":487,"column":4}}]},"49":{"line":488,"type":"if","locations":[{"start":{"line":488,"column":6},"end":{"line":488,"column":6}},{"start":{"line":488,"column":6},"end":{"line":488,"column":6}}]},"50":{"line":491,"type":"if","locations":[{"start":{"line":491,"column":13},"end":{"line":491,"column":13}},{"start":{"line":491,"column":13},"end":{"line":491,"column":13}}]},"51":{"line":497,"type":"if","locations":[{"start":{"line":497,"column":4},"end":{"line":497,"column":4}},{"start":{"line":497,"column":4},"end":{"line":497,"column":4}}]},"52":{"line":503,"type":"if","locations":[{"start":{"line":503,"column":4},"end":{"line":503,"column":4}},{"start":{"line":503,"column":4},"end":{"line":503,"column":4}}]},"53":{"line":504,"type":"if","locations":[{"start":{"line":504,"column":6},"end":{"line":504,"column":6}},{"start":{"line":504,"column":6},"end":{"line":504,"column":6}}]},"54":{"line":534,"type":"if","locations":[{"start":{"line":534,"column":4},"end":{"line":534,"column":4}},{"start":{"line":534,"column":4},"end":{"line":534,"column":4}}]},"55":{"line":540,"type":"if","locations":[{"start":{"line":540,"column":6},"end":{"line":540,"column":6}},{"start":{"line":540,"column":6},"end":{"line":540,"column":6}}]},"56":{"line":562,"type":"if","locations":[{"start":{"line":562,"column":4},"end":{"line":562,"column":4}},{"start":{"line":562,"column":4},"end":{"line":562,"column":4}}]},"57":{"line":564,"type":"if","locations":[{"start":{"line":564,"column":6},"end":{"line":564,"column":6}},{"start":{"line":564,"column":6},"end":{"line":564,"column":6}}]},"58":{"line":570,"type":"if","locations":[{"start":{"line":570,"column":6},"end":{"line":570,"column":6}},{"start":{"line":570,"column":6},"end":{"line":570,"column":6}}]},"59":{"line":573,"type":"if","locations":[{"start":{"line":573,"column":8},"end":{"line":573,"column":8}},{"start":{"line":573,"column":8},"end":{"line":573,"column":8}}]},"60":{"line":581,"type":"if","locations":[{"start":{"line":581,"column":6},"end":{"line":581,"column":6}},{"start":{"line":581,"column":6},"end":{"line":581,"column":6}}]},"61":{"line":584,"type":"if","locations":[{"start":{"line":584,"column":8},"end":{"line":584,"column":8}},{"start":{"line":584,"column":8},"end":{"line":584,"column":8}}]},"62":{"line":590,"type":"if","locations":[{"start":{"line":590,"column":4},"end":{"line":590,"column":4}},{"start":{"line":590,"column":4},"end":{"line":590,"column":4}}]},"63":{"line":591,"type":"if","locations":[{"start":{"line":591,"column":6},"end":{"line":591,"column":6}},{"start":{"line":591,"column":6},"end":{"line":591,"column":6}}]},"64":{"line":594,"type":"if","locations":[{"start":{"line":594,"column":13},"end":{"line":594,"column":13}},{"start":{"line":594,"column":13},"end":{"line":594,"column":13}}]},"65":{"line":600,"type":"if","locations":[{"start":{"line":600,"column":4},"end":{"line":600,"column":4}},{"start":{"line":600,"column":4},"end":{"line":600,"column":4}}]},"66":{"line":606,"type":"if","locations":[{"start":{"line":606,"column":4},"end":{"line":606,"column":4}},{"start":{"line":606,"column":4},"end":{"line":606,"column":4}}]},"67":{"line":607,"type":"if","locations":[{"start":{"line":607,"column":6},"end":{"line":607,"column":6}},{"start":{"line":607,"column":6},"end":{"line":607,"column":6}}]},"68":{"line":637,"type":"if","locations":[{"start":{"line":637,"column":4},"end":{"line":637,"column":4}},{"start":{"line":637,"column":4},"end":{"line":637,"column":4}}]},"69":{"line":643,"type":"if","locations":[{"start":{"line":643,"column":6},"end":{"line":643,"column":6}},{"start":{"line":643,"column":6},"end":{"line":643,"column":6}}]},"70":{"line":675,"type":"if","locations":[{"start":{"line":675,"column":4},"end":{"line":675,"column":4}},{"start":{"line":675,"column":4},"end":{"line":675,"column":4}}]},"71":{"line":681,"type":"if","locations":[{"start":{"line":681,"column":4},"end":{"line":681,"column":4}},{"start":{"line":681,"column":4},"end":{"line":681,"column":4}}]},"72":{"line":689,"type":"if","locations":[{"start":{"line":689,"column":4},"end":{"line":689,"column":4}},{"start":{"line":689,"column":4},"end":{"line":689,"column":4}}]},"73":{"line":689,"type":"binary-expr","locations":[{"start":{"line":689,"column":8},"end":{"line":689,"column":19}},{"start":{"line":689,"column":23},"end":{"line":689,"column":35}},{"start":{"line":689,"column":39},"end":{"line":689,"column":49}},{"start":{"line":689,"column":53},"end":{"line":689,"column":64}}]},"74":{"line":697,"type":"if","locations":[{"start":{"line":697,"column":4},"end":{"line":697,"column":4}},{"start":{"line":697,"column":4},"end":{"line":697,"column":4}}]},"75":{"line":705,"type":"if","locations":[{"start":{"line":705,"column":4},"end":{"line":705,"column":4}},{"start":{"line":705,"column":4},"end":{"line":705,"column":4}}]},"76":{"line":707,"type":"if","locations":[{"start":{"line":707,"column":11},"end":{"line":707,"column":11}},{"start":{"line":707,"column":11},"end":{"line":707,"column":11}}]},"77":{"line":722,"type":"if","locations":[{"start":{"line":722,"column":4},"end":{"line":722,"column":4}},{"start":{"line":722,"column":4},"end":{"line":722,"column":4}}]},"78":{"line":782,"type":"if","locations":[{"start":{"line":782,"column":4},"end":{"line":782,"column":4}},{"start":{"line":782,"column":4},"end":{"line":782,"column":4}}]},"79":{"line":788,"type":"cond-expr","locations":[{"start":{"line":788,"column":49},"end":{"line":788,"column":65}},{"start":{"line":788,"column":68},"end":{"line":788,"column":69}}]},"80":{"line":794,"type":"if","locations":[{"start":{"line":794,"column":4},"end":{"line":794,"column":4}},{"start":{"line":794,"column":4},"end":{"line":794,"column":4}}]},"81":{"line":796,"type":"if","locations":[{"start":{"line":796,"column":6},"end":{"line":796,"column":6}},{"start":{"line":796,"column":6},"end":{"line":796,"column":6}}]},"82":{"line":806,"type":"cond-expr","locations":[{"start":{"line":806,"column":47},"end":{"line":806,"column":68}},{"start":{"line":806,"column":71},"end":{"line":806,"column":72}}]},"83":{"line":817,"type":"if","locations":[{"start":{"line":817,"column":4},"end":{"line":817,"column":4}},{"start":{"line":817,"column":4},"end":{"line":817,"column":4}}]},"84":{"line":824,"type":"if","locations":[{"start":{"line":824,"column":4},"end":{"line":824,"column":4}},{"start":{"line":824,"column":4},"end":{"line":824,"column":4}}]},"85":{"line":824,"type":"binary-expr","locations":[{"start":{"line":824,"column":8},"end":{"line":824,"column":22}},{"start":{"line":824,"column":26},"end":{"line":824,"column":75}},{"start":{"line":824,"column":79},"end":{"line":824,"column":85}},{"start":{"line":824,"column":89},"end":{"line":824,"column":119}}]},"86":{"line":826,"type":"if","locations":[{"start":{"line":826,"column":6},"end":{"line":826,"column":6}},{"start":{"line":826,"column":6},"end":{"line":826,"column":6}}]},"87":{"line":830,"type":"if","locations":[{"start":{"line":830,"column":8},"end":{"line":830,"column":8}},{"start":{"line":830,"column":8},"end":{"line":830,"column":8}}]},"88":{"line":833,"type":"if","locations":[{"start":{"line":833,"column":10},"end":{"line":833,"column":10}},{"start":{"line":833,"column":10},"end":{"line":833,"column":10}}]},"89":{"line":838,"type":"if","locations":[{"start":{"line":838,"column":10},"end":{"line":838,"column":10}},{"start":{"line":838,"column":10},"end":{"line":838,"column":10}}]},"90":{"line":841,"type":"if","locations":[{"start":{"line":841,"column":12},"end":{"line":841,"column":12}},{"start":{"line":841,"column":12},"end":{"line":841,"column":12}}]},"91":{"line":850,"type":"if","locations":[{"start":{"line":850,"column":4},"end":{"line":850,"column":4}},{"start":{"line":850,"column":4},"end":{"line":850,"column":4}}]},"92":{"line":851,"type":"if","locations":[{"start":{"line":851,"column":6},"end":{"line":851,"column":6}},{"start":{"line":851,"column":6},"end":{"line":851,"column":6}}]},"93":{"line":851,"type":"binary-expr","locations":[{"start":{"line":851,"column":10},"end":{"line":851,"column":24}},{"start":{"line":851,"column":28},"end":{"line":851,"column":49}},{"start":{"line":851,"column":53},"end":{"line":851,"column":65}}]},"94":{"line":854,"type":"if","locations":[{"start":{"line":854,"column":6},"end":{"line":854,"column":6}},{"start":{"line":854,"column":6},"end":{"line":854,"column":6}}]},"95":{"line":854,"type":"binary-expr","locations":[{"start":{"line":854,"column":10},"end":{"line":854,"column":23}},{"start":{"line":854,"column":27},"end":{"line":854,"column":47}},{"start":{"line":854,"column":51},"end":{"line":854,"column":75}}]},"96":{"line":857,"type":"if","locations":[{"start":{"line":857,"column":6},"end":{"line":857,"column":6}},{"start":{"line":857,"column":6},"end":{"line":857,"column":6}}]},"97":{"line":857,"type":"binary-expr","locations":[{"start":{"line":857,"column":10},"end":{"line":857,"column":19}},{"start":{"line":857,"column":23},"end":{"line":857,"column":39}}]},"98":{"line":862,"type":"if","locations":[{"start":{"line":862,"column":6},"end":{"line":862,"column":6}},{"start":{"line":862,"column":6},"end":{"line":862,"column":6}}]},"99":{"line":885,"type":"if","locations":[{"start":{"line":885,"column":4},"end":{"line":885,"column":4}},{"start":{"line":885,"column":4},"end":{"line":885,"column":4}}]},"100":{"line":891,"type":"cond-expr","locations":[{"start":{"line":891,"column":48},"end":{"line":891,"column":64}},{"start":{"line":891,"column":67},"end":{"line":891,"column":68}}]},"101":{"line":897,"type":"if","locations":[{"start":{"line":897,"column":4},"end":{"line":897,"column":4}},{"start":{"line":897,"column":4},"end":{"line":897,"column":4}}]},"102":{"line":899,"type":"if","locations":[{"start":{"line":899,"column":6},"end":{"line":899,"column":6}},{"start":{"line":899,"column":6},"end":{"line":899,"column":6}}]},"103":{"line":909,"type":"cond-expr","locations":[{"start":{"line":909,"column":45},"end":{"line":909,"column":65}},{"start":{"line":909,"column":68},"end":{"line":909,"column":69}}]},"104":{"line":920,"type":"if","locations":[{"start":{"line":920,"column":4},"end":{"line":920,"column":4}},{"start":{"line":920,"column":4},"end":{"line":920,"column":4}}]},"105":{"line":927,"type":"if","locations":[{"start":{"line":927,"column":4},"end":{"line":927,"column":4}},{"start":{"line":927,"column":4},"end":{"line":927,"column":4}}]},"106":{"line":927,"type":"binary-expr","locations":[{"start":{"line":927,"column":8},"end":{"line":927,"column":23}},{"start":{"line":927,"column":27},"end":{"line":927,"column":45}},{"start":{"line":927,"column":49},"end":{"line":927,"column":56}},{"start":{"line":927,"column":60},"end":{"line":927,"column":92}}]},"107":{"line":929,"type":"if","locations":[{"start":{"line":929,"column":6},"end":{"line":929,"column":6}},{"start":{"line":929,"column":6},"end":{"line":929,"column":6}}]},"108":{"line":933,"type":"if","locations":[{"start":{"line":933,"column":8},"end":{"line":933,"column":8}},{"start":{"line":933,"column":8},"end":{"line":933,"column":8}}]},"109":{"line":936,"type":"if","locations":[{"start":{"line":936,"column":10},"end":{"line":936,"column":10}},{"start":{"line":936,"column":10},"end":{"line":936,"column":10}}]},"110":{"line":941,"type":"if","locations":[{"start":{"line":941,"column":10},"end":{"line":941,"column":10}},{"start":{"line":941,"column":10},"end":{"line":941,"column":10}}]},"111":{"line":944,"type":"if","locations":[{"start":{"line":944,"column":12},"end":{"line":944,"column":12}},{"start":{"line":944,"column":12},"end":{"line":944,"column":12}}]},"112":{"line":953,"type":"if","locations":[{"start":{"line":953,"column":4},"end":{"line":953,"column":4}},{"start":{"line":953,"column":4},"end":{"line":953,"column":4}}]},"113":{"line":954,"type":"if","locations":[{"start":{"line":954,"column":6},"end":{"line":954,"column":6}},{"start":{"line":954,"column":6},"end":{"line":954,"column":6}}]},"114":{"line":954,"type":"binary-expr","locations":[{"start":{"line":954,"column":10},"end":{"line":954,"column":23}},{"start":{"line":954,"column":27},"end":{"line":954,"column":47}},{"start":{"line":954,"column":51},"end":{"line":954,"column":64}}]},"115":{"line":957,"type":"if","locations":[{"start":{"line":957,"column":6},"end":{"line":957,"column":6}},{"start":{"line":957,"column":6},"end":{"line":957,"column":6}}]},"116":{"line":957,"type":"binary-expr","locations":[{"start":{"line":957,"column":10},"end":{"line":957,"column":24}},{"start":{"line":957,"column":28},"end":{"line":957,"column":49}},{"start":{"line":957,"column":53},"end":{"line":957,"column":77}}]},"117":{"line":960,"type":"if","locations":[{"start":{"line":960,"column":6},"end":{"line":960,"column":6}},{"start":{"line":960,"column":6},"end":{"line":960,"column":6}}]},"118":{"line":960,"type":"binary-expr","locations":[{"start":{"line":960,"column":10},"end":{"line":960,"column":19}},{"start":{"line":960,"column":23},"end":{"line":960,"column":39}}]},"119":{"line":965,"type":"if","locations":[{"start":{"line":965,"column":6},"end":{"line":965,"column":6}},{"start":{"line":965,"column":6},"end":{"line":965,"column":6}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule GraphQLRange"," */","","'use strict';","","var _extends3 = _interopRequireDefault(require('babel-runtime/helpers/extends'));","","var _defineProperty3 = _interopRequireDefault(require('babel-runtime/helpers/defineProperty'));","","var _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","var END_CURSOR = require('./RelayConnectionInterface').END_CURSOR,","    HAS_NEXT_PAGE = require('./RelayConnectionInterface').HAS_NEXT_PAGE,","    HAS_PREV_PAGE = require('./RelayConnectionInterface').HAS_PREV_PAGE,","    START_CURSOR = require('./RelayConnectionInterface').START_CURSOR;","","/**"," * @param {array<object>} queryCalls"," * @return {object}"," */","","","function callsArrayToObject(queryCalls) {","  var calls = {};","  for (var ii = 0; ii < queryCalls.length; ii++) {","    if (require('./RelayConnectionInterface').isConnectionCall(queryCalls[ii])) {","      var queryCall = queryCalls[ii];","      var value = queryCall.value;","      // assuming that range calls will only have a single argument","","      if (Array.isArray(value) && value.length) {","        value = value[0];","      }","      // Ignore the whole call when the value is null","      if (value === null) {","        continue;","      }","      calls[queryCall.name] = value;","    }","  }","  // update first and last call values to be numbers","  if (calls.first) {","    require('fbjs/lib/invariant')(!isNaN(calls.first), 'GraphQLRange: Expected `first` argument to be a number, got ' + '`%s`.', calls.first);","    calls.first = +calls.first;","  } else if (calls.last) {","    require('fbjs/lib/invariant')(!isNaN(calls.last), 'GraphQLRange: Expected `last` argument to be a number, got ' + '`%s`.', calls.last);","    calls.last = +calls.last;","  }","  return calls;","}","","/**"," * Returns whether this is currently a set of static calls that GraphQLRange"," * supports. Static calls define ranges that do not change over a period"," * of time, given the same set of arguments."," *"," * @param {object} calls"," * @return {?boolean}"," */","function isStaticCall(calls) {","  return calls.hasOwnProperty('surrounds') || calls.hasOwnProperty('find');","}","","/**"," * Returns whether this is currently a set of calls that GraphQLRange"," * supports"," *"," * @param {object} calls"," * @return {boolean}"," */","function isValidRangeCall(calls) {","  var hasFirst = calls.hasOwnProperty('first');","  var hasLast = calls.hasOwnProperty('last');","","  // Currently only supports: first(), after().first(), last(), before().last()","  // before().first(), after().last(), after().before().first(), and","  // after().before().last()","  // first() can never be called with last().","  return (hasFirst || hasLast) && !(hasFirst && hasLast);","}","","/**"," * Returns whether the call values are supported by GraphQLRange"," *"," * @param {object} calls"," * @return {boolean}"," */","function isValidRangeCallValues(calls) {","  return calls.hasOwnProperty('first') && calls.first > 0 || calls.hasOwnProperty('last') && calls.last > 0;","}","","/**"," * Validates edge to ensure it has all the fields needed to be store properly."," *"," * @param {object} edge"," */","function validateEdge(edge) {","  require('fbjs/lib/invariant')(require('./RelayRecord').getDataIDForObject(edge) !== undefined, 'GraphQLStore: `edge` must have a data id');","  require('fbjs/lib/invariant')(edge.node !== undefined, 'GraphQLStore: `edge` must have `node` field');","}","","/**"," * @param {array<object>} edges"," */","function validateEdges(edges) {","  edges.forEach(validateEdge);","}","","/**"," * @internal"," *"," * A range represents an ordered set of edges. Methods are provided for adding"," * edges (`appendEdge`, `prependEdge`, `addItems`) and removing them"," * (`removeEdgeWithID`)."," *"," * Within a range, each contiguous group of edges is modeled using a"," * `GraphQLSegment`, but this is an implementation detail that `GraphQLRange`"," * hides from its callers."," *"," * Ranges model GraphQL connections, which are the means of traversing from a"," * node to a set of associated objects; for example, in the following query the"," * \"friends\" connection produces a range containing edges that lead to the"," * requested friend nodes:"," *"," *     node(4) {"," *       friends.first(2) {"," *         edges {"," *           node {"," *             id,"," *             name,"," *           },"," *         },"," *       },"," *     }"," *"," * @see `GraphQLSegment`"," * @see http://facebook.github.io/relay/docs/graphql-connections.html"," */","","var GraphQLRange = function () {","  function GraphQLRange() {","    (0, _classCallCheck3['default'])(this, GraphQLRange);","","    this.reset();","  }","","  GraphQLRange.prototype.reset = function reset() {","    // List of segments where each segment is a continuous chunk.","    // There are gaps in between the segments. The first segment in the list","    // should be cursors beginning at the top of the range (i.e. first(N)).","    // The last segment in the list should be cursors at the bottom of","    // the range (i.e. last(N)).","    this._orderedSegments = [new (require('./GraphQLSegment'))(), new (require('./GraphQLSegment'))()];","","    // GraphQLRange nodes can also support static queries like surrounds,","    // find, whose contents won't ever change for a given set of arguments.","    // Store these queries' results in this map, since you can't do first()","    // or last() queries on these ranges.","    this._staticQueriesMap = {};","","    this._hasFirst = false;","    this._hasLast = false;","  };","","  /**","   * @param {number} index","   */","","","  GraphQLRange.prototype._resetSegment = function _resetSegment(index) {","    require('fbjs/lib/invariant')(index >= 0 && index < this._orderedSegments.length, 'cannot reset non-existent segment');","    this._orderedSegments[index] = new (require('./GraphQLSegment'))();","  };","","  /**","   * @param {string} cursor","   * @return {?number}","   */","","","  GraphQLRange.prototype._getSegmentIndexByCursor = function _getSegmentIndexByCursor(cursor) {","    var deletedIndex = null;","    // TODO: revisit if we end up having too many segments","    for (var ii = 0; ii < this._orderedSegments.length; ii++) {","      if (this._orderedSegments[ii].containsEdgeWithCursor(cursor)) {","        return ii;","      } else if (this._orderedSegments[ii].containsEdgeWithCursor(cursor, true)) {","        deletedIndex = ii;","      }","    }","    return deletedIndex;","  };","","  /**","   * @param {string} id","   * @return {?number}","   */","","","  GraphQLRange.prototype._getSegmentIndexByID = function _getSegmentIndexByID(id) {","    // TODO: revisit if we end up having too many segments","    for (var ii = 0; ii < this._orderedSegments.length; ii++) {","      if (this._orderedSegments[ii].containsEdgeWithID(id)) {","        return ii;","      }","    }","    return null;","  };","","  /**","   * Add edges' data into the static queries map for the query calls,","   * overwriting any previously existing data for these calls.","   * @param {array<object>} queryCalls","   * @param {array} edges","   */","","","  GraphQLRange.prototype._addStaticEdges = function _addStaticEdges(queryCalls, edges) {","    var calls = _callsToString(queryCalls);","    var edgeIDsToStore = [];","    var cursorsToStore = [];","","    for (var ii = 0; ii < edges.length; ii++) {","      var edge = edges[ii];","      edgeIDsToStore.push(require('./RelayRecord').getDataIDForObject(edge));","      cursorsToStore.push(edge.cursor);","    }","","    this._staticQueriesMap[calls] = {","      edgeIDs: edgeIDsToStore,","      cursors: cursorsToStore","    };","  };","","  /**","   * Add edges into the range based on the query calls. New edges will replace","   * previous edges in the range.","   * @param {array<object>} queryCalls","   * @param {array} edges","   * @param {object} pageInfo","   */","","","  GraphQLRange.prototype.addItems = function addItems(queryCalls, edges, pageInfo) {","    validateEdges(edges);","    var calls = callsArrayToObject(queryCalls);","    var segmentCount = void 0,","        segmentIndex = void 0;","","    if (isStaticCall(calls)) {","      this._addStaticEdges(queryCalls, edges);","      return;","    }","","    if (!isValidRangeCall(calls)) {","      console.error('GraphQLRange currently only handles first(<count>), ' + 'after(<cursor>).first(<count>), last(<count>), ' + 'before(<cursor>).last(<count>), before(<cursor>).first(<count>), ' + 'and after(<cursor>).last(<count>)');","      return;","    }","","    // Skip the update if cursors are invalid","    if (calls.before === null || calls.after === null) {","      console.error('GraphQLRange received null as a cursor.');","      return;","    }","","    if (calls.first) {","      // before().first() calls can produce gaps","      if (calls.before && !calls.after) {","        // make a new segment if there is a gap and there are new edges","        if (pageInfo[HAS_NEXT_PAGE] === true && edges.length !== 0) {","          if (this._getSegmentIndexByCursor(calls.before) === 0) {","            this._orderedSegments.unshift(new (require('./GraphQLSegment'))());","          }","          // When there is a gap from before().first() query, this is the same","          // as just storing a first().","          this._addAfterFirstItems(edges, pageInfo[HAS_NEXT_PAGE], undefined, calls.before);","        } else {","          // Since there is no gap, we can stitch into the beginning","          // of existing segment","          this._addBeforeLastItems(edges, pageInfo[HAS_PREV_PAGE], calls.before);","        }","      } else {","        // These elements are added from paging to extend the the range.","        if (!calls.after) {","          segmentIndex = 0;","          segmentCount = this.getFirstSegment().getCount();","          if (segmentCount && (calls.first > segmentCount || edges.length > segmentCount) && !this.getFirstSegment().getFirstCursor()) {","            // this is a range for which we don't have a cursor, and we've","            // fetched more data by increasing the `first(N)` variable; we","            // blow away and replace the first segment in order to side-step","            // issues where the order of IDs in the range may change between","            // queries","            this._resetSegment(segmentIndex);","          }","        }","        this._addAfterFirstItems(edges, pageInfo[HAS_NEXT_PAGE], calls.after, calls.before);","      }","    } else if (calls.last) {","      // after().last() calls can produce gaps","      if (calls.after && !calls.before) {","        // make a new segment if there is a gap and there are new edges","        if (pageInfo[HAS_PREV_PAGE] === true && edges.length !== 0) {","          if (this._getSegmentIndexByCursor(calls.after) === this._orderedSegments.length - 1) {","            this._orderedSegments.push(new (require('./GraphQLSegment'))());","          }","          // When there is a gap from after().last() query, this is the same as","          // just storing a last().","          this._addBeforeLastItems(edges, pageInfo[HAS_PREV_PAGE], undefined, calls.after);","        } else {","          // Since there is no gap, we can stitch to the end","          // of existing segment","          this._addAfterFirstItems(edges, pageInfo[HAS_NEXT_PAGE], calls.after);","        }","      } else {","        // These elements are added from paging to extend the the range.","        if (!calls.before) {","          segmentIndex = this._orderedSegments.length - 1;","          segmentCount = this.getLastSegment().getCount();","          if (segmentCount && (calls.last > segmentCount || edges.length > segmentCount) && !this.getLastSegment().getLastCursor()) {","            // this is a range for which we don't have a cursor, and we've","            // fetched more data by increasing the `last(N)` variable; we","            // blow away and replace the last segment in order to side-step","            // issues where the order of IDs in the range may change between","            // queries","            this._resetSegment(segmentIndex);","          }","        }","        this._addBeforeLastItems(edges, pageInfo[HAS_PREV_PAGE], calls.before, calls.after);","      }","    }","  };","","  /**","   * @return {GraphQLSegment}","   */","","","  GraphQLRange.prototype.getFirstSegment = function getFirstSegment() {","    return this._orderedSegments[0];","  };","","  /**","   * @return {GraphQLSegment}","   */","","","  GraphQLRange.prototype.getLastSegment = function getLastSegment() {","    return this._orderedSegments[this._orderedSegments.length - 1];","  };","","  /**","   * Tries to concat segments at segmentIndex and segmentIndex + 1.","   * This is an all or nothing operation.","   * If concat is successful, we'll remove the segment at segmentIndex + 1","   * from the orderedSegments after all elements has been added to the segment","   * at segmentIndex.","   * If concat is unsuccessful, nothing will be changed.","   * @param {number} segmentIndex","   */","","","  GraphQLRange.prototype._concatSegments = function _concatSegments(segmentIndex) {","    require('fbjs/lib/invariant')(segmentIndex + 1 < this._orderedSegments.length && segmentIndex >= 0, 'GraphQLRange cannot concat segments outside the range ' + 'of orderedSegments');","    var firstSegment = this._orderedSegments[segmentIndex];","    var secondSegment = this._orderedSegments[segmentIndex + 1];","    if (firstSegment.concatSegment(secondSegment)) {","      this._orderedSegments.splice(segmentIndex + 1, 1);","    } else {","      console.warn('GraphQLRange was unable to concat segment %d and segment %d', segmentIndex, segmentIndex + 1);","    }","  };","","  /**","   * Adds the edge to the front of the range. New edge will replace previous","   * edge that have the same id.","   * @param {object} edge","   */","","","  GraphQLRange.prototype.prependEdge = function prependEdge(edge) {","    validateEdge(edge);","    this._hasFirst = true;","    this._removeEdgeIfApplicable(edge);","    var segment = this.getFirstSegment();","    segment.prependEdge(edge);","  };","","  /**","   * Adds the edge to the end of the range. New edge will replace previous","   * edge that have the same id.","   * @param {object} edge","   */","","","  GraphQLRange.prototype.appendEdge = function appendEdge(edge) {","    validateEdge(edge);","    this._hasLast = true;","    this._removeEdgeIfApplicable(edge);","    var segment = this.getLastSegment();","    segment.appendEdge(edge);","  };","","  /**","   * Removes edge in range if it matches id in input edge.","   * @param {object} edge","   */","","","  GraphQLRange.prototype._removeEdgeIfApplicable = function _removeEdgeIfApplicable(edge) {","    var id = require('./RelayRecord').getDataIDForObject(edge);","    var index = this._getSegmentIndexByID(id);","    if (index != null) {","      this._orderedSegments[index].removeEdge(id);","    }","  };","","  /**","   * Filter out edges that are already in the range to keep a stable ordering.","   *","   * @param {array} edges","   * @return {array} filtered edges","   */","","","  GraphQLRange.prototype._dedupEdgesAgainstRange = function _dedupEdgesAgainstRange(edges) {","    var _this = this;","","    return edges.filter(function (edge) {","      var id = require('./RelayRecord').getDataIDForObject(edge);","      return _this._getSegmentIndexByID(id) == null;","    });","  };","","  /**","   * Add items into the correct segment with the cursor. If no cursor","   * is present, items are added to the very first segment.","   *","   * @param {array} edges","   * @param {boolean} hasNextPage","   * @param {?string} afterCursor","   * @param {?string} beforeCursor","   */","","","  GraphQLRange.prototype._addAfterFirstItems = function _addAfterFirstItems(edges, hasNextPage, afterCursor, beforeCursor) {","    var segment = void 0;","    var segmentIndex = void 0;","    var lastCursor = void 0;","    if (afterCursor !== undefined) {","      segmentIndex = this._getSegmentIndexByCursor(afterCursor);","      if (segmentIndex == null) {","        require('fbjs/lib/warning')(false, 'GraphQLRange cannot find a segment that has the cursor: %s', afterCursor);","        return;","      }","      segment = this._orderedSegments[segmentIndex];","      lastCursor = segment.getLastCursor();","      if (lastCursor !== afterCursor) {","        edges = this._reconcileAfterFirstEdges(segment, edges, afterCursor);","        afterCursor = lastCursor;","        if (!edges) {","          return;","        }","      }","    } else {","      segmentIndex = 0;","      segment = this._orderedSegments[segmentIndex];","      lastCursor = segment.getLastCursor();","      if (lastCursor !== undefined) {","        edges = this._reconcileAfterFirstEdges(segment, edges);","        afterCursor = lastCursor;","        if (!edges) {","          return;","        }","      }","    }","    var nextSegment = this._orderedSegments[segmentIndex + 1];","    if (beforeCursor !== undefined) {","      if (segmentIndex === this._orderedSegments.length - 1) {","        console.warn('GraphQLRange cannot add because there is no next segment');","        return;","      } else if (!nextSegment.isFirstCursor(beforeCursor)) {","        require('fbjs/lib/warning')(false, 'GraphQLRange cannot add because beforeCursor does not match first ' + 'cursor of the next segment');","        return;","      }","    }","","    if (afterCursor === undefined) {","      this._hasFirst = true;","    }","","    var filteredEdges = this._dedupEdgesAgainstRange(edges);","    segment.addEdgesAfterCursor(filteredEdges, afterCursor);","    if (!hasNextPage) {","      if (beforeCursor !== undefined) {","        // If we have a beforeCursor and there is no next page,","        // then there is no gap between the current segment and the next.","        // We can concat the two segments when there is no gap.","        this._concatSegments(segmentIndex);","      } else {","        this._hasLast = true;","        // If this segment already has the last element, we don't","        // need any segments after this.","        this._orderedSegments.splice(segmentIndex + 1, this._orderedSegments.length - 1 - segmentIndex);","      }","    }","  };","","  /**","   * In the case the cursor does not correspond last cursor,","   * walk through the edges to see if we can trim edges to","   * only those after the last cursor. Returns undefined when","   * the input cannot be reconciled.","   *","   * @param {GraphQLSegment} segment","   * @param {array} edges","   * @param {?string} cursor","   * @return {?array} trimmed edges","   */","","","  GraphQLRange.prototype._reconcileAfterFirstEdges = function _reconcileAfterFirstEdges(segment, edges, cursor) {","    var metadata = segment.getMetadataAfterCursor(edges.length + 1, cursor);","    var edgeIDs = metadata.edgeIDs;","    if (edgeIDs.length > edges.length) {","      // Already have more edges than the input.","      return undefined;","    }","","    for (var ii = 0; ii < edgeIDs.length; ii++) {","      if (edgeIDs[ii] !== require('./RelayRecord').getDataIDForObject(edges[ii])) {","        require('fbjs/lib/warning')(false, 'Relay was unable to reconcile edges on a connection. This most ' + 'likely occurred while trying to handle a server response that ' + 'includes connection edges with nodes that lack an `id` field.');","        return undefined;","      }","    }","    return edges.slice(edgeIDs.length);","  };","","  /**","   * Add items into the correct segment with the cursor. If no cursor","   * is present, items are added to the very last segment.","   * @param {array} edges","   * @param {boolean} hasPrevPage","   * @param {?string} beforeCursor","   * @param {?string} afterCursor","   */","","","  GraphQLRange.prototype._addBeforeLastItems = function _addBeforeLastItems(edges, hasPrevPage, beforeCursor, afterCursor) {","    var segment = void 0;","    var segmentIndex = void 0;","    var firstCursor = void 0;","    if (beforeCursor !== undefined) {","      segmentIndex = this._getSegmentIndexByCursor(beforeCursor);","      if (segmentIndex == null) {","        require('fbjs/lib/warning')(false, 'GraphQLRange cannot find a segment that has the cursor: %s', beforeCursor);","        return;","      }","      segment = this._orderedSegments[segmentIndex];","      firstCursor = segment.getFirstCursor();","      if (firstCursor !== beforeCursor) {","        edges = this._reconcileBeforeLastEdges(segment, edges, beforeCursor);","        beforeCursor = firstCursor;","        if (!edges) {","          return;","        }","      }","    } else {","      segmentIndex = this._orderedSegments.length - 1;","      segment = this._orderedSegments[segmentIndex];","      firstCursor = segment.getFirstCursor();","      if (firstCursor !== undefined) {","        edges = this._reconcileBeforeLastEdges(segment, edges, beforeCursor);","        beforeCursor = firstCursor;","        if (!edges) {","          return;","        }","      }","    }","    var prevSegment = this._orderedSegments[segmentIndex - 1];","    if (afterCursor !== undefined) {","      if (segmentIndex === 0) {","        console.warn('GraphQLRange cannot add because there is no previous segment');","        return;","      } else if (!prevSegment.isLastCursor(afterCursor)) {","        require('fbjs/lib/warning')(false, 'GraphQLRange cannot add because afterCursor does not match last ' + 'cursor of the previous segment');","        return;","      }","    }","","    if (beforeCursor === undefined) {","      this._hasLast = true;","    }","","    var filteredEdges = this._dedupEdgesAgainstRange(edges);","    segment.addEdgesBeforeCursor(filteredEdges, beforeCursor);","    if (!hasPrevPage) {","      if (afterCursor !== undefined) {","        // If we have an afterCursor and there is no previous page,","        // then there is no gap between the current segment and the previous.","        // We can concat the two segments when there is no gap.","        this._concatSegments(segmentIndex - 1);","      } else {","        this._hasFirst = true;","        // If this segment already has the first element, we don't","        // need any segments before this.","        this._orderedSegments.splice(0, segmentIndex);","      }","    }","  };","","  /**","   * In the case the cursor does not correspond first cursor,","   * walk through the edges to see if we can trim edges to","   * only those before the first cursor. Returns undefined when","   * the input cannot be reconciled.","   *","   * @param {GraphQLSegment} segment","   * @param {array} edges","   * @param {?string} cursor","   * @return {?array} trimmed edges","   */","","","  GraphQLRange.prototype._reconcileBeforeLastEdges = function _reconcileBeforeLastEdges(segment, edges, cursor) {","    var metadata = segment.getMetadataBeforeCursor(edges.length + 1, cursor);","    var edgeIDs = metadata.edgeIDs;","    if (edgeIDs.length > edges.length) {","      // Already have more edges than the input.","      return undefined;","    }","","    for (var ii = 1; ii <= edgeIDs.length; ii++) {","      if (edgeIDs[edgeIDs.length - ii] !== require('./RelayRecord').getDataIDForObject(edges[edges.length - ii])) {","        require('fbjs/lib/warning')(false, 'Relay was unable to reconcile edges on a connection. This most ' + 'likely occurred while trying to handle a server response that ' + 'includes connection edges with nodes that lack an `id` field.');","        return undefined;","      }","    }","    return edges.slice(0, edges.length - edgeIDs.length);","  };","","  /**","   * Removes an edge from this range such that the edge will never be reachable","   * regardless of the client session. This is used by delete mutations.","   *","   * @param {string} id","   */","","","  GraphQLRange.prototype.removeEdgeWithID = function removeEdgeWithID(id) {","    for (var ii = 0; ii < this._orderedSegments.length; ii++) {","      this._orderedSegments[ii].removeAllEdges(id);","    }","  };","","  /**","   * @param {array<object>} queryCalls","   * @param {?object} queuedRecord","   * @return {object} includes fields: requestedEdgeIDs, diffCalls","   */","","","  GraphQLRange.prototype.retrieveRangeInfoForQuery = function retrieveRangeInfoForQuery(queryCalls, queuedRecord) {","    var calls = callsArrayToObject(queryCalls);","","    if (isStaticCall(calls)) {","      return this._retrieveRangeInfoForStaticCalls(queryCalls);","    }","","    // Convert to name => true, so we can test for whether the key exists","    // without comparing to undefined","    if (!isValidRangeCall(calls)) {","      console.error('GraphQLRange currently only handles first(<count>), ' + 'after(<cursor>).first(<count>), last(<count>), ' + 'before(<cursor>).last(<count>), before(<cursor>).first(<count>), ' + 'and after(<cursor>).last(<count>)');","      return {","        requestedEdgeIDs: [],","        diffCalls: [],","        pageInfo: require('./RelayConnectionInterface').getDefaultPageInfo()","      };","    }","    if (calls.first && calls.before || calls.last && calls.after) {","      // TODO #7556678: add support for first/before and last/after","      return {","        requestedEdgeIDs: [],","        diffCalls: [],","        pageInfo: require('./RelayConnectionInterface').getDefaultPageInfo()","      };","    }","    if (!isValidRangeCallValues(calls)) {","      console.error('GraphQLRange only supports first(<count>) or last(<count>) ' + 'where count is greater than 0');","      return {","        requestedEdgeIDs: [],","        diffCalls: [],","        pageInfo: require('./RelayConnectionInterface').getDefaultPageInfo()","      };","    }","    if (calls.first) {","      return this._retrieveRangeInfoForFirstQuery(queryCalls, queuedRecord);","    } else if (calls.last) {","      return this._retrieveRangeInfoForLastQuery(queryCalls, queuedRecord);","    }","  };","","  /**","   * @param {array<object>} queryCalls","   * @return {object} includes fields: requestedEdgeIDs, diffCalls","   */","","","  GraphQLRange.prototype._retrieveRangeInfoForStaticCalls = function _retrieveRangeInfoForStaticCalls(queryCalls) {","    var calls = _callsToString(queryCalls);","    var storedInfo = this._staticQueriesMap[calls];","","    if (storedInfo) {","      var _pageInfo;","","      return {","        requestedEdgeIDs: storedInfo.edgeIDs,","        diffCalls: [],","        pageInfo: (_pageInfo = {}, (0, _defineProperty3['default'])(_pageInfo, START_CURSOR, storedInfo.cursors[0]), (0, _defineProperty3['default'])(_pageInfo, END_CURSOR, storedInfo.cursors[storedInfo.cursors.length - 1]), (0, _defineProperty3['default'])(_pageInfo, HAS_NEXT_PAGE, true), (0, _defineProperty3['default'])(_pageInfo, HAS_PREV_PAGE, true), _pageInfo)","      };","    }","","    // if we don't have the data for this static call already,","    // return empty arrays with the corresponding diffCalls","    return {","      requestedEdgeIDs: [],","      diffCalls: queryCalls,","      pageInfo: require('./RelayConnectionInterface').getDefaultPageInfo()","    };","  };","","  /**","   * @param {object} queuedRecord","   * @return {?array<string>}","   */","","","  GraphQLRange.prototype._getAppendedIDsForQueuedRecord = function _getAppendedIDsForQueuedRecord(queuedRecord) {","    return queuedRecord[require('./rangeOperationToMetadataKey')[require('./GraphQLMutatorConstants').APPEND]];","  };","","  /**","   * @param {object} queuedRecord","   * @return {?array<string>}","   */","","","  GraphQLRange.prototype._getRemovedIDsForQueuedRecord = function _getRemovedIDsForQueuedRecord(queuedRecord) {","    return queuedRecord[require('./rangeOperationToMetadataKey')[require('./GraphQLMutatorConstants').REMOVE]];","  };","","  /**","   * @param {object} queuedRecord","   * @return {?array<string>}","   */","","","  GraphQLRange.prototype._getPrependedIDsForQueuedRecord = function _getPrependedIDsForQueuedRecord(queuedRecord) {","    return queuedRecord[require('./rangeOperationToMetadataKey')[require('./GraphQLMutatorConstants').PREPEND]];","  };","","  /**","   * @param {array<object>} queryCalls","   * @param {?object} queuedRecord","   * @return {object} includes fields: requestedEdgeIDs, diffCalls","   */","","","  GraphQLRange.prototype._retrieveRangeInfoForFirstQuery = function _retrieveRangeInfoForFirstQuery(queryCalls, queuedRecord) {","    var appendEdgeIDs = void 0;","    var prependEdgeIDs = void 0;","    var removeIDs = void 0;","    if (queuedRecord) {","      appendEdgeIDs = this._getAppendedIDsForQueuedRecord(queuedRecord);","      prependEdgeIDs = this._getPrependedIDsForQueuedRecord(queuedRecord);","      removeIDs = this._getRemovedIDsForQueuedRecord(queuedRecord);","    }","    var calls = callsArrayToObject(queryCalls);","    var countNeeded = calls.first + (removeIDs ? removeIDs.length : 0);","    var segment = void 0;","    var segmentIndex = void 0;","    var pageInfo = (0, _extends3['default'])({}, require('./RelayConnectionInterface').getDefaultPageInfo());","","    var afterCursor = calls.after;","    if (afterCursor !== undefined) {","      segmentIndex = this._getSegmentIndexByCursor(afterCursor);","      if (segmentIndex == null) {","        console.warn('GraphQLRange cannot find a segment that has the cursor: ' + afterCursor);","        return {","          requestedEdgeIDs: [],","          diffCalls: [],","          pageInfo: pageInfo","        };","      }","      segment = this._orderedSegments[segmentIndex];","    } else {","      var prependEdgesCount = prependEdgeIDs ? prependEdgeIDs.length : 0;","      countNeeded -= prependEdgesCount;","","      segmentIndex = 0;","      segment = this._orderedSegments[segmentIndex];","    }","","    var requestedMetadata = segment.getMetadataAfterCursor(countNeeded, afterCursor);","    var requestedEdgeIDs = requestedMetadata.edgeIDs;","    var requestedCursors = requestedMetadata.cursors;","    var diffCalls = [];","    if (requestedCursors.length) {","      pageInfo[START_CURSOR] = requestedCursors[0];","      pageInfo[END_CURSOR] = requestedCursors[requestedCursors.length - 1];","    }","    var lastID = requestedEdgeIDs[requestedEdgeIDs.length - 1];","    // Only requested segment that does not include very last item from","    // the range can have next page and diff calls","    if (!this._hasLast || segmentIndex !== this._orderedSegments.length - 1 || lastID && lastID !== segment.getLastID()) {","      pageInfo[HAS_NEXT_PAGE] = true;","      if (requestedEdgeIDs.length < countNeeded) {","        countNeeded -= requestedEdgeIDs.length;","        var lastCursor = segment.getLastCursor();","        // If segment has null cursors, retrieve whole range.","        if (lastCursor === null) {","          diffCalls.push({ name: 'first', value: calls.first });","        } else {","          if (lastCursor !== undefined) {","            diffCalls.push({ name: 'after', value: lastCursor });","          }","          // If this is not the last segment, we should not request edges","          // that would overlap the first element of the next segment.","          if (segmentIndex !== this._orderedSegments.length - 1) {","            var nextSegment = this._orderedSegments[segmentIndex + 1];","            var firstCursor = nextSegment.getFirstCursor();","            if (firstCursor !== undefined) {","              diffCalls.push({ name: 'before', value: firstCursor });","            }","          }","          diffCalls.push({ name: 'first', value: countNeeded });","        }","      }","    }","","    if (queuedRecord) {","      if (prependEdgeIDs && prependEdgeIDs.length && !calls.after) {","        requestedEdgeIDs = prependEdgeIDs.concat(requestedEdgeIDs);","      }","      if (appendEdgeIDs && appendEdgeIDs.length && !pageInfo[HAS_NEXT_PAGE]) {","        requestedEdgeIDs = requestedEdgeIDs.concat(appendEdgeIDs);","      }","      if (removeIDs && removeIDs.length) {","        requestedEdgeIDs = requestedEdgeIDs.filter(function (edgeID) {","          return removeIDs.indexOf(edgeID) === -1;","        });","      }","      if (requestedEdgeIDs.length > calls.first) {","        requestedEdgeIDs = requestedEdgeIDs.slice(0, calls.first);","      }","    }","","    return {","      requestedEdgeIDs: requestedEdgeIDs,","      diffCalls: diffCalls,","      pageInfo: pageInfo","    };","  };","","  /**","   * @param {array<object>} queryCalls","   * @param {?object} queuedRecord","   * @return {object} includes fields: requestedEdgeIDs, diffCalls","   */","","","  GraphQLRange.prototype._retrieveRangeInfoForLastQuery = function _retrieveRangeInfoForLastQuery(queryCalls, queuedRecord) {","    var appendEdgeIDs = void 0;","    var prependEdgeIDs = void 0;","    var removeIDs = void 0;","    if (queuedRecord) {","      appendEdgeIDs = this._getAppendedIDsForQueuedRecord(queuedRecord);","      prependEdgeIDs = this._getPrependedIDsForQueuedRecord(queuedRecord);","      removeIDs = this._getRemovedIDsForQueuedRecord(queuedRecord);","    }","    var calls = callsArrayToObject(queryCalls);","    var countNeeded = calls.last + (removeIDs ? removeIDs.length : 0);","    var segment = void 0;","    var segmentIndex = void 0;","    var pageInfo = (0, _extends3['default'])({}, require('./RelayConnectionInterface').getDefaultPageInfo());","","    var beforeCursor = calls.before;","    if (beforeCursor !== undefined) {","      segmentIndex = this._getSegmentIndexByCursor(beforeCursor);","      if (segmentIndex == null) {","        console.warn('GraphQLRange cannot find a segment that has the cursor: ' + beforeCursor);","        return {","          requestedEdgeIDs: [],","          diffCalls: [],","          pageInfo: pageInfo","        };","      }","      segment = this._orderedSegments[segmentIndex];","    } else {","      var appendEdgesCount = appendEdgeIDs ? appendEdgeIDs.length : 0;","      countNeeded -= appendEdgesCount;","","      segmentIndex = this._orderedSegments.length - 1;","      segment = this._orderedSegments[segmentIndex];","    }","","    var requestedMetadata = segment.getMetadataBeforeCursor(countNeeded, beforeCursor);","    var requestedEdgeIDs = requestedMetadata.edgeIDs;","    var requestedCursors = requestedMetadata.cursors;","    var diffCalls = [];","    if (requestedCursors.length) {","      pageInfo[START_CURSOR] = requestedCursors[0];","      pageInfo[END_CURSOR] = requestedCursors[requestedCursors.length - 1];","    }","    var firstID = requestedEdgeIDs[0];","    // Only requested segment that does not include very first item from","    // the range can have next page and diff calls","    if (!this._hasFirst || segmentIndex !== 0 || firstID && firstID !== segment.getFirstID()) {","      pageInfo[HAS_PREV_PAGE] = true;","      if (requestedEdgeIDs.length < countNeeded) {","        countNeeded -= requestedEdgeIDs.length;","        var firstCursor = segment.getFirstCursor();","        // If segment has null cursors, retrieve whole range.","        if (firstCursor === null) {","          diffCalls.push({ name: 'last', value: calls.last });","        } else {","          if (firstCursor !== undefined) {","            diffCalls.push({ name: 'before', value: firstCursor });","          }","          // If this is not the first segment, we should not request edges","          // that would overlap the last element of the previous segment.","          if (segmentIndex !== 0) {","            var prevSegment = this._orderedSegments[segmentIndex - 1];","            var lastCursor = prevSegment.getLastCursor();","            if (lastCursor !== undefined) {","              diffCalls.push({ name: 'after', value: lastCursor });","            }","          }","          diffCalls.push({ name: 'last', value: countNeeded });","        }","      }","    }","","    if (queuedRecord) {","      if (appendEdgeIDs && appendEdgeIDs.length && !calls.before) {","        requestedEdgeIDs = requestedEdgeIDs.concat(appendEdgeIDs);","      }","      if (prependEdgeIDs && prependEdgeIDs.length && !pageInfo[HAS_PREV_PAGE]) {","        requestedEdgeIDs = prependEdgeIDs.concat(requestedEdgeIDs);","      }","      if (removeIDs && removeIDs.length) {","        requestedEdgeIDs = requestedEdgeIDs.filter(function (edgeID) {","          return removeIDs.indexOf(edgeID) === -1;","        });","      }","      if (requestedEdgeIDs.length > calls.last) {","        var length = requestedEdgeIDs.length;","        requestedEdgeIDs = requestedEdgeIDs.slice(length - calls.last, length);","      }","    }","","    return {","      requestedEdgeIDs: requestedEdgeIDs,","      diffCalls: diffCalls,","      pageInfo: pageInfo","    };","  };","","  GraphQLRange.fromJSON = function fromJSON(descriptor) {","    var hasFirst = descriptor[0],","        hasLast = descriptor[1],","        staticQueriesMap = descriptor[2],","        orderedSegments = descriptor[3];","","    var range = new GraphQLRange();","    range._hasFirst = hasFirst;","    range._hasLast = hasLast;","    range._staticQueriesMap = staticQueriesMap;","    range._orderedSegments = orderedSegments.map(function (segmentDescriptor) {","      return require('./GraphQLSegment').fromJSON(segmentDescriptor);","    });","    return range;","  };","","  GraphQLRange.prototype.toJSON = function toJSON() {","    return [this._hasFirst, this._hasLast, this._staticQueriesMap, this._orderedSegments];","  };","","  GraphQLRange.prototype.__debug = function __debug() {","    return {","      orderedSegments: this._orderedSegments","    };","  };","","  GraphQLRange.prototype.getEdgeIDs = function getEdgeIDs() {","    var edgeIDs = [];","    this._orderedSegments.forEach(function (segment) {","      edgeIDs.push.apply(edgeIDs, segment.getEdgeIDs());","    });","    require('fbjs/lib/forEachObject')(this._staticQueriesMap, function (query) {","      edgeIDs.push.apply(edgeIDs, query.edgeIDs);","    });","    return edgeIDs;","  };","","  GraphQLRange.prototype.getSegmentedEdgeIDs = function getSegmentedEdgeIDs() {","    return this._orderedSegments.map(function (segment) {","      return segment.getEdgeIDs();","    });","  };","","  return GraphQLRange;","}();","","/**"," * @param {array<object>} calls"," * @return {string}"," */","","","function _callsToString(calls) {","  return calls.map(function (call) {","    return require('./serializeRelayQueryCall')(call).substring(1);","  }).join(',');","}","","module.exports = GraphQLRange;"],"l":{"14":1,"16":1,"18":1,"20":3,"22":1,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"41":0,"42":0,"45":0,"46":0,"48":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"59":0,"70":1,"71":0,"81":1,"82":0,"83":0,"89":0,"98":1,"99":0,"107":1,"108":0,"109":0,"115":1,"116":0,"150":1,"151":1,"152":0,"154":0,"157":1,"163":0,"169":0,"171":0,"172":0,"180":1,"181":0,"182":0,"191":1,"192":0,"194":0,"195":0,"196":0,"197":0,"198":0,"201":0,"210":1,"212":0,"213":0,"214":0,"217":0,"228":1,"229":0,"230":0,"231":0,"233":0,"234":0,"235":0,"236":0,"239":0,"254":1,"255":0,"256":0,"257":0,"260":0,"261":0,"262":0,"265":0,"266":0,"267":0,"271":0,"272":0,"273":0,"276":0,"278":0,"280":0,"281":0,"282":0,"286":0,"290":0,"294":0,"295":0,"296":0,"297":0,"303":0,"306":0,"308":0,"310":0,"312":0,"313":0,"314":0,"318":0,"322":0,"326":0,"327":0,"328":0,"329":0,"335":0,"338":0,"348":1,"349":0,"357":1,"358":0,"372":1,"373":0,"374":0,"375":0,"376":0,"377":0,"379":0,"390":1,"391":0,"392":0,"393":0,"394":0,"395":0,"405":1,"406":0,"407":0,"408":0,"409":0,"410":0,"419":1,"420":0,"421":0,"422":0,"423":0,"435":1,"436":0,"438":0,"439":0,"440":0,"455":1,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"497":0,"498":0,"501":0,"502":0,"503":0,"504":0,"508":0,"510":0,"513":0,"531":1,"532":0,"533":0,"534":0,"536":0,"539":0,"540":0,"541":0,"542":0,"545":0,"558":1,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":0,"578":0,"579":0,"580":0,"581":0,"582":0,"583":0,"584":0,"585":0,"589":0,"590":0,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"600":0,"601":0,"604":0,"605":0,"606":0,"607":0,"611":0,"613":0,"616":0,"634":1,"635":0,"636":0,"637":0,"639":0,"642":0,"643":0,"644":0,"645":0,"648":0,"659":1,"660":0,"661":0,"672":1,"673":0,"675":0,"676":0,"681":0,"682":0,"683":0,"689":0,"691":0,"697":0,"698":0,"699":0,"705":0,"706":0,"707":0,"708":0,"718":1,"719":0,"720":0,"722":0,"723":0,"725":0,"734":0,"747":1,"748":0,"757":1,"758":0,"767":1,"768":0,"778":1,"779":0,"780":0,"781":0,"782":0,"783":0,"784":0,"785":0,"787":0,"788":0,"789":0,"790":0,"791":0,"793":0,"794":0,"795":0,"796":0,"797":0,"798":0,"804":0,"806":0,"807":0,"809":0,"810":0,"813":0,"814":0,"815":0,"816":0,"817":0,"818":0,"819":0,"821":0,"824":0,"825":0,"826":0,"827":0,"828":0,"830":0,"831":0,"833":0,"834":0,"838":0,"839":0,"840":0,"841":0,"842":0,"845":0,"850":0,"851":0,"852":0,"854":0,"855":0,"857":0,"858":0,"859":0,"862":0,"863":0,"867":0,"881":1,"882":0,"883":0,"884":0,"885":0,"886":0,"887":0,"888":0,"890":0,"891":0,"892":0,"893":0,"894":0,"896":0,"897":0,"898":0,"899":0,"900":0,"901":0,"907":0,"909":0,"910":0,"912":0,"913":0,"916":0,"917":0,"918":0,"919":0,"920":0,"921":0,"922":0,"924":0,"927":0,"928":0,"929":0,"930":0,"931":0,"933":0,"934":0,"936":0,"937":0,"941":0,"942":0,"943":0,"944":0,"945":0,"948":0,"953":0,"954":0,"955":0,"957":0,"958":0,"960":0,"961":0,"962":0,"965":0,"966":0,"967":0,"971":0,"978":1,"979":0,"984":0,"985":0,"986":0,"987":0,"988":0,"989":0,"991":0,"994":1,"995":0,"998":1,"999":0,"1004":1,"1005":0,"1006":0,"1007":0,"1009":0,"1010":0,"1012":0,"1015":1,"1016":0,"1017":0,"1021":1,"1030":1,"1031":0,"1032":0,"1036":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/GraphQLSegment.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/GraphQLSegment.js","s":{"1":1,"2":1,"3":1,"4":2,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":1,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"61":1,"62":0,"63":0,"64":1,"65":0,"66":0,"67":0,"68":0,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":1,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":1,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":1,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":1,"142":0,"143":1,"144":0,"145":1,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":1,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":1,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":1,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":1,"204":0,"205":0,"206":0,"207":1,"208":0,"209":1,"210":0,"211":0,"212":0,"213":0,"214":0,"215":1,"216":0,"217":1,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":1,"267":0,"268":1,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":1,"279":0,"280":1,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":1,"290":1},"b":{"1":[2,0],"2":[2,2],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0]},"f":{"1":2,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":37}}},"2":{"name":"(anonymous_2)","line":34,"loc":{"start":{"line":34,"column":21},"end":{"line":34,"column":33}}},"3":{"name":"GraphQLSegment","line":35,"loc":{"start":{"line":35,"column":2},"end":{"line":35,"column":28}}},"4":{"name":"_getIndexForCursor","line":57,"loc":{"start":{"line":57,"column":48},"end":{"line":57,"column":84}}},"5":{"name":"_getIndexForID","line":67,"loc":{"start":{"line":67,"column":44},"end":{"line":67,"column":72}}},"6":{"name":"getFirstCursor","line":77,"loc":{"start":{"line":77,"column":44},"end":{"line":77,"column":70}}},"7":{"name":"getLastCursor","line":93,"loc":{"start":{"line":93,"column":43},"end":{"line":93,"column":68}}},"8":{"name":"isFirstCursor","line":110,"loc":{"start":{"line":110,"column":43},"end":{"line":110,"column":74}}},"9":{"name":"isLastCursor","line":130,"loc":{"start":{"line":130,"column":42},"end":{"line":130,"column":72}}},"10":{"name":"getFirstID","line":149,"loc":{"start":{"line":149,"column":40},"end":{"line":149,"column":62}}},"11":{"name":"getLastID","line":165,"loc":{"start":{"line":165,"column":39},"end":{"line":165,"column":60}}},"12":{"name":"_getEdgeAtIndex","line":182,"loc":{"start":{"line":182,"column":45},"end":{"line":182,"column":77}}},"13":{"name":"containsEdgeWithID","line":194,"loc":{"start":{"line":194,"column":48},"end":{"line":194,"column":80}}},"14":{"name":"containsEdgeWithCursor","line":210,"loc":{"start":{"line":210,"column":52},"end":{"line":210,"column":92}}},"15":{"name":"getMetadataAfterCursor","line":230,"loc":{"start":{"line":230,"column":52},"end":{"line":230,"column":99}}},"16":{"name":"getMetadataBeforeCursor","line":276,"loc":{"start":{"line":276,"column":53},"end":{"line":276,"column":101}}},"17":{"name":"_addEdgeAtIndex","line":321,"loc":{"start":{"line":321,"column":45},"end":{"line":321,"column":83}}},"18":{"name":"prependEdge","line":364,"loc":{"start":{"line":364,"column":41},"end":{"line":364,"column":68}}},"19":{"name":"appendEdge","line":373,"loc":{"start":{"line":373,"column":40},"end":{"line":373,"column":66}}},"20":{"name":"removeEdge","line":384,"loc":{"start":{"line":384,"column":40},"end":{"line":384,"column":64}}},"21":{"name":"removeAllEdges","line":408,"loc":{"start":{"line":408,"column":44},"end":{"line":408,"column":72}}},"22":{"name":"addEdgesAfterCursor","line":428,"loc":{"start":{"line":428,"column":49},"end":{"line":428,"column":93}}},"23":{"name":"addEdgesBeforeCursor","line":468,"loc":{"start":{"line":468,"column":50},"end":{"line":468,"column":95}}},"24":{"name":"getLength","line":514,"loc":{"start":{"line":514,"column":39},"end":{"line":514,"column":60}}},"25":{"name":"getCount","line":529,"loc":{"start":{"line":529,"column":38},"end":{"line":529,"column":58}}},"26":{"name":"_rollback","line":543,"loc":{"start":{"line":543,"column":39},"end":{"line":543,"column":102}}},"27":{"name":"_getCounterState","line":558,"loc":{"start":{"line":558,"column":46},"end":{"line":558,"column":74}}},"28":{"name":"concatSegment","line":574,"loc":{"start":{"line":574,"column":43},"end":{"line":574,"column":75}}},"29":{"name":"toJSON","line":651,"loc":{"start":{"line":651,"column":36},"end":{"line":651,"column":54}}},"30":{"name":"fromJSON","line":655,"loc":{"start":{"line":655,"column":28},"end":{"line":655,"column":58}}},"31":{"name":"__debug","line":673,"loc":{"start":{"line":673,"column":37},"end":{"line":673,"column":56}}},"32":{"name":"getEdgeIDs","line":686,"loc":{"start":{"line":686,"column":40},"end":{"line":686,"column":62}}}},"statementMap":{"1":{"start":{"line":14,"column":0},"end":{"line":14,"column":95}},"2":{"start":{"line":16,"column":0},"end":{"line":16,"column":86}},"3":{"start":{"line":18,"column":0},"end":{"line":18,"column":97}},"4":{"start":{"line":18,"column":39},"end":{"line":18,"column":95}},"5":{"start":{"line":34,"column":0},"end":{"line":706,"column":4}},"6":{"start":{"line":35,"column":2},"end":{"line":49,"column":3}},"7":{"start":{"line":36,"column":4},"end":{"line":36,"column":59}},"8":{"start":{"line":40,"column":4},"end":{"line":40,"column":34}},"9":{"start":{"line":43,"column":4},"end":{"line":43,"column":30}},"10":{"start":{"line":44,"column":4},"end":{"line":44,"column":32}},"11":{"start":{"line":46,"column":4},"end":{"line":46,"column":20}},"12":{"start":{"line":47,"column":4},"end":{"line":47,"column":26}},"13":{"start":{"line":48,"column":4},"end":{"line":48,"column":26}},"14":{"start":{"line":57,"column":2},"end":{"line":59,"column":4}},"15":{"start":{"line":58,"column":4},"end":{"line":58,"column":42}},"16":{"start":{"line":67,"column":2},"end":{"line":70,"column":4}},"17":{"start":{"line":68,"column":4},"end":{"line":68,"column":43}},"18":{"start":{"line":69,"column":4},"end":{"line":69,"column":33}},"19":{"start":{"line":77,"column":2},"end":{"line":86,"column":4}},"20":{"start":{"line":78,"column":4},"end":{"line":85,"column":5}},"21":{"start":{"line":79,"column":6},"end":{"line":84,"column":7}},"22":{"start":{"line":80,"column":8},"end":{"line":80,"column":52}},"23":{"start":{"line":81,"column":8},"end":{"line":83,"column":9}},"24":{"start":{"line":82,"column":10},"end":{"line":82,"column":33}},"25":{"start":{"line":93,"column":2},"end":{"line":102,"column":4}},"26":{"start":{"line":94,"column":4},"end":{"line":101,"column":5}},"27":{"start":{"line":95,"column":6},"end":{"line":100,"column":7}},"28":{"start":{"line":96,"column":8},"end":{"line":96,"column":52}},"29":{"start":{"line":97,"column":8},"end":{"line":99,"column":9}},"30":{"start":{"line":98,"column":10},"end":{"line":98,"column":33}},"31":{"start":{"line":110,"column":2},"end":{"line":122,"column":4}},"32":{"start":{"line":111,"column":4},"end":{"line":121,"column":5}},"33":{"start":{"line":112,"column":6},"end":{"line":119,"column":7}},"34":{"start":{"line":113,"column":8},"end":{"line":113,"column":52}},"35":{"start":{"line":114,"column":8},"end":{"line":118,"column":9}},"36":{"start":{"line":115,"column":10},"end":{"line":115,"column":44}},"37":{"start":{"line":116,"column":15},"end":{"line":118,"column":9}},"38":{"start":{"line":117,"column":10},"end":{"line":117,"column":22}},"39":{"start":{"line":120,"column":6},"end":{"line":120,"column":19}},"40":{"start":{"line":130,"column":2},"end":{"line":142,"column":4}},"41":{"start":{"line":131,"column":4},"end":{"line":141,"column":5}},"42":{"start":{"line":132,"column":6},"end":{"line":139,"column":7}},"43":{"start":{"line":133,"column":8},"end":{"line":133,"column":52}},"44":{"start":{"line":134,"column":8},"end":{"line":138,"column":9}},"45":{"start":{"line":135,"column":10},"end":{"line":135,"column":44}},"46":{"start":{"line":136,"column":15},"end":{"line":138,"column":9}},"47":{"start":{"line":137,"column":10},"end":{"line":137,"column":22}},"48":{"start":{"line":140,"column":6},"end":{"line":140,"column":19}},"49":{"start":{"line":149,"column":2},"end":{"line":158,"column":4}},"50":{"start":{"line":150,"column":4},"end":{"line":157,"column":5}},"51":{"start":{"line":151,"column":6},"end":{"line":156,"column":7}},"52":{"start":{"line":152,"column":8},"end":{"line":152,"column":52}},"53":{"start":{"line":153,"column":8},"end":{"line":155,"column":9}},"54":{"start":{"line":154,"column":10},"end":{"line":154,"column":33}},"55":{"start":{"line":165,"column":2},"end":{"line":174,"column":4}},"56":{"start":{"line":166,"column":4},"end":{"line":173,"column":5}},"57":{"start":{"line":167,"column":6},"end":{"line":172,"column":7}},"58":{"start":{"line":168,"column":8},"end":{"line":168,"column":52}},"59":{"start":{"line":169,"column":8},"end":{"line":171,"column":9}},"60":{"start":{"line":170,"column":10},"end":{"line":170,"column":33}},"61":{"start":{"line":182,"column":2},"end":{"line":185,"column":4}},"62":{"start":{"line":183,"column":4},"end":{"line":183,"column":47}},"63":{"start":{"line":184,"column":4},"end":{"line":184,"column":47}},"64":{"start":{"line":194,"column":2},"end":{"line":200,"column":4}},"65":{"start":{"line":195,"column":4},"end":{"line":195,"column":40}},"66":{"start":{"line":196,"column":4},"end":{"line":198,"column":5}},"67":{"start":{"line":197,"column":6},"end":{"line":197,"column":19}},"68":{"start":{"line":199,"column":4},"end":{"line":199,"column":41}},"69":{"start":{"line":210,"column":2},"end":{"line":220,"column":4}},"70":{"start":{"line":211,"column":4},"end":{"line":211,"column":99}},"71":{"start":{"line":213,"column":4},"end":{"line":213,"column":48}},"72":{"start":{"line":214,"column":4},"end":{"line":218,"column":5}},"73":{"start":{"line":215,"column":6},"end":{"line":215,"column":19}},"74":{"start":{"line":216,"column":11},"end":{"line":218,"column":5}},"75":{"start":{"line":217,"column":6},"end":{"line":217,"column":18}},"76":{"start":{"line":219,"column":4},"end":{"line":219,"column":41}},"77":{"start":{"line":230,"column":2},"end":{"line":266,"column":4}},"78":{"start":{"line":231,"column":4},"end":{"line":236,"column":5}},"79":{"start":{"line":232,"column":6},"end":{"line":235,"column":8}},"80":{"start":{"line":237,"column":4},"end":{"line":237,"column":38}},"81":{"start":{"line":238,"column":4},"end":{"line":248,"column":5}},"82":{"start":{"line":239,"column":6},"end":{"line":239,"column":50}},"83":{"start":{"line":240,"column":6},"end":{"line":246,"column":7}},"84":{"start":{"line":241,"column":8},"end":{"line":241,"column":71}},"85":{"start":{"line":242,"column":8},"end":{"line":245,"column":10}},"86":{"start":{"line":247,"column":6},"end":{"line":247,"column":31}},"87":{"start":{"line":249,"column":4},"end":{"line":249,"column":18}},"88":{"start":{"line":250,"column":4},"end":{"line":250,"column":21}},"89":{"start":{"line":251,"column":4},"end":{"line":251,"column":21}},"90":{"start":{"line":253,"column":4},"end":{"line":261,"column":5}},"91":{"start":{"line":254,"column":6},"end":{"line":254,"column":60}},"92":{"start":{"line":255,"column":6},"end":{"line":259,"column":7}},"93":{"start":{"line":256,"column":8},"end":{"line":256,"column":38}},"94":{"start":{"line":257,"column":8},"end":{"line":257,"column":38}},"95":{"start":{"line":258,"column":8},"end":{"line":258,"column":16}},"96":{"start":{"line":260,"column":6},"end":{"line":260,"column":21}},"97":{"start":{"line":262,"column":4},"end":{"line":265,"column":6}},"98":{"start":{"line":276,"column":2},"end":{"line":313,"column":4}},"99":{"start":{"line":277,"column":4},"end":{"line":282,"column":5}},"100":{"start":{"line":278,"column":6},"end":{"line":281,"column":8}},"101":{"start":{"line":283,"column":4},"end":{"line":283,"column":38}},"102":{"start":{"line":284,"column":4},"end":{"line":294,"column":5}},"103":{"start":{"line":285,"column":6},"end":{"line":285,"column":50}},"104":{"start":{"line":286,"column":6},"end":{"line":292,"column":7}},"105":{"start":{"line":287,"column":8},"end":{"line":287,"column":71}},"106":{"start":{"line":288,"column":8},"end":{"line":291,"column":10}},"107":{"start":{"line":293,"column":6},"end":{"line":293,"column":31}},"108":{"start":{"line":295,"column":4},"end":{"line":295,"column":18}},"109":{"start":{"line":296,"column":4},"end":{"line":296,"column":21}},"110":{"start":{"line":297,"column":4},"end":{"line":297,"column":21}},"111":{"start":{"line":298,"column":4},"end":{"line":306,"column":5}},"112":{"start":{"line":299,"column":6},"end":{"line":299,"column":60}},"113":{"start":{"line":300,"column":6},"end":{"line":304,"column":7}},"114":{"start":{"line":301,"column":8},"end":{"line":301,"column":38}},"115":{"start":{"line":302,"column":8},"end":{"line":302,"column":38}},"116":{"start":{"line":303,"column":8},"end":{"line":303,"column":16}},"117":{"start":{"line":305,"column":6},"end":{"line":305,"column":21}},"118":{"start":{"line":309,"column":4},"end":{"line":312,"column":6}},"119":{"start":{"line":321,"column":2},"end":{"line":357,"column":4}},"120":{"start":{"line":322,"column":4},"end":{"line":322,"column":67}},"121":{"start":{"line":323,"column":4},"end":{"line":323,"column":29}},"122":{"start":{"line":325,"column":4},"end":{"line":325,"column":46}},"123":{"start":{"line":327,"column":4},"end":{"line":330,"column":5}},"124":{"start":{"line":328,"column":6},"end":{"line":328,"column":83}},"125":{"start":{"line":329,"column":6},"end":{"line":329,"column":13}},"126":{"start":{"line":332,"column":4},"end":{"line":343,"column":5}},"127":{"start":{"line":333,"column":6},"end":{"line":333,"column":29}},"128":{"start":{"line":334,"column":6},"end":{"line":334,"column":29}},"129":{"start":{"line":335,"column":11},"end":{"line":343,"column":5}},"130":{"start":{"line":336,"column":6},"end":{"line":336,"column":29}},"131":{"start":{"line":337,"column":11},"end":{"line":343,"column":5}},"132":{"start":{"line":338,"column":6},"end":{"line":338,"column":29}},"133":{"start":{"line":340,"column":6},"end":{"line":340,"column":151}},"134":{"start":{"line":342,"column":6},"end":{"line":342,"column":13}},"135":{"start":{"line":345,"column":4},"end":{"line":349,"column":6}},"136":{"start":{"line":350,"column":4},"end":{"line":350,"column":70}},"137":{"start":{"line":351,"column":4},"end":{"line":351,"column":48}},"138":{"start":{"line":352,"column":4},"end":{"line":352,"column":18}},"139":{"start":{"line":354,"column":4},"end":{"line":356,"column":5}},"140":{"start":{"line":355,"column":6},"end":{"line":355,"column":45}},"141":{"start":{"line":364,"column":2},"end":{"line":366,"column":4}},"142":{"start":{"line":365,"column":4},"end":{"line":365,"column":81}},"143":{"start":{"line":373,"column":2},"end":{"line":375,"column":4}},"144":{"start":{"line":374,"column":4},"end":{"line":374,"column":81}},"145":{"start":{"line":384,"column":2},"end":{"line":397,"column":4}},"146":{"start":{"line":385,"column":4},"end":{"line":385,"column":40}},"147":{"start":{"line":386,"column":4},"end":{"line":389,"column":5}},"148":{"start":{"line":387,"column":6},"end":{"line":387,"column":95}},"149":{"start":{"line":388,"column":6},"end":{"line":388,"column":13}},"150":{"start":{"line":390,"column":4},"end":{"line":390,"column":47}},"151":{"start":{"line":391,"column":4},"end":{"line":394,"column":5}},"152":{"start":{"line":392,"column":6},"end":{"line":392,"column":87}},"153":{"start":{"line":393,"column":6},"end":{"line":393,"column":13}},"154":{"start":{"line":395,"column":4},"end":{"line":395,"column":24}},"155":{"start":{"line":396,"column":4},"end":{"line":396,"column":18}},"156":{"start":{"line":408,"column":2},"end":{"line":420,"column":4}},"157":{"start":{"line":409,"column":4},"end":{"line":409,"column":43}},"158":{"start":{"line":410,"column":4},"end":{"line":412,"column":5}},"159":{"start":{"line":411,"column":6},"end":{"line":411,"column":13}},"160":{"start":{"line":413,"column":4},"end":{"line":419,"column":5}},"161":{"start":{"line":414,"column":6},"end":{"line":414,"column":55}},"162":{"start":{"line":415,"column":6},"end":{"line":418,"column":7}},"163":{"start":{"line":416,"column":8},"end":{"line":416,"column":28}},"164":{"start":{"line":417,"column":8},"end":{"line":417,"column":22}},"165":{"start":{"line":428,"column":2},"end":{"line":460,"column":4}},"166":{"start":{"line":429,"column":4},"end":{"line":431,"column":5}},"167":{"start":{"line":430,"column":6},"end":{"line":430,"column":13}},"168":{"start":{"line":434,"column":4},"end":{"line":434,"column":19}},"169":{"start":{"line":435,"column":4},"end":{"line":441,"column":5}},"170":{"start":{"line":436,"column":6},"end":{"line":436,"column":46}},"171":{"start":{"line":437,"column":6},"end":{"line":440,"column":7}},"172":{"start":{"line":438,"column":8},"end":{"line":438,"column":71}},"173":{"start":{"line":439,"column":8},"end":{"line":439,"column":15}},"174":{"start":{"line":443,"column":4},"end":{"line":453,"column":5}},"175":{"start":{"line":444,"column":6},"end":{"line":444,"column":53}},"176":{"start":{"line":447,"column":6},"end":{"line":452,"column":7}},"177":{"start":{"line":448,"column":8},"end":{"line":448,"column":16}},"178":{"start":{"line":450,"column":8},"end":{"line":450,"column":150}},"179":{"start":{"line":451,"column":8},"end":{"line":451,"column":15}},"180":{"start":{"line":455,"column":4},"end":{"line":455,"column":31}},"181":{"start":{"line":456,"column":4},"end":{"line":459,"column":5}},"182":{"start":{"line":457,"column":6},"end":{"line":457,"column":27}},"183":{"start":{"line":458,"column":6},"end":{"line":458,"column":50}},"184":{"start":{"line":468,"column":2},"end":{"line":503,"column":4}},"185":{"start":{"line":469,"column":4},"end":{"line":471,"column":5}},"186":{"start":{"line":470,"column":6},"end":{"line":470,"column":13}},"187":{"start":{"line":474,"column":4},"end":{"line":474,"column":18}},"188":{"start":{"line":475,"column":4},"end":{"line":481,"column":5}},"189":{"start":{"line":476,"column":6},"end":{"line":476,"column":46}},"190":{"start":{"line":477,"column":6},"end":{"line":480,"column":7}},"191":{"start":{"line":478,"column":8},"end":{"line":478,"column":71}},"192":{"start":{"line":479,"column":8},"end":{"line":479,"column":15}},"193":{"start":{"line":483,"column":4},"end":{"line":493,"column":5}},"194":{"start":{"line":484,"column":6},"end":{"line":484,"column":53}},"195":{"start":{"line":487,"column":6},"end":{"line":492,"column":7}},"196":{"start":{"line":488,"column":8},"end":{"line":488,"column":16}},"197":{"start":{"line":490,"column":8},"end":{"line":490,"column":150}},"198":{"start":{"line":491,"column":8},"end":{"line":491,"column":15}},"199":{"start":{"line":497,"column":4},"end":{"line":497,"column":31}},"200":{"start":{"line":498,"column":4},"end":{"line":502,"column":5}},"201":{"start":{"line":500,"column":6},"end":{"line":500,"column":46}},"202":{"start":{"line":501,"column":6},"end":{"line":501,"column":50}},"203":{"start":{"line":514,"column":2},"end":{"line":520,"column":4}},"204":{"start":{"line":515,"column":4},"end":{"line":517,"column":5}},"205":{"start":{"line":516,"column":6},"end":{"line":516,"column":15}},"206":{"start":{"line":519,"column":4},"end":{"line":519,"column":47}},"207":{"start":{"line":529,"column":2},"end":{"line":531,"column":4}},"208":{"start":{"line":530,"column":4},"end":{"line":530,"column":23}},"209":{"start":{"line":543,"column":2},"end":{"line":551,"column":4}},"210":{"start":{"line":544,"column":4},"end":{"line":544,"column":72}},"211":{"start":{"line":545,"column":4},"end":{"line":545,"column":66}},"212":{"start":{"line":548,"column":4},"end":{"line":548,"column":33}},"213":{"start":{"line":549,"column":4},"end":{"line":549,"column":39}},"214":{"start":{"line":550,"column":4},"end":{"line":550,"column":39}},"215":{"start":{"line":558,"column":2},"end":{"line":564,"column":4}},"216":{"start":{"line":559,"column":4},"end":{"line":563,"column":6}},"217":{"start":{"line":574,"column":2},"end":{"line":649,"column":4}},"218":{"start":{"line":575,"column":4},"end":{"line":577,"column":5}},"219":{"start":{"line":576,"column":6},"end":{"line":576,"column":18}},"220":{"start":{"line":578,"column":4},"end":{"line":578,"column":27}},"221":{"start":{"line":579,"column":4},"end":{"line":579,"column":31}},"222":{"start":{"line":580,"column":4},"end":{"line":580,"column":47}},"223":{"start":{"line":581,"column":4},"end":{"line":581,"column":47}},"224":{"start":{"line":582,"column":4},"end":{"line":646,"column":5}},"225":{"start":{"line":583,"column":6},"end":{"line":583,"column":25}},"226":{"start":{"line":584,"column":6},"end":{"line":589,"column":7}},"227":{"start":{"line":585,"column":8},"end":{"line":585,"column":35}},"228":{"start":{"line":587,"column":8},"end":{"line":587,"column":18}},"229":{"start":{"line":588,"column":8},"end":{"line":588,"column":27}},"230":{"start":{"line":590,"column":6},"end":{"line":590,"column":29}},"231":{"start":{"line":592,"column":6},"end":{"line":592,"column":33}},"232":{"start":{"line":593,"column":6},"end":{"line":593,"column":56}},"233":{"start":{"line":594,"column":6},"end":{"line":600,"column":7}},"234":{"start":{"line":595,"column":8},"end":{"line":599,"column":9}},"235":{"start":{"line":596,"column":10},"end":{"line":596,"column":87}},"236":{"start":{"line":598,"column":10},"end":{"line":598,"column":52}},"237":{"start":{"line":602,"column":6},"end":{"line":622,"column":7}},"238":{"start":{"line":603,"column":8},"end":{"line":603,"column":55}},"239":{"start":{"line":604,"column":8},"end":{"line":618,"column":9}},"240":{"start":{"line":608,"column":10},"end":{"line":608,"column":62}},"241":{"start":{"line":609,"column":15},"end":{"line":618,"column":9}},"242":{"start":{"line":610,"column":10},"end":{"line":610,"column":96}},"243":{"start":{"line":611,"column":10},"end":{"line":611,"column":73}},"244":{"start":{"line":612,"column":10},"end":{"line":612,"column":23}},"245":{"start":{"line":616,"column":10},"end":{"line":616,"column":92}},"246":{"start":{"line":617,"column":10},"end":{"line":617,"column":59}},"247":{"start":{"line":620,"column":8},"end":{"line":620,"column":90}},"248":{"start":{"line":621,"column":8},"end":{"line":621,"column":60}},"249":{"start":{"line":623,"column":6},"end":{"line":623,"column":64}},"250":{"start":{"line":625,"column":6},"end":{"line":641,"column":7}},"251":{"start":{"line":626,"column":8},"end":{"line":626,"column":63}},"252":{"start":{"line":627,"column":8},"end":{"line":637,"column":9}},"253":{"start":{"line":631,"column":10},"end":{"line":631,"column":85}},"254":{"start":{"line":632,"column":10},"end":{"line":632,"column":57}},"255":{"start":{"line":633,"column":15},"end":{"line":637,"column":9}},"256":{"start":{"line":634,"column":10},"end":{"line":634,"column":99}},"257":{"start":{"line":635,"column":10},"end":{"line":635,"column":73}},"258":{"start":{"line":636,"column":10},"end":{"line":636,"column":23}},"259":{"start":{"line":638,"column":13},"end":{"line":641,"column":7}},"260":{"start":{"line":639,"column":8},"end":{"line":639,"column":83}},"261":{"start":{"line":640,"column":8},"end":{"line":640,"column":55}},"262":{"start":{"line":642,"column":6},"end":{"line":644,"column":7}},"263":{"start":{"line":643,"column":8},"end":{"line":643,"column":22}},"264":{"start":{"line":645,"column":6},"end":{"line":645,"column":78}},"265":{"start":{"line":648,"column":4},"end":{"line":648,"column":16}},"266":{"start":{"line":651,"column":2},"end":{"line":653,"column":4}},"267":{"start":{"line":652,"column":4},"end":{"line":652,"column":129}},"268":{"start":{"line":655,"column":2},"end":{"line":671,"column":4}},"269":{"start":{"line":656,"column":4},"end":{"line":661,"column":30}},"270":{"start":{"line":663,"column":4},"end":{"line":663,"column":39}},"271":{"start":{"line":664,"column":4},"end":{"line":664,"column":53}},"272":{"start":{"line":665,"column":4},"end":{"line":665,"column":45}},"273":{"start":{"line":666,"column":4},"end":{"line":666,"column":49}},"274":{"start":{"line":667,"column":4},"end":{"line":667,"column":33}},"275":{"start":{"line":668,"column":4},"end":{"line":668,"column":33}},"276":{"start":{"line":669,"column":4},"end":{"line":669,"column":27}},"277":{"start":{"line":670,"column":4},"end":{"line":670,"column":19}},"278":{"start":{"line":673,"column":2},"end":{"line":679,"column":4}},"279":{"start":{"line":674,"column":4},"end":{"line":678,"column":6}},"280":{"start":{"line":686,"column":2},"end":{"line":703,"column":4}},"281":{"start":{"line":687,"column":4},"end":{"line":688,"column":45}},"282":{"start":{"line":690,"column":4},"end":{"line":690,"column":21}},"283":{"start":{"line":691,"column":4},"end":{"line":701,"column":5}},"284":{"start":{"line":692,"column":6},"end":{"line":700,"column":7}},"285":{"start":{"line":693,"column":8},"end":{"line":695,"column":50}},"286":{"start":{"line":697,"column":8},"end":{"line":699,"column":9}},"287":{"start":{"line":698,"column":10},"end":{"line":698,"column":31}},"288":{"start":{"line":702,"column":4},"end":{"line":702,"column":19}},"289":{"start":{"line":705,"column":2},"end":{"line":705,"column":24}},"290":{"start":{"line":708,"column":0},"end":{"line":708,"column":32}}},"branchMap":{"1":{"line":18,"type":"cond-expr","locations":[{"start":{"line":18,"column":70},"end":{"line":18,"column":73}},{"start":{"line":18,"column":76},"end":{"line":18,"column":94}}]},"2":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":46},"end":{"line":18,"column":49}},{"start":{"line":18,"column":53},"end":{"line":18,"column":67}}]},"3":{"line":69,"type":"binary-expr","locations":[{"start":{"line":69,"column":11},"end":{"line":69,"column":18}},{"start":{"line":69,"column":22},"end":{"line":69,"column":32}}]},"4":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":4},"end":{"line":78,"column":4}},{"start":{"line":78,"column":4},"end":{"line":78,"column":4}}]},"5":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":8},"end":{"line":81,"column":8}},{"start":{"line":81,"column":8},"end":{"line":81,"column":8}}]},"6":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":4},"end":{"line":94,"column":4}},{"start":{"line":94,"column":4},"end":{"line":94,"column":4}}]},"7":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":8},"end":{"line":97,"column":8}},{"start":{"line":97,"column":8},"end":{"line":97,"column":8}}]},"8":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":4},"end":{"line":111,"column":4}},{"start":{"line":111,"column":4},"end":{"line":111,"column":4}}]},"9":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":8},"end":{"line":114,"column":8}},{"start":{"line":114,"column":8},"end":{"line":114,"column":8}}]},"10":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":15},"end":{"line":116,"column":15}},{"start":{"line":116,"column":15},"end":{"line":116,"column":15}}]},"11":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":4},"end":{"line":131,"column":4}},{"start":{"line":131,"column":4},"end":{"line":131,"column":4}}]},"12":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":8},"end":{"line":134,"column":8}},{"start":{"line":134,"column":8},"end":{"line":134,"column":8}}]},"13":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":15},"end":{"line":136,"column":15}},{"start":{"line":136,"column":15},"end":{"line":136,"column":15}}]},"14":{"line":150,"type":"if","locations":[{"start":{"line":150,"column":4},"end":{"line":150,"column":4}},{"start":{"line":150,"column":4},"end":{"line":150,"column":4}}]},"15":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":8},"end":{"line":153,"column":8}},{"start":{"line":153,"column":8},"end":{"line":153,"column":8}}]},"16":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":4},"end":{"line":166,"column":4}},{"start":{"line":166,"column":4},"end":{"line":166,"column":4}}]},"17":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":8},"end":{"line":169,"column":8}},{"start":{"line":169,"column":8},"end":{"line":169,"column":8}}]},"18":{"line":184,"type":"cond-expr","locations":[{"start":{"line":184,"column":35},"end":{"line":184,"column":39}},{"start":{"line":184,"column":42},"end":{"line":184,"column":46}}]},"19":{"line":184,"type":"binary-expr","locations":[{"start":{"line":184,"column":11},"end":{"line":184,"column":15}},{"start":{"line":184,"column":19},"end":{"line":184,"column":32}}]},"20":{"line":196,"type":"if","locations":[{"start":{"line":196,"column":4},"end":{"line":196,"column":4}},{"start":{"line":196,"column":4},"end":{"line":196,"column":4}}]},"21":{"line":211,"type":"cond-expr","locations":[{"start":{"line":211,"column":78},"end":{"line":211,"column":90}},{"start":{"line":211,"column":93},"end":{"line":211,"column":98}}]},"22":{"line":211,"type":"binary-expr","locations":[{"start":{"line":211,"column":25},"end":{"line":211,"column":45}},{"start":{"line":211,"column":49},"end":{"line":211,"column":75}}]},"23":{"line":214,"type":"if","locations":[{"start":{"line":214,"column":4},"end":{"line":214,"column":4}},{"start":{"line":214,"column":4},"end":{"line":214,"column":4}}]},"24":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":11},"end":{"line":216,"column":11}},{"start":{"line":216,"column":11},"end":{"line":216,"column":11}}]},"25":{"line":231,"type":"if","locations":[{"start":{"line":231,"column":4},"end":{"line":231,"column":4}},{"start":{"line":231,"column":4},"end":{"line":231,"column":4}}]},"26":{"line":238,"type":"if","locations":[{"start":{"line":238,"column":4},"end":{"line":238,"column":4}},{"start":{"line":238,"column":4},"end":{"line":238,"column":4}}]},"27":{"line":240,"type":"if","locations":[{"start":{"line":240,"column":6},"end":{"line":240,"column":6}},{"start":{"line":240,"column":6},"end":{"line":240,"column":6}}]},"28":{"line":253,"type":"binary-expr","locations":[{"start":{"line":253,"column":11},"end":{"line":253,"column":41}},{"start":{"line":253,"column":45},"end":{"line":253,"column":58}}]},"29":{"line":255,"type":"if","locations":[{"start":{"line":255,"column":6},"end":{"line":255,"column":6}},{"start":{"line":255,"column":6},"end":{"line":255,"column":6}}]},"30":{"line":277,"type":"if","locations":[{"start":{"line":277,"column":4},"end":{"line":277,"column":4}},{"start":{"line":277,"column":4},"end":{"line":277,"column":4}}]},"31":{"line":284,"type":"if","locations":[{"start":{"line":284,"column":4},"end":{"line":284,"column":4}},{"start":{"line":284,"column":4},"end":{"line":284,"column":4}}]},"32":{"line":286,"type":"if","locations":[{"start":{"line":286,"column":6},"end":{"line":286,"column":6}},{"start":{"line":286,"column":6},"end":{"line":286,"column":6}}]},"33":{"line":298,"type":"binary-expr","locations":[{"start":{"line":298,"column":11},"end":{"line":298,"column":41}},{"start":{"line":298,"column":45},"end":{"line":298,"column":58}}]},"34":{"line":300,"type":"if","locations":[{"start":{"line":300,"column":6},"end":{"line":300,"column":6}},{"start":{"line":300,"column":6},"end":{"line":300,"column":6}}]},"35":{"line":327,"type":"if","locations":[{"start":{"line":327,"column":4},"end":{"line":327,"column":4}},{"start":{"line":327,"column":4},"end":{"line":327,"column":4}}]},"36":{"line":327,"type":"binary-expr","locations":[{"start":{"line":327,"column":8},"end":{"line":327,"column":29}},{"start":{"line":327,"column":33},"end":{"line":327,"column":62}}]},"37":{"line":332,"type":"if","locations":[{"start":{"line":332,"column":4},"end":{"line":332,"column":4}},{"start":{"line":332,"column":4},"end":{"line":332,"column":4}}]},"38":{"line":335,"type":"if","locations":[{"start":{"line":335,"column":11},"end":{"line":335,"column":11}},{"start":{"line":335,"column":11},"end":{"line":335,"column":11}}]},"39":{"line":337,"type":"if","locations":[{"start":{"line":337,"column":11},"end":{"line":337,"column":11}},{"start":{"line":337,"column":11},"end":{"line":337,"column":11}}]},"40":{"line":350,"type":"binary-expr","locations":[{"start":{"line":350,"column":35},"end":{"line":350,"column":63}},{"start":{"line":350,"column":67},"end":{"line":350,"column":69}}]},"41":{"line":354,"type":"if","locations":[{"start":{"line":354,"column":4},"end":{"line":354,"column":4}},{"start":{"line":354,"column":4},"end":{"line":354,"column":4}}]},"42":{"line":365,"type":"cond-expr","locations":[{"start":{"line":365,"column":57},"end":{"line":365,"column":75}},{"start":{"line":365,"column":78},"end":{"line":365,"column":79}}]},"43":{"line":374,"type":"cond-expr","locations":[{"start":{"line":374,"column":57},"end":{"line":374,"column":75}},{"start":{"line":374,"column":78},"end":{"line":374,"column":79}}]},"44":{"line":386,"type":"if","locations":[{"start":{"line":386,"column":4},"end":{"line":386,"column":4}},{"start":{"line":386,"column":4},"end":{"line":386,"column":4}}]},"45":{"line":391,"type":"if","locations":[{"start":{"line":391,"column":4},"end":{"line":391,"column":4}},{"start":{"line":391,"column":4},"end":{"line":391,"column":4}}]},"46":{"line":410,"type":"if","locations":[{"start":{"line":410,"column":4},"end":{"line":410,"column":4}},{"start":{"line":410,"column":4},"end":{"line":410,"column":4}}]},"47":{"line":415,"type":"if","locations":[{"start":{"line":415,"column":6},"end":{"line":415,"column":6}},{"start":{"line":415,"column":6},"end":{"line":415,"column":6}}]},"48":{"line":429,"type":"if","locations":[{"start":{"line":429,"column":4},"end":{"line":429,"column":4}},{"start":{"line":429,"column":4},"end":{"line":429,"column":4}}]},"49":{"line":435,"type":"if","locations":[{"start":{"line":435,"column":4},"end":{"line":435,"column":4}},{"start":{"line":435,"column":4},"end":{"line":435,"column":4}}]},"50":{"line":437,"type":"if","locations":[{"start":{"line":437,"column":6},"end":{"line":437,"column":6}},{"start":{"line":437,"column":6},"end":{"line":437,"column":6}}]},"51":{"line":443,"type":"binary-expr","locations":[{"start":{"line":443,"column":11},"end":{"line":443,"column":34}},{"start":{"line":443,"column":38},"end":{"line":443,"column":60}}]},"52":{"line":447,"type":"if","locations":[{"start":{"line":447,"column":6},"end":{"line":447,"column":6}},{"start":{"line":447,"column":6},"end":{"line":447,"column":6}}]},"53":{"line":469,"type":"if","locations":[{"start":{"line":469,"column":4},"end":{"line":469,"column":4}},{"start":{"line":469,"column":4},"end":{"line":469,"column":4}}]},"54":{"line":475,"type":"if","locations":[{"start":{"line":475,"column":4},"end":{"line":475,"column":4}},{"start":{"line":475,"column":4},"end":{"line":475,"column":4}}]},"55":{"line":477,"type":"if","locations":[{"start":{"line":477,"column":6},"end":{"line":477,"column":6}},{"start":{"line":477,"column":6},"end":{"line":477,"column":6}}]},"56":{"line":483,"type":"binary-expr","locations":[{"start":{"line":483,"column":11},"end":{"line":483,"column":34}},{"start":{"line":483,"column":38},"end":{"line":483,"column":60}}]},"57":{"line":487,"type":"if","locations":[{"start":{"line":487,"column":6},"end":{"line":487,"column":6}},{"start":{"line":487,"column":6},"end":{"line":487,"column":6}}]},"58":{"line":515,"type":"if","locations":[{"start":{"line":515,"column":4},"end":{"line":515,"column":4}},{"start":{"line":515,"column":4},"end":{"line":515,"column":4}}]},"59":{"line":515,"type":"binary-expr","locations":[{"start":{"line":515,"column":8},"end":{"line":515,"column":31}},{"start":{"line":515,"column":35},"end":{"line":515,"column":58}}]},"60":{"line":575,"type":"if","locations":[{"start":{"line":575,"column":4},"end":{"line":575,"column":4}},{"start":{"line":575,"column":4},"end":{"line":575,"column":4}}]},"61":{"line":584,"type":"if","locations":[{"start":{"line":584,"column":6},"end":{"line":584,"column":6}},{"start":{"line":584,"column":6},"end":{"line":584,"column":6}}]},"62":{"line":594,"type":"if","locations":[{"start":{"line":594,"column":6},"end":{"line":594,"column":6}},{"start":{"line":594,"column":6},"end":{"line":594,"column":6}}]},"63":{"line":595,"type":"if","locations":[{"start":{"line":595,"column":8},"end":{"line":595,"column":8}},{"start":{"line":595,"column":8},"end":{"line":595,"column":8}}]},"64":{"line":602,"type":"if","locations":[{"start":{"line":602,"column":6},"end":{"line":602,"column":6}},{"start":{"line":602,"column":6},"end":{"line":602,"column":6}}]},"65":{"line":604,"type":"if","locations":[{"start":{"line":604,"column":8},"end":{"line":604,"column":8}},{"start":{"line":604,"column":8},"end":{"line":604,"column":8}}]},"66":{"line":604,"type":"binary-expr","locations":[{"start":{"line":604,"column":12},"end":{"line":604,"column":26}},{"start":{"line":604,"column":30},"end":{"line":604,"column":46}}]},"67":{"line":609,"type":"if","locations":[{"start":{"line":609,"column":15},"end":{"line":609,"column":15}},{"start":{"line":609,"column":15},"end":{"line":609,"column":15}}]},"68":{"line":616,"type":"binary-expr","locations":[{"start":{"line":616,"column":49},"end":{"line":616,"column":85}},{"start":{"line":616,"column":89},"end":{"line":616,"column":91}}]},"69":{"line":620,"type":"binary-expr","locations":[{"start":{"line":620,"column":47},"end":{"line":620,"column":83}},{"start":{"line":620,"column":87},"end":{"line":620,"column":89}}]},"70":{"line":625,"type":"if","locations":[{"start":{"line":625,"column":6},"end":{"line":625,"column":6}},{"start":{"line":625,"column":6},"end":{"line":625,"column":6}}]},"71":{"line":627,"type":"if","locations":[{"start":{"line":627,"column":8},"end":{"line":627,"column":8}},{"start":{"line":627,"column":8},"end":{"line":627,"column":8}}]},"72":{"line":627,"type":"binary-expr","locations":[{"start":{"line":627,"column":12},"end":{"line":627,"column":30}},{"start":{"line":627,"column":34},"end":{"line":627,"column":50}}]},"73":{"line":633,"type":"if","locations":[{"start":{"line":633,"column":15},"end":{"line":633,"column":15}},{"start":{"line":633,"column":15},"end":{"line":633,"column":15}}]},"74":{"line":638,"type":"if","locations":[{"start":{"line":638,"column":13},"end":{"line":638,"column":13}},{"start":{"line":638,"column":13},"end":{"line":638,"column":13}}]},"75":{"line":642,"type":"if","locations":[{"start":{"line":642,"column":6},"end":{"line":642,"column":6}},{"start":{"line":642,"column":6},"end":{"line":642,"column":6}}]},"76":{"line":687,"type":"cond-expr","locations":[{"start":{"line":687,"column":68},"end":{"line":687,"column":80}},{"start":{"line":687,"column":83},"end":{"line":687,"column":108}}]},"77":{"line":687,"type":"binary-expr","locations":[{"start":{"line":687,"column":15},"end":{"line":687,"column":35}},{"start":{"line":687,"column":39},"end":{"line":687,"column":65}}]},"78":{"line":691,"type":"if","locations":[{"start":{"line":691,"column":4},"end":{"line":691,"column":4}},{"start":{"line":691,"column":4},"end":{"line":691,"column":4}}]},"79":{"line":697,"type":"if","locations":[{"start":{"line":697,"column":8},"end":{"line":697,"column":8}},{"start":{"line":697,"column":8},"end":{"line":697,"column":8}}]},"80":{"line":697,"type":"binary-expr","locations":[{"start":{"line":697,"column":12},"end":{"line":697,"column":26}},{"start":{"line":697,"column":30},"end":{"line":697,"column":38}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule GraphQLSegment"," */","","'use strict';","","var _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));","","var _assign2 = _interopRequireDefault(require('babel-runtime/core-js/object/assign'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","/**"," * Represents one contiguous segment of edges within a `GraphQLRange`. Has"," * methods for adding/removing edges (`appendEdge`, `prependEdge`, `removeEdge`)"," * and working with cursors (`getFirstCursor`, `getLastCursor` etc)"," *"," * Edges are never actually deleted from segments; they are merely marked as"," * being deleted. As such, `GraphQLSegment` offers both a `getCount` method"," * (returning the number of non-deleted edges) and a `getLength` method (which"," * returns the total number, including deleted edges)."," *"," * Used mostly as an implementation detail internal to `GraphQLRange`."," *"," * @internal"," */","var GraphQLSegment = function () {","  function GraphQLSegment() {","    (0, _classCallCheck3['default'])(this, GraphQLSegment);","","    // We use a map rather than an array because indices can become negative","    // when prepending.","    this._indexToMetadataMap = {};","","    // We keep track of past indices to ensure we can delete them completely.","    this._idToIndicesMap = {};","    this._cursorToIndexMap = {};","","    this._count = 0;","    this._minIndex = null;","    this._maxIndex = null;","  }","","  /**","   * @param {string} cursor","   * @return {?number}","   */","","","  GraphQLSegment.prototype._getIndexForCursor = function _getIndexForCursor(cursor) {","    return this._cursorToIndexMap[cursor];","  };","","  /**","   * @param {string} id","   * @return {?number}","   */","","","  GraphQLSegment.prototype._getIndexForID = function _getIndexForID(id) {","    var indices = this._idToIndicesMap[id];","    return indices && indices[0];","  };","","  /**","   * @return {?string} cursor for first non-deleted edge","   */","","","  GraphQLSegment.prototype.getFirstCursor = function getFirstCursor() {","    if (this.getLength()) {","      for (var ii = this._minIndex; ii <= this._maxIndex; ii++) {","        var metadata = this._indexToMetadataMap[ii];","        if (!metadata.deleted) {","          return metadata.cursor;","        }","      }","    }","  };","","  /**","   * @return {?string} cursor for last non-deleted edge","   */","","","  GraphQLSegment.prototype.getLastCursor = function getLastCursor() {","    if (this.getLength()) {","      for (var ii = this._maxIndex; ii >= this._minIndex; ii--) {","        var metadata = this._indexToMetadataMap[ii];","        if (!metadata.deleted) {","          return metadata.cursor;","        }","      }","    }","  };","","  /**","   * @return {boolean} returns whether cursor is before the first non-deleted","   * cursor inclusively.","   */","","","  GraphQLSegment.prototype.isFirstCursor = function isFirstCursor(cursor) {","    if (this.getLength()) {","      for (var ii = this._minIndex; ii <= this._maxIndex; ii++) {","        var metadata = this._indexToMetadataMap[ii];","        if (!metadata.deleted) {","          return metadata.cursor === cursor;","        } else if (metadata.cursor === cursor) {","          return true;","        }","      }","      return false;","    }","  };","","  /**","    * @return {boolean} returns whether cursor is after the last non-deleted","    * cursor inclusively.","    */","","","  GraphQLSegment.prototype.isLastCursor = function isLastCursor(cursor) {","    if (this.getLength()) {","      for (var ii = this._maxIndex; ii >= this._minIndex; ii--) {","        var metadata = this._indexToMetadataMap[ii];","        if (!metadata.deleted) {","          return metadata.cursor === cursor;","        } else if (metadata.cursor === cursor) {","          return true;","        }","      }","      return false;","    }","  };","","  /**","   * @return {?string} id for first non-deleted edge","   */","","","  GraphQLSegment.prototype.getFirstID = function getFirstID() {","    if (this.getLength()) {","      for (var ii = this._minIndex; ii <= this._maxIndex; ii++) {","        var metadata = this._indexToMetadataMap[ii];","        if (!metadata.deleted) {","          return metadata.edgeID;","        }","      }","    }","  };","","  /**","   * @return {?string} id for last non-deleted edge","   */","","","  GraphQLSegment.prototype.getLastID = function getLastID() {","    if (this.getLength()) {","      for (var ii = this._maxIndex; ii >= this._minIndex; ii--) {","        var metadata = this._indexToMetadataMap[ii];","        if (!metadata.deleted) {","          return metadata.edgeID;","        }","      }","    }","  };","","  /**","   * @param {number} index","   * @return {?object} Returns the not-deleted edge at index","   */","","","  GraphQLSegment.prototype._getEdgeAtIndex = function _getEdgeAtIndex(index) {","    var edge = this._indexToMetadataMap[index];","    return edge && !edge.deleted ? edge : null;","  };","","  /**","   * Returns whether there is a non-deleted edge for id","   * @param {string} id","   * @return {boolean}","   */","","","  GraphQLSegment.prototype.containsEdgeWithID = function containsEdgeWithID(id) {","    var index = this._getIndexForID(id);","    if (index === undefined) {","      return false;","    }","    return !!this._getEdgeAtIndex(index);","  };","","  /**","   * Returns whether there is a non-deleted edge for cursor","   * @param {string} cursor","   * @param {?boolean} includeDeleted","   * @return {boolean}","   */","","","  GraphQLSegment.prototype.containsEdgeWithCursor = function containsEdgeWithCursor(cursor) {","    var includeDeleted = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;","","    var index = this._getIndexForCursor(cursor);","    if (index === undefined) {","      return false;","    } else if (includeDeleted) {","      return true;","    }","    return !!this._getEdgeAtIndex(index);","  };","","  /**","   * Returns up to count number of ids and cursors that is after input cursor","   * @param {number} count","   * @param {?string} cursor","   * @return {object} object with arrays of ids and cursors","   */","","","  GraphQLSegment.prototype.getMetadataAfterCursor = function getMetadataAfterCursor(count, cursor) {","    if (!this.getLength()) {","      return {","        edgeIDs: [],","        cursors: []","      };","    }","    var currentIndex = this._minIndex;","    if (cursor) {","      var index = this._getIndexForCursor(cursor);","      if (index === undefined) {","        console.warn('This segment does not have a cursor %s', cursor);","        return {","          edgeIDs: [],","          cursors: []","        };","      }","      currentIndex = index + 1;","    }","    var total = 0;","    var edgeIDs = [];","    var cursors = [];","","    while (currentIndex <= this._maxIndex && total < count) {","      var metadata = this._indexToMetadataMap[currentIndex];","      if (!metadata.deleted) {","        edgeIDs.push(metadata.edgeID);","        cursors.push(metadata.cursor);","        total++;","      }","      currentIndex++;","    }","    return {","      edgeIDs: edgeIDs,","      cursors: cursors","    };","  };","","  /**","   * Returns up to count number of ids and cursors that is before index","   * @param {number} count","   * @param {?string} cursor","   * @return {object} object with arrays of ids and cursors","   */","","","  GraphQLSegment.prototype.getMetadataBeforeCursor = function getMetadataBeforeCursor(count, cursor) {","    if (!this.getLength()) {","      return {","        edgeIDs: [],","        cursors: []","      };","    }","    var currentIndex = this._maxIndex;","    if (cursor) {","      var index = this._getIndexForCursor(cursor);","      if (index === undefined) {","        console.warn('This segment does not have a cursor %s', cursor);","        return {","          edgeIDs: [],","          cursors: []","        };","      }","      currentIndex = index - 1;","    }","    var total = 0;","    var edgeIDs = [];","    var cursors = [];","    while (currentIndex >= this._minIndex && total < count) {","      var metadata = this._indexToMetadataMap[currentIndex];","      if (!metadata.deleted) {","        edgeIDs.push(metadata.edgeID);","        cursors.push(metadata.cursor);","        total++;","      }","      currentIndex--;","    }","","    // Reverse edges because larger index were added first","    return {","      edgeIDs: edgeIDs.reverse(),","      cursors: cursors.reverse()","    };","  };","","  /**","   * @param {object} edge","   * @param {number} index","   */","","","  GraphQLSegment.prototype._addEdgeAtIndex = function _addEdgeAtIndex(edge, index) {","    var edgeID = require('./RelayRecord').getDataIDForObject(edge);","    var cursor = edge.cursor;","","    var idIndex = this._getIndexForID(edgeID);","    // If the id is has an index and is not deleted","    if (idIndex !== undefined && this._getEdgeAtIndex(idIndex)) {","      console.warn('Attempted to add an ID already in GraphQLSegment: %s', edgeID);","      return;","    }","","    if (this.getLength() === 0) {","      this._minIndex = index;","      this._maxIndex = index;","    } else if (this._minIndex === index + 1) {","      this._minIndex = index;","    } else if (this._maxIndex === index - 1) {","      this._maxIndex = index;","    } else {","      console.warn('Attempted to add noncontiguous index to GraphQLSegment: ' + index + ' to ' + ('(' + this._minIndex + ', ' + this._maxIndex + ')'));","","      return;","    }","","    this._indexToMetadataMap[index] = {","      edgeID: edgeID,","      cursor: cursor,","      deleted: false","    };","    this._idToIndicesMap[edgeID] = this._idToIndicesMap[edgeID] || [];","    this._idToIndicesMap[edgeID].unshift(index);","    this._count++;","","    if (cursor) {","      this._cursorToIndexMap[cursor] = index;","    }","  };","","  /**","   * @param {object} edge should have cursor and a node with id","   */","","","  GraphQLSegment.prototype.prependEdge = function prependEdge(edge) {","    this._addEdgeAtIndex(edge, this._minIndex !== null ? this._minIndex - 1 : 0);","  };","","  /**","   * @param {object} edge should have cursor and a node with id","   */","","","  GraphQLSegment.prototype.appendEdge = function appendEdge(edge) {","    this._addEdgeAtIndex(edge, this._maxIndex !== null ? this._maxIndex + 1 : 0);","  };","","  /**","   * Mark the currently valid edge with given id to be deleted.","   *","   * @param {string} id the id of the edge to be removed","   */","","","  GraphQLSegment.prototype.removeEdge = function removeEdge(id) {","    var index = this._getIndexForID(id);","    if (index === undefined) {","      console.warn('Attempted to remove edge with ID that was never in GraphQLSegment: ' + id);","      return;","    }","    var data = this._indexToMetadataMap[index];","    if (data.deleted) {","      console.warn('Attempted to remove edge with ID that was already removed: ' + id);","      return;","    }","    data.deleted = true;","    this._count--;","  };","","  /**","   * Mark all edges with given id to be deleted. This is used by","   * delete mutations to ensure both the current and past edges are no longer","   * accessible.","   *","   * @param {string} id the id of the edge to be removed","   */","","","  GraphQLSegment.prototype.removeAllEdges = function removeAllEdges(id) {","    var indices = this._idToIndicesMap[id];","    if (!indices) {","      return;","    }","    for (var ii = 0; ii < indices.length; ii++) {","      var data = this._indexToMetadataMap[indices[ii]];","      if (!data.deleted) {","        data.deleted = true;","        this._count--;","      }","    }","  };","","  /**","   * @param {array} edges","   * @param {?string} cursor","   */","","","  GraphQLSegment.prototype.addEdgesAfterCursor = function addEdgesAfterCursor(edges, cursor) {","    if (!edges.length) {","      return;","    }","    // Default adding after with no cursor to -1","    // So the first element in the segment is stored at index 0","    var index = -1;","    if (cursor) {","      index = this._getIndexForCursor(cursor);","      if (index === undefined) {","        console.warn('This segment does not have a cursor %s', cursor);","        return;","      }","    }","","    while (this._maxIndex !== null && index < this._maxIndex) {","      var data = this._indexToMetadataMap[index + 1];","      // Skip over elements that have been deleted","      // so we can add new edges on the end.","      if (data.deleted) {","        index++;","      } else {","        console.warn('Attempted to do an overwrite to GraphQLSegment: ' + 'last index is ' + this._maxIndex + ' trying to add edges before ' + index);","        return;","      }","    }","","    var startIndex = index + 1;","    for (var ii = 0; ii < edges.length; ii++) {","      var edge = edges[ii];","      this._addEdgeAtIndex(edge, startIndex + ii);","    }","  };","","  /**","   * @param {array} edges - should be in increasing order of index","   * @param {?string} cursor","   */","","","  GraphQLSegment.prototype.addEdgesBeforeCursor = function addEdgesBeforeCursor(edges, cursor) {","    if (!edges.length) {","      return;","    }","    // Default adding before with no cursor to 1","    // So the first element in the segment is stored at index 0","    var index = 1;","    if (cursor) {","      index = this._getIndexForCursor(cursor);","      if (index === undefined) {","        console.warn('This segment does not have a cursor %s', cursor);","        return;","      }","    }","","    while (this._minIndex !== null && index > this._minIndex) {","      var data = this._indexToMetadataMap[index - 1];","      // Skip over elements that have been deleted","      // so we can add new edges in the front.","      if (data.deleted) {","        index--;","      } else {","        console.warn('Attempted to do an overwrite to GraphQLSegment: ' + 'first index is ' + this._minIndex + ' trying to add edges after ' + index);","        return;","      }","    }","","    // Edges must be added in reverse order since the","    // segment must be continuous at all times.","    var startIndex = index - 1;","    for (var ii = 0; ii < edges.length; ii++) {","      // Iterates from edges.length - 1 to 0","      var edge = edges[edges.length - ii - 1];","      this._addEdgeAtIndex(edge, startIndex - ii);","    }","  };","","  /**","   * This is the total length of the segment including the deleted edges.","   * Non-zero length guarantees value max and min indices.","   * DO NOT USE THIS TO DETERMINE THE TOTAL NUMBER OF EDGES; use `getCount`","   * instead.","   * @return {number}","   */","","","  GraphQLSegment.prototype.getLength = function getLength() {","    if (this._minIndex === null && this._maxIndex === null) {","      return 0;","    }","","    return this._maxIndex - this._minIndex + 1;","  };","","  /**","   * Returns the total number of non-deleted edges in the segment.","   *","   * @return {number}","   */","","","  GraphQLSegment.prototype.getCount = function getCount() {","    return this._count;","  };","","  /**","   * In the event of a failed `concatSegment` operation, rollback internal","   * properties to their former values.","   *","   * @param {object} cursorRollbackMap","   * @param {object} idRollbackMap","   * @param {object} counters","   */","","","  GraphQLSegment.prototype._rollback = function _rollback(cursorRollbackMap, idRollbackMap, counters) {","    (0, _assign2['default'])(this._cursorToIndexMap, cursorRollbackMap);","    (0, _assign2['default'])(this._idToIndicesMap, idRollbackMap);","","    // no need to reset _indexToMetadataMap; resetting counters is enough","    this._count = counters.count;","    this._maxIndex = counters.maxIndex;","    this._minIndex = counters.minIndex;","  };","","  /**","   * @return {object} Captured counter state.","   */","","","  GraphQLSegment.prototype._getCounterState = function _getCounterState() {","    return {","      count: this._count,","      maxIndex: this._maxIndex,","      minIndex: this._minIndex","    };","  };","","  /**","   * Copies over content of the input segment and add to the current","   * segment.","   * @param {GraphQLSegment} segment - the segment to be copied over","   * @return {boolean} whether or not we successfully concatenated the segments","   */","","","  GraphQLSegment.prototype.concatSegment = function concatSegment(segment) {","    if (!segment.getLength()) {","      return true;","    }","    var idRollbackMap = {};","    var cursorRollbackMap = {};","    var counterState = this._getCounterState();","    var newEdges = segment._indexToMetadataMap;","    for (var ii = segment._minIndex; ii <= segment._maxIndex; ii++) {","      var index = void 0;","      if (this.getLength()) {","        index = this._maxIndex + 1;","      } else {","        index = 0;","        this._minIndex = 0;","      }","      this._maxIndex = index;","","      var newEdge = newEdges[ii];","      var idIndex = this._getIndexForID(newEdge.edgeID);","      if (!idRollbackMap.hasOwnProperty(newEdge.edgeID)) {","        if (this._idToIndicesMap[newEdge.edgeID]) {","          idRollbackMap[newEdge.edgeID] = this._idToIndicesMap[newEdge.edgeID].slice();","        } else {","          idRollbackMap[newEdge.edgeID] = undefined;","        }","      }","      // Check for id collision. Can't have same id twice","      if (idIndex !== undefined) {","        var idEdge = this._indexToMetadataMap[idIndex];","        if (idEdge.deleted && !newEdge.deleted) {","          // We want to map to most recent edge. Only write to the front of map","          // if existing edge with id is deleted or have an older deletion","          // time.","          this._idToIndicesMap[newEdge.edgeID].unshift(index);","        } else if (!newEdge.deleted) {","          console.warn('Attempt to concat an ID already in GraphQLSegment: %s', newEdge.edgeID);","          this._rollback(cursorRollbackMap, idRollbackMap, counterState);","          return false;","        } else {","          // We want to keep track of past edges as well. Write these indices","          // to the end of the array.","          this._idToIndicesMap[newEdge.edgeID] = this._idToIndicesMap[newEdge.edgeID] || [];","          this._idToIndicesMap[newEdge.edgeID].push(index);","        }","      } else {","        this._idToIndicesMap[newEdge.edgeID] = this._idToIndicesMap[newEdge.edgeID] || [];","        this._idToIndicesMap[newEdge.edgeID].unshift(index);","      }","      var cursorIndex = this._getIndexForCursor(newEdge.cursor);","      // Check for cursor collision. Can't have same cursor twice","      if (cursorIndex !== undefined) {","        var cursorEdge = this._indexToMetadataMap[cursorIndex];","        if (cursorEdge.deleted && !newEdge.deleted) {","          // We want to map to most recent edge. Only write in the cursor map if","          // existing edge with cursor is deleted or have and older deletion","          // time.","          cursorRollbackMap[newEdge.cursor] = this._cursorToIndexMap[newEdge.cursor];","          this._cursorToIndexMap[newEdge.cursor] = index;","        } else if (!newEdge.deleted) {","          console.warn('Attempt to concat a cursor already in GraphQLSegment: %s', newEdge.cursor);","          this._rollback(cursorRollbackMap, idRollbackMap, counterState);","          return false;","        }","      } else if (newEdge.cursor) {","        cursorRollbackMap[newEdge.cursor] = this._cursorToIndexMap[newEdge.cursor];","        this._cursorToIndexMap[newEdge.cursor] = index;","      }","      if (!newEdge.deleted) {","        this._count++;","      }","      this._indexToMetadataMap[index] = (0, _assign2['default'])({}, newEdge);","    }","","    return true;","  };","","  GraphQLSegment.prototype.toJSON = function toJSON() {","    return [this._indexToMetadataMap, this._idToIndicesMap, this._cursorToIndexMap, this._minIndex, this._maxIndex, this._count];","  };","","  GraphQLSegment.fromJSON = function fromJSON(descriptor) {","    var indexToMetadataMap = descriptor[0],","        idToIndicesMap = descriptor[1],","        cursorToIndexMap = descriptor[2],","        minIndex = descriptor[3],","        maxIndex = descriptor[4],","        count = descriptor[5];","","    var segment = new GraphQLSegment();","    segment._indexToMetadataMap = indexToMetadataMap;","    segment._idToIndicesMap = idToIndicesMap;","    segment._cursorToIndexMap = cursorToIndexMap;","    segment._minIndex = minIndex;","    segment._maxIndex = maxIndex;","    segment._count = count;","    return segment;","  };","","  GraphQLSegment.prototype.__debug = function __debug() {","    return {","      metadata: this._indexToMetadataMap,","      idToIndices: this._idToIndicesMap,","      cursorToIndex: this._cursorToIndexMap","    };","  };","","  /**","   * Returns a list of all IDs that were registered for this segment.","   */","","","  GraphQLSegment.prototype.getEdgeIDs = function getEdgeIDs() {","    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { includeDeleted: false },","        includeDeleted = _ref.includeDeleted;","","    var edgeIds = [];","    if (this.getLength() > 0) {","      for (var ii = this._minIndex; ii <= this._maxIndex; ii++) {","        var _indexToMetadataMap$i = this._indexToMetadataMap[ii],","            deleted = _indexToMetadataMap$i.deleted,","            edgeID = _indexToMetadataMap$i.edgeID;","","        if (includeDeleted || !deleted) {","          edgeIds.push(edgeID);","        }","      }","    }","    return edgeIds;","  };","","  return GraphQLSegment;","}();","","module.exports = GraphQLSegment;"],"l":{"14":1,"16":1,"18":2,"34":1,"35":1,"36":0,"40":0,"43":0,"44":0,"46":0,"47":0,"48":0,"57":1,"58":0,"67":1,"68":0,"69":0,"77":1,"78":0,"79":0,"80":0,"81":0,"82":0,"93":1,"94":0,"95":0,"96":0,"97":0,"98":0,"110":1,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"120":0,"130":1,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"140":0,"149":1,"150":0,"151":0,"152":0,"153":0,"154":0,"165":1,"166":0,"167":0,"168":0,"169":0,"170":0,"182":1,"183":0,"184":0,"194":1,"195":0,"196":0,"197":0,"199":0,"210":1,"211":0,"213":0,"214":0,"215":0,"216":0,"217":0,"219":0,"230":1,"231":0,"232":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"247":0,"249":0,"250":0,"251":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"260":0,"262":0,"276":1,"277":0,"278":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"293":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"305":0,"309":0,"321":1,"322":0,"323":0,"325":0,"327":0,"328":0,"329":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"340":0,"342":0,"345":0,"350":0,"351":0,"352":0,"354":0,"355":0,"364":1,"365":0,"373":1,"374":0,"384":1,"385":0,"386":0,"387":0,"388":0,"390":0,"391":0,"392":0,"393":0,"395":0,"396":0,"408":1,"409":0,"410":0,"411":0,"413":0,"414":0,"415":0,"416":0,"417":0,"428":1,"429":0,"430":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"443":0,"444":0,"447":0,"448":0,"450":0,"451":0,"455":0,"456":0,"457":0,"458":0,"468":1,"469":0,"470":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"483":0,"484":0,"487":0,"488":0,"490":0,"491":0,"497":0,"498":0,"500":0,"501":0,"514":1,"515":0,"516":0,"519":0,"529":1,"530":0,"543":1,"544":0,"545":0,"548":0,"549":0,"550":0,"558":1,"559":0,"574":1,"575":0,"576":0,"578":0,"579":0,"580":0,"581":0,"582":0,"583":0,"584":0,"585":0,"587":0,"588":0,"590":0,"592":0,"593":0,"594":0,"595":0,"596":0,"598":0,"602":0,"603":0,"604":0,"608":0,"609":0,"610":0,"611":0,"612":0,"616":0,"617":0,"620":0,"621":0,"623":0,"625":0,"626":0,"627":0,"631":0,"632":0,"633":0,"634":0,"635":0,"636":0,"638":0,"639":0,"640":0,"642":0,"643":0,"645":0,"648":0,"651":1,"652":0,"655":1,"656":0,"663":0,"664":0,"665":0,"666":0,"667":0,"668":0,"669":0,"670":0,"673":1,"674":0,"686":1,"687":0,"690":0,"691":0,"692":0,"693":0,"697":0,"698":0,"702":0,"705":1,"708":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/GraphQLStoreQueryResolver.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/GraphQLStoreQueryResolver.js","s":{"1":1,"2":1,"3":1,"4":2,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1,"39":1,"40":1,"41":0,"42":0,"43":0,"44":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":1,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":1,"72":1,"73":1,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":1,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":1,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":1,"122":0,"123":1,"124":0,"125":0,"126":0,"127":1,"128":0,"129":0,"130":1,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":1,"144":1,"145":1},"b":{"1":[2,0],"2":[2,2],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0,0],"19":[0,0],"20":[0,0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0]},"f":{"1":2,"2":1,"3":0,"4":0,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":37}}},"2":{"name":"(anonymous_2)","line":29,"loc":{"start":{"line":29,"column":32},"end":{"line":29,"column":44}}},"3":{"name":"GraphQLStoreQueryResolver","line":30,"loc":{"start":{"line":30,"column":2},"end":{"line":30,"column":68}}},"4":{"name":"dispose","line":46,"loc":{"start":{"line":46,"column":48},"end":{"line":46,"column":67}}},"5":{"name":"resolve","line":52,"loc":{"start":{"line":52,"column":48},"end":{"line":52,"column":84}}},"6":{"name":"(anonymous_6)","line":99,"loc":{"start":{"line":99,"column":38},"end":{"line":99,"column":50}}},"7":{"name":"GraphQLStorePluralQueryResolver","line":100,"loc":{"start":{"line":100,"column":2},"end":{"line":100,"column":64}}},"8":{"name":"dispose","line":108,"loc":{"start":{"line":108,"column":54},"end":{"line":108,"column":73}}},"9":{"name":"(anonymous_9)","line":110,"loc":{"start":{"line":110,"column":30},"end":{"line":110,"column":50}}},"10":{"name":"resolve","line":127,"loc":{"start":{"line":127,"column":54},"end":{"line":127,"column":90}}},"11":{"name":"(anonymous_11)","line":169,"loc":{"start":{"line":169,"column":38},"end":{"line":169,"column":50}}},"12":{"name":"GraphQLStoreSingleQueryResolver","line":170,"loc":{"start":{"line":170,"column":2},"end":{"line":170,"column":64}}},"13":{"name":"dispose","line":180,"loc":{"start":{"line":180,"column":54},"end":{"line":180,"column":73}}},"14":{"name":"resolve","line":198,"loc":{"start":{"line":198,"column":54},"end":{"line":198,"column":93}}},"15":{"name":"_getCanonicalID","line":260,"loc":{"start":{"line":260,"column":62},"end":{"line":260,"column":91}}},"16":{"name":"_handleChange","line":264,"loc":{"start":{"line":264,"column":60},"end":{"line":264,"column":85}}},"17":{"name":"_resolveFragment","line":271,"loc":{"start":{"line":271,"column":63},"end":{"line":271,"column":107}}},"18":{"name":"_updateGarbageCollectorSubscriptionCount","line":284,"loc":{"start":{"line":284,"column":87},"end":{"line":284,"column":150}}},"19":{"name":"(anonymous_19)","line":288,"loc":{"start":{"line":288,"column":7},"end":{"line":288,"column":19}}},"20":{"name":"(anonymous_20)","line":298,"loc":{"start":{"line":298,"column":52},"end":{"line":298,"column":66}}},"21":{"name":"(anonymous_21)","line":302,"loc":{"start":{"line":302,"column":52},"end":{"line":302,"column":66}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":82}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":97}},"4":{"start":{"line":19,"column":39},"end":{"line":19,"column":95}},"5":{"start":{"line":29,"column":0},"end":{"line":92,"column":4}},"6":{"start":{"line":30,"column":2},"end":{"line":38,"column":3}},"7":{"start":{"line":31,"column":4},"end":{"line":31,"column":70}},"8":{"start":{"line":33,"column":4},"end":{"line":33,"column":19}},"9":{"start":{"line":34,"column":4},"end":{"line":34,"column":30}},"10":{"start":{"line":35,"column":4},"end":{"line":35,"column":30}},"11":{"start":{"line":36,"column":4},"end":{"line":36,"column":26}},"12":{"start":{"line":37,"column":4},"end":{"line":37,"column":32}},"13":{"start":{"line":46,"column":2},"end":{"line":50,"column":4}},"14":{"start":{"line":47,"column":4},"end":{"line":49,"column":5}},"15":{"start":{"line":48,"column":6},"end":{"line":48,"column":31}},"16":{"start":{"line":52,"column":2},"end":{"line":89,"column":4}},"17":{"start":{"line":54,"column":4},"end":{"line":56,"column":5}},"18":{"start":{"line":55,"column":6},"end":{"line":55,"column":298}},"19":{"start":{"line":62,"column":4},"end":{"line":88,"column":5}},"20":{"start":{"line":64,"column":6},"end":{"line":64,"column":207}},"21":{"start":{"line":65,"column":6},"end":{"line":65,"column":36}},"22":{"start":{"line":66,"column":6},"end":{"line":69,"column":7}},"23":{"start":{"line":67,"column":8},"end":{"line":67,"column":27}},"24":{"start":{"line":68,"column":8},"end":{"line":68,"column":24}},"25":{"start":{"line":70,"column":6},"end":{"line":72,"column":7}},"26":{"start":{"line":71,"column":8},"end":{"line":71,"column":88}},"27":{"start":{"line":73,"column":6},"end":{"line":73,"column":32}},"28":{"start":{"line":74,"column":6},"end":{"line":74,"column":49}},"29":{"start":{"line":77,"column":6},"end":{"line":77,"column":209}},"30":{"start":{"line":78,"column":6},"end":{"line":78,"column":37}},"31":{"start":{"line":79,"column":6},"end":{"line":82,"column":7}},"32":{"start":{"line":80,"column":8},"end":{"line":80,"column":28}},"33":{"start":{"line":81,"column":8},"end":{"line":81,"column":25}},"34":{"start":{"line":83,"column":6},"end":{"line":85,"column":7}},"35":{"start":{"line":84,"column":8},"end":{"line":84,"column":89}},"36":{"start":{"line":86,"column":6},"end":{"line":86,"column":33}},"37":{"start":{"line":87,"column":6},"end":{"line":87,"column":50}},"38":{"start":{"line":91,"column":2},"end":{"line":91,"column":35}},"39":{"start":{"line":99,"column":0},"end":{"line":162,"column":4}},"40":{"start":{"line":100,"column":2},"end":{"line":106,"column":3}},"41":{"start":{"line":101,"column":4},"end":{"line":101,"column":76}},"42":{"start":{"line":103,"column":4},"end":{"line":103,"column":19}},"43":{"start":{"line":104,"column":4},"end":{"line":104,"column":30}},"44":{"start":{"line":105,"column":4},"end":{"line":105,"column":32}},"45":{"start":{"line":108,"column":2},"end":{"line":116,"column":4}},"46":{"start":{"line":109,"column":4},"end":{"line":113,"column":5}},"47":{"start":{"line":110,"column":6},"end":{"line":112,"column":9}},"48":{"start":{"line":111,"column":8},"end":{"line":111,"column":34}},"49":{"start":{"line":114,"column":4},"end":{"line":114,"column":25}},"50":{"start":{"line":115,"column":4},"end":{"line":115,"column":23}},"51":{"start":{"line":127,"column":2},"end":{"line":159,"column":4}},"52":{"start":{"line":128,"column":4},"end":{"line":128,"column":36}},"53":{"start":{"line":129,"column":4},"end":{"line":129,"column":29}},"54":{"start":{"line":131,"column":4},"end":{"line":131,"column":40}},"55":{"start":{"line":132,"column":4},"end":{"line":132,"column":36}},"56":{"start":{"line":133,"column":4},"end":{"line":133,"column":36}},"57":{"start":{"line":136,"column":4},"end":{"line":138,"column":5}},"58":{"start":{"line":137,"column":6},"end":{"line":137,"column":91}},"59":{"start":{"line":139,"column":4},"end":{"line":141,"column":5}},"60":{"start":{"line":140,"column":6},"end":{"line":140,"column":32}},"61":{"start":{"line":144,"column":4},"end":{"line":146,"column":5}},"62":{"start":{"line":145,"column":6},"end":{"line":145,"column":23}},"63":{"start":{"line":147,"column":4},"end":{"line":153,"column":5}},"64":{"start":{"line":148,"column":6},"end":{"line":148,"column":68}},"65":{"start":{"line":149,"column":6},"end":{"line":152,"column":7}},"66":{"start":{"line":150,"column":8},"end":{"line":150,"column":62}},"67":{"start":{"line":151,"column":8},"end":{"line":151,"column":37}},"68":{"start":{"line":155,"column":4},"end":{"line":157,"column":5}},"69":{"start":{"line":156,"column":6},"end":{"line":156,"column":34}},"70":{"start":{"line":158,"column":4},"end":{"line":158,"column":25}},"71":{"start":{"line":161,"column":2},"end":{"line":161,"column":41}},"72":{"start":{"line":169,"column":0},"end":{"line":311,"column":4}},"73":{"start":{"line":170,"column":2},"end":{"line":178,"column":3}},"74":{"start":{"line":171,"column":4},"end":{"line":171,"column":76}},"75":{"start":{"line":173,"column":4},"end":{"line":173,"column":19}},"76":{"start":{"line":174,"column":4},"end":{"line":174,"column":30}},"77":{"start":{"line":175,"column":4},"end":{"line":175,"column":61}},"78":{"start":{"line":176,"column":4},"end":{"line":176,"column":32}},"79":{"start":{"line":177,"column":4},"end":{"line":177,"column":29}},"80":{"start":{"line":180,"column":2},"end":{"line":191,"column":4}},"81":{"start":{"line":181,"column":4},"end":{"line":183,"column":5}},"82":{"start":{"line":182,"column":6},"end":{"line":182,"column":34}},"83":{"start":{"line":184,"column":4},"end":{"line":184,"column":33}},"84":{"start":{"line":185,"column":4},"end":{"line":185,"column":26}},"85":{"start":{"line":186,"column":4},"end":{"line":186,"column":24}},"86":{"start":{"line":187,"column":4},"end":{"line":187,"column":26}},"87":{"start":{"line":188,"column":4},"end":{"line":188,"column":30}},"88":{"start":{"line":189,"column":4},"end":{"line":189,"column":54}},"89":{"start":{"line":190,"column":4},"end":{"line":190,"column":29}},"90":{"start":{"line":198,"column":2},"end":{"line":251,"column":4}},"91":{"start":{"line":199,"column":4},"end":{"line":199,"column":38}},"92":{"start":{"line":200,"column":4},"end":{"line":200,"column":32}},"93":{"start":{"line":201,"column":4},"end":{"line":201,"column":28}},"94":{"start":{"line":202,"column":4},"end":{"line":202,"column":34}},"95":{"start":{"line":203,"column":4},"end":{"line":203,"column":31}},"96":{"start":{"line":205,"column":4},"end":{"line":227,"column":5}},"97":{"start":{"line":206,"column":6},"end":{"line":219,"column":7}},"98":{"start":{"line":207,"column":8},"end":{"line":207,"column":76}},"99":{"start":{"line":212,"column":8},"end":{"line":212,"column":42}},"100":{"start":{"line":213,"column":8},"end":{"line":213,"column":45}},"101":{"start":{"line":215,"column":8},"end":{"line":215,"column":75}},"102":{"start":{"line":218,"column":8},"end":{"line":218,"column":32}},"103":{"start":{"line":221,"column":6},"end":{"line":221,"column":74}},"104":{"start":{"line":225,"column":6},"end":{"line":225,"column":40}},"105":{"start":{"line":226,"column":6},"end":{"line":226,"column":43}},"106":{"start":{"line":230,"column":4},"end":{"line":245,"column":5}},"107":{"start":{"line":231,"column":6},"end":{"line":234,"column":7}},"108":{"start":{"line":232,"column":8},"end":{"line":232,"column":36}},"109":{"start":{"line":233,"column":8},"end":{"line":233,"column":34}},"110":{"start":{"line":235,"column":6},"end":{"line":242,"column":7}},"111":{"start":{"line":237,"column":8},"end":{"line":237,"column":37}},"112":{"start":{"line":238,"column":8},"end":{"line":238,"column":63}},"113":{"start":{"line":239,"column":8},"end":{"line":239,"column":131}},"114":{"start":{"line":240,"column":8},"end":{"line":240,"column":69}},"115":{"start":{"line":241,"column":8},"end":{"line":241,"column":44}},"116":{"start":{"line":243,"column":6},"end":{"line":243,"column":30}},"117":{"start":{"line":244,"column":6},"end":{"line":244,"column":32}},"118":{"start":{"line":247,"column":4},"end":{"line":247,"column":33}},"119":{"start":{"line":248,"column":4},"end":{"line":248,"column":34}},"120":{"start":{"line":250,"column":4},"end":{"line":250,"column":24}},"121":{"start":{"line":260,"column":2},"end":{"line":262,"column":4}},"122":{"start":{"line":261,"column":4},"end":{"line":261,"column":67}},"123":{"start":{"line":264,"column":2},"end":{"line":269,"column":4}},"124":{"start":{"line":265,"column":4},"end":{"line":268,"column":5}},"125":{"start":{"line":266,"column":6},"end":{"line":266,"column":34}},"126":{"start":{"line":267,"column":6},"end":{"line":267,"column":23}},"127":{"start":{"line":271,"column":2},"end":{"line":277,"column":4}},"128":{"start":{"line":272,"column":4},"end":{"line":274,"column":46}},"129":{"start":{"line":276,"column":4},"end":{"line":276,"column":27}},"130":{"start":{"line":284,"column":2},"end":{"line":308,"column":4}},"131":{"start":{"line":285,"column":4},"end":{"line":285,"column":21}},"132":{"start":{"line":287,"column":4},"end":{"line":307,"column":5}},"133":{"start":{"line":288,"column":6},"end":{"line":306,"column":11}},"134":{"start":{"line":289,"column":8},"end":{"line":289,"column":55}},"135":{"start":{"line":290,"column":8},"end":{"line":290,"column":56}},"136":{"start":{"line":291,"column":8},"end":{"line":291,"column":47}},"137":{"start":{"line":298,"column":8},"end":{"line":301,"column":11}},"138":{"start":{"line":299,"column":10},"end":{"line":299,"column":50}},"139":{"start":{"line":300,"column":10},"end":{"line":300,"column":55}},"140":{"start":{"line":302,"column":8},"end":{"line":305,"column":11}},"141":{"start":{"line":303,"column":10},"end":{"line":303,"column":50}},"142":{"start":{"line":304,"column":10},"end":{"line":304,"column":55}},"143":{"start":{"line":310,"column":2},"end":{"line":310,"column":41}},"144":{"start":{"line":313,"column":0},"end":{"line":315,"column":3}},"145":{"start":{"line":317,"column":0},"end":{"line":317,"column":43}}},"branchMap":{"1":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":70},"end":{"line":19,"column":73}},{"start":{"line":19,"column":76},"end":{"line":19,"column":94}}]},"2":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":46},"end":{"line":19,"column":49}},{"start":{"line":19,"column":53},"end":{"line":19,"column":67}}]},"3":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":4},"end":{"line":47,"column":4}},{"start":{"line":47,"column":4},"end":{"line":47,"column":4}}]},"4":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":4},"end":{"line":54,"column":4}},{"start":{"line":54,"column":4},"end":{"line":54,"column":4}}]},"5":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":4},"end":{"line":62,"column":4}},{"start":{"line":62,"column":4},"end":{"line":62,"column":4}}]},"6":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":6},"end":{"line":66,"column":6}},{"start":{"line":66,"column":6},"end":{"line":66,"column":6}}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":6},"end":{"line":70,"column":6}},{"start":{"line":70,"column":6},"end":{"line":70,"column":6}}]},"8":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":6},"end":{"line":79,"column":6}},{"start":{"line":79,"column":6},"end":{"line":79,"column":6}}]},"9":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":6},"end":{"line":83,"column":6}},{"start":{"line":83,"column":6},"end":{"line":83,"column":6}}]},"10":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":4},"end":{"line":109,"column":4}},{"start":{"line":109,"column":4},"end":{"line":109,"column":4}}]},"11":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":4},"end":{"line":144,"column":4}},{"start":{"line":144,"column":4},"end":{"line":144,"column":4}}]},"12":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":6},"end":{"line":149,"column":6}},{"start":{"line":149,"column":6},"end":{"line":149,"column":6}}]},"13":{"line":149,"type":"binary-expr","locations":[{"start":{"line":149,"column":10},"end":{"line":149,"column":21}},{"start":{"line":149,"column":25},"end":{"line":149,"column":41}},{"start":{"line":149,"column":45},"end":{"line":149,"column":75}}]},"14":{"line":150,"type":"binary-expr","locations":[{"start":{"line":150,"column":22},"end":{"line":150,"column":33}},{"start":{"line":150,"column":37},"end":{"line":150,"column":61}}]},"15":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":4},"end":{"line":155,"column":4}},{"start":{"line":155,"column":4},"end":{"line":155,"column":4}}]},"16":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":4},"end":{"line":181,"column":4}},{"start":{"line":181,"column":4},"end":{"line":181,"column":4}}]},"17":{"line":205,"type":"if","locations":[{"start":{"line":205,"column":4},"end":{"line":205,"column":4}},{"start":{"line":205,"column":4},"end":{"line":205,"column":4}}]},"18":{"line":205,"type":"binary-expr","locations":[{"start":{"line":205,"column":8},"end":{"line":205,"column":28}},{"start":{"line":205,"column":32},"end":{"line":205,"column":46}},{"start":{"line":205,"column":50},"end":{"line":205,"column":111}}]},"19":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":6},"end":{"line":206,"column":6}},{"start":{"line":206,"column":6},"end":{"line":206,"column":6}}]},"20":{"line":206,"type":"binary-expr","locations":[{"start":{"line":206,"column":10},"end":{"line":206,"column":27}},{"start":{"line":206,"column":31},"end":{"line":206,"column":51}},{"start":{"line":206,"column":55},"end":{"line":206,"column":95}}]},"21":{"line":230,"type":"if","locations":[{"start":{"line":230,"column":4},"end":{"line":230,"column":4}},{"start":{"line":230,"column":4},"end":{"line":230,"column":4}}]},"22":{"line":231,"type":"if","locations":[{"start":{"line":231,"column":6},"end":{"line":231,"column":6}},{"start":{"line":231,"column":6},"end":{"line":231,"column":6}}]},"23":{"line":235,"type":"if","locations":[{"start":{"line":235,"column":6},"end":{"line":235,"column":6}},{"start":{"line":235,"column":6},"end":{"line":235,"column":6}}]},"24":{"line":265,"type":"if","locations":[{"start":{"line":265,"column":4},"end":{"line":265,"column":4}},{"start":{"line":265,"column":4},"end":{"line":265,"column":4}}]},"25":{"line":287,"type":"if","locations":[{"start":{"line":287,"column":4},"end":{"line":287,"column":4}},{"start":{"line":287,"column":4},"end":{"line":287,"column":4}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule GraphQLStoreQueryResolver"," * "," */","","'use strict';","","var _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));","","var _keys2 = _interopRequireDefault(require('babel-runtime/core-js/object/keys'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","/**"," * @internal"," *"," * Resolves data from fragment pointers."," *"," * The supplied `callback` will be invoked whenever data returned by the last"," * invocation to `resolve` has changed."," */","var GraphQLStoreQueryResolver = function () {","  function GraphQLStoreQueryResolver(storeData, fragment, callback) {","    (0, _classCallCheck3['default'])(this, GraphQLStoreQueryResolver);","","    this.dispose();","    this._callback = callback;","    this._fragment = fragment;","    this._resolver = null;","    this._storeData = storeData;","  }","","  /**","   * disposes the resolver's internal state such that future `resolve()` results","   * will not be `===` to previous results, and unsubscribes any subscriptions.","   */","","","  GraphQLStoreQueryResolver.prototype.dispose = function dispose() {","    if (this._resolver) {","      this._resolver.dispose();","    }","  };","","  GraphQLStoreQueryResolver.prototype.resolve = function resolve(fragment, dataIDs) {","    // Warn but don't crash if resolved with the wrong fragment.","    if (this._fragment.getConcreteFragmentID() !== fragment.getConcreteFragmentID()) {","      require('fbjs/lib/warning')(false, 'GraphQLStoreQueryResolver: Expected `resolve` to be called with the ' + 'same concrete fragment as the constructor. The resolver was created ' + 'with fragment `%s` but resolved with fragment `%s`.', this._fragment.getDebugName(), fragment.getDebugName());","    }","    // Rather than crash on mismatched plurality of fragment/ids just warn","    // and resolve as if the fragment's pluarity matched the format of the ids.","    // Note that the inverse - attempt to resolve based on fragment plurarity -","    // doesn't work because there's no way convert plural ids to singular w/o","    // losing data.","    if (Array.isArray(dataIDs)) {","      // Fragment should be plural if data is pluaral.","      require('fbjs/lib/warning')(fragment.isPlural(), 'GraphQLStoreQueryResolver: Expected id/fragment plurality to be ' + 'consistent: got plural ids for singular fragment `%s`.', fragment.getDebugName());","      var resolver = this._resolver;","      if (resolver instanceof GraphQLStoreSingleQueryResolver) {","        resolver.dispose();","        resolver = null;","      }","      if (!resolver) {","        resolver = new GraphQLStorePluralQueryResolver(this._storeData, this._callback);","      }","      this._resolver = resolver;","      return resolver.resolve(fragment, dataIDs);","    } else {","      // Fragment should be singular if data is singular.","      require('fbjs/lib/warning')(!fragment.isPlural(), 'GraphQLStoreQueryResolver: Expected id/fragment plurality to be ' + 'consistent: got a singular id for plural fragment `%s`.', fragment.getDebugName());","      var _resolver = this._resolver;","      if (_resolver instanceof GraphQLStorePluralQueryResolver) {","        _resolver.dispose();","        _resolver = null;","      }","      if (!_resolver) {","        _resolver = new GraphQLStoreSingleQueryResolver(this._storeData, this._callback);","      }","      this._resolver = _resolver;","      return _resolver.resolve(fragment, dataIDs);","    }","  };","","  return GraphQLStoreQueryResolver;","}();","","/**"," * Resolves plural fragments."," */","","","var GraphQLStorePluralQueryResolver = function () {","  function GraphQLStorePluralQueryResolver(storeData, callback) {","    (0, _classCallCheck3['default'])(this, GraphQLStorePluralQueryResolver);","","    this.dispose();","    this._callback = callback;","    this._storeData = storeData;","  }","","  GraphQLStorePluralQueryResolver.prototype.dispose = function dispose() {","    if (this._resolvers) {","      this._resolvers.forEach(function (resolver) {","        return resolver.dispose();","      });","    }","    this._resolvers = [];","    this._results = [];","  };","","  /**","   * Resolves a plural fragment pointer into an array of records.","   *","   * If the data, order, and number of resolved records has not changed since","   * the last call to `resolve`, the same array will be returned. Otherwise, a","   * new array will be returned.","   */","","","  GraphQLStorePluralQueryResolver.prototype.resolve = function resolve(fragment, nextIDs) {","    var prevResults = this._results;","    var nextResults = void 0;","","    var prevLength = prevResults.length;","    var nextLength = nextIDs.length;","    var resolvers = this._resolvers;","","    // Ensure that we have exactly `nextLength` resolvers.","    while (resolvers.length < nextLength) {","      resolvers.push(new GraphQLStoreSingleQueryResolver(this._storeData, this._callback));","    }","    while (resolvers.length > nextLength) {","      resolvers.pop().dispose();","    }","","    // Allocate `nextResults` if and only if results have changed.","    if (prevLength !== nextLength) {","      nextResults = [];","    }","    for (var ii = 0; ii < nextLength; ii++) {","      var nextResult = resolvers[ii].resolve(fragment, nextIDs[ii]);","      if (nextResults || ii >= prevLength || nextResult !== prevResults[ii]) {","        nextResults = nextResults || prevResults.slice(0, ii);","        nextResults.push(nextResult);","      }","    }","","    if (nextResults) {","      this._results = nextResults;","    }","    return this._results;","  };","","  return GraphQLStorePluralQueryResolver;","}();","","/**"," * Resolves non-plural fragments."," */","","","var GraphQLStoreSingleQueryResolver = function () {","  function GraphQLStoreSingleQueryResolver(storeData, callback) {","    (0, _classCallCheck3['default'])(this, GraphQLStoreSingleQueryResolver);","","    this.dispose();","    this._callback = callback;","    this._garbageCollector = storeData.getGarbageCollector();","    this._storeData = storeData;","    this._subscribedIDs = {};","  }","","  GraphQLStoreSingleQueryResolver.prototype.dispose = function dispose() {","    if (this._subscription) {","      this._subscription.remove();","    }","    this._hasDataChanged = false;","    this._fragment = null;","    this._result = null;","    this._resultID = null;","    this._subscription = null;","    this._updateGarbageCollectorSubscriptionCount({});","    this._subscribedIDs = {};","  };","","  /**","   * Resolves data for a single fragment pointer.","   */","","","  GraphQLStoreSingleQueryResolver.prototype.resolve = function resolve(nextFragment, nextID) {","    var prevFragment = this._fragment;","    var prevID = this._resultID;","    var nextResult = void 0;","    var prevResult = this._result;","    var subscribedIDs = void 0;","","    if (prevFragment != null && prevID != null && this._getCanonicalID(prevID) === this._getCanonicalID(nextID)) {","      if (prevID !== nextID || this._hasDataChanged || !nextFragment.isEquivalent(prevFragment)) {","        var _resolveFragment2 = this._resolveFragment(nextFragment, nextID);","        // same canonical ID,","        // but the data, call(s), route, and/or variables have changed","","","        nextResult = _resolveFragment2[0];","        subscribedIDs = _resolveFragment2[1];","","        nextResult = require('./recycleNodesInto')(prevResult, nextResult);","      } else {","        // same id, route, variables, and data","        nextResult = prevResult;","      }","    } else {","      var _resolveFragment3 = this._resolveFragment(nextFragment, nextID);","      // Pointer has a different ID or is/was fake data.","","","      nextResult = _resolveFragment3[0];","      subscribedIDs = _resolveFragment3[1];","    }","","    // update subscriptions whenever results change","    if (prevResult !== nextResult) {","      if (this._subscription) {","        this._subscription.remove();","        this._subscription = null;","      }","      if (subscribedIDs) {","        // always subscribe to the root ID","        subscribedIDs[nextID] = true;","        var changeEmitter = this._storeData.getChangeEmitter();","        this._subscription = changeEmitter.addListenerForIDs((0, _keys2['default'])(subscribedIDs), this._handleChange.bind(this));","        this._updateGarbageCollectorSubscriptionCount(subscribedIDs);","        this._subscribedIDs = subscribedIDs;","      }","      this._resultID = nextID;","      this._result = nextResult;","    }","","    this._hasDataChanged = false;","    this._fragment = nextFragment;","","    return this._result;","  };","","  /**","   * Ranges publish events for the entire range, not the specific view of that","   * range. For example, if \"client:1\" is a range, the event is on \"client:1\",","   * not \"client:1_first(5)\".","   */","","","  GraphQLStoreSingleQueryResolver.prototype._getCanonicalID = function _getCanonicalID(id) {","    return this._storeData.getRangeData().getCanonicalClientID(id);","  };","","  GraphQLStoreSingleQueryResolver.prototype._handleChange = function _handleChange() {","    if (!this._hasDataChanged) {","      this._hasDataChanged = true;","      this._callback();","    }","  };","","  GraphQLStoreSingleQueryResolver.prototype._resolveFragment = function _resolveFragment(fragment, dataID) {","    var _readRelayQueryData = require('./readRelayQueryData')(this._storeData, fragment, dataID),","        data = _readRelayQueryData.data,","        dataIDs = _readRelayQueryData.dataIDs;","","    return [data, dataIDs];","  };","","  /**","   * Updates bookkeeping about the number of subscribers on each record.","   */","","","  GraphQLStoreSingleQueryResolver.prototype._updateGarbageCollectorSubscriptionCount = function _updateGarbageCollectorSubscriptionCount(nextDataIDs) {","    var _this = this;","","    if (this._garbageCollector) {","      (function () {","        var garbageCollector = _this._garbageCollector;","        var rangeData = _this._storeData.getRangeData();","        var prevDataIDs = _this._subscribedIDs;","","        // Note: the same canonical ID may appear in both removed and added: in","        // that case, it would have been:","        // - previous step: canonical ID ref count was incremented","        // - current step: canonical ID is incremented *and* decremented","        // Note that the net ref count change is +1.","        (0, _keys2['default'])(nextDataIDs).forEach(function (id) {","          id = rangeData.getCanonicalClientID(id);","          garbageCollector.incrementReferenceCount(id);","        });","        (0, _keys2['default'])(prevDataIDs).forEach(function (id) {","          id = rangeData.getCanonicalClientID(id);","          garbageCollector.decrementReferenceCount(id);","        });","      })();","    }","  };","","  return GraphQLStoreSingleQueryResolver;","}();","","require('./RelayProfiler').instrumentMethods(GraphQLStoreQueryResolver.prototype, {","  resolve: 'GraphQLStoreQueryResolver.resolve'","});","","module.exports = GraphQLStoreQueryResolver;"],"l":{"15":1,"17":1,"19":2,"29":1,"30":1,"31":0,"33":0,"34":0,"35":0,"36":0,"37":0,"46":1,"47":0,"48":0,"52":1,"54":0,"55":0,"62":0,"64":0,"65":0,"66":0,"67":0,"68":0,"70":0,"71":0,"73":0,"74":0,"77":0,"78":0,"79":0,"80":0,"81":0,"83":0,"84":0,"86":0,"87":0,"91":1,"99":1,"100":1,"101":0,"103":0,"104":0,"105":0,"108":1,"109":0,"110":0,"111":0,"114":0,"115":0,"127":1,"128":0,"129":0,"131":0,"132":0,"133":0,"136":0,"137":0,"139":0,"140":0,"144":0,"145":0,"147":0,"148":0,"149":0,"150":0,"151":0,"155":0,"156":0,"158":0,"161":1,"169":1,"170":1,"171":0,"173":0,"174":0,"175":0,"176":0,"177":0,"180":1,"181":0,"182":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"198":1,"199":0,"200":0,"201":0,"202":0,"203":0,"205":0,"206":0,"207":0,"212":0,"213":0,"215":0,"218":0,"221":0,"225":0,"226":0,"230":0,"231":0,"232":0,"233":0,"235":0,"237":0,"238":0,"239":0,"240":0,"241":0,"243":0,"244":0,"247":0,"248":0,"250":0,"260":1,"261":0,"264":1,"265":0,"266":0,"267":0,"271":1,"272":0,"276":0,"284":1,"285":0,"287":0,"288":0,"289":0,"290":0,"291":0,"298":0,"299":0,"300":0,"302":0,"303":0,"304":0,"310":1,"313":1,"317":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/intersectRelayQuery.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/intersectRelayQuery.js","s":{"1":1,"2":1,"3":1,"4":1,"5":3,"6":1,"7":0,"8":0,"9":0,"10":1,"11":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":0,"49":0,"50":0,"51":0,"52":1,"53":1,"54":1,"55":0,"56":1,"57":0,"58":1,"59":0,"60":1,"61":0,"62":1},"b":{"1":[3,0],"2":[3,3],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"f":{"1":3,"2":0,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":37}}},"2":{"name":"intersectRelayQuery","line":37,"loc":{"start":{"line":37,"column":0},"end":{"line":37,"column":80}}},"3":{"name":"(anonymous_3)","line":43,"loc":{"start":{"line":43,"column":28},"end":{"line":43,"column":60}}},"4":{"name":"RelayQueryIntersector","line":46,"loc":{"start":{"line":46,"column":2},"end":{"line":46,"column":58}}},"5":{"name":"traverse","line":55,"loc":{"start":{"line":55,"column":45},"end":{"line":55,"column":89}}},"6":{"name":"(anonymous_6)","line":70,"loc":{"start":{"line":70,"column":59},"end":{"line":70,"column":83}}},"7":{"name":"(anonymous_7)","line":102,"loc":{"start":{"line":102,"column":28},"end":{"line":102,"column":61}}},"8":{"name":"RelayQueryRangeFilter","line":105,"loc":{"start":{"line":105,"column":2},"end":{"line":105,"column":35}}},"9":{"name":"visitField","line":110,"loc":{"start":{"line":110,"column":47},"end":{"line":110,"column":73}}},"10":{"name":"filterRangeFields","line":123,"loc":{"start":{"line":123,"column":0},"end":{"line":123,"column":33}}},"11":{"name":"returnsFalse","line":127,"loc":{"start":{"line":127,"column":0},"end":{"line":127,"column":24}}},"12":{"name":"hasChildren","line":131,"loc":{"start":{"line":131,"column":0},"end":{"line":131,"column":27}}},"13":{"name":"isGenerated","line":135,"loc":{"start":{"line":135,"column":0},"end":{"line":135,"column":27}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":117}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":83}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":97}},"5":{"start":{"line":21,"column":39},"end":{"line":21,"column":95}},"6":{"start":{"line":37,"column":0},"end":{"line":41,"column":1}},"7":{"start":{"line":38,"column":2},"end":{"line":38,"column":68}},"8":{"start":{"line":39,"column":2},"end":{"line":39,"column":67}},"9":{"start":{"line":40,"column":2},"end":{"line":40,"column":52}},"10":{"start":{"line":43,"column":0},"end":{"line":95,"column":36}},"11":{"start":{"line":44,"column":2},"end":{"line":44,"column":74}},"12":{"start":{"line":46,"column":2},"end":{"line":53,"column":3}},"13":{"start":{"line":47,"column":4},"end":{"line":47,"column":66}},"14":{"start":{"line":49,"column":4},"end":{"line":49,"column":99}},"15":{"start":{"line":51,"column":4},"end":{"line":51,"column":61}},"16":{"start":{"line":52,"column":4},"end":{"line":52,"column":17}},"17":{"start":{"line":55,"column":2},"end":{"line":92,"column":4}},"18":{"start":{"line":56,"column":4},"end":{"line":56,"column":22}},"19":{"start":{"line":58,"column":4},"end":{"line":61,"column":5}},"20":{"start":{"line":60,"column":6},"end":{"line":60,"column":25}},"21":{"start":{"line":62,"column":4},"end":{"line":69,"column":5}},"22":{"start":{"line":63,"column":6},"end":{"line":65,"column":7}},"23":{"start":{"line":64,"column":8},"end":{"line":64,"column":46}},"24":{"start":{"line":68,"column":6},"end":{"line":68,"column":25}},"25":{"start":{"line":70,"column":4},"end":{"line":91,"column":8}},"26":{"start":{"line":71,"column":6},"end":{"line":73,"column":7}},"27":{"start":{"line":72,"column":8},"end":{"line":72,"column":55}},"28":{"start":{"line":74,"column":6},"end":{"line":89,"column":7}},"29":{"start":{"line":75,"column":8},"end":{"line":75,"column":54}},"30":{"start":{"line":76,"column":8},"end":{"line":76,"column":34}},"31":{"start":{"line":77,"column":8},"end":{"line":77,"column":56}},"32":{"start":{"line":78,"column":8},"end":{"line":85,"column":9}},"33":{"start":{"line":79,"column":10},"end":{"line":79,"column":42}},"34":{"start":{"line":80,"column":10},"end":{"line":80,"column":153}},"35":{"start":{"line":81,"column":10},"end":{"line":84,"column":11}},"36":{"start":{"line":82,"column":12},"end":{"line":82,"column":33}},"37":{"start":{"line":83,"column":12},"end":{"line":83,"column":18}},"38":{"start":{"line":86,"column":8},"end":{"line":88,"column":9}},"39":{"start":{"line":87,"column":10},"end":{"line":87,"column":58}},"40":{"start":{"line":90,"column":6},"end":{"line":90,"column":18}},"41":{"start":{"line":94,"column":2},"end":{"line":94,"column":31}},"42":{"start":{"line":102,"column":0},"end":{"line":120,"column":36}},"43":{"start":{"line":103,"column":2},"end":{"line":103,"column":75}},"44":{"start":{"line":105,"column":2},"end":{"line":108,"column":3}},"45":{"start":{"line":106,"column":4},"end":{"line":106,"column":66}},"46":{"start":{"line":107,"column":4},"end":{"line":107,"column":107}},"47":{"start":{"line":110,"column":2},"end":{"line":117,"column":4}},"48":{"start":{"line":111,"column":4},"end":{"line":111,"column":42}},"49":{"start":{"line":112,"column":4},"end":{"line":116,"column":5}},"50":{"start":{"line":113,"column":6},"end":{"line":113,"column":18}},"51":{"start":{"line":115,"column":6},"end":{"line":115,"column":18}},"52":{"start":{"line":119,"column":2},"end":{"line":119,"column":31}},"53":{"start":{"line":122,"column":0},"end":{"line":122,"column":46}},"54":{"start":{"line":123,"column":0},"end":{"line":125,"column":1}},"55":{"start":{"line":124,"column":2},"end":{"line":124,"column":47}},"56":{"start":{"line":127,"column":0},"end":{"line":129,"column":1}},"57":{"start":{"line":128,"column":2},"end":{"line":128,"column":15}},"58":{"start":{"line":131,"column":0},"end":{"line":133,"column":1}},"59":{"start":{"line":132,"column":2},"end":{"line":132,"column":48}},"60":{"start":{"line":135,"column":0},"end":{"line":137,"column":1}},"61":{"start":{"line":136,"column":2},"end":{"line":136,"column":28}},"62":{"start":{"line":139,"column":0},"end":{"line":139,"column":37}}},"branchMap":{"1":{"line":21,"type":"cond-expr","locations":[{"start":{"line":21,"column":70},"end":{"line":21,"column":73}},{"start":{"line":21,"column":76},"end":{"line":21,"column":94}}]},"2":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":46},"end":{"line":21,"column":49}},{"start":{"line":21,"column":53},"end":{"line":21,"column":67}}]},"3":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":28},"end":{"line":38,"column":51}},{"start":{"line":38,"column":55},"end":{"line":38,"column":67}}]},"4":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":4},"end":{"line":58,"column":4}},{"start":{"line":58,"column":4},"end":{"line":58,"column":4}}]},"5":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":4},"end":{"line":62,"column":4}},{"start":{"line":62,"column":4},"end":{"line":62,"column":4}}]},"6":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":6},"end":{"line":63,"column":6}},{"start":{"line":63,"column":6},"end":{"line":63,"column":6}}]},"7":{"line":63,"type":"binary-expr","locations":[{"start":{"line":63,"column":10},"end":{"line":63,"column":62}},{"start":{"line":63,"column":66},"end":{"line":63,"column":92}},{"start":{"line":63,"column":96},"end":{"line":63,"column":138}}]},"8":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":6},"end":{"line":71,"column":6}},{"start":{"line":71,"column":6},"end":{"line":71,"column":6}}]},"9":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":6},"end":{"line":74,"column":6}},{"start":{"line":74,"column":6},"end":{"line":74,"column":6}}]},"10":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":10},"end":{"line":81,"column":10}},{"start":{"line":81,"column":10},"end":{"line":81,"column":10}}]},"11":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":8},"end":{"line":86,"column":8}},{"start":{"line":86,"column":8},"end":{"line":86,"column":8}}]},"12":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":4},"end":{"line":112,"column":4}},{"start":{"line":112,"column":4},"end":{"line":112,"column":4}}]},"13":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":8},"end":{"line":112,"column":66}},{"start":{"line":112,"column":70},"end":{"line":112,"column":132}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule intersectRelayQuery"," * "," */","","'use strict';","","var _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));","","var _possibleConstructorReturn3 = _interopRequireDefault(require('babel-runtime/helpers/possibleConstructorReturn'));","","var _inherits3 = _interopRequireDefault(require('babel-runtime/helpers/inherits'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","/**"," * @internal"," *"," * `intersectRelayQuery(subjectNode, patternNode)` returns a node with fields in"," * `subjectNode` that also exist in `patternNode`. `patternNode` is expected to"," * be flattened (and not contain fragments)."," *"," * If any field in `patternNode` is unterminated (i.e. has no sub-fields), we"," * treat the field as though it contains every descendant sub-field."," *"," * If `filterUnterminatedRange` is supplied, it will be invoked with any fields"," * from `subjectNode` that are connections and unterminated in `patternNode`. If"," * it returns true, the `edges` and `page_info` fields will be filtered out."," */","function intersectRelayQuery(subjectNode, patternNode, filterUnterminatedRange) {","  filterUnterminatedRange = filterUnterminatedRange || returnsFalse;","  var visitor = new RelayQueryIntersector(filterUnterminatedRange);","  return visitor.traverse(subjectNode, patternNode);","}","","var RelayQueryIntersector = function (_RelayQueryTransform) {","  (0, _inherits3['default'])(RelayQueryIntersector, _RelayQueryTransform);","","  function RelayQueryIntersector(filterUnterminatedRange) {","    (0, _classCallCheck3['default'])(this, RelayQueryIntersector);","","    var _this = (0, _possibleConstructorReturn3['default'])(this, _RelayQueryTransform.call(this));","","    _this._filterUnterminatedRange = filterUnterminatedRange;","    return _this;","  }","","  RelayQueryIntersector.prototype.traverse = function traverse(subjectNode, patternNode) {","    var _this2 = this;","","    if (!subjectNode.canHaveSubselections()) {","      // Since `patternNode` exists, `subjectNode` must be in the intersection.","      return subjectNode;","    }","    if (!hasChildren(patternNode)) {","      if (subjectNode instanceof require('./RelayQuery').Field && subjectNode.isConnection() && this._filterUnterminatedRange(subjectNode)) {","        return filterRangeFields(subjectNode);","      }","      // Unterminated `patternNode` is the same as containing every descendant","      // sub-field, so `subjectNode` must be in the intersection.","      return subjectNode;","    }","    return subjectNode.clone(subjectNode.getChildren().map(function (subjectChild) {","      if (subjectChild instanceof require('./RelayQuery').Fragment) {","        return _this2.visit(subjectChild, patternNode);","      }","      if (subjectChild instanceof require('./RelayQuery').Field) {","        var schemaName = subjectChild.getSchemaName();","        var patternChild = void 0;","        var patternChildren = patternNode.getChildren();","        for (var ii = 0; ii < patternChildren.length; ii++) {","          var child = patternChildren[ii];","          require('fbjs/lib/invariant')(child instanceof require('./RelayQuery').Field, 'intersectRelayQuery(): Nodes in `patternNode` must be fields.');","          if (child.getSchemaName() === schemaName) {","            patternChild = child;","            break;","          }","        }","        if (patternChild) {","          return _this2.visit(subjectChild, patternChild);","        }","      }","      return null;","    }));","  };","","  return RelayQueryIntersector;","}(require('./RelayQueryTransform'));","","/**"," * @private"," */","","","var RelayQueryRangeFilter = function (_RelayQueryTransform2) {","  (0, _inherits3['default'])(RelayQueryRangeFilter, _RelayQueryTransform2);","","  function RelayQueryRangeFilter() {","    (0, _classCallCheck3['default'])(this, RelayQueryRangeFilter);","    return (0, _possibleConstructorReturn3['default'])(this, _RelayQueryTransform2.apply(this, arguments));","  }","","  RelayQueryRangeFilter.prototype.visitField = function visitField(node) {","    var schemaName = node.getSchemaName();","    if (schemaName === require('./RelayConnectionInterface').EDGES || schemaName === require('./RelayConnectionInterface').PAGE_INFO) {","      return null;","    } else {","      return node;","    }","  };","","  return RelayQueryRangeFilter;","}(require('./RelayQueryTransform'));","","var rangeFilter = new RelayQueryRangeFilter();","function filterRangeFields(node) {","  return rangeFilter.traverse(node, undefined);","}","","function returnsFalse() {","  return false;","}","","function hasChildren(node) {","  return !node.getChildren().every(isGenerated);","}","","function isGenerated(node) {","  return node.isGenerated();","}","","module.exports = intersectRelayQuery;"],"l":{"15":1,"17":1,"19":1,"21":3,"37":1,"38":0,"39":0,"40":0,"43":1,"44":1,"46":1,"47":0,"49":0,"51":0,"52":0,"55":1,"56":0,"58":0,"60":0,"62":0,"63":0,"64":0,"68":0,"70":0,"71":0,"72":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"86":0,"87":0,"90":0,"94":1,"102":1,"103":1,"105":1,"106":1,"107":1,"110":1,"111":0,"112":0,"113":0,"115":0,"119":1,"122":1,"123":1,"124":0,"127":1,"128":0,"131":1,"132":0,"135":1,"136":0,"139":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayQueryTransform.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayQueryTransform.js","s":{"1":1,"2":1,"3":1,"4":1,"5":3,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":1},"b":{"1":[3,0],"2":[3,3],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":3,"2":1,"3":1,"4":0,"5":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":37}}},"2":{"name":"(anonymous_2)","line":56,"loc":{"start":{"line":56,"column":26},"end":{"line":56,"column":56}}},"3":{"name":"RelayQueryTransform","line":59,"loc":{"start":{"line":59,"column":2},"end":{"line":59,"column":33}}},"4":{"name":"traverse","line":64,"loc":{"start":{"line":64,"column":43},"end":{"line":64,"column":78}}},"5":{"name":"(anonymous_5)","line":69,"loc":{"start":{"line":69,"column":43},"end":{"line":69,"column":77}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":117}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":83}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":97}},"5":{"start":{"line":21,"column":39},"end":{"line":21,"column":95}},"6":{"start":{"line":56,"column":0},"end":{"line":89,"column":34}},"7":{"start":{"line":57,"column":2},"end":{"line":57,"column":70}},"8":{"start":{"line":59,"column":2},"end":{"line":62,"column":3}},"9":{"start":{"line":60,"column":4},"end":{"line":60,"column":64}},"10":{"start":{"line":61,"column":4},"end":{"line":61,"column":104}},"11":{"start":{"line":64,"column":2},"end":{"line":86,"column":4}},"12":{"start":{"line":65,"column":4},"end":{"line":67,"column":5}},"13":{"start":{"line":66,"column":6},"end":{"line":66,"column":18}},"14":{"start":{"line":68,"column":4},"end":{"line":68,"column":30}},"15":{"start":{"line":69,"column":4},"end":{"line":78,"column":13}},"16":{"start":{"line":70,"column":6},"end":{"line":70,"column":38}},"17":{"start":{"line":71,"column":6},"end":{"line":71,"column":55}},"18":{"start":{"line":72,"column":6},"end":{"line":74,"column":7}},"19":{"start":{"line":73,"column":8},"end":{"line":73,"column":64}},"20":{"start":{"line":75,"column":6},"end":{"line":77,"column":7}},"21":{"start":{"line":76,"column":8},"end":{"line":76,"column":37}},"22":{"start":{"line":79,"column":4},"end":{"line":84,"column":5}},"23":{"start":{"line":80,"column":6},"end":{"line":82,"column":7}},"24":{"start":{"line":81,"column":8},"end":{"line":81,"column":20}},"25":{"start":{"line":83,"column":6},"end":{"line":83,"column":38}},"26":{"start":{"line":85,"column":4},"end":{"line":85,"column":16}},"27":{"start":{"line":88,"column":2},"end":{"line":88,"column":29}},"28":{"start":{"line":91,"column":0},"end":{"line":91,"column":37}}},"branchMap":{"1":{"line":21,"type":"cond-expr","locations":[{"start":{"line":21,"column":70},"end":{"line":21,"column":73}},{"start":{"line":21,"column":76},"end":{"line":21,"column":94}}]},"2":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":46},"end":{"line":21,"column":49}},{"start":{"line":21,"column":53},"end":{"line":21,"column":67}}]},"3":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":4},"end":{"line":65,"column":4}},{"start":{"line":65,"column":4},"end":{"line":65,"column":4}}]},"4":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":6},"end":{"line":72,"column":6}},{"start":{"line":72,"column":6},"end":{"line":72,"column":6}}]},"5":{"line":73,"type":"binary-expr","locations":[{"start":{"line":73,"column":23},"end":{"line":73,"column":35}},{"start":{"line":73,"column":39},"end":{"line":73,"column":63}}]},"6":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":6},"end":{"line":75,"column":6}},{"start":{"line":75,"column":6},"end":{"line":75,"column":6}}]},"7":{"line":75,"type":"binary-expr","locations":[{"start":{"line":75,"column":10},"end":{"line":75,"column":22}},{"start":{"line":75,"column":26},"end":{"line":75,"column":35}}]},"8":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":4},"end":{"line":79,"column":4}},{"start":{"line":79,"column":4},"end":{"line":79,"column":4}}]},"9":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":6},"end":{"line":80,"column":6}},{"start":{"line":80,"column":6},"end":{"line":80,"column":6}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayQueryTransform"," * "," */","","'use strict';","","var _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));","","var _possibleConstructorReturn3 = _interopRequireDefault(require('babel-runtime/helpers/possibleConstructorReturn'));","","var _inherits3 = _interopRequireDefault(require('babel-runtime/helpers/inherits'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","/**"," * @internal"," *"," * `RelayQueryTransform` is a `RelayQueryVisitor` subclass that simplifies the"," * process of traversing, filtering, or transforming a Relay Query."," *"," * The traversal is a map operation from `RelayQuery` nodes to nodes. The"," * default implementation traverses all nodes and maps each one to its"," * original value (ie. a no-op)."," *"," * Just like `RelayQueryVisitor`, subclasses of `RelayQueryTransform` can"," * optionally implement methods to customize the traversal and mapping of"," * different RelayQuery node types:"," *"," * - `visitField(field, state)`: Returns the new value for the visited field, or"," *   `null` to remove it from the output."," * - `visitFragment(fragment, state)`: Returns the new value for the visited"," *   fragment, or `null` to remove it from the output."," * - `visitQuery(fragment, state)`: Returns the new value for the top-level"," *   query, or `null` to transform the entire query out of existence."," *"," * There are two additional methods for controlling the traversal:"," *"," * - `traverse(parent, state)`: Returns a cloned copy of the parent node after"," *   processing all of its children. Does not clone if nothing changed."," * - `visit(child, state)`: Processes the child node, calling the appropriate"," *   `visit{Field,Fragment,Root` method based on the node type."," *"," * All of these methods may return the original node in order to leave it"," * intact."," *"," * @see RelayQueryVisitor"," */","var RelayQueryTransform = function (_RelayQueryVisitor) {","  (0, _inherits3['default'])(RelayQueryTransform, _RelayQueryVisitor);","","  function RelayQueryTransform() {","    (0, _classCallCheck3['default'])(this, RelayQueryTransform);","    return (0, _possibleConstructorReturn3['default'])(this, _RelayQueryVisitor.apply(this, arguments));","  }","","  RelayQueryTransform.prototype.traverse = function traverse(node, nextState) {","    if (!node.canHaveSubselections()) {","      return node;","    }","    var nextChildren = void 0;","    this.traverseChildren(node, nextState, function (child, index, children) {","      var prevChild = children[index];","      var nextChild = this.visit(prevChild, nextState);","      if (nextChild !== prevChild) {","        nextChildren = nextChildren || children.slice(0, index);","      }","      if (nextChildren && nextChild) {","        nextChildren.push(nextChild);","      }","    }, this);","    if (nextChildren) {","      if (!nextChildren.length) {","        return null;","      }","      return node.clone(nextChildren);","    }","    return node;","  };","","  return RelayQueryTransform;","}(require('./RelayQueryVisitor'));","","module.exports = RelayQueryTransform;"],"l":{"15":1,"17":1,"19":1,"21":3,"56":1,"57":1,"59":1,"60":1,"61":1,"64":1,"65":0,"66":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"75":0,"76":0,"79":0,"80":0,"81":0,"83":0,"85":0,"88":1,"91":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/isCompatibleRelayFragmentType.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/isCompatibleRelayFragmentType.js","s":{"1":1,"2":0,"3":1},"b":{"1":[0,0,0]},"f":{"1":0},"fnMap":{"1":{"name":"isCompatibleRelayFragmentType","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":61}}}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":28,"column":1}},"2":{"start":{"line":27,"column":2},"end":{"line":27,"column":83}},"3":{"start":{"line":30,"column":0},"end":{"line":30,"column":47}}},"branchMap":{"1":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":9},"end":{"line":27,"column":42}},{"start":{"line":27,"column":46},"end":{"line":27,"column":57}},{"start":{"line":27,"column":61},"end":{"line":27,"column":82}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule isCompatibleRelayFragmentType"," * "," */","","'use strict';","","/**"," * @internal"," *"," * Determine if the given fragment's type is compatible with the given record"," * type. The types are considered compatible if they exactly match or in the"," * following cases:"," * - Types are not recorded for optimistic records; if the record type is null"," *   it is assumed to be compatible with the fragment."," * - Abstract fragments are assumed to be compatible with all types; being more"," *   precise would require access to the full schema inheritance hierarchy."," */","function isCompatibleRelayFragmentType(fragment, recordType) {","  return recordType === fragment.getType() || !recordType || fragment.isAbstract();","}","","module.exports = isCompatibleRelayFragmentType;"],"l":{"26":1,"27":0,"30":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/isRelayContainer.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/isRelayContainer.js","s":{"1":1,"2":0,"3":1},"b":{"1":[0,0,0,0,0]},"f":{"1":0},"fnMap":{"1":{"name":"isRelayContainer","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":17,"column":1}},"2":{"start":{"line":16,"column":2},"end":{"line":16,"column":128}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":34}}},"branchMap":{"1":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":12},"end":{"line":16,"column":21}},{"start":{"line":16,"column":25},"end":{"line":16,"column":51}},{"start":{"line":16,"column":55},"end":{"line":16,"column":76}},{"start":{"line":16,"column":80},"end":{"line":16,"column":101}},{"start":{"line":16,"column":105},"end":{"line":16,"column":126}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule isRelayContainer"," * "," */","","'use strict';","","function isRelayContainer(component) {","  return !!(component && component.getFragmentNames && component.getFragment && component.hasFragment && component.hasVariable);","}","","module.exports = isRelayContainer;"],"l":{"15":1,"16":0,"19":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/isRelayEnvironment.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/isRelayEnvironment.js","s":{"1":1,"2":0,"3":1},"b":{"1":[0,0,0,0,0,0]},"f":{"1":0},"fnMap":{"1":{"name":"isRelayEnvironment","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":41}}}},"statementMap":{"1":{"start":{"line":20,"column":0},"end":{"line":22,"column":1}},"2":{"start":{"line":21,"column":2},"end":{"line":21,"column":268}},"3":{"start":{"line":24,"column":0},"end":{"line":24,"column":36}}},"branchMap":{"1":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":9},"end":{"line":21,"column":40}},{"start":{"line":21,"column":44},"end":{"line":21,"column":64}},{"start":{"line":21,"column":68},"end":{"line":21,"column":112}},{"start":{"line":21,"column":116},"end":{"line":21,"column":169}},{"start":{"line":21,"column":173},"end":{"line":21,"column":219}},{"start":{"line":21,"column":223},"end":{"line":21,"column":267}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule isRelayEnvironment"," * "," */","","'use strict';","","/**"," * Determine if a given value is an object that implements the `RelayEnvironment`"," * interface."," */","","function isRelayEnvironment(environment) {","  return typeof environment === 'object' && environment !== null && typeof environment.forceFetch === 'function' && typeof environment.getFragmentResolver === 'function' && typeof environment.getStoreData === 'function' && typeof environment.primeCache === 'function';","}","","module.exports = isRelayEnvironment;"],"l":{"20":1,"21":0,"24":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/printRelayOSSQuery.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/printRelayOSSQuery.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":1,"64":0,"65":0,"66":0,"67":1,"68":0,"69":0,"70":1,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":1,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":1,"127":0,"128":0,"129":0,"130":1,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":1,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":1},"b":{"1":[1,0],"2":[1,1],"3":[1,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0],"9":[0,0,0],"10":[0,0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":37}}},"2":{"name":"printRelayOSSQuery","line":33,"loc":{"start":{"line":33,"column":0},"end":{"line":33,"column":34}}},"3":{"name":"(anonymous_3)","line":54,"loc":{"start":{"line":54,"column":22},"end":{"line":54,"column":50}}},"4":{"name":"(anonymous_4)","line":55,"loc":{"start":{"line":55,"column":29},"end":{"line":55,"column":45}}},"5":{"name":"printRoot","line":69,"loc":{"start":{"line":69,"column":0},"end":{"line":69,"column":39}}},"6":{"name":"printOperation","line":91,"loc":{"start":{"line":91,"column":0},"end":{"line":91,"column":44}}},"7":{"name":"printVariableDefinitions","line":104,"loc":{"start":{"line":104,"column":0},"end":{"line":104,"column":41}}},"8":{"name":"(anonymous_8)","line":108,"loc":{"start":{"line":108,"column":22},"end":{"line":108,"column":56}}},"9":{"name":"(anonymous_9)","line":109,"loc":{"start":{"line":109,"column":29},"end":{"line":109,"column":46}}},"10":{"name":"printNonNullType","line":122,"loc":{"start":{"line":122,"column":0},"end":{"line":122,"column":32}}},"11":{"name":"printFragment","line":129,"loc":{"start":{"line":129,"column":0},"end":{"line":129,"column":43}}},"12":{"name":"printChildren","line":134,"loc":{"start":{"line":134,"column":0},"end":{"line":134,"column":51}}},"13":{"name":"printDirectives","line":206,"loc":{"start":{"line":206,"column":0},"end":{"line":206,"column":31}}},"14":{"name":"(anonymous_14)","line":208,"loc":{"start":{"line":208,"column":31},"end":{"line":208,"column":52}}},"15":{"name":"printDirective","line":222,"loc":{"start":{"line":222,"column":0},"end":{"line":222,"column":31}}},"16":{"name":"printArgument","line":230,"loc":{"start":{"line":230,"column":0},"end":{"line":230,"column":56}}},"17":{"name":"createVariable","line":244,"loc":{"start":{"line":244,"column":0},"end":{"line":244,"column":57}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":90}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":97}},"3":{"start":{"line":17,"column":39},"end":{"line":17,"column":95}},"4":{"start":{"line":19,"column":0},"end":{"line":19,"column":19}},"5":{"start":{"line":20,"column":0},"end":{"line":20,"column":17}},"6":{"start":{"line":22,"column":0},"end":{"line":25,"column":1}},"7":{"start":{"line":23,"column":2},"end":{"line":23,"column":19}},"8":{"start":{"line":24,"column":2},"end":{"line":24,"column":17}},"9":{"start":{"line":33,"column":0},"end":{"line":67,"column":1}},"10":{"start":{"line":34,"column":2},"end":{"line":34,"column":25}},"11":{"start":{"line":35,"column":2},"end":{"line":35,"column":52}},"12":{"start":{"line":36,"column":2},"end":{"line":43,"column":4}},"13":{"start":{"line":44,"column":2},"end":{"line":44,"column":23}},"14":{"start":{"line":45,"column":2},"end":{"line":51,"column":3}},"15":{"start":{"line":46,"column":4},"end":{"line":46,"column":46}},"16":{"start":{"line":47,"column":9},"end":{"line":51,"column":3}},"17":{"start":{"line":48,"column":4},"end":{"line":48,"column":51}},"18":{"start":{"line":49,"column":9},"end":{"line":51,"column":3}},"19":{"start":{"line":50,"column":4},"end":{"line":50,"column":50}},"20":{"start":{"line":52,"column":2},"end":{"line":52,"column":91}},"21":{"start":{"line":53,"column":2},"end":{"line":53,"column":21}},"22":{"start":{"line":54,"column":2},"end":{"line":61,"column":5}},"23":{"start":{"line":55,"column":4},"end":{"line":60,"column":7}},"24":{"start":{"line":56,"column":6},"end":{"line":57,"column":39}},"25":{"start":{"line":59,"column":6},"end":{"line":59,"column":36}},"26":{"start":{"line":63,"column":2},"end":{"line":66,"column":4}},"27":{"start":{"line":69,"column":0},"end":{"line":89,"column":1}},"28":{"start":{"line":70,"column":2},"end":{"line":70,"column":115}},"29":{"start":{"line":71,"column":2},"end":{"line":71,"column":48}},"30":{"start":{"line":72,"column":2},"end":{"line":72,"column":73}},"31":{"start":{"line":73,"column":2},"end":{"line":73,"column":73}},"32":{"start":{"line":74,"column":2},"end":{"line":74,"column":75}},"33":{"start":{"line":75,"column":2},"end":{"line":75,"column":38}},"34":{"start":{"line":76,"column":2},"end":{"line":82,"column":3}},"35":{"start":{"line":77,"column":4},"end":{"line":77,"column":137}},"36":{"start":{"line":78,"column":4},"end":{"line":78,"column":113}},"37":{"start":{"line":79,"column":4},"end":{"line":81,"column":5}},"38":{"start":{"line":80,"column":6},"end":{"line":80,"column":45}},"39":{"start":{"line":84,"column":2},"end":{"line":84,"column":62}},"40":{"start":{"line":85,"column":2},"end":{"line":85,"column":76}},"41":{"start":{"line":86,"column":2},"end":{"line":86,"column":37}},"42":{"start":{"line":88,"column":2},"end":{"line":88,"column":100}},"43":{"start":{"line":91,"column":0},"end":{"line":102,"column":1}},"44":{"start":{"line":92,"column":2},"end":{"line":92,"column":101}},"45":{"start":{"line":93,"column":2},"end":{"line":93,"column":28}},"46":{"start":{"line":94,"column":2},"end":{"line":94,"column":109}},"47":{"start":{"line":95,"column":2},"end":{"line":95,"column":172}},"48":{"start":{"line":97,"column":2},"end":{"line":97,"column":62}},"49":{"start":{"line":98,"column":2},"end":{"line":98,"column":80}},"50":{"start":{"line":99,"column":2},"end":{"line":99,"column":54}},"51":{"start":{"line":101,"column":2},"end":{"line":101,"column":115}},"52":{"start":{"line":104,"column":0},"end":{"line":120,"column":1}},"53":{"start":{"line":105,"column":2},"end":{"line":105,"column":38}},"54":{"start":{"line":107,"column":2},"end":{"line":107,"column":24}},"55":{"start":{"line":108,"column":2},"end":{"line":115,"column":5}},"56":{"start":{"line":109,"column":4},"end":{"line":114,"column":7}},"57":{"start":{"line":110,"column":6},"end":{"line":110,"column":40}},"58":{"start":{"line":112,"column":6},"end":{"line":112,"column":36}},"59":{"start":{"line":113,"column":6},"end":{"line":113,"column":53}},"60":{"start":{"line":116,"column":2},"end":{"line":118,"column":3}},"61":{"start":{"line":117,"column":4},"end":{"line":117,"column":44}},"62":{"start":{"line":119,"column":2},"end":{"line":119,"column":12}},"63":{"start":{"line":122,"column":0},"end":{"line":127,"column":1}},"64":{"start":{"line":123,"column":2},"end":{"line":125,"column":3}},"65":{"start":{"line":124,"column":4},"end":{"line":124,"column":16}},"66":{"start":{"line":126,"column":2},"end":{"line":126,"column":20}},"67":{"start":{"line":129,"column":0},"end":{"line":132,"column":1}},"68":{"start":{"line":130,"column":2},"end":{"line":130,"column":41}},"69":{"start":{"line":131,"column":2},"end":{"line":131,"column":122}},"70":{"start":{"line":134,"column":0},"end":{"line":204,"column":1}},"71":{"start":{"line":135,"column":2},"end":{"line":135,"column":24}},"72":{"start":{"line":136,"column":2},"end":{"line":136,"column":36}},"73":{"start":{"line":137,"column":2},"end":{"line":137,"column":25}},"74":{"start":{"line":138,"column":2},"end":{"line":199,"column":3}},"75":{"start":{"line":139,"column":4},"end":{"line":139,"column":29}},"76":{"start":{"line":140,"column":4},"end":{"line":198,"column":5}},"77":{"start":{"line":141,"column":6},"end":{"line":141,"column":44}},"78":{"start":{"line":142,"column":6},"end":{"line":142,"column":50}},"79":{"start":{"line":143,"column":6},"end":{"line":159,"column":7}},"80":{"start":{"line":144,"column":8},"end":{"line":144,"column":66}},"81":{"start":{"line":145,"column":8},"end":{"line":145,"column":26}},"82":{"start":{"line":146,"column":8},"end":{"line":155,"column":9}},"83":{"start":{"line":147,"column":10},"end":{"line":149,"column":44}},"84":{"start":{"line":151,"column":10},"end":{"line":151,"column":91}},"85":{"start":{"line":152,"column":10},"end":{"line":154,"column":11}},"86":{"start":{"line":153,"column":12},"end":{"line":153,"column":35}},"87":{"start":{"line":156,"column":8},"end":{"line":158,"column":9}},"88":{"start":{"line":157,"column":10},"end":{"line":157,"column":54}},"89":{"start":{"line":160,"column":6},"end":{"line":160,"column":42}},"90":{"start":{"line":161,"column":6},"end":{"line":163,"column":7}},"91":{"start":{"line":162,"column":8},"end":{"line":162,"column":76}},"92":{"start":{"line":164,"column":6},"end":{"line":164,"column":35}},"93":{"start":{"line":165,"column":11},"end":{"line":198,"column":5}},"94":{"start":{"line":166,"column":6},"end":{"line":195,"column":7}},"95":{"start":{"line":167,"column":8},"end":{"line":169,"column":56}},"96":{"start":{"line":173,"column":8},"end":{"line":173,"column":53}},"97":{"start":{"line":175,"column":8},"end":{"line":175,"column":34}},"98":{"start":{"line":176,"column":8},"end":{"line":189,"column":9}},"99":{"start":{"line":177,"column":10},"end":{"line":177,"column":60}},"100":{"start":{"line":180,"column":10},"end":{"line":180,"column":112}},"101":{"start":{"line":181,"column":10},"end":{"line":188,"column":11}},"102":{"start":{"line":182,"column":12},"end":{"line":182,"column":62}},"103":{"start":{"line":184,"column":12},"end":{"line":184,"column":90}},"104":{"start":{"line":185,"column":12},"end":{"line":185,"column":62}},"105":{"start":{"line":186,"column":12},"end":{"line":186,"column":62}},"106":{"start":{"line":187,"column":12},"end":{"line":187,"column":85}},"107":{"start":{"line":190,"column":8},"end":{"line":194,"column":9}},"108":{"start":{"line":191,"column":10},"end":{"line":191,"column":38}},"109":{"start":{"line":192,"column":10},"end":{"line":192,"column":41}},"110":{"start":{"line":193,"column":10},"end":{"line":193,"column":50}},"111":{"start":{"line":197,"column":6},"end":{"line":197,"column":132}},"112":{"start":{"line":200,"column":2},"end":{"line":202,"column":3}},"113":{"start":{"line":201,"column":4},"end":{"line":201,"column":14}},"114":{"start":{"line":203,"column":2},"end":{"line":203,"column":153}},"115":{"start":{"line":206,"column":0},"end":{"line":220,"column":1}},"116":{"start":{"line":207,"column":2},"end":{"line":207,"column":32}},"117":{"start":{"line":208,"column":2},"end":{"line":215,"column":5}},"118":{"start":{"line":209,"column":4},"end":{"line":209,"column":41}},"119":{"start":{"line":210,"column":4},"end":{"line":212,"column":5}},"120":{"start":{"line":211,"column":6},"end":{"line":211,"column":76}},"121":{"start":{"line":213,"column":4},"end":{"line":213,"column":46}},"122":{"start":{"line":214,"column":4},"end":{"line":214,"column":37}},"123":{"start":{"line":216,"column":2},"end":{"line":218,"column":3}},"124":{"start":{"line":217,"column":4},"end":{"line":217,"column":14}},"125":{"start":{"line":219,"column":2},"end":{"line":219,"column":42}},"126":{"start":{"line":222,"column":0},"end":{"line":228,"column":1}},"127":{"start":{"line":223,"column":2},"end":{"line":224,"column":26}},"128":{"start":{"line":226,"column":2},"end":{"line":226,"column":255}},"129":{"start":{"line":227,"column":2},"end":{"line":227,"column":57}},"130":{"start":{"line":230,"column":0},"end":{"line":242,"column":1}},"131":{"start":{"line":231,"column":2},"end":{"line":233,"column":3}},"132":{"start":{"line":232,"column":4},"end":{"line":232,"column":17}},"133":{"start":{"line":234,"column":2},"end":{"line":234,"column":27}},"134":{"start":{"line":235,"column":2},"end":{"line":240,"column":3}},"135":{"start":{"line":236,"column":4},"end":{"line":236,"column":70}},"136":{"start":{"line":237,"column":4},"end":{"line":237,"column":36}},"137":{"start":{"line":239,"column":4},"end":{"line":239,"column":53}},"138":{"start":{"line":241,"column":2},"end":{"line":241,"column":34}},"139":{"start":{"line":244,"column":0},"end":{"line":264,"column":1}},"140":{"start":{"line":245,"column":2},"end":{"line":245,"column":121}},"141":{"start":{"line":246,"column":2},"end":{"line":246,"column":52}},"142":{"start":{"line":247,"column":2},"end":{"line":247,"column":43}},"143":{"start":{"line":248,"column":2},"end":{"line":248,"column":67}},"144":{"start":{"line":249,"column":2},"end":{"line":252,"column":3}},"145":{"start":{"line":250,"column":4},"end":{"line":250,"column":55}},"146":{"start":{"line":251,"column":4},"end":{"line":251,"column":64}},"147":{"start":{"line":253,"column":2},"end":{"line":253,"column":56}},"148":{"start":{"line":254,"column":2},"end":{"line":263,"column":3}},"149":{"start":{"line":255,"column":4},"end":{"line":255,"column":39}},"150":{"start":{"line":257,"column":4},"end":{"line":257,"column":93}},"151":{"start":{"line":258,"column":4},"end":{"line":261,"column":7}},"152":{"start":{"line":262,"column":4},"end":{"line":262,"column":24}},"153":{"start":{"line":266,"column":0},"end":{"line":266,"column":94}}},"branchMap":{"1":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":70},"end":{"line":17,"column":73}},{"start":{"line":17,"column":76},"end":{"line":17,"column":94}}]},"2":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":46},"end":{"line":17,"column":49}},{"start":{"line":17,"column":53},"end":{"line":17,"column":67}}]},"3":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":0},"end":{"line":22,"column":0}},{"start":{"line":22,"column":0},"end":{"line":22,"column":0}}]},"4":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":45,"column":2}},{"start":{"line":45,"column":2},"end":{"line":45,"column":2}}]},"5":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":9},"end":{"line":47,"column":9}},{"start":{"line":47,"column":9},"end":{"line":47,"column":9}}]},"6":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":9},"end":{"line":49,"column":9}},{"start":{"line":49,"column":9},"end":{"line":49,"column":9}}]},"7":{"line":64,"type":"cond-expr","locations":[{"start":{"line":64,"column":66},"end":{"line":64,"column":73}},{"start":{"line":64,"column":76},"end":{"line":64,"column":79}}]},"8":{"line":72,"type":"binary-expr","locations":[{"start":{"line":72,"column":27},"end":{"line":72,"column":41}},{"start":{"line":72,"column":45},"end":{"line":72,"column":64}},{"start":{"line":72,"column":68},"end":{"line":72,"column":72}}]},"9":{"line":73,"type":"binary-expr","locations":[{"start":{"line":73,"column":27},"end":{"line":73,"column":41}},{"start":{"line":73,"column":45},"end":{"line":73,"column":64}},{"start":{"line":73,"column":68},"end":{"line":73,"column":72}}]},"10":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":28},"end":{"line":74,"column":42}},{"start":{"line":74,"column":46},"end":{"line":74,"column":66}},{"start":{"line":74,"column":70},"end":{"line":74,"column":74}}]},"11":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":2},"end":{"line":76,"column":2}},{"start":{"line":76,"column":2},"end":{"line":76,"column":2}}]},"12":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":4},"end":{"line":79,"column":4}},{"start":{"line":79,"column":4},"end":{"line":79,"column":4}}]},"13":{"line":92,"type":"cond-expr","locations":[{"start":{"line":92,"column":73},"end":{"line":92,"column":83}},{"start":{"line":92,"column":86},"end":{"line":92,"column":100}}]},"14":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":19},"end":{"line":112,"column":29}},{"start":{"line":112,"column":33},"end":{"line":112,"column":35}}]},"15":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":2},"end":{"line":116,"column":2}},{"start":{"line":116,"column":2},"end":{"line":116,"column":2}}]},"16":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":2},"end":{"line":123,"column":2}},{"start":{"line":123,"column":2},"end":{"line":123,"column":2}}]},"17":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":4},"end":{"line":140,"column":4}},{"start":{"line":140,"column":4},"end":{"line":140,"column":4}}]},"18":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":6},"end":{"line":143,"column":6}},{"start":{"line":143,"column":6},"end":{"line":143,"column":6}}]},"19":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":10},"end":{"line":152,"column":10}},{"start":{"line":152,"column":10},"end":{"line":152,"column":10}}]},"20":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":8},"end":{"line":156,"column":8}},{"start":{"line":156,"column":8},"end":{"line":156,"column":8}}]},"21":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":6},"end":{"line":161,"column":6}},{"start":{"line":161,"column":6},"end":{"line":161,"column":6}}]},"22":{"line":165,"type":"if","locations":[{"start":{"line":165,"column":11},"end":{"line":165,"column":11}},{"start":{"line":165,"column":11},"end":{"line":165,"column":11}}]},"23":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":6},"end":{"line":166,"column":6}},{"start":{"line":166,"column":6},"end":{"line":166,"column":6}}]},"24":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":8},"end":{"line":176,"column":8}},{"start":{"line":176,"column":8},"end":{"line":176,"column":8}}]},"25":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":10},"end":{"line":181,"column":10}},{"start":{"line":181,"column":10},"end":{"line":181,"column":10}}]},"26":{"line":190,"type":"if","locations":[{"start":{"line":190,"column":8},"end":{"line":190,"column":8}},{"start":{"line":190,"column":8},"end":{"line":190,"column":8}}]},"27":{"line":190,"type":"binary-expr","locations":[{"start":{"line":190,"column":12},"end":{"line":190,"column":22}},{"start":{"line":190,"column":26},"end":{"line":190,"column":65}}]},"28":{"line":191,"type":"binary-expr","locations":[{"start":{"line":191,"column":22},"end":{"line":191,"column":31}},{"start":{"line":191,"column":35},"end":{"line":191,"column":37}}]},"29":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":2},"end":{"line":200,"column":2}},{"start":{"line":200,"column":2},"end":{"line":200,"column":2}}]},"30":{"line":203,"type":"cond-expr","locations":[{"start":{"line":203,"column":31},"end":{"line":203,"column":147}},{"start":{"line":203,"column":150},"end":{"line":203,"column":152}}]},"31":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":4},"end":{"line":210,"column":4}},{"start":{"line":210,"column":4},"end":{"line":210,"column":4}}]},"32":{"line":213,"type":"binary-expr","locations":[{"start":{"line":213,"column":23},"end":{"line":213,"column":39}},{"start":{"line":213,"column":43},"end":{"line":213,"column":45}}]},"33":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":2},"end":{"line":216,"column":2}},{"start":{"line":216,"column":2},"end":{"line":216,"column":2}}]},"34":{"line":226,"type":"binary-expr","locations":[{"start":{"line":226,"column":32},"end":{"line":226,"column":58}},{"start":{"line":226,"column":62},"end":{"line":226,"column":87}},{"start":{"line":226,"column":91},"end":{"line":226,"column":116}}]},"35":{"line":231,"type":"if","locations":[{"start":{"line":231,"column":2},"end":{"line":231,"column":2}},{"start":{"line":231,"column":2},"end":{"line":231,"column":2}}]},"36":{"line":235,"type":"if","locations":[{"start":{"line":235,"column":2},"end":{"line":235,"column":2}},{"start":{"line":235,"column":2},"end":{"line":235,"column":2}}]},"37":{"line":249,"type":"if","locations":[{"start":{"line":249,"column":2},"end":{"line":249,"column":2}},{"start":{"line":249,"column":2},"end":{"line":249,"column":2}}]},"38":{"line":254,"type":"if","locations":[{"start":{"line":254,"column":2},"end":{"line":254,"column":2}},{"start":{"line":254,"column":2},"end":{"line":254,"column":2}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule printRelayOSSQuery"," * "," */","","'use strict';","","var _stringify2 = _interopRequireDefault(require('babel-runtime/core-js/json/stringify'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","var oneIndent = '';","var newLine = '';","","if (process.env.NODE_ENV !== 'production') {","  oneIndent = '  ';","  newLine = '\\n';","}","","/**"," * @internal"," *"," * `printRelayOSSQuery(query)` returns a string representation of the query. The"," * supplied `node` must be flattened (and not contain fragments)."," */","function printRelayOSSQuery(node) {","  var fragmentTexts = [];","  var variableMap = new (require('fbjs/lib/Map'))();","  var printerState = {","    fragmentCount: 0,","    fragmentNameByHash: {},","    fragmentNameByText: {},","    fragmentTexts: fragmentTexts,","    variableCount: 0,","    variableMap: variableMap","  };","  var queryText = null;","  if (node instanceof require('./RelayQuery').Root) {","    queryText = printRoot(node, printerState);","  } else if (node instanceof require('./RelayQuery').Operation) {","    queryText = printOperation(node, printerState);","  } else if (node instanceof require('./RelayQuery').Fragment) {","    queryText = printFragment(node, printerState);","  }","  require('fbjs/lib/invariant')(queryText, 'printRelayOSSQuery(): Unsupported node type.');","  var variables = {};","  variableMap.forEach(function (variablesForType) {","    variablesForType.forEach(function (_ref) {","      var value = _ref.value,","          variableID = _ref.variableID;","","      variables[variableID] = value;","    });","  });","","  return {","    text: [queryText].concat(fragmentTexts).join(newLine.length ? newLine : ' '),","    variables: variables","  };","}","","function printRoot(node, printerState) {","  require('fbjs/lib/invariant')(!node.getBatchCall(), 'printRelayOSSQuery(): Deferred queries are not supported.');","  var identifyingArg = node.getIdentifyingArg();","  var identifyingArgName = identifyingArg && identifyingArg.name || null;","  var identifyingArgType = identifyingArg && identifyingArg.type || null;","  var identifyingArgValue = identifyingArg && identifyingArg.value || null;","  var fieldName = node.getFieldName();","  if (identifyingArgValue != null) {","    require('fbjs/lib/invariant')(identifyingArgName, 'printRelayOSSQuery(): Expected an argument name for root field `%s`.', fieldName);","    var rootArgString = printArgument(identifyingArgName, identifyingArgValue, identifyingArgType, printerState);","    if (rootArgString) {","      fieldName += '(' + rootArgString + ')';","    }","  }","  // Note: children must be traversed before printing variable definitions","  var children = printChildren(node, printerState, oneIndent);","  var queryString = node.getName() + printVariableDefinitions(printerState);","  fieldName += printDirectives(node);","","  return 'query ' + queryString + ' {' + newLine + oneIndent + fieldName + children + newLine + '}';","}","","function printOperation(node, printerState) {","  var operationKind = node instanceof require('./RelayQuery').Mutation ? 'mutation' : 'subscription';","  var call = node.getCall();","  var inputString = printArgument(node.getCallVariableName(), call.value, node.getInputType(), printerState);","  require('fbjs/lib/invariant')(inputString, 'printRelayOSSQuery(): Expected %s `%s` to have a value for `%s`.', operationKind, node.getName(), node.getCallVariableName());","  // Note: children must be traversed before printing variable definitions","  var children = printChildren(node, printerState, oneIndent);","  var operationString = node.getName() + printVariableDefinitions(printerState);","  var fieldName = call.name + '(' + inputString + ')';","","  return operationKind + ' ' + operationString + ' {' + newLine + oneIndent + fieldName + children + newLine + '}';","}","","function printVariableDefinitions(_ref2) {","  var variableMap = _ref2.variableMap;","","  var argStrings = null;","  variableMap.forEach(function (variablesForType, type) {","    variablesForType.forEach(function (_ref3) {","      var variableID = _ref3.variableID;","","      argStrings = argStrings || [];","      argStrings.push('$' + variableID + ':' + type);","    });","  });","  if (argStrings) {","    return '(' + argStrings.join(',') + ')';","  }","  return '';","}","","function printNonNullType(type) {","  if (type.endsWith('!')) {","    return type;","  }","  return type + '!';","}","","function printFragment(node, printerState) {","  var directives = printDirectives(node);","  return 'fragment ' + node.getDebugName() + ' on ' + node.getType() + directives + printChildren(node, printerState, '');","}","","function printChildren(node, printerState, indent) {","  var childrenText = [];","  var children = node.getChildren();","  var fragments = void 0;","  for (var ii = 0; ii < children.length; ii++) {","    var child = children[ii];","    if (child instanceof require('./RelayQuery').Field) {","      var fieldText = child.getSchemaName();","      var fieldCalls = child.getCallsWithValues();","      if (fieldCalls.length) {","        fieldText = child.getSerializationKey() + ':' + fieldText;","        var argTexts = [];","        for (var jj = 0; jj < fieldCalls.length; jj++) {","          var _fieldCalls$jj = fieldCalls[jj],","              name = _fieldCalls$jj.name,","              _value = _fieldCalls$jj.value;","","          var argText = printArgument(name, _value, child.getCallType(name), printerState);","          if (argText) {","            argTexts.push(argText);","          }","        }","        if (argTexts.length) {","          fieldText += '(' + argTexts.join(',') + ')';","        }","      }","      fieldText += printDirectives(child);","      if (child.getChildren().length) {","        fieldText += printChildren(child, printerState, indent + oneIndent);","      }","      childrenText.push(fieldText);","    } else if (child instanceof require('./RelayQuery').Fragment) {","      if (child.getChildren().length) {","        var _fragmentNameByHash = printerState.fragmentNameByHash,","            _fragmentNameByText = printerState.fragmentNameByText,","            _fragmentTexts = printerState.fragmentTexts;","","        // Avoid walking fragments if we have printed the same one before.","","        var _fragmentHash = child.getCompositeHash();","","        var fragmentName = void 0;","        if (_fragmentNameByHash.hasOwnProperty(_fragmentHash)) {","          fragmentName = _fragmentNameByHash[_fragmentHash];","        } else {","          // Avoid reprinting a fragment that is identical to another fragment.","          var _fragmentText = child.getType() + printDirectives(child) + printChildren(child, printerState, '');","          if (_fragmentNameByText.hasOwnProperty(_fragmentText)) {","            fragmentName = _fragmentNameByText[_fragmentText];","          } else {","            fragmentName = 'F' + require('fbjs/lib/base62')(printerState.fragmentCount++);","            _fragmentNameByHash[_fragmentHash] = fragmentName;","            _fragmentNameByText[_fragmentText] = fragmentName;","            _fragmentTexts.push('fragment ' + fragmentName + ' on ' + _fragmentText);","          }","        }","        if (!fragments || !fragments.hasOwnProperty(fragmentName)) {","          fragments = fragments || {};","          fragments[fragmentName] = true;","          childrenText.push('...' + fragmentName);","        }","      }","    } else {","      require('fbjs/lib/invariant')(false, 'printRelayOSSQuery(): Expected a field or fragment, got `%s`.', child.constructor.name);","    }","  }","  if (!childrenText) {","    return '';","  }","  return childrenText.length ? ' {' + newLine + indent + oneIndent + childrenText.join(',' + newLine + indent + oneIndent) + newLine + indent + '}' : '';","}","","function printDirectives(node) {","  var directiveStrings = void 0;","  node.getDirectives().forEach(function (directive) {","    var dirString = '@' + directive.name;","    if (directive.args.length) {","      dirString += '(' + directive.args.map(printDirective).join(',') + ')';","    }","    directiveStrings = directiveStrings || [];","    directiveStrings.push(dirString);","  });","  if (!directiveStrings) {","    return '';","  }","  return ' ' + directiveStrings.join(' ');","}","","function printDirective(_ref4) {","  var name = _ref4.name,","      value = _ref4.value;","","  require('fbjs/lib/invariant')(typeof value === 'boolean' || typeof value === 'number' || typeof value === 'string', 'printRelayOSSQuery(): Relay only supports directives with scalar values ' + '(boolean, number, or string), got `%s: %s`.', name, value);","  return name + ':' + (0, _stringify2['default'])(value);","}","","function printArgument(name, value, type, printerState) {","  if (value == null) {","    return value;","  }","  var stringValue = void 0;","  if (type != null) {","    var _variableID = createVariable(name, value, type, printerState);","    stringValue = '$' + _variableID;","  } else {","    stringValue = (0, _stringify2['default'])(value);","  }","  return name + ':' + stringValue;","}","","function createVariable(name, value, type, printerState) {","  require('fbjs/lib/invariant')(value != null, 'printRelayOSSQuery: Expected a non-null value for variable `%s`.', name);","  var valueKey = (0, _stringify2['default'])(value);","  var nonNullType = printNonNullType(type);","  var variablesForType = printerState.variableMap.get(nonNullType);","  if (!variablesForType) {","    variablesForType = new (require('fbjs/lib/Map'))();","    printerState.variableMap.set(nonNullType, variablesForType);","  }","  var existingVariable = variablesForType.get(valueKey);","  if (existingVariable) {","    return existingVariable.variableID;","  } else {","    var _variableID2 = name + '_' + require('fbjs/lib/base62')(printerState.variableCount++);","    variablesForType.set(valueKey, {","      value: value,","      variableID: _variableID2","    });","    return _variableID2;","  }","}","","module.exports = require('./RelayProfiler').instrument('printRelayQuery', printRelayOSSQuery);"],"l":{"15":1,"17":1,"19":1,"20":1,"22":1,"23":1,"24":1,"33":1,"34":0,"35":0,"36":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"52":0,"53":0,"54":0,"55":0,"56":0,"59":0,"63":0,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"84":0,"85":0,"86":0,"88":0,"91":1,"92":0,"93":0,"94":0,"95":0,"97":0,"98":0,"99":0,"101":0,"104":1,"105":0,"107":0,"108":0,"109":0,"110":0,"112":0,"113":0,"116":0,"117":0,"119":0,"122":1,"123":0,"124":0,"126":0,"129":1,"130":0,"131":0,"134":1,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"151":0,"152":0,"153":0,"156":0,"157":0,"160":0,"161":0,"162":0,"164":0,"165":0,"166":0,"167":0,"173":0,"175":0,"176":0,"177":0,"180":0,"181":0,"182":0,"184":0,"185":0,"186":0,"187":0,"190":0,"191":0,"192":0,"193":0,"197":0,"200":0,"201":0,"203":0,"206":1,"207":0,"208":0,"209":0,"210":0,"211":0,"213":0,"214":0,"216":0,"217":0,"219":0,"222":1,"223":0,"226":0,"227":0,"230":1,"231":0,"232":0,"234":0,"235":0,"236":0,"237":0,"239":0,"241":0,"244":1,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"253":0,"254":0,"255":0,"257":0,"258":0,"262":0,"266":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/printRelayQuery.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/printRelayQuery.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":14,"column":0},"end":{"line":14,"column":49}}},"branchMap":{},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule printRelayQuery"," */","","'use strict';","","module.exports = require('./printRelayOSSQuery');"],"l":{"14":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/rangeOperationToMetadataKey.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/rangeOperationToMetadataKey.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":5,"8":5,"9":1},"b":{"1":[1,0],"2":[1,1]},"f":{"1":1,"2":5},"fnMap":{"1":{"name":"_interopRequireDefault","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":37}}},"2":{"name":"(anonymous_2)","line":29,"loc":{"start":{"line":29,"column":119},"end":{"line":29,"column":149}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":86}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":97}},"3":{"start":{"line":17,"column":39},"end":{"line":17,"column":95}},"4":{"start":{"line":19,"column":0},"end":{"line":19,"column":57}},"5":{"start":{"line":20,"column":0},"end":{"line":20,"column":43}},"6":{"start":{"line":29,"column":0},"end":{"line":32,"column":3}},"7":{"start":{"line":30,"column":2},"end":{"line":30,"column":59}},"8":{"start":{"line":31,"column":2},"end":{"line":31,"column":92}},"9":{"start":{"line":34,"column":0},"end":{"line":34,"column":71}}},"branchMap":{"1":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":70},"end":{"line":17,"column":73}},{"start":{"line":17,"column":76},"end":{"line":17,"column":94}}]},"2":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":46},"end":{"line":17,"column":49}},{"start":{"line":17,"column":53},"end":{"line":17,"column":67}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule rangeOperationToMetadataKey"," * "," */","","'use strict';","","var _freeze2 = _interopRequireDefault(require('babel-runtime/core-js/object/freeze'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","var RANGE_OPERATION_METADATA_PREFIX = '__rangeOperation';","var RANGE_OPERATION_METADATA_SUFFIX = '__';","","/**"," * @internal"," *"," * A map from developer-friendly operation names (\"append\", \"prepend\", \"remove\")"," * to internal book-keeping keys used to store metadata on records"," * (\"__rangeOperationAppend__\" etc)."," */","var rangeOperationToMetadataKey = require('fbjs/lib/mapObject')(require('./GraphQLMutatorConstants').RANGE_OPERATIONS, function (value, key, object) {","  var capitalizedKey = key[0].toUpperCase() + key.slice(1);","  return RANGE_OPERATION_METADATA_PREFIX + capitalizedKey + RANGE_OPERATION_METADATA_SUFFIX;","});","","module.exports = (0, _freeze2['default'])(rangeOperationToMetadataKey);"],"l":{"15":1,"17":1,"19":1,"20":1,"29":1,"30":5,"31":5,"34":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/readRelayQueryData.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/readRelayQueryData.js","s":{"1":1,"2":1,"3":1,"4":1,"5":3,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":1,"15":1,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":1,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":1,"68":0,"69":0,"70":0,"71":0,"72":1,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":1,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":1,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":1,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":1,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":1,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":1,"166":0,"167":0,"168":0,"169":0,"170":1,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":1,"193":0,"194":0,"195":0,"196":0,"197":1,"198":0,"199":0,"200":0,"201":0,"202":0,"203":1,"204":1,"205":0,"206":0,"207":0,"208":0,"209":0,"210":1,"211":1,"212":1,"213":1,"214":1,"215":1,"216":0,"217":0,"218":1,"219":1,"220":1,"221":0,"222":0,"223":0,"224":1,"225":0,"226":0,"227":0,"228":0,"229":0,"230":1,"231":0,"232":0,"233":1},"b":{"1":[3,0],"2":[3,3],"3":[0,0,0],"4":[0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0]},"f":{"1":3,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":1,"32":0,"33":0,"34":0,"35":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":37}}},"2":{"name":"readRelayQueryData","line":35,"loc":{"start":{"line":35,"column":0},"end":{"line":35,"column":67}}},"3":{"name":"(anonymous_3)","line":46,"loc":{"start":{"line":46,"column":23},"end":{"line":46,"column":53}}},"4":{"name":"RelayStoreReader","line":49,"loc":{"start":{"line":49,"column":2},"end":{"line":49,"column":48}}},"5":{"name":"retrieveData","line":67,"loc":{"start":{"line":67,"column":44},"end":{"line":67,"column":85}}},"6":{"name":"visit","line":92,"loc":{"start":{"line":92,"column":37},"end":{"line":92,"column":65}}},"7":{"name":"visitField","line":98,"loc":{"start":{"line":98,"column":42},"end":{"line":98,"column":75}}},"8":{"name":"visitFragment","line":128,"loc":{"start":{"line":128,"column":45},"end":{"line":128,"column":81}}},"9":{"name":"_createState","line":139,"loc":{"start":{"line":139,"column":44},"end":{"line":139,"column":73}}},"10":{"name":"_readScalar","line":149,"loc":{"start":{"line":149,"column":43},"end":{"line":149,"column":77}}},"11":{"name":"_readPlural","line":161,"loc":{"start":{"line":161,"column":43},"end":{"line":161,"column":77}}},"12":{"name":"(anonymous_12)","line":167,"loc":{"start":{"line":167,"column":7},"end":{"line":167,"column":19}}},"13":{"name":"(anonymous_13)","line":170,"loc":{"start":{"line":170,"column":35},"end":{"line":170,"column":57}}},"14":{"name":"(anonymous_14)","line":184,"loc":{"start":{"line":184,"column":37},"end":{"line":184,"column":54}}},"15":{"name":"_readConnection","line":197,"loc":{"start":{"line":197,"column":47},"end":{"line":197,"column":85}}},"16":{"name":"_readEdges","line":224,"loc":{"start":{"line":224,"column":42},"end":{"line":224,"column":86}}},"17":{"name":"(anonymous_17)","line":232,"loc":{"start":{"line":232,"column":39},"end":{"line":232,"column":57}}},"18":{"name":"(anonymous_18)","line":235,"loc":{"start":{"line":235,"column":44},"end":{"line":235,"column":68}}},"19":{"name":"_readPageInfo","line":258,"loc":{"start":{"line":258,"column":45},"end":{"line":258,"column":92}}},"20":{"name":"read","line":273,"loc":{"start":{"line":273,"column":15},"end":{"line":273,"column":36}}},"21":{"name":"_readLinkedField","line":294,"loc":{"start":{"line":294,"column":48},"end":{"line":294,"column":87}}},"22":{"name":"_setDataValue","line":329,"loc":{"start":{"line":329,"column":45},"end":{"line":329,"column":87}}},"23":{"name":"_updateMetadataFields","line":337,"loc":{"start":{"line":337,"column":53},"end":{"line":337,"column":91}}},"24":{"name":"(anonymous_24)","line":346,"loc":{"start":{"line":346,"column":26},"end":{"line":346,"column":49}}},"25":{"name":"(anonymous_25)","line":359,"loc":{"start":{"line":359,"column":7},"end":{"line":359,"column":19}}},"26":{"name":"(anonymous_26)","line":362,"loc":{"start":{"line":362,"column":28},"end":{"line":362,"column":50}}},"27":{"name":"_getConnectionClientID","line":381,"loc":{"start":{"line":381,"column":54},"end":{"line":381,"column":106}}},"28":{"name":"_handleRangeInfo","line":395,"loc":{"start":{"line":395,"column":48},"end":{"line":395,"column":87}}},"29":{"name":"enforceRangeCalls","line":414,"loc":{"start":{"line":414,"column":0},"end":{"line":414,"column":35}}},"30":{"name":"(anonymous_30)","line":424,"loc":{"start":{"line":424,"column":29},"end":{"line":424,"column":60}}},"31":{"name":"RelayRangeCallEnforcer","line":427,"loc":{"start":{"line":427,"column":2},"end":{"line":427,"column":36}}},"32":{"name":"visitField","line":432,"loc":{"start":{"line":432,"column":48},"end":{"line":432,"column":82}}},"33":{"name":"getComponentDataID","line":452,"loc":{"start":{"line":452,"column":0},"end":{"line":452,"column":35}}},"34":{"name":"getDataObject","line":463,"loc":{"start":{"line":463,"column":0},"end":{"line":463,"column":30}}},"35":{"name":"getDataValue","line":477,"loc":{"start":{"line":477,"column":0},"end":{"line":477,"column":34}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":117}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":83}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":97}},"5":{"start":{"line":21,"column":39},"end":{"line":21,"column":95}},"6":{"start":{"line":23,"column":0},"end":{"line":23,"column":75}},"7":{"start":{"line":25,"column":0},"end":{"line":26,"column":64}},"8":{"start":{"line":28,"column":0},"end":{"line":28,"column":72}},"9":{"start":{"line":35,"column":0},"end":{"line":44,"column":1}},"10":{"start":{"line":36,"column":2},"end":{"line":36,"column":56}},"11":{"start":{"line":37,"column":2},"end":{"line":37,"column":52}},"12":{"start":{"line":41,"column":2},"end":{"line":41,"column":58}},"13":{"start":{"line":43,"column":2},"end":{"line":43,"column":14}},"14":{"start":{"line":46,"column":0},"end":{"line":405,"column":34}},"15":{"start":{"line":47,"column":2},"end":{"line":47,"column":67}},"16":{"start":{"line":49,"column":2},"end":{"line":60,"column":3}},"17":{"start":{"line":50,"column":4},"end":{"line":50,"column":61}},"18":{"start":{"line":52,"column":4},"end":{"line":52,"column":97}},"19":{"start":{"line":54,"column":4},"end":{"line":54,"column":48}},"20":{"start":{"line":55,"column":4},"end":{"line":55,"column":52}},"21":{"start":{"line":56,"column":4},"end":{"line":56,"column":33}},"22":{"start":{"line":57,"column":4},"end":{"line":57,"column":95}},"23":{"start":{"line":58,"column":4},"end":{"line":58,"column":89}},"24":{"start":{"line":59,"column":4},"end":{"line":59,"column":17}},"25":{"start":{"line":67,"column":2},"end":{"line":90,"column":4}},"26":{"start":{"line":68,"column":4},"end":{"line":71,"column":6}},"27":{"start":{"line":72,"column":4},"end":{"line":72,"column":63}},"28":{"start":{"line":73,"column":4},"end":{"line":73,"column":89}},"29":{"start":{"line":74,"column":4},"end":{"line":88,"column":5}},"30":{"start":{"line":75,"column":6},"end":{"line":83,"column":9}},"31":{"start":{"line":84,"column":6},"end":{"line":84,"column":35}},"32":{"start":{"line":85,"column":6},"end":{"line":85,"column":31}},"33":{"start":{"line":86,"column":11},"end":{"line":88,"column":5}},"34":{"start":{"line":87,"column":6},"end":{"line":87,"column":25}},"35":{"start":{"line":89,"column":4},"end":{"line":89,"column":18}},"36":{"start":{"line":92,"column":2},"end":{"line":96,"column":4}},"37":{"start":{"line":93,"column":4},"end":{"line":93,"column":76}},"38":{"start":{"line":94,"column":4},"end":{"line":94,"column":38}},"39":{"start":{"line":95,"column":4},"end":{"line":95,"column":18}},"40":{"start":{"line":98,"column":2},"end":{"line":126,"column":4}},"41":{"start":{"line":101,"column":4},"end":{"line":101,"column":39}},"42":{"start":{"line":103,"column":4},"end":{"line":106,"column":5}},"43":{"start":{"line":105,"column":6},"end":{"line":105,"column":27}},"44":{"start":{"line":108,"column":4},"end":{"line":110,"column":5}},"45":{"start":{"line":109,"column":6},"end":{"line":109,"column":13}},"46":{"start":{"line":111,"column":4},"end":{"line":111,"column":36}},"47":{"start":{"line":112,"column":4},"end":{"line":124,"column":5}},"48":{"start":{"line":113,"column":6},"end":{"line":113,"column":46}},"49":{"start":{"line":114,"column":11},"end":{"line":124,"column":5}},"50":{"start":{"line":115,"column":6},"end":{"line":115,"column":49}},"51":{"start":{"line":116,"column":11},"end":{"line":124,"column":5}},"52":{"start":{"line":117,"column":6},"end":{"line":117,"column":36}},"53":{"start":{"line":118,"column":11},"end":{"line":124,"column":5}},"54":{"start":{"line":119,"column":6},"end":{"line":119,"column":36}},"55":{"start":{"line":120,"column":11},"end":{"line":124,"column":5}},"56":{"start":{"line":121,"column":6},"end":{"line":121,"column":40}},"57":{"start":{"line":123,"column":6},"end":{"line":123,"column":41}},"58":{"start":{"line":125,"column":4},"end":{"line":125,"column":48}},"59":{"start":{"line":128,"column":2},"end":{"line":137,"column":4}},"60":{"start":{"line":129,"column":4},"end":{"line":129,"column":43}},"61":{"start":{"line":130,"column":4},"end":{"line":136,"column":5}},"62":{"start":{"line":131,"column":6},"end":{"line":131,"column":39}},"63":{"start":{"line":132,"column":6},"end":{"line":132,"column":39}},"64":{"start":{"line":133,"column":6},"end":{"line":133,"column":65}},"65":{"start":{"line":134,"column":11},"end":{"line":136,"column":5}},"66":{"start":{"line":135,"column":6},"end":{"line":135,"column":33}},"67":{"start":{"line":139,"column":2},"end":{"line":147,"column":4}},"68":{"start":{"line":142,"column":4},"end":{"line":142,"column":69}},"69":{"start":{"line":143,"column":4},"end":{"line":145,"column":5}},"70":{"start":{"line":144,"column":6},"end":{"line":144,"column":27}},"71":{"start":{"line":146,"column":4},"end":{"line":146,"column":17}},"72":{"start":{"line":149,"column":2},"end":{"line":159,"column":4}},"73":{"start":{"line":150,"column":4},"end":{"line":150,"column":42}},"74":{"start":{"line":151,"column":4},"end":{"line":151,"column":74}},"75":{"start":{"line":152,"column":4},"end":{"line":158,"column":5}},"76":{"start":{"line":153,"column":6},"end":{"line":153,"column":29}},"77":{"start":{"line":154,"column":11},"end":{"line":158,"column":5}},"78":{"start":{"line":155,"column":6},"end":{"line":155,"column":24}},"79":{"start":{"line":157,"column":6},"end":{"line":157,"column":105}},"80":{"start":{"line":161,"column":2},"end":{"line":195,"column":4}},"81":{"start":{"line":162,"column":4},"end":{"line":162,"column":22}},"82":{"start":{"line":164,"column":4},"end":{"line":164,"column":42}},"83":{"start":{"line":165,"column":4},"end":{"line":165,"column":86}},"84":{"start":{"line":166,"column":4},"end":{"line":194,"column":5}},"85":{"start":{"line":167,"column":6},"end":{"line":193,"column":11}},"86":{"start":{"line":168,"column":8},"end":{"line":168,"column":56}},"87":{"start":{"line":169,"column":8},"end":{"line":169,"column":64}},"88":{"start":{"line":170,"column":8},"end":{"line":191,"column":11}},"89":{"start":{"line":171,"column":10},"end":{"line":171,"column":28}},"90":{"start":{"line":172,"column":10},"end":{"line":174,"column":11}},"91":{"start":{"line":173,"column":12},"end":{"line":173,"column":36}},"92":{"start":{"line":175,"column":10},"end":{"line":183,"column":13}},"93":{"start":{"line":184,"column":10},"end":{"line":186,"column":13}},"94":{"start":{"line":185,"column":12},"end":{"line":185,"column":50}},"95":{"start":{"line":187,"column":10},"end":{"line":189,"column":11}},"96":{"start":{"line":188,"column":12},"end":{"line":188,"column":35}},"97":{"start":{"line":190,"column":10},"end":{"line":190,"column":32}},"98":{"start":{"line":192,"column":8},"end":{"line":192,"column":63}},"99":{"start":{"line":197,"column":2},"end":{"line":222,"column":4}},"100":{"start":{"line":198,"column":4},"end":{"line":198,"column":52}},"101":{"start":{"line":199,"column":4},"end":{"line":199,"column":42}},"102":{"start":{"line":200,"column":4},"end":{"line":200,"column":42}},"103":{"start":{"line":201,"column":4},"end":{"line":201,"column":84}},"104":{"start":{"line":202,"column":4},"end":{"line":205,"column":5}},"105":{"start":{"line":203,"column":6},"end":{"line":203,"column":29}},"106":{"start":{"line":204,"column":6},"end":{"line":204,"column":13}},"107":{"start":{"line":206,"column":4},"end":{"line":206,"column":28}},"108":{"start":{"line":207,"column":4},"end":{"line":207,"column":69}},"109":{"start":{"line":208,"column":4},"end":{"line":216,"column":7}},"110":{"start":{"line":217,"column":4},"end":{"line":217,"column":35}},"111":{"start":{"line":218,"column":4},"end":{"line":220,"column":5}},"112":{"start":{"line":219,"column":6},"end":{"line":219,"column":29}},"113":{"start":{"line":221,"column":4},"end":{"line":221,"column":63}},"114":{"start":{"line":224,"column":2},"end":{"line":256,"column":4}},"115":{"start":{"line":225,"column":4},"end":{"line":225,"column":22}},"116":{"start":{"line":227,"column":4},"end":{"line":229,"column":5}},"117":{"start":{"line":228,"column":6},"end":{"line":228,"column":29}},"118":{"start":{"line":230,"column":4},"end":{"line":230,"column":50}},"119":{"start":{"line":232,"column":4},"end":{"line":234,"column":7}},"120":{"start":{"line":233,"column":6},"end":{"line":233,"column":39}},"121":{"start":{"line":235,"column":4},"end":{"line":254,"column":7}},"122":{"start":{"line":236,"column":6},"end":{"line":236,"column":24}},"123":{"start":{"line":237,"column":6},"end":{"line":239,"column":7}},"124":{"start":{"line":238,"column":8},"end":{"line":238,"column":32}},"125":{"start":{"line":240,"column":6},"end":{"line":248,"column":9}},"126":{"start":{"line":249,"column":6},"end":{"line":249,"column":39}},"127":{"start":{"line":250,"column":6},"end":{"line":252,"column":7}},"128":{"start":{"line":251,"column":8},"end":{"line":251,"column":31}},"129":{"start":{"line":253,"column":6},"end":{"line":253,"column":28}},"130":{"start":{"line":255,"column":4},"end":{"line":255,"column":44}},"131":{"start":{"line":258,"column":2},"end":{"line":292,"column":4}},"132":{"start":{"line":259,"column":4},"end":{"line":259,"column":22}},"133":{"start":{"line":261,"column":4},"end":{"line":261,"column":38}},"134":{"start":{"line":263,"column":4},"end":{"line":263,"column":101}},"135":{"start":{"line":264,"column":4},"end":{"line":266,"column":5}},"136":{"start":{"line":265,"column":6},"end":{"line":265,"column":29}},"137":{"start":{"line":267,"column":4},"end":{"line":267,"column":24}},"138":{"start":{"line":268,"column":4},"end":{"line":268,"column":26}},"139":{"start":{"line":273,"column":4},"end":{"line":288,"column":6}},"140":{"start":{"line":274,"column":6},"end":{"line":287,"column":7}},"141":{"start":{"line":275,"column":8},"end":{"line":280,"column":9}},"142":{"start":{"line":276,"column":10},"end":{"line":276,"column":36}},"143":{"start":{"line":277,"column":10},"end":{"line":277,"column":73}},"144":{"start":{"line":279,"column":10},"end":{"line":279,"column":44}},"145":{"start":{"line":282,"column":8},"end":{"line":282,"column":26}},"146":{"start":{"line":283,"column":8},"end":{"line":286,"column":9}},"147":{"start":{"line":284,"column":10},"end":{"line":284,"column":36}},"148":{"start":{"line":285,"column":10},"end":{"line":285,"column":77}},"149":{"start":{"line":289,"column":4},"end":{"line":289,"column":37}},"150":{"start":{"line":291,"column":4},"end":{"line":291,"column":51}},"151":{"start":{"line":294,"column":2},"end":{"line":319,"column":4}},"152":{"start":{"line":295,"column":4},"end":{"line":295,"column":42}},"153":{"start":{"line":296,"column":4},"end":{"line":296,"column":52}},"154":{"start":{"line":297,"column":4},"end":{"line":297,"column":84}},"155":{"start":{"line":298,"column":4},"end":{"line":304,"column":5}},"156":{"start":{"line":299,"column":6},"end":{"line":301,"column":7}},"157":{"start":{"line":300,"column":8},"end":{"line":300,"column":31}},"158":{"start":{"line":302,"column":6},"end":{"line":302,"column":57}},"159":{"start":{"line":303,"column":6},"end":{"line":303,"column":13}},"160":{"start":{"line":305,"column":4},"end":{"line":313,"column":7}},"161":{"start":{"line":314,"column":4},"end":{"line":314,"column":35}},"162":{"start":{"line":315,"column":4},"end":{"line":317,"column":5}},"163":{"start":{"line":316,"column":6},"end":{"line":316,"column":29}},"164":{"start":{"line":318,"column":4},"end":{"line":318,"column":63}},"165":{"start":{"line":329,"column":2},"end":{"line":335,"column":4}},"166":{"start":{"line":330,"column":4},"end":{"line":330,"column":36}},"167":{"start":{"line":331,"column":4},"end":{"line":333,"column":5}},"168":{"start":{"line":332,"column":6},"end":{"line":332,"column":13}},"169":{"start":{"line":334,"column":4},"end":{"line":334,"column":22}},"170":{"start":{"line":337,"column":2},"end":{"line":371,"column":4}},"171":{"start":{"line":338,"column":4},"end":{"line":338,"column":22}},"172":{"start":{"line":340,"column":4},"end":{"line":340,"column":26}},"173":{"start":{"line":341,"column":4},"end":{"line":343,"column":5}},"174":{"start":{"line":342,"column":6},"end":{"line":342,"column":13}},"175":{"start":{"line":344,"column":4},"end":{"line":344,"column":35}},"176":{"start":{"line":346,"column":4},"end":{"line":351,"column":7}},"177":{"start":{"line":347,"column":6},"end":{"line":347,"column":76}},"178":{"start":{"line":348,"column":6},"end":{"line":350,"column":7}},"179":{"start":{"line":349,"column":8},"end":{"line":349,"column":42}},"180":{"start":{"line":353,"column":4},"end":{"line":355,"column":5}},"181":{"start":{"line":354,"column":6},"end":{"line":354,"column":98}},"182":{"start":{"line":357,"column":4},"end":{"line":357,"column":67}},"183":{"start":{"line":358,"column":4},"end":{"line":370,"column":5}},"184":{"start":{"line":359,"column":6},"end":{"line":369,"column":11}},"185":{"start":{"line":360,"column":8},"end":{"line":360,"column":26}},"186":{"start":{"line":361,"column":8},"end":{"line":361,"column":65}},"187":{"start":{"line":362,"column":8},"end":{"line":367,"column":11}},"188":{"start":{"line":363,"column":10},"end":{"line":363,"column":69}},"189":{"start":{"line":364,"column":10},"end":{"line":366,"column":11}},"190":{"start":{"line":365,"column":12},"end":{"line":365,"column":49}},"191":{"start":{"line":368,"column":8},"end":{"line":368,"column":51}},"192":{"start":{"line":381,"column":2},"end":{"line":387,"column":4}},"193":{"start":{"line":382,"column":4},"end":{"line":382,"column":42}},"194":{"start":{"line":383,"column":4},"end":{"line":385,"column":5}},"195":{"start":{"line":384,"column":6},"end":{"line":384,"column":26}},"196":{"start":{"line":386,"column":4},"end":{"line":386,"column":107}},"197":{"start":{"line":395,"column":2},"end":{"line":402,"column":4}},"198":{"start":{"line":396,"column":4},"end":{"line":396,"column":74}},"199":{"start":{"line":397,"column":4},"end":{"line":401,"column":5}},"200":{"start":{"line":398,"column":6},"end":{"line":398,"column":48}},"201":{"start":{"line":399,"column":6},"end":{"line":399,"column":43}},"202":{"start":{"line":400,"column":6},"end":{"line":400,"column":148}},"203":{"start":{"line":404,"column":2},"end":{"line":404,"column":26}},"204":{"start":{"line":414,"column":0},"end":{"line":422,"column":1}},"205":{"start":{"line":415,"column":2},"end":{"line":421,"column":3}},"206":{"start":{"line":416,"column":4},"end":{"line":416,"column":44}},"207":{"start":{"line":417,"column":4},"end":{"line":419,"column":5}},"208":{"start":{"line":418,"column":6},"end":{"line":418,"column":49}},"209":{"start":{"line":420,"column":4},"end":{"line":420,"column":50}},"210":{"start":{"line":424,"column":0},"end":{"line":438,"column":34}},"211":{"start":{"line":425,"column":2},"end":{"line":425,"column":74}},"212":{"start":{"line":427,"column":2},"end":{"line":430,"column":3}},"213":{"start":{"line":428,"column":4},"end":{"line":428,"column":67}},"214":{"start":{"line":429,"column":4},"end":{"line":429,"column":105}},"215":{"start":{"line":432,"column":2},"end":{"line":435,"column":4}},"216":{"start":{"line":433,"column":4},"end":{"line":433,"column":42}},"217":{"start":{"line":434,"column":4},"end":{"line":434,"column":278}},"218":{"start":{"line":437,"column":2},"end":{"line":437,"column":32}},"219":{"start":{"line":440,"column":0},"end":{"line":440,"column":53}},"220":{"start":{"line":452,"column":0},"end":{"line":458,"column":1}},"221":{"start":{"line":453,"column":2},"end":{"line":457,"column":3}},"222":{"start":{"line":454,"column":4},"end":{"line":454,"column":33}},"223":{"start":{"line":456,"column":4},"end":{"line":456,"column":29}},"224":{"start":{"line":463,"column":0},"end":{"line":470,"column":1}},"225":{"start":{"line":464,"column":2},"end":{"line":464,"column":24}},"226":{"start":{"line":465,"column":2},"end":{"line":467,"column":3}},"227":{"start":{"line":466,"column":4},"end":{"line":466,"column":83}},"228":{"start":{"line":468,"column":2},"end":{"line":468,"column":117}},"229":{"start":{"line":469,"column":2},"end":{"line":469,"column":14}},"230":{"start":{"line":477,"column":0},"end":{"line":480,"column":1}},"231":{"start":{"line":478,"column":2},"end":{"line":478,"column":34}},"232":{"start":{"line":479,"column":2},"end":{"line":479,"column":19}},"233":{"start":{"line":482,"column":0},"end":{"line":482,"column":97}}},"branchMap":{"1":{"line":21,"type":"cond-expr","locations":[{"start":{"line":21,"column":70},"end":{"line":21,"column":73}},{"start":{"line":21,"column":76},"end":{"line":21,"column":94}}]},"2":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":46},"end":{"line":21,"column":49}},{"start":{"line":21,"column":53},"end":{"line":21,"column":67}}]},"3":{"line":57,"type":"binary-expr","locations":[{"start":{"line":57,"column":40},"end":{"line":57,"column":47}},{"start":{"line":57,"column":51},"end":{"line":57,"column":85}},{"start":{"line":57,"column":89},"end":{"line":57,"column":94}}]},"4":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":37},"end":{"line":58,"column":44}},{"start":{"line":58,"column":48},"end":{"line":58,"column":79}},{"start":{"line":58,"column":83},"end":{"line":58,"column":88}}]},"5":{"line":73,"type":"cond-expr","locations":[{"start":{"line":73,"column":62},"end":{"line":73,"column":78}},{"start":{"line":73,"column":81},"end":{"line":73,"column":87}}]},"6":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":4},"end":{"line":74,"column":4}},{"start":{"line":74,"column":4},"end":{"line":74,"column":4}}]},"7":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":11},"end":{"line":86,"column":11}},{"start":{"line":86,"column":11},"end":{"line":86,"column":11}}]},"8":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":4},"end":{"line":103,"column":4}},{"start":{"line":103,"column":4},"end":{"line":103,"column":4}}]},"9":{"line":103,"type":"binary-expr","locations":[{"start":{"line":103,"column":8},"end":{"line":103,"column":35}},{"start":{"line":103,"column":39},"end":{"line":103,"column":57}}]},"10":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":4},"end":{"line":108,"column":4}},{"start":{"line":108,"column":4},"end":{"line":108,"column":4}}]},"11":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":8},"end":{"line":108,"column":26}},{"start":{"line":108,"column":30},"end":{"line":108,"column":60}}]},"12":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":4},"end":{"line":112,"column":4}},{"start":{"line":112,"column":4},"end":{"line":112,"column":4}}]},"13":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":8},"end":{"line":112,"column":17}},{"start":{"line":112,"column":21},"end":{"line":112,"column":51}}]},"14":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":11},"end":{"line":114,"column":11}},{"start":{"line":114,"column":11},"end":{"line":114,"column":11}}]},"15":{"line":114,"type":"binary-expr","locations":[{"start":{"line":114,"column":15},"end":{"line":114,"column":24}},{"start":{"line":114,"column":28},"end":{"line":114,"column":62}}]},"16":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":11},"end":{"line":116,"column":11}},{"start":{"line":116,"column":11},"end":{"line":116,"column":11}}]},"17":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":11},"end":{"line":118,"column":11}},{"start":{"line":118,"column":11},"end":{"line":118,"column":11}}]},"18":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":11},"end":{"line":120,"column":11}},{"start":{"line":120,"column":11},"end":{"line":120,"column":11}}]},"19":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":4},"end":{"line":130,"column":4}},{"start":{"line":130,"column":4},"end":{"line":130,"column":4}}]},"20":{"line":130,"type":"binary-expr","locations":[{"start":{"line":130,"column":8},"end":{"line":130,"column":34}},{"start":{"line":130,"column":38},"end":{"line":130,"column":71}}]},"21":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":11},"end":{"line":134,"column":11}},{"start":{"line":134,"column":11},"end":{"line":134,"column":11}}]},"22":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":4},"end":{"line":143,"column":4}},{"start":{"line":143,"column":4},"end":{"line":143,"column":4}}]},"23":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":4},"end":{"line":152,"column":4}},{"start":{"line":152,"column":4},"end":{"line":152,"column":4}}]},"24":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":11},"end":{"line":154,"column":11}},{"start":{"line":154,"column":11},"end":{"line":154,"column":11}}]},"25":{"line":154,"type":"binary-expr","locations":[{"start":{"line":154,"column":15},"end":{"line":154,"column":29}},{"start":{"line":154,"column":33},"end":{"line":154,"column":44}}]},"26":{"line":157,"type":"cond-expr","locations":[{"start":{"line":157,"column":82},"end":{"line":157,"column":95}},{"start":{"line":157,"column":98},"end":{"line":157,"column":103}}]},"27":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":4},"end":{"line":166,"column":4}},{"start":{"line":166,"column":4},"end":{"line":166,"column":4}}]},"28":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":10},"end":{"line":172,"column":10}},{"start":{"line":172,"column":10},"end":{"line":172,"column":10}}]},"29":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":10},"end":{"line":187,"column":10}},{"start":{"line":187,"column":10},"end":{"line":187,"column":10}}]},"30":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":4},"end":{"line":202,"column":4}},{"start":{"line":202,"column":4},"end":{"line":202,"column":4}}]},"31":{"line":213,"type":"cond-expr","locations":[{"start":{"line":213,"column":44},"end":{"line":213,"column":52}},{"start":{"line":213,"column":55},"end":{"line":213,"column":59}}]},"32":{"line":213,"type":"binary-expr","locations":[{"start":{"line":213,"column":17},"end":{"line":213,"column":25}},{"start":{"line":213,"column":29},"end":{"line":213,"column":41}}]},"33":{"line":218,"type":"if","locations":[{"start":{"line":218,"column":4},"end":{"line":218,"column":4}},{"start":{"line":218,"column":4},"end":{"line":218,"column":4}}]},"34":{"line":227,"type":"if","locations":[{"start":{"line":227,"column":4},"end":{"line":227,"column":4}},{"start":{"line":227,"column":4},"end":{"line":227,"column":4}}]},"35":{"line":237,"type":"if","locations":[{"start":{"line":237,"column":6},"end":{"line":237,"column":6}},{"start":{"line":237,"column":6},"end":{"line":237,"column":6}}]},"36":{"line":250,"type":"if","locations":[{"start":{"line":250,"column":6},"end":{"line":250,"column":6}},{"start":{"line":250,"column":6},"end":{"line":250,"column":6}}]},"37":{"line":264,"type":"if","locations":[{"start":{"line":264,"column":4},"end":{"line":264,"column":4}},{"start":{"line":264,"column":4},"end":{"line":264,"column":4}}]},"38":{"line":274,"type":"if","locations":[{"start":{"line":274,"column":6},"end":{"line":274,"column":6}},{"start":{"line":274,"column":6},"end":{"line":274,"column":6}}]},"39":{"line":275,"type":"if","locations":[{"start":{"line":275,"column":8},"end":{"line":275,"column":8}},{"start":{"line":275,"column":8},"end":{"line":275,"column":8}}]},"40":{"line":275,"type":"binary-expr","locations":[{"start":{"line":275,"column":12},"end":{"line":275,"column":39}},{"start":{"line":275,"column":43},"end":{"line":275,"column":78}}]},"41":{"line":276,"type":"binary-expr","locations":[{"start":{"line":276,"column":21},"end":{"line":276,"column":29}},{"start":{"line":276,"column":33},"end":{"line":276,"column":35}}]},"42":{"line":283,"type":"if","locations":[{"start":{"line":283,"column":8},"end":{"line":283,"column":8}},{"start":{"line":283,"column":8},"end":{"line":283,"column":8}}]},"43":{"line":283,"type":"binary-expr","locations":[{"start":{"line":283,"column":12},"end":{"line":283,"column":32}},{"start":{"line":283,"column":36},"end":{"line":283,"column":67}}]},"44":{"line":284,"type":"binary-expr","locations":[{"start":{"line":284,"column":21},"end":{"line":284,"column":29}},{"start":{"line":284,"column":33},"end":{"line":284,"column":35}}]},"45":{"line":298,"type":"if","locations":[{"start":{"line":298,"column":4},"end":{"line":298,"column":4}},{"start":{"line":298,"column":4},"end":{"line":298,"column":4}}]},"46":{"line":299,"type":"if","locations":[{"start":{"line":299,"column":6},"end":{"line":299,"column":6}},{"start":{"line":299,"column":6},"end":{"line":299,"column":6}}]},"47":{"line":315,"type":"if","locations":[{"start":{"line":315,"column":4},"end":{"line":315,"column":4}},{"start":{"line":315,"column":4},"end":{"line":315,"column":4}}]},"48":{"line":331,"type":"if","locations":[{"start":{"line":331,"column":4},"end":{"line":331,"column":4}},{"start":{"line":331,"column":4},"end":{"line":331,"column":4}}]},"49":{"line":341,"type":"if","locations":[{"start":{"line":341,"column":4},"end":{"line":341,"column":4}},{"start":{"line":341,"column":4},"end":{"line":341,"column":4}}]},"50":{"line":348,"type":"if","locations":[{"start":{"line":348,"column":6},"end":{"line":348,"column":6}},{"start":{"line":348,"column":6},"end":{"line":348,"column":6}}]},"51":{"line":353,"type":"if","locations":[{"start":{"line":353,"column":4},"end":{"line":353,"column":4}},{"start":{"line":353,"column":4},"end":{"line":353,"column":4}}]},"52":{"line":358,"type":"if","locations":[{"start":{"line":358,"column":4},"end":{"line":358,"column":4}},{"start":{"line":358,"column":4},"end":{"line":358,"column":4}}]},"53":{"line":364,"type":"if","locations":[{"start":{"line":364,"column":10},"end":{"line":364,"column":10}},{"start":{"line":364,"column":10},"end":{"line":364,"column":10}}]},"54":{"line":383,"type":"if","locations":[{"start":{"line":383,"column":4},"end":{"line":383,"column":4}},{"start":{"line":383,"column":4},"end":{"line":383,"column":4}}]},"55":{"line":397,"type":"if","locations":[{"start":{"line":397,"column":4},"end":{"line":397,"column":4}},{"start":{"line":397,"column":4},"end":{"line":397,"column":4}}]},"56":{"line":415,"type":"if","locations":[{"start":{"line":415,"column":2},"end":{"line":415,"column":2}},{"start":{"line":415,"column":2},"end":{"line":415,"column":2}}]},"57":{"line":417,"type":"if","locations":[{"start":{"line":417,"column":4},"end":{"line":417,"column":4}},{"start":{"line":417,"column":4},"end":{"line":417,"column":4}}]},"58":{"line":434,"type":"binary-expr","locations":[{"start":{"line":434,"column":34},"end":{"line":434,"column":54}},{"start":{"line":434,"column":58},"end":{"line":434,"column":82}}]},"59":{"line":453,"type":"if","locations":[{"start":{"line":453,"column":2},"end":{"line":453,"column":2}},{"start":{"line":453,"column":2},"end":{"line":453,"column":2}}]},"60":{"line":465,"type":"if","locations":[{"start":{"line":465,"column":2},"end":{"line":465,"column":2}},{"start":{"line":465,"column":2},"end":{"line":465,"column":2}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule readRelayQueryData"," * "," */","","'use strict';","","var _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));","","var _possibleConstructorReturn3 = _interopRequireDefault(require('babel-runtime/helpers/possibleConstructorReturn'));","","var _inherits3 = _interopRequireDefault(require('babel-runtime/helpers/inherits'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","var MUTATION_STATUS = require('./RelayRecord').MetadataKey.MUTATION_STATUS;","","var EDGES = require('./RelayConnectionInterface').EDGES,","    PAGE_INFO = require('./RelayConnectionInterface').PAGE_INFO;","","var METADATA_KEYS = ['__status__', '__resolvedFragmentMapGeneration__'];","","/**"," * @internal"," *"," * Retrieves data from the `RelayStore`."," */","function readRelayQueryData(storeData, queryNode, dataID, options) {","  var reader = new RelayStoreReader(storeData, options);","  var data = reader.retrieveData(queryNode, dataID);","","  // We validate only after retrieving the data, to give our `invariant`","  // checks below a chance to fail fast.","  require('./validateRelayReadQuery')(queryNode, options);","","  return data;","}","","var RelayStoreReader = function (_RelayQueryVisitor) {","  (0, _inherits3['default'])(RelayStoreReader, _RelayQueryVisitor);","","  function RelayStoreReader(storeData, options) {","    (0, _classCallCheck3['default'])(this, RelayStoreReader);","","    var _this = (0, _possibleConstructorReturn3['default'])(this, _RelayQueryVisitor.call(this));","","    _this._rangeData = storeData.getRangeData();","    _this._recordStore = storeData.getQueuedStore();","    _this._storeData = storeData;","    _this._traverseFragmentReferences = options && options.traverseFragmentReferences || false;","    _this._traverseGeneratedFields = options && options.traverseGeneratedFields || false;","    return _this;","  }","","  /**","   * Runs `queryNode` against the data in `dataID` and returns the result.","   */","","","  RelayStoreReader.prototype.retrieveData = function retrieveData(queryNode, dataID) {","    var result = {","      data: undefined,","      dataIDs: {}","    };","    var rangeData = this._rangeData.parseRangeClientID(dataID);","    var status = this._recordStore.getRecordState(rangeData ? rangeData.dataID : dataID);","    if (status === require('./RelayRecordState').EXISTENT) {","      var state = this._createState({","        componentDataID: null,","        data: undefined,","        isPartial: false,","        parent: null,","        rangeInfo: null,","        seenDataIDs: result.dataIDs,","        storeDataID: dataID","      });","      this.visit(queryNode, state);","      result.data = state.data;","    } else if (status === require('./RelayRecordState').NONEXISTENT) {","      result.data = null;","    }","    return result;","  };","","  RelayStoreReader.prototype.visit = function visit(node, state) {","    var result = _RelayQueryVisitor.prototype.visit.call(this, node, state);","    this._updateMetadataFields(state);","    return result;","  };","","  RelayStoreReader.prototype.visitField = function visitField(node, state) {","    // Check for range client IDs (eg. `someID_first(25)`) and unpack if","    // present, overriding `state`.","    this._handleRangeInfo(node, state);","","    if (node.canHaveSubselections() || node.isGenerated()) {","      // Make sure we return at least the __dataID__.","      getDataObject(state);","    }","","    if (node.isGenerated() && !this._traverseGeneratedFields) {","      return;","    }","    var rangeInfo = state.rangeInfo;","    if (rangeInfo && node.getSchemaName() === EDGES) {","      this._readEdges(node, rangeInfo, state);","    } else if (rangeInfo && node.getSchemaName() === PAGE_INFO) {","      this._readPageInfo(node, rangeInfo, state);","    } else if (!node.canHaveSubselections()) {","      this._readScalar(node, state);","    } else if (node.isPlural()) {","      this._readPlural(node, state);","    } else if (node.isConnection()) {","      this._readConnection(node, state);","    } else {","      this._readLinkedField(node, state);","    }","    state.seenDataIDs[state.storeDataID] = true;","  };","","  RelayStoreReader.prototype.visitFragment = function visitFragment(node, state) {","    var dataID = getComponentDataID(state);","    if (node.isContainerFragment() && !this._traverseFragmentReferences) {","      state.seenDataIDs[dataID] = true;","      var _data = getDataObject(state);","      require('./RelayFragmentPointer').addFragment(_data, node);","    } else if (require('./isCompatibleRelayFragmentType')(node, this._recordStore.getType(dataID))) {","      this.traverse(node, state);","    }","  };","","  RelayStoreReader.prototype._createState = function _createState(state) {","    // If we have a valid `dataID`, ensure that a record is created for it even","    // if we do not actually end up populating it with fields.","    var status = this._recordStore.getRecordState(state.storeDataID);","    if (status === require('./RelayRecordState').EXISTENT) {","      getDataObject(state);","    }","    return state;","  };","","  RelayStoreReader.prototype._readScalar = function _readScalar(node, state) {","    var storageKey = node.getStorageKey();","    var field = this._recordStore.getField(state.storeDataID, storageKey);","    if (field === undefined) {","      state.isPartial = true;","    } else if (field === null && !state.data) {","      state.data = null;","    } else {","      this._setDataValue(state, node.getApplicationName(), Array.isArray(field) ? field.slice() : field);","    }","  };","","  RelayStoreReader.prototype._readPlural = function _readPlural(node, state) {","    var _this2 = this;","","    var storageKey = node.getStorageKey();","    var dataIDs = this._recordStore.getLinkedRecordIDs(state.storeDataID, storageKey);","    if (dataIDs) {","      (function () {","        var applicationName = node.getApplicationName();","        var previousData = getDataValue(state, applicationName);","        var nextData = dataIDs.map(function (dataID, ii) {","          var data = void 0;","          if (previousData instanceof Object) {","            data = previousData[ii];","          }","          var nextState = _this2._createState({","            componentDataID: null,","            data: data,","            isPartial: false,","            parent: node,","            rangeInfo: null,","            seenDataIDs: state.seenDataIDs,","            storeDataID: dataID","          });","          node.getChildren().forEach(function (child) {","            return _this2.visit(child, nextState);","          });","          if (nextState.isPartial) {","            state.isPartial = true;","          }","          return nextState.data;","        });","        _this2._setDataValue(state, applicationName, nextData);","      })();","    }","  };","","  RelayStoreReader.prototype._readConnection = function _readConnection(node, state) {","    var applicationName = node.getApplicationName();","    var storageKey = node.getStorageKey();","    var calls = node.getCallsWithValues();","    var dataID = this._recordStore.getLinkedRecordID(state.storeDataID, storageKey);","    if (!dataID) {","      state.isPartial = true;","      return;","    }","    enforceRangeCalls(node);","    var metadata = this._recordStore.getRangeMetadata(dataID, calls);","    var nextState = this._createState({","      componentDataID: this._getConnectionClientID(node, dataID),","      data: getDataValue(state, applicationName),","      isPartial: false,","      parent: node,","      rangeInfo: metadata && calls.length ? metadata : null,","      seenDataIDs: state.seenDataIDs,","      storeDataID: dataID","    });","    this.traverse(node, nextState);","    if (nextState.isPartial) {","      state.isPartial = true;","    }","    this._setDataValue(state, applicationName, nextState.data);","  };","","  RelayStoreReader.prototype._readEdges = function _readEdges(node, rangeInfo, state) {","    var _this3 = this;","","    if (rangeInfo.diffCalls.length) {","      state.isPartial = true;","    }","    var previousData = getDataValue(state, EDGES);","    // Include null-filtered edges as \"seen\" so that they will be subscribed.","    rangeInfo.requestedEdgeIDs.forEach(function (edgeID) {","      state.seenDataIDs[edgeID] = true;","    });","    var edges = rangeInfo.filteredEdges.map(function (edgeData, ii) {","      var data = void 0;","      if (previousData instanceof Object) {","        data = previousData[ii];","      }","      var nextState = _this3._createState({","        componentDataID: null,","        data: data,","        isPartial: false,","        parent: node,","        rangeInfo: null,","        seenDataIDs: state.seenDataIDs,","        storeDataID: edgeData.edgeID","      });","      _this3.traverse(node, nextState);","      if (nextState.isPartial) {","        state.isPartial = true;","      }","      return nextState.data;","    });","    this._setDataValue(state, EDGES, edges);","  };","","  RelayStoreReader.prototype._readPageInfo = function _readPageInfo(node, rangeInfo, state) {","    var _this4 = this;","","    var pageInfo = rangeInfo.pageInfo;","","    require('fbjs/lib/invariant')(pageInfo, 'readRelayQueryData(): Missing field, `%s`.', PAGE_INFO);","    if (rangeInfo.diffCalls.length) {","      state.isPartial = true;","    }","    var info = pageInfo; // for Flow","    var nextData = void 0;","","    // Page info comes from the range metadata, so we do a custom traversal here","    // which is simpler than passing through page-info-related state as a hint","    // for the normal traversal.","    var read = function read(child) {","      if (child instanceof require('./RelayQuery').Fragment) {","        if (child.isContainerFragment() && !_this4._traverseFragmentReferences) {","          nextData = nextData || {};","          require('./RelayFragmentPointer').addFragment(nextData, child);","        } else {","          child.getChildren().forEach(read);","        }","      } else {","        var field = child;","        if (!field.isGenerated() || _this4._traverseGeneratedFields) {","          nextData = nextData || {};","          nextData[field.getApplicationName()] = info[field.getStorageKey()];","        }","      }","    };","    node.getChildren().forEach(read);","","    this._setDataValue(state, PAGE_INFO, nextData);","  };","","  RelayStoreReader.prototype._readLinkedField = function _readLinkedField(node, state) {","    var storageKey = node.getStorageKey();","    var applicationName = node.getApplicationName();","    var dataID = this._recordStore.getLinkedRecordID(state.storeDataID, storageKey);","    if (dataID == null) {","      if (dataID === undefined) {","        state.isPartial = true;","      }","      this._setDataValue(state, applicationName, dataID);","      return;","    }","    var nextState = this._createState({","      componentDataID: null,","      data: getDataValue(state, applicationName),","      isPartial: false,","      parent: node,","      rangeInfo: null,","      seenDataIDs: state.seenDataIDs,","      storeDataID: dataID","    });","    this.traverse(node, nextState);","    if (nextState.isPartial) {","      state.isPartial = true;","    }","    this._setDataValue(state, applicationName, nextState.data);","  };","","  /**","   * Assigns `value` to the property of `state.data` identified by `key`.","   *","   * Pre-populates `state` with a suitable `data` object if needed, and copies","   * over any metadata fields, if present.","   */","","","  RelayStoreReader.prototype._setDataValue = function _setDataValue(state, key, value) {","    var data = getDataObject(state); // ensure __dataID__","    if (value === undefined) {","      return;","    }","    data[key] = value;","  };","","  RelayStoreReader.prototype._updateMetadataFields = function _updateMetadataFields(state) {","    var _this5 = this;","","    var data = state.data;","    if (!(data instanceof Object)) {","      return;","    }","    var dataID = state.storeDataID;","    // Copy metadata that is necessary to dirty records when recycling objects.","    METADATA_KEYS.forEach(function (metadataKey) {","      var metadataValue = _this5._recordStore.getField(dataID, metadataKey);","      if (metadataValue != null) {","        data[metadataKey] = metadataValue;","      }","    });","    // Set the partial bit after metadata has been copied over.","    if (state.isPartial) {","      data.__status__ = require('./RelayRecordStatusMap').setPartialStatus(data.__status__, true);","    }","    // Hash any pending mutation transactions.","    var mutationIDs = this._storeData.getClientMutationIDs(dataID);","    if (mutationIDs) {","      (function () {","        var statuses = [];","        var mutationQueue = _this5._storeData.getMutationQueue();","        mutationIDs.forEach(function (mutationID) {","          var transaction = mutationQueue.getTransaction(mutationID);","          if (transaction) {","            statuses.push(transaction.getHash());","          }","        });","        data[MUTATION_STATUS] = statuses.join(',');","      })();","    }","  };","","  /**","   * Obtains a client ID (eg. `someDataID_first(10)`) for the connection","   * identified by `connectionID`. If there are no range calls on the supplied","   * `node`, then a call-less connection ID (eg. `someDataID`) will be returned","   * instead.","   */","","","  RelayStoreReader.prototype._getConnectionClientID = function _getConnectionClientID(node, connectionID) {","    var calls = node.getCallsWithValues();","    if (!require('./RelayConnectionInterface').hasRangeCalls(calls)) {","      return connectionID;","    }","    return this._rangeData.getClientIDForRangeWithID(require('./callsToGraphQL')(calls), {}, connectionID);","  };","","  /**","   * Checks to see if we have a range client ID (eg. `someID_first(25)`), and if","   * so, unpacks the range metadata, stashing it into (and overriding) `state`.","   */","","","  RelayStoreReader.prototype._handleRangeInfo = function _handleRangeInfo(node, state) {","    var rangeData = this._rangeData.parseRangeClientID(state.storeDataID);","    if (rangeData != null) {","      state.componentDataID = state.storeDataID;","      state.storeDataID = rangeData.dataID;","      state.rangeInfo = this._recordStore.getRangeMetadata(state.storeDataID, require('./callsFromGraphQL')(rangeData.calls, rangeData.callValues));","    }","  };","","  return RelayStoreReader;","}(require('./RelayQueryVisitor'));","","/**"," * Checks that `parent` either has range calls on it or does not contain either"," * `page_info` or `edges` fields. This enforcement intentionally transcends"," * traverseFragmentReferences boundaries."," */","","","function enforceRangeCalls(parent) {","  if (!parent.__hasValidatedConnectionCalls__) {","    var calls = parent.getCallsWithValues();","    if (!require('./RelayConnectionInterface').hasRangeCalls(calls)) {","      rangeCallEnforcer.traverse(parent, parent);","    }","    parent.__hasValidatedConnectionCalls__ = true;","  }","}","","var RelayRangeCallEnforcer = function (_RelayQueryVisitor2) {","  (0, _inherits3['default'])(RelayRangeCallEnforcer, _RelayQueryVisitor2);","","  function RelayRangeCallEnforcer() {","    (0, _classCallCheck3['default'])(this, RelayRangeCallEnforcer);","    return (0, _possibleConstructorReturn3['default'])(this, _RelayQueryVisitor2.apply(this, arguments));","  }","","  RelayRangeCallEnforcer.prototype.visitField = function visitField(node, parent) {","    var schemaName = node.getSchemaName();","    require('fbjs/lib/invariant')(schemaName !== EDGES && schemaName !== PAGE_INFO, 'readRelayQueryData(): The field `%s` is a connection. Fields `%s` and ' + '`%s` cannot be fetched without a `first`, `last` or `find` argument.', parent.getApplicationName(), EDGES, PAGE_INFO);","  };","","  return RelayRangeCallEnforcer;","}(require('./RelayQueryVisitor'));","","var rangeCallEnforcer = new RelayRangeCallEnforcer();","","/**"," * Returns the component-specific DataID stored in `state`, falling back to the"," * generic \"store\" DataID."," *"," * For most nodes, the generic \"store\" DataID can be used for both reading out"," * of the store and writing into the result object that will be passed back to"," * the component. For connections with range calls on them the \"store\" and"," * \"component\" ID will be different because the component needs a special"," * client-ID that encodes the range calls."," */","function getComponentDataID(state) {","  if (state.componentDataID != null) {","    return state.componentDataID;","  } else {","    return state.storeDataID;","  }","}","","/**"," * Retrieves `state.data`, initializing it if necessary."," */","function getDataObject(state) {","  var data = state.data;","  if (!data) {","    data = state.data = require('./RelayRecord').create(getComponentDataID(state));","  }","  require('fbjs/lib/invariant')(data instanceof Object, 'readRelayQueryData(): Unable to read field on non-object.');","  return data;","}","","/**"," * Looks up the value identified by `key` in `state.data`."," *"," * Pre-populates `state` with a suitable `data` objects if needed."," */","function getDataValue(state, key) {","  var data = getDataObject(state);","  return data[key];","}","","module.exports = require('./RelayProfiler').instrument('readRelayQueryData', readRelayQueryData);"],"l":{"15":1,"17":1,"19":1,"21":3,"23":1,"25":1,"28":1,"35":1,"36":0,"37":0,"41":0,"43":0,"46":1,"47":1,"49":1,"50":0,"52":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"67":1,"68":0,"72":0,"73":0,"74":0,"75":0,"84":0,"85":0,"86":0,"87":0,"89":0,"92":1,"93":0,"94":0,"95":0,"98":1,"101":0,"103":0,"105":0,"108":0,"109":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"123":0,"125":0,"128":1,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"139":1,"142":0,"143":0,"144":0,"146":0,"149":1,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"157":0,"161":1,"162":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"175":0,"184":0,"185":0,"187":0,"188":0,"190":0,"192":0,"197":1,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"206":0,"207":0,"208":0,"217":0,"218":0,"219":0,"221":0,"224":1,"225":0,"227":0,"228":0,"230":0,"232":0,"233":0,"235":0,"236":0,"237":0,"238":0,"240":0,"249":0,"250":0,"251":0,"253":0,"255":0,"258":1,"259":0,"261":0,"263":0,"264":0,"265":0,"267":0,"268":0,"273":0,"274":0,"275":0,"276":0,"277":0,"279":0,"282":0,"283":0,"284":0,"285":0,"289":0,"291":0,"294":1,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"302":0,"303":0,"305":0,"314":0,"315":0,"316":0,"318":0,"329":1,"330":0,"331":0,"332":0,"334":0,"337":1,"338":0,"340":0,"341":0,"342":0,"344":0,"346":0,"347":0,"348":0,"349":0,"353":0,"354":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"368":0,"381":1,"382":0,"383":0,"384":0,"386":0,"395":1,"396":0,"397":0,"398":0,"399":0,"400":0,"404":1,"414":1,"415":0,"416":0,"417":0,"418":0,"420":0,"424":1,"425":1,"427":1,"428":1,"429":1,"432":1,"433":0,"434":0,"437":1,"440":1,"452":1,"453":0,"454":0,"456":0,"463":1,"464":0,"465":0,"466":0,"468":0,"469":0,"477":1,"478":0,"479":0,"482":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/recycleNodesInto.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/recycleNodesInto.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1},"b":{"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0,0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":37}}},"2":{"name":"recycleNodesInto","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":46}}},"3":{"name":"(anonymous_3)","line":33,"loc":{"start":{"line":33,"column":34},"end":{"line":33,"column":68}}},"4":{"name":"(anonymous_4)","line":38,"loc":{"start":{"line":38,"column":5},"end":{"line":38,"column":17}}},"5":{"name":"(anonymous_5)","line":44,"loc":{"start":{"line":44,"column":35},"end":{"line":44,"column":60}}}},"statementMap":{"1":{"start":{"line":19,"column":0},"end":{"line":19,"column":82}},"2":{"start":{"line":21,"column":0},"end":{"line":21,"column":97}},"3":{"start":{"line":21,"column":39},"end":{"line":21,"column":95}},"4":{"start":{"line":23,"column":0},"end":{"line":52,"column":1}},"5":{"start":{"line":24,"column":2},"end":{"line":26,"column":3}},"6":{"start":{"line":25,"column":4},"end":{"line":25,"column":20}},"7":{"start":{"line":27,"column":2},"end":{"line":27,"column":25}},"8":{"start":{"line":30,"column":2},"end":{"line":30,"column":60}},"9":{"start":{"line":31,"column":2},"end":{"line":31,"column":60}},"10":{"start":{"line":32,"column":2},"end":{"line":50,"column":3}},"11":{"start":{"line":33,"column":4},"end":{"line":36,"column":54}},"12":{"start":{"line":34,"column":6},"end":{"line":34,"column":64}},"13":{"start":{"line":35,"column":6},"end":{"line":35,"column":57}},"14":{"start":{"line":37,"column":9},"end":{"line":50,"column":3}},"15":{"start":{"line":38,"column":4},"end":{"line":49,"column":9}},"16":{"start":{"line":40,"column":6},"end":{"line":40,"column":32}},"17":{"start":{"line":41,"column":6},"end":{"line":41,"column":32}},"18":{"start":{"line":42,"column":6},"end":{"line":42,"column":56}},"19":{"start":{"line":43,"column":6},"end":{"line":43,"column":56}},"20":{"start":{"line":44,"column":6},"end":{"line":48,"column":54}},"21":{"start":{"line":45,"column":8},"end":{"line":45,"column":40}},"22":{"start":{"line":46,"column":8},"end":{"line":46,"column":71}},"23":{"start":{"line":47,"column":8},"end":{"line":47,"column":63}},"24":{"start":{"line":51,"column":2},"end":{"line":51,"column":42}},"25":{"start":{"line":54,"column":0},"end":{"line":54,"column":34}}},"branchMap":{"1":{"line":21,"type":"cond-expr","locations":[{"start":{"line":21,"column":70},"end":{"line":21,"column":73}},{"start":{"line":21,"column":76},"end":{"line":21,"column":94}}]},"2":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":46},"end":{"line":21,"column":49}},{"start":{"line":21,"column":53},"end":{"line":21,"column":67}}]},"3":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":2},"end":{"line":24,"column":2}},{"start":{"line":24,"column":2},"end":{"line":24,"column":2}}]},"4":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":6},"end":{"line":24,"column":27}},{"start":{"line":24,"column":31},"end":{"line":24,"column":59}},{"start":{"line":24,"column":63},"end":{"line":24,"column":72}},{"start":{"line":24,"column":76},"end":{"line":24,"column":104}},{"start":{"line":24,"column":108},"end":{"line":24,"column":117}}]},"5":{"line":30,"type":"cond-expr","locations":[{"start":{"line":30,"column":44},"end":{"line":30,"column":52}},{"start":{"line":30,"column":55},"end":{"line":30,"column":59}}]},"6":{"line":31,"type":"cond-expr","locations":[{"start":{"line":31,"column":44},"end":{"line":31,"column":52}},{"start":{"line":31,"column":55},"end":{"line":31,"column":59}}]},"7":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":32,"column":2}},{"start":{"line":32,"column":2},"end":{"line":32,"column":2}}]},"8":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":6},"end":{"line":32,"column":15}},{"start":{"line":32,"column":19},"end":{"line":32,"column":28}}]},"9":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":17},"end":{"line":36,"column":12}},{"start":{"line":36,"column":16},"end":{"line":36,"column":53}}]},"10":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":13},"end":{"line":35,"column":21}},{"start":{"line":35,"column":25},"end":{"line":35,"column":56}}]},"11":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":9},"end":{"line":37,"column":9}},{"start":{"line":37,"column":9},"end":{"line":37,"column":9}}]},"12":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":13},"end":{"line":37,"column":23}},{"start":{"line":37,"column":27},"end":{"line":37,"column":37}}]},"13":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":19},"end":{"line":48,"column":14}},{"start":{"line":48,"column":18},"end":{"line":48,"column":53}}]},"14":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":15},"end":{"line":47,"column":23}},{"start":{"line":47,"column":27},"end":{"line":47,"column":62}}]},"15":{"line":51,"type":"cond-expr","locations":[{"start":{"line":51,"column":22},"end":{"line":51,"column":30}},{"start":{"line":51,"column":33},"end":{"line":51,"column":41}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule recycleNodesInto"," * "," */","","'use strict';","","/**"," * Recycles subtrees from `prevData` by replacing equal subtrees in `nextData`."," */","","var _keys2 = _interopRequireDefault(require('babel-runtime/core-js/object/keys'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","function recycleNodesInto(prevData, nextData) {","  if (prevData === nextData || typeof prevData !== 'object' || !prevData || typeof nextData !== 'object' || !nextData) {","    return nextData;","  }","  var canRecycle = false;","","  // Assign local variables to preserve Flow type refinement.","  var prevArray = Array.isArray(prevData) ? prevData : null;","  var nextArray = Array.isArray(nextData) ? nextData : null;","  if (prevArray && nextArray) {","    canRecycle = nextArray.reduce(function (wasEqual, nextItem, ii) {","      nextArray[ii] = recycleNodesInto(prevArray[ii], nextItem);","      return wasEqual && nextArray[ii] === prevArray[ii];","    }, true) && prevArray.length === nextArray.length;","  } else if (!prevArray && !nextArray) {","    (function () {","      // Assign local variables to preserve Flow type refinement.","      var prevObject = prevData;","      var nextObject = nextData;","      var prevKeys = (0, _keys2['default'])(prevObject);","      var nextKeys = (0, _keys2['default'])(nextObject);","      canRecycle = nextKeys.reduce(function (wasEqual, key) {","        var nextValue = nextObject[key];","        nextObject[key] = recycleNodesInto(prevObject[key], nextValue);","        return wasEqual && nextObject[key] === prevObject[key];","      }, true) && prevKeys.length === nextKeys.length;","    })();","  }","  return canRecycle ? prevData : nextData;","}","","module.exports = recycleNodesInto;"],"l":{"19":1,"21":1,"23":1,"24":0,"25":0,"27":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"37":0,"38":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"51":0,"54":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayChangeTracker.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayChangeTracker.js","s":{"1":1,"2":1,"3":1,"4":2,"5":1,"6":1,"7":0,"8":0,"9":0,"10":1,"11":0,"12":1,"13":0,"14":0,"15":1,"16":0,"17":1,"18":0,"19":1,"20":0,"21":0,"22":0,"23":1,"24":1},"b":{"1":[2,0],"2":[2,2],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":2,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":37}}},"2":{"name":"(anonymous_2)","line":27,"loc":{"start":{"line":27,"column":25},"end":{"line":27,"column":37}}},"3":{"name":"RelayChangeTracker","line":28,"loc":{"start":{"line":28,"column":2},"end":{"line":28,"column":32}}},"4":{"name":"createID","line":40,"loc":{"start":{"line":40,"column":42},"end":{"line":40,"column":70}}},"5":{"name":"updateID","line":49,"loc":{"start":{"line":49,"column":42},"end":{"line":49,"column":70}}},"6":{"name":"hasChange","line":60,"loc":{"start":{"line":60,"column":43},"end":{"line":60,"column":72}}},"7":{"name":"isNewRecord","line":69,"loc":{"start":{"line":69,"column":45},"end":{"line":69,"column":76}}},"8":{"name":"getChangeSet","line":78,"loc":{"start":{"line":78,"column":46},"end":{"line":78,"column":70}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":86}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":97}},"4":{"start":{"line":19,"column":39},"end":{"line":19,"column":95}},"5":{"start":{"line":27,"column":0},"end":{"line":92,"column":4}},"6":{"start":{"line":28,"column":2},"end":{"line":33,"column":3}},"7":{"start":{"line":29,"column":4},"end":{"line":29,"column":63}},"8":{"start":{"line":31,"column":4},"end":{"line":31,"column":23}},"9":{"start":{"line":32,"column":4},"end":{"line":32,"column":23}},"10":{"start":{"line":40,"column":2},"end":{"line":42,"column":4}},"11":{"start":{"line":41,"column":4},"end":{"line":41,"column":35}},"12":{"start":{"line":49,"column":2},"end":{"line":53,"column":4}},"13":{"start":{"line":50,"column":4},"end":{"line":52,"column":5}},"14":{"start":{"line":51,"column":6},"end":{"line":51,"column":37}},"15":{"start":{"line":60,"column":2},"end":{"line":62,"column":4}},"16":{"start":{"line":61,"column":4},"end":{"line":61,"column":66}},"17":{"start":{"line":69,"column":2},"end":{"line":71,"column":4}},"18":{"start":{"line":70,"column":4},"end":{"line":70,"column":37}},"19":{"start":{"line":78,"column":2},"end":{"line":89,"column":4}},"20":{"start":{"line":79,"column":4},"end":{"line":84,"column":5}},"21":{"start":{"line":80,"column":6},"end":{"line":83,"column":8}},"22":{"start":{"line":85,"column":4},"end":{"line":88,"column":6}},"23":{"start":{"line":91,"column":2},"end":{"line":91,"column":28}},"24":{"start":{"line":94,"column":0},"end":{"line":94,"column":36}}},"branchMap":{"1":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":70},"end":{"line":19,"column":73}},{"start":{"line":19,"column":76},"end":{"line":19,"column":94}}]},"2":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":46},"end":{"line":19,"column":49}},{"start":{"line":19,"column":53},"end":{"line":19,"column":67}}]},"3":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":4},"end":{"line":50,"column":4}},{"start":{"line":50,"column":4},"end":{"line":50,"column":4}}]},"4":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":14},"end":{"line":61,"column":37}},{"start":{"line":61,"column":41},"end":{"line":61,"column":64}}]},"5":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":4},"end":{"line":79,"column":4}},{"start":{"line":79,"column":4},"end":{"line":79,"column":4}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayChangeTracker"," * "," */","","'use strict';","","var _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));","","var _freeze2 = _interopRequireDefault(require('babel-runtime/core-js/object/freeze'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","/**"," * @internal"," *"," * Keeps track of records that have been created or updated; used primarily to"," * record changes during the course of a `write` operation."," */","var RelayChangeTracker = function () {","  function RelayChangeTracker() {","    (0, _classCallCheck3['default'])(this, RelayChangeTracker);","","    this._created = {};","    this._updated = {};","  }","","  /**","   * Record the creation of a record.","   */","","","  RelayChangeTracker.prototype.createID = function createID(recordID) {","    this._created[recordID] = true;","  };","","  /**","   * Record an update to a record.","   */","","","  RelayChangeTracker.prototype.updateID = function updateID(recordID) {","    if (!this._created.hasOwnProperty(recordID)) {","      this._updated[recordID] = true;","    }","  };","","  /**","   * Determine if the record has any changes (was created or updated).","   */","","","  RelayChangeTracker.prototype.hasChange = function hasChange(recordID) {","    return !!(this._updated[recordID] || this._created[recordID]);","  };","","  /**","   * Determine if the record was created.","   */","","","  RelayChangeTracker.prototype.isNewRecord = function isNewRecord(recordID) {","    return !!this._created[recordID];","  };","","  /**","   * Get the ids of records that were created/updated.","   */","","","  RelayChangeTracker.prototype.getChangeSet = function getChangeSet() {","    if (process.env.NODE_ENV !== 'production') {","      return {","        created: (0, _freeze2['default'])(this._created),","        updated: (0, _freeze2['default'])(this._updated)","      };","    }","    return {","      created: this._created,","      updated: this._updated","    };","  };","","  return RelayChangeTracker;","}();","","module.exports = RelayChangeTracker;"],"l":{"15":1,"17":1,"19":2,"27":1,"28":1,"29":0,"31":0,"32":0,"40":1,"41":0,"49":1,"50":0,"51":0,"60":1,"61":0,"69":1,"70":0,"78":1,"79":0,"80":0,"85":0,"91":1,"94":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayContainerComparators.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayContainerComparators.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":1,"17":0,"18":1,"19":0,"20":1,"21":0,"22":0,"23":0,"24":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0],"10":[0,0,0],"11":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"compareObjects","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":59}}},"2":{"name":"isScalarAndEqual","line":48,"loc":{"start":{"line":48,"column":0},"end":{"line":48,"column":42}}},"3":{"name":"isQueryDataEqual","line":52,"loc":{"start":{"line":52,"column":0},"end":{"line":52,"column":74}}},"4":{"name":"isNonQueryPropEqual","line":61,"loc":{"start":{"line":61,"column":0},"end":{"line":61,"column":70}}},"5":{"name":"areQueryResultsEqual","line":75,"loc":{"start":{"line":75,"column":24},"end":{"line":75,"column":102}}},"6":{"name":"areNonQueryPropsEqual","line":78,"loc":{"start":{"line":78,"column":25},"end":{"line":78,"column":85}}},"7":{"name":"areQueryVariablesEqual","line":81,"loc":{"start":{"line":81,"column":26},"end":{"line":81,"column":84}}}},"statementMap":{"1":{"start":{"line":22,"column":0},"end":{"line":46,"column":1}},"2":{"start":{"line":23,"column":2},"end":{"line":23,"column":19}},"3":{"start":{"line":26,"column":2},"end":{"line":34,"column":3}},"4":{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},"5":{"start":{"line":28,"column":6},"end":{"line":28,"column":15}},"6":{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},"7":{"start":{"line":32,"column":6},"end":{"line":32,"column":19}},"8":{"start":{"line":36,"column":2},"end":{"line":44,"column":3}},"9":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"10":{"start":{"line":38,"column":6},"end":{"line":38,"column":15}},"11":{"start":{"line":41,"column":4},"end":{"line":43,"column":5}},"12":{"start":{"line":42,"column":6},"end":{"line":42,"column":19}},"13":{"start":{"line":45,"column":2},"end":{"line":45,"column":14}},"14":{"start":{"line":48,"column":0},"end":{"line":50,"column":1}},"15":{"start":{"line":49,"column":2},"end":{"line":49,"column":78}},"16":{"start":{"line":52,"column":0},"end":{"line":59,"column":1}},"17":{"start":{"line":53,"column":2},"end":{"line":58,"column":4}},"18":{"start":{"line":61,"column":0},"end":{"line":68,"column":1}},"19":{"start":{"line":62,"column":2},"end":{"line":67,"column":4}},"20":{"start":{"line":74,"column":0},"end":{"line":84,"column":2}},"21":{"start":{"line":76,"column":4},"end":{"line":76,"column":103}},"22":{"start":{"line":79,"column":4},"end":{"line":79,"column":87}},"23":{"start":{"line":82,"column":4},"end":{"line":82,"column":70}},"24":{"start":{"line":86,"column":0},"end":{"line":86,"column":43}}},"branchMap":{"1":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":4},"end":{"line":27,"column":4}},{"start":{"line":27,"column":4},"end":{"line":27,"column":4}}]},"2":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":8},"end":{"line":27,"column":14}},{"start":{"line":27,"column":18},"end":{"line":27,"column":45}}]},"3":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":31,"column":4}},{"start":{"line":31,"column":4},"end":{"line":31,"column":4}}]},"4":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":8},"end":{"line":31,"column":35}},{"start":{"line":31,"column":40},"end":{"line":31,"column":68}},{"start":{"line":31,"column":72},"end":{"line":31,"column":113}}]},"5":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":37,"column":4}},{"start":{"line":37,"column":4},"end":{"line":37,"column":4}}]},"6":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":8},"end":{"line":37,"column":14}},{"start":{"line":37,"column":18},"end":{"line":37,"column":45}}]},"7":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":4},"end":{"line":41,"column":4}},{"start":{"line":41,"column":4},"end":{"line":41,"column":4}}]},"8":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":8},"end":{"line":41,"column":35}},{"start":{"line":41,"column":39},"end":{"line":41,"column":67}}]},"9":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":9},"end":{"line":49,"column":26}},{"start":{"line":49,"column":31},"end":{"line":49,"column":46}},{"start":{"line":49,"column":50},"end":{"line":49,"column":76}}]},"10":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":4},"end":{"line":55,"column":30}},{"start":{"line":55,"column":34},"end":{"line":55,"column":55}},{"start":{"line":57,"column":4},"end":{"line":57,"column":40}}]},"11":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":4},"end":{"line":64,"column":38}},{"start":{"line":66,"column":4},"end":{"line":66,"column":40}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayContainerComparators"," * "," */","","'use strict';","","/**"," * Compares `objectA` and `objectB` using the provided `isEqual` function."," *"," * If a `filter` object is provided, only its keys will be checked during"," * comparison."," */","","function compareObjects(isEqual, objectA, objectB, filter) {","  var key = void 0;","","  // Test for A's keys different from B.","  for (key in objectA) {","    if (filter && !filter.hasOwnProperty(key)) {","      continue;","    }","","    if (objectA.hasOwnProperty(key) && (!objectB.hasOwnProperty(key) || !isEqual(objectA[key], objectB[key], key))) {","      return false;","    }","  }","  // Test for B's keys missing from A.","  for (key in objectB) {","    if (filter && !filter.hasOwnProperty(key)) {","      continue;","    }","","    if (objectB.hasOwnProperty(key) && !objectA.hasOwnProperty(key)) {","      return false;","    }","  }","  return true;","}","","function isScalarAndEqual(valueA, valueB) {","  return valueA === valueB && (valueA === null || typeof valueA !== 'object');","}","","function isQueryDataEqual(fragmentPointers, currProp, nextProp, propName) {","  return (","    // resolved data did not change","    fragmentPointers[propName] && currProp === nextProp ||","    // otherwise compare fake data","    isScalarAndEqual(currProp, nextProp)","  );","}","","function isNonQueryPropEqual(fragments, currProp, nextProp, propName) {","  return (","    // ignore props with fragments (instead resolved values are compared)","    fragments.hasOwnProperty(propName) ||","    // otherwise props must be scalar and === in order to skip","    isScalarAndEqual(currProp, nextProp)","  );","}","","/**"," * Relay-aware comparators for props and state provide a reasonable default"," * implementation of `shouldComponentUpdate`."," */","var RelayContainerComparators = {","  areQueryResultsEqual: function areQueryResultsEqual(fragmentPointers, prevQueryData, nextQueryData) {","    return compareObjects(isQueryDataEqual.bind(null, fragmentPointers), prevQueryData, nextQueryData);","  },","  areNonQueryPropsEqual: function areNonQueryPropsEqual(fragments, props, nextProps) {","    return compareObjects(isNonQueryPropEqual.bind(null, fragments), props, nextProps);","  },","  areQueryVariablesEqual: function areQueryVariablesEqual(variables, nextVariables) {","    return compareObjects(isScalarAndEqual, variables, nextVariables);","  }","};","","module.exports = RelayContainerComparators;"],"l":{"22":1,"23":0,"26":0,"27":0,"28":0,"31":0,"32":0,"36":0,"37":0,"38":0,"41":0,"42":0,"45":0,"48":1,"49":0,"52":1,"53":0,"61":1,"62":0,"74":1,"76":0,"79":0,"82":0,"86":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayContainer.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayContainer.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":6,"9":1,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":1,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":1,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":1,"296":0,"297":0,"298":0,"299":0,"300":0,"301":1,"302":0,"303":1,"304":0,"305":0,"306":0,"307":0,"308":0,"309":1,"310":0,"311":0,"312":0,"313":1,"314":0,"315":0,"316":0,"317":0,"318":1,"319":0,"320":0,"321":0,"322":1,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":1,"332":0,"333":1,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":1,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":1,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":1},"b":{"1":[6,0],"2":[6,6],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0,0,0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0,0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0,0],"91":[0,0],"92":[0,0]},"f":{"1":6,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":37}}},"2":{"name":"createContainerComponent","line":52,"loc":{"start":{"line":52,"column":0},"end":{"line":52,"column":51}}},"3":{"name":"(anonymous_3)","line":62,"loc":{"start":{"line":62,"column":23},"end":{"line":62,"column":51}}},"4":{"name":"RelayContainer","line":65,"loc":{"start":{"line":65,"column":4},"end":{"line":65,"column":44}}},"5":{"name":"setVariables","line":110,"loc":{"start":{"line":110,"column":44},"end":{"line":110,"column":94}}},"6":{"name":"forceFetch","line":121,"loc":{"start":{"line":121,"column":42},"end":{"line":121,"column":90}}},"7":{"name":"_createQuerySetAndFragmentPointers","line":133,"loc":{"start":{"line":133,"column":66},"end":{"line":133,"column":121}}},"8":{"name":"(anonymous_8)","line":139,"loc":{"start":{"line":139,"column":28},"end":{"line":139,"column":52}}},"9":{"name":"(anonymous_9)","line":148,"loc":{"start":{"line":148,"column":11},"end":{"line":148,"column":23}}},"10":{"name":"(anonymous_10)","line":151,"loc":{"start":{"line":151,"column":30},"end":{"line":151,"column":50}}},"11":{"name":"_runVariables","line":183,"loc":{"start":{"line":183,"column":45},"end":{"line":183,"column":108}}},"12":{"name":"(anonymous_12)","line":212,"loc":{"start":{"line":212,"column":68},"end":{"line":212,"column":90}}},"13":{"name":"(anonymous_13)","line":247,"loc":{"start":{"line":247,"column":11},"end":{"line":247,"column":23}}},"14":{"name":"(anonymous_14)","line":249,"loc":{"start":{"line":249,"column":53},"end":{"line":249,"column":65}}},"15":{"name":"(anonymous_15)","line":250,"loc":{"start":{"line":250,"column":44},"end":{"line":250,"column":56}}},"16":{"name":"hasOptimisticUpdate","line":285,"loc":{"start":{"line":285,"column":51},"end":{"line":285,"column":88}}},"17":{"name":"getPendingTransactions","line":296,"loc":{"start":{"line":296,"column":54},"end":{"line":296,"column":94}}},"18":{"name":"(anonymous_18)","line":305,"loc":{"start":{"line":305,"column":29},"end":{"line":305,"column":43}}},"19":{"name":"hasFragmentData","line":317,"loc":{"start":{"line":317,"column":47},"end":{"line":317,"column":99}}},"20":{"name":"hasPartialData","line":332,"loc":{"start":{"line":332,"column":46},"end":{"line":332,"column":78}}},"21":{"name":"componentWillMount","line":336,"loc":{"start":{"line":336,"column":50},"end":{"line":336,"column":80}}},"22":{"name":"componentWillReceiveProps","line":343,"loc":{"start":{"line":343,"column":57},"end":{"line":343,"column":121}}},"23":{"name":"(anonymous_23)","line":351,"loc":{"start":{"line":351,"column":20},"end":{"line":351,"column":37}}},"24":{"name":"componentWillUnmount","line":359,"loc":{"start":{"line":359,"column":52},"end":{"line":359,"column":84}}},"25":{"name":"_initialize","line":364,"loc":{"start":{"line":364,"column":43},"end":{"line":364,"column":110}}},"26":{"name":"_cleanup","line":385,"loc":{"start":{"line":385,"column":40},"end":{"line":385,"column":60}}},"27":{"name":"(anonymous_27)","line":388,"loc":{"start":{"line":388,"column":67},"end":{"line":388,"column":95}}},"28":{"name":"_updateFragmentResolvers","line":403,"loc":{"start":{"line":403,"column":56},"end":{"line":403,"column":103}}},"29":{"name":"(anonymous_29)","line":408,"loc":{"start":{"line":408,"column":28},"end":{"line":408,"column":52}}},"30":{"name":"_handleFragmentDataUpdate","line":423,"loc":{"start":{"line":423,"column":57},"end":{"line":423,"column":94}}},"31":{"name":"_updateFragmentPointers","line":432,"loc":{"start":{"line":432,"column":55},"end":{"line":432,"column":130}}},"32":{"name":"(anonymous_32)","line":436,"loc":{"start":{"line":436,"column":28},"end":{"line":436,"column":52}}},"33":{"name":"(anonymous_33)","line":453,"loc":{"start":{"line":453,"column":22},"end":{"line":453,"column":34}}},"34":{"name":"(anonymous_34)","line":466,"loc":{"start":{"line":466,"column":30},"end":{"line":466,"column":50}}},"35":{"name":"(anonymous_35)","line":506,"loc":{"start":{"line":506,"column":30},"end":{"line":506,"column":54}}},"36":{"name":"(anonymous_36)","line":511,"loc":{"start":{"line":511,"column":48},"end":{"line":511,"column":68}}},"37":{"name":"_getQueryData","line":518,"loc":{"start":{"line":518,"column":45},"end":{"line":518,"column":75}}},"38":{"name":"(anonymous_38)","line":523,"loc":{"start":{"line":523,"column":65},"end":{"line":523,"column":103}}},"39":{"name":"shouldComponentUpdate","line":542,"loc":{"start":{"line":542,"column":53},"end":{"line":542,"column":119}}},"40":{"name":"render","line":561,"loc":{"start":{"line":561,"column":38},"end":{"line":561,"column":56}}},"41":{"name":"getFragment","line":579,"loc":{"start":{"line":579,"column":2},"end":{"line":579,"column":55}}},"42":{"name":"getVariablesWithPropOverrides","line":599,"loc":{"start":{"line":599,"column":0},"end":{"line":599,"column":63}}},"43":{"name":"resetPropOverridesForVariables","line":620,"loc":{"start":{"line":620,"column":0},"end":{"line":620,"column":64}}},"44":{"name":"initializeProfiler","line":630,"loc":{"start":{"line":630,"column":0},"end":{"line":630,"column":44}}},"45":{"name":"mergeVariables","line":642,"loc":{"start":{"line":642,"column":0},"end":{"line":642,"column":60}}},"46":{"name":"buildContainerFragment","line":656,"loc":{"start":{"line":656,"column":0},"end":{"line":656,"column":89}}},"47":{"name":"getDeferredFragment","line":662,"loc":{"start":{"line":662,"column":0},"end":{"line":662,"column":68}}},"48":{"name":"validateVariables","line":673,"loc":{"start":{"line":673,"column":0},"end":{"line":673,"column":63}}},"49":{"name":"validateSpec","line":681,"loc":{"start":{"line":681,"column":0},"end":{"line":681,"column":43}}},"50":{"name":"(anonymous_50)","line":692,"loc":{"start":{"line":692,"column":47},"end":{"line":692,"column":66}}},"51":{"name":"getContainerName","line":697,"loc":{"start":{"line":697,"column":0},"end":{"line":697,"column":37}}},"52":{"name":"create","line":705,"loc":{"start":{"line":705,"column":0},"end":{"line":705,"column":33}}},"53":{"name":"ContainerConstructor","line":717,"loc":{"start":{"line":717,"column":2},"end":{"line":717,"column":48}}},"54":{"name":"(anonymous_54)","line":724,"loc":{"start":{"line":724,"column":42},"end":{"line":724,"column":54}}},"55":{"name":"(anonymous_55)","line":727,"loc":{"start":{"line":727,"column":37},"end":{"line":727,"column":61}}},"56":{"name":"(anonymous_56)","line":730,"loc":{"start":{"line":730,"column":37},"end":{"line":730,"column":61}}},"57":{"name":"(anonymous_57)","line":738,"loc":{"start":{"line":738,"column":37},"end":{"line":738,"column":78}}},"58":{"name":"(anonymous_58)","line":741,"loc":{"start":{"line":741,"column":181},"end":{"line":741,"column":197}}},"59":{"name":"(anonymous_59)","line":747,"loc":{"start":{"line":747,"column":74},"end":{"line":747,"column":93}}},"60":{"name":"(anonymous_60)","line":751,"loc":{"start":{"line":751,"column":66},"end":{"line":751,"column":78}}},"61":{"name":"validateFragmentProp","line":767,"loc":{"start":{"line":767,"column":0},"end":{"line":767,"column":90}}},"62":{"name":"(anonymous_62)","line":772,"loc":{"start":{"line":772,"column":754},"end":{"line":772,"column":770}}},"63":{"name":"(anonymous_63)","line":774,"loc":{"start":{"line":774,"column":159},"end":{"line":774,"column":174}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":81}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":95}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":117}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":83}},"5":{"start":{"line":23,"column":0},"end":{"line":23,"column":90}},"6":{"start":{"line":25,"column":0},"end":{"line":25,"column":82}},"7":{"start":{"line":27,"column":0},"end":{"line":27,"column":97}},"8":{"start":{"line":27,"column":39},"end":{"line":27,"column":95}},"9":{"start":{"line":29,"column":0},"end":{"line":31,"column":51}},"10":{"start":{"line":33,"column":0},"end":{"line":37,"column":2}},"11":{"start":{"line":52,"column":0},"end":{"line":594,"column":1}},"12":{"start":{"line":53,"column":2},"end":{"line":53,"column":52}},"13":{"start":{"line":54,"column":2},"end":{"line":54,"column":50}},"14":{"start":{"line":55,"column":2},"end":{"line":55,"column":50}},"15":{"start":{"line":56,"column":2},"end":{"line":56,"column":33}},"16":{"start":{"line":57,"column":2},"end":{"line":57,"column":56}},"17":{"start":{"line":58,"column":2},"end":{"line":58,"column":53}},"18":{"start":{"line":59,"column":2},"end":{"line":59,"column":47}},"19":{"start":{"line":60,"column":2},"end":{"line":60,"column":61}},"20":{"start":{"line":62,"column":2},"end":{"line":577,"column":32}},"21":{"start":{"line":63,"column":4},"end":{"line":63,"column":65}},"22":{"start":{"line":65,"column":4},"end":{"line":101,"column":5}},"23":{"start":{"line":66,"column":6},"end":{"line":66,"column":61}},"24":{"start":{"line":68,"column":6},"end":{"line":68,"column":113}},"25":{"start":{"line":70,"column":6},"end":{"line":71,"column":32}},"26":{"start":{"line":73,"column":6},"end":{"line":73,"column":276}},"27":{"start":{"line":74,"column":6},"end":{"line":74,"column":301}},"28":{"start":{"line":76,"column":6},"end":{"line":76,"column":44}},"29":{"start":{"line":77,"column":6},"end":{"line":77,"column":35}},"30":{"start":{"line":78,"column":6},"end":{"line":78,"column":39}},"31":{"start":{"line":79,"column":6},"end":{"line":79,"column":36}},"32":{"start":{"line":81,"column":6},"end":{"line":81,"column":27}},"33":{"start":{"line":82,"column":6},"end":{"line":82,"column":27}},"34":{"start":{"line":83,"column":6},"end":{"line":99,"column":8}},"35":{"start":{"line":100,"column":6},"end":{"line":100,"column":19}},"36":{"start":{"line":110,"column":4},"end":{"line":112,"column":6}},"37":{"start":{"line":111,"column":6},"end":{"line":111,"column":60}},"38":{"start":{"line":121,"column":4},"end":{"line":123,"column":6}},"39":{"start":{"line":122,"column":6},"end":{"line":122,"column":59}},"40":{"start":{"line":133,"column":4},"end":{"line":181,"column":6}},"41":{"start":{"line":134,"column":6},"end":{"line":134,"column":24}},"42":{"start":{"line":136,"column":6},"end":{"line":136,"column":32}},"43":{"start":{"line":137,"column":6},"end":{"line":137,"column":24}},"44":{"start":{"line":138,"column":6},"end":{"line":138,"column":56}},"45":{"start":{"line":139,"column":6},"end":{"line":179,"column":9}},"46":{"start":{"line":140,"column":8},"end":{"line":140,"column":82}},"47":{"start":{"line":141,"column":8},"end":{"line":141,"column":61}},"48":{"start":{"line":142,"column":8},"end":{"line":144,"column":9}},"49":{"start":{"line":143,"column":10},"end":{"line":143,"column":17}},"50":{"start":{"line":146,"column":8},"end":{"line":146,"column":37}},"51":{"start":{"line":147,"column":8},"end":{"line":176,"column":9}},"52":{"start":{"line":148,"column":10},"end":{"line":164,"column":15}},"53":{"start":{"line":149,"column":12},"end":{"line":149,"column":209}},"54":{"start":{"line":150,"column":12},"end":{"line":150,"column":29}},"55":{"start":{"line":151,"column":12},"end":{"line":160,"column":15}},"56":{"start":{"line":155,"column":14},"end":{"line":155,"column":77}},"57":{"start":{"line":156,"column":14},"end":{"line":159,"column":15}},"58":{"start":{"line":157,"column":16},"end":{"line":157,"column":102}},"59":{"start":{"line":158,"column":16},"end":{"line":158,"column":37}},"60":{"start":{"line":161,"column":12},"end":{"line":163,"column":13}},"61":{"start":{"line":162,"column":14},"end":{"line":162,"column":73}},"62":{"start":{"line":168,"column":10},"end":{"line":168,"column":78}},"63":{"start":{"line":169,"column":10},"end":{"line":175,"column":11}},"64":{"start":{"line":170,"column":12},"end":{"line":173,"column":14}},"65":{"start":{"line":174,"column":12},"end":{"line":174,"column":93}},"66":{"start":{"line":178,"column":8},"end":{"line":178,"column":57}},"67":{"start":{"line":180,"column":6},"end":{"line":180,"column":72}},"68":{"start":{"line":183,"column":4},"end":{"line":278,"column":6}},"69":{"start":{"line":184,"column":6},"end":{"line":184,"column":24}},"70":{"start":{"line":186,"column":6},"end":{"line":186,"column":60}},"71":{"start":{"line":187,"column":6},"end":{"line":187,"column":50}},"72":{"start":{"line":188,"column":6},"end":{"line":188,"column":83}},"73":{"start":{"line":189,"column":6},"end":{"line":189,"column":73}},"74":{"start":{"line":190,"column":6},"end":{"line":190,"column":39}},"75":{"start":{"line":191,"column":6},"end":{"line":195,"column":7}},"76":{"start":{"line":192,"column":8},"end":{"line":192,"column":81}},"77":{"start":{"line":193,"column":8},"end":{"line":193,"column":66}},"78":{"start":{"line":194,"column":8},"end":{"line":194,"column":59}},"79":{"start":{"line":197,"column":6},"end":{"line":197,"column":51}},"80":{"start":{"line":199,"column":6},"end":{"line":202,"column":9}},"81":{"start":{"line":208,"column":6},"end":{"line":210,"column":68}},"82":{"start":{"line":212,"column":6},"end":{"line":271,"column":46}},"83":{"start":{"line":213,"column":8},"end":{"line":216,"column":37}},"84":{"start":{"line":218,"column":8},"end":{"line":218,"column":50}},"85":{"start":{"line":219,"column":8},"end":{"line":221,"column":9}},"86":{"start":{"line":220,"column":10},"end":{"line":220,"column":32}},"87":{"start":{"line":222,"column":8},"end":{"line":222,"column":34}},"88":{"start":{"line":223,"column":8},"end":{"line":244,"column":9}},"89":{"start":{"line":227,"column":10},"end":{"line":227,"column":54}},"90":{"start":{"line":228,"column":10},"end":{"line":228,"column":64}},"91":{"start":{"line":229,"column":10},"end":{"line":229,"column":62}},"92":{"start":{"line":230,"column":10},"end":{"line":237,"column":12}},"93":{"start":{"line":239,"column":10},"end":{"line":243,"column":12}},"94":{"start":{"line":245,"column":8},"end":{"line":245,"column":37}},"95":{"start":{"line":246,"column":8},"end":{"line":270,"column":9}},"96":{"start":{"line":247,"column":10},"end":{"line":262,"column":15}},"97":{"start":{"line":248,"column":12},"end":{"line":248,"column":93}},"98":{"start":{"line":249,"column":12},"end":{"line":261,"column":15}},"99":{"start":{"line":250,"column":14},"end":{"line":255,"column":17}},"100":{"start":{"line":251,"column":16},"end":{"line":251,"column":38}},"101":{"start":{"line":252,"column":16},"end":{"line":254,"column":17}},"102":{"start":{"line":253,"column":18},"end":{"line":253,"column":42}},"103":{"start":{"line":256,"column":14},"end":{"line":260,"column":15}},"104":{"start":{"line":257,"column":16},"end":{"line":259,"column":112}},"105":{"start":{"line":264,"column":10},"end":{"line":266,"column":11}},"106":{"start":{"line":265,"column":12},"end":{"line":265,"column":86}},"107":{"start":{"line":267,"column":10},"end":{"line":269,"column":11}},"108":{"start":{"line":268,"column":12},"end":{"line":268,"column":36}},"109":{"start":{"line":273,"column":6},"end":{"line":276,"column":8}},"110":{"start":{"line":277,"column":6},"end":{"line":277,"column":29}},"111":{"start":{"line":285,"column":4},"end":{"line":289,"column":6}},"112":{"start":{"line":286,"column":6},"end":{"line":286,"column":71}},"113":{"start":{"line":287,"column":6},"end":{"line":287,"column":135}},"114":{"start":{"line":288,"column":6},"end":{"line":288,"column":75}},"115":{"start":{"line":296,"column":4},"end":{"line":308,"column":6}},"116":{"start":{"line":297,"column":6},"end":{"line":297,"column":71}},"117":{"start":{"line":298,"column":6},"end":{"line":298,"column":138}},"118":{"start":{"line":299,"column":6},"end":{"line":299,"column":56}},"119":{"start":{"line":300,"column":6},"end":{"line":300,"column":63}},"120":{"start":{"line":301,"column":6},"end":{"line":303,"column":7}},"121":{"start":{"line":302,"column":8},"end":{"line":302,"column":20}},"122":{"start":{"line":304,"column":6},"end":{"line":304,"column":55}},"123":{"start":{"line":305,"column":6},"end":{"line":307,"column":9}},"124":{"start":{"line":306,"column":8},"end":{"line":306,"column":48}},"125":{"start":{"line":317,"column":4},"end":{"line":325,"column":6}},"126":{"start":{"line":319,"column":6},"end":{"line":319,"column":71}},"127":{"start":{"line":320,"column":6},"end":{"line":320,"column":270}},"128":{"start":{"line":321,"column":6},"end":{"line":321,"column":106}},"129":{"start":{"line":322,"column":6},"end":{"line":322,"column":239}},"130":{"start":{"line":323,"column":6},"end":{"line":323,"column":56}},"131":{"start":{"line":324,"column":6},"end":{"line":324,"column":93}},"132":{"start":{"line":332,"column":4},"end":{"line":334,"column":6}},"133":{"start":{"line":333,"column":6},"end":{"line":333,"column":116}},"134":{"start":{"line":336,"column":4},"end":{"line":341,"column":6}},"135":{"start":{"line":337,"column":6},"end":{"line":339,"column":7}},"136":{"start":{"line":338,"column":8},"end":{"line":338,"column":15}},"137":{"start":{"line":340,"column":6},"end":{"line":340,"column":88}},"138":{"start":{"line":343,"column":4},"end":{"line":357,"column":6}},"139":{"start":{"line":344,"column":6},"end":{"line":344,"column":24}},"140":{"start":{"line":346,"column":6},"end":{"line":346,"column":41}},"141":{"start":{"line":347,"column":6},"end":{"line":347,"column":98}},"142":{"start":{"line":348,"column":6},"end":{"line":350,"column":7}},"143":{"start":{"line":349,"column":8},"end":{"line":349,"column":15}},"144":{"start":{"line":351,"column":6},"end":{"line":356,"column":9}},"145":{"start":{"line":352,"column":8},"end":{"line":354,"column":9}},"146":{"start":{"line":353,"column":10},"end":{"line":353,"column":28}},"147":{"start":{"line":355,"column":8},"end":{"line":355,"column":147}},"148":{"start":{"line":359,"column":4},"end":{"line":362,"column":6}},"149":{"start":{"line":360,"column":6},"end":{"line":360,"column":22}},"150":{"start":{"line":361,"column":6},"end":{"line":361,"column":27}},"151":{"start":{"line":364,"column":4},"end":{"line":383,"column":6}},"152":{"start":{"line":365,"column":6},"end":{"line":365,"column":83}},"153":{"start":{"line":366,"column":6},"end":{"line":366,"column":39}},"154":{"start":{"line":367,"column":6},"end":{"line":372,"column":7}},"155":{"start":{"line":369,"column":8},"end":{"line":369,"column":76}},"156":{"start":{"line":370,"column":8},"end":{"line":370,"column":66}},"157":{"start":{"line":371,"column":8},"end":{"line":371,"column":59}},"158":{"start":{"line":373,"column":6},"end":{"line":373,"column":81}},"159":{"start":{"line":374,"column":6},"end":{"line":374,"column":51}},"160":{"start":{"line":375,"column":6},"end":{"line":382,"column":8}},"161":{"start":{"line":385,"column":4},"end":{"line":401,"column":6}},"162":{"start":{"line":387,"column":6},"end":{"line":391,"column":7}},"163":{"start":{"line":388,"column":8},"end":{"line":390,"column":11}},"164":{"start":{"line":389,"column":10},"end":{"line":389,"column":64}},"165":{"start":{"line":393,"column":6},"end":{"line":393,"column":34}},"166":{"start":{"line":394,"column":6},"end":{"line":394,"column":35}},"167":{"start":{"line":396,"column":6},"end":{"line":396,"column":33}},"168":{"start":{"line":397,"column":6},"end":{"line":400,"column":7}},"169":{"start":{"line":398,"column":8},"end":{"line":398,"column":32}},"170":{"start":{"line":399,"column":8},"end":{"line":399,"column":28}},"171":{"start":{"line":403,"column":4},"end":{"line":421,"column":6}},"172":{"start":{"line":404,"column":6},"end":{"line":404,"column":24}},"173":{"start":{"line":406,"column":6},"end":{"line":406,"column":52}},"174":{"start":{"line":407,"column":6},"end":{"line":407,"column":54}},"175":{"start":{"line":408,"column":6},"end":{"line":420,"column":9}},"176":{"start":{"line":409,"column":8},"end":{"line":409,"column":61}},"177":{"start":{"line":410,"column":8},"end":{"line":410,"column":63}},"178":{"start":{"line":411,"column":8},"end":{"line":419,"column":9}},"179":{"start":{"line":412,"column":10},"end":{"line":415,"column":11}},"180":{"start":{"line":413,"column":12},"end":{"line":413,"column":39}},"181":{"start":{"line":414,"column":12},"end":{"line":414,"column":51}},"182":{"start":{"line":416,"column":15},"end":{"line":419,"column":9}},"183":{"start":{"line":417,"column":10},"end":{"line":417,"column":134}},"184":{"start":{"line":418,"column":10},"end":{"line":418,"column":61}},"185":{"start":{"line":423,"column":4},"end":{"line":430,"column":6}},"186":{"start":{"line":424,"column":6},"end":{"line":426,"column":7}},"187":{"start":{"line":425,"column":8},"end":{"line":425,"column":15}},"188":{"start":{"line":427,"column":6},"end":{"line":427,"column":53}},"189":{"start":{"line":428,"column":6},"end":{"line":428,"column":105}},"190":{"start":{"line":429,"column":6},"end":{"line":429,"column":67}},"191":{"start":{"line":432,"column":4},"end":{"line":516,"column":6}},"192":{"start":{"line":433,"column":6},"end":{"line":433,"column":24}},"193":{"start":{"line":435,"column":6},"end":{"line":435,"column":52}},"194":{"start":{"line":436,"column":6},"end":{"line":503,"column":9}},"195":{"start":{"line":437,"column":8},"end":{"line":437,"column":44}},"196":{"start":{"line":438,"column":8},"end":{"line":438,"column":226}},"197":{"start":{"line":439,"column":8},"end":{"line":442,"column":9}},"198":{"start":{"line":440,"column":10},"end":{"line":440,"column":48}},"199":{"start":{"line":441,"column":10},"end":{"line":441,"column":17}},"200":{"start":{"line":444,"column":8},"end":{"line":448,"column":9}},"201":{"start":{"line":445,"column":10},"end":{"line":445,"column":172}},"202":{"start":{"line":446,"column":10},"end":{"line":446,"column":48}},"203":{"start":{"line":447,"column":10},"end":{"line":447,"column":17}},"204":{"start":{"line":449,"column":8},"end":{"line":449,"column":75}},"205":{"start":{"line":450,"column":8},"end":{"line":450,"column":33}},"206":{"start":{"line":452,"column":8},"end":{"line":501,"column":9}},"207":{"start":{"line":453,"column":10},"end":{"line":487,"column":14}},"208":{"start":{"line":457,"column":12},"end":{"line":457,"column":254}},"209":{"start":{"line":458,"column":12},"end":{"line":464,"column":13}},"210":{"start":{"line":460,"column":14},"end":{"line":460,"column":52}},"211":{"start":{"line":461,"column":14},"end":{"line":463,"column":16}},"212":{"start":{"line":465,"column":12},"end":{"line":465,"column":31}},"213":{"start":{"line":466,"column":12},"end":{"line":482,"column":15}},"214":{"start":{"line":467,"column":14},"end":{"line":481,"column":15}},"215":{"start":{"line":468,"column":16},"end":{"line":474,"column":17}},"216":{"start":{"line":469,"column":18},"end":{"line":469,"column":81}},"217":{"start":{"line":470,"column":18},"end":{"line":473,"column":19}},"218":{"start":{"line":471,"column":20},"end":{"line":471,"column":44}},"219":{"start":{"line":472,"column":20},"end":{"line":472,"column":41}},"220":{"start":{"line":475,"column":16},"end":{"line":480,"column":17}},"221":{"start":{"line":476,"column":18},"end":{"line":479,"column":19}},"222":{"start":{"line":477,"column":20},"end":{"line":477,"column":115}},"223":{"start":{"line":478,"column":20},"end":{"line":478,"column":62}},"224":{"start":{"line":483,"column":12},"end":{"line":485,"column":13}},"225":{"start":{"line":484,"column":14},"end":{"line":484,"column":261}},"226":{"start":{"line":486,"column":12},"end":{"line":486,"column":34}},"227":{"start":{"line":489,"column":10},"end":{"line":489,"column":56}},"228":{"start":{"line":489,"column":41},"end":{"line":489,"column":56}},"229":{"start":{"line":491,"column":10},"end":{"line":491,"column":280}},"230":{"start":{"line":492,"column":10},"end":{"line":494,"column":11}},"231":{"start":{"line":493,"column":12},"end":{"line":493,"column":81}},"232":{"start":{"line":495,"column":10},"end":{"line":500,"column":11}},"233":{"start":{"line":496,"column":12},"end":{"line":499,"column":13}},"234":{"start":{"line":497,"column":14},"end":{"line":497,"column":114}},"235":{"start":{"line":498,"column":14},"end":{"line":498,"column":56}},"236":{"start":{"line":502,"column":8},"end":{"line":502,"column":107}},"237":{"start":{"line":504,"column":6},"end":{"line":515,"column":7}},"238":{"start":{"line":506,"column":8},"end":{"line":514,"column":11}},"239":{"start":{"line":507,"column":10},"end":{"line":509,"column":11}},"240":{"start":{"line":508,"column":12},"end":{"line":508,"column":19}},"241":{"start":{"line":510,"column":10},"end":{"line":510,"column":77}},"242":{"start":{"line":511,"column":10},"end":{"line":513,"column":13}},"243":{"start":{"line":512,"column":12},"end":{"line":512,"column":476}},"244":{"start":{"line":518,"column":4},"end":{"line":540,"column":6}},"245":{"start":{"line":519,"column":6},"end":{"line":519,"column":24}},"246":{"start":{"line":521,"column":6},"end":{"line":521,"column":25}},"247":{"start":{"line":522,"column":6},"end":{"line":522,"column":52}},"248":{"start":{"line":523,"column":6},"end":{"line":538,"column":9}},"249":{"start":{"line":524,"column":8},"end":{"line":524,"column":40}},"250":{"start":{"line":525,"column":8},"end":{"line":525,"column":57}},"251":{"start":{"line":527,"column":8},"end":{"line":534,"column":9}},"252":{"start":{"line":529,"column":10},"end":{"line":529,"column":57}},"253":{"start":{"line":531,"column":10},"end":{"line":531,"column":42}},"254":{"start":{"line":533,"column":10},"end":{"line":533,"column":108}},"255":{"start":{"line":535,"column":8},"end":{"line":537,"column":9}},"256":{"start":{"line":536,"column":10},"end":{"line":536,"column":43}},"257":{"start":{"line":539,"column":6},"end":{"line":539,"column":23}},"258":{"start":{"line":542,"column":4},"end":{"line":559,"column":6}},"259":{"start":{"line":543,"column":6},"end":{"line":545,"column":7}},"260":{"start":{"line":544,"column":8},"end":{"line":544,"column":43}},"261":{"start":{"line":548,"column":6},"end":{"line":551,"column":7}},"262":{"start":{"line":549,"column":8},"end":{"line":549,"column":40}},"263":{"start":{"line":550,"column":8},"end":{"line":550,"column":20}},"264":{"start":{"line":553,"column":6},"end":{"line":555,"column":7}},"265":{"start":{"line":554,"column":8},"end":{"line":554,"column":20}},"266":{"start":{"line":557,"column":6},"end":{"line":557,"column":52}},"267":{"start":{"line":558,"column":6},"end":{"line":558,"column":383}},"268":{"start":{"line":561,"column":4},"end":{"line":574,"column":6}},"269":{"start":{"line":562,"column":6},"end":{"line":573,"column":7}},"270":{"start":{"line":563,"column":8},"end":{"line":566,"column":12}},"271":{"start":{"line":569,"column":8},"end":{"line":569,"column":27}},"272":{"start":{"line":570,"column":8},"end":{"line":572,"column":12}},"273":{"start":{"line":576,"column":4},"end":{"line":576,"column":26}},"274":{"start":{"line":579,"column":2},"end":{"line":586,"column":3}},"275":{"start":{"line":580,"column":4},"end":{"line":580,"column":50}},"276":{"start":{"line":581,"column":4},"end":{"line":581,"column":150}},"277":{"start":{"line":582,"column":4},"end":{"line":582,"column":106}},"278":{"start":{"line":584,"column":4},"end":{"line":584,"column":64}},"279":{"start":{"line":585,"column":4},"end":{"line":585,"column":83}},"280":{"start":{"line":588,"column":2},"end":{"line":588,"column":37}},"281":{"start":{"line":589,"column":2},"end":{"line":589,"column":54}},"282":{"start":{"line":590,"column":2},"end":{"line":590,"column":45}},"283":{"start":{"line":591,"column":2},"end":{"line":591,"column":75}},"284":{"start":{"line":593,"column":2},"end":{"line":593,"column":24}},"285":{"start":{"line":599,"column":0},"end":{"line":612,"column":1}},"286":{"start":{"line":600,"column":2},"end":{"line":600,"column":47}},"287":{"start":{"line":601,"column":2},"end":{"line":610,"column":3}},"288":{"start":{"line":602,"column":4},"end":{"line":602,"column":33}},"289":{"start":{"line":603,"column":4},"end":{"line":608,"column":5}},"290":{"start":{"line":604,"column":6},"end":{"line":607,"column":7}},"291":{"start":{"line":605,"column":8},"end":{"line":605,"column":86}},"292":{"start":{"line":606,"column":8},"end":{"line":606,"column":44}},"293":{"start":{"line":609,"column":4},"end":{"line":609,"column":45}},"294":{"start":{"line":611,"column":2},"end":{"line":611,"column":19}},"295":{"start":{"line":620,"column":0},"end":{"line":628,"column":1}},"296":{"start":{"line":621,"column":2},"end":{"line":621,"column":47}},"297":{"start":{"line":622,"column":2},"end":{"line":626,"column":3}},"298":{"start":{"line":623,"column":4},"end":{"line":625,"column":5}},"299":{"start":{"line":624,"column":6},"end":{"line":624,"column":30}},"300":{"start":{"line":627,"column":2},"end":{"line":627,"column":19}},"301":{"start":{"line":630,"column":0},"end":{"line":636,"column":1}},"302":{"start":{"line":631,"column":2},"end":{"line":635,"column":5}},"303":{"start":{"line":642,"column":0},"end":{"line":651,"column":1}},"304":{"start":{"line":643,"column":2},"end":{"line":649,"column":3}},"305":{"start":{"line":644,"column":4},"end":{"line":648,"column":5}},"306":{"start":{"line":645,"column":6},"end":{"line":647,"column":7}},"307":{"start":{"line":646,"column":8},"end":{"line":646,"column":81}},"308":{"start":{"line":650,"column":2},"end":{"line":650,"column":26}},"309":{"start":{"line":656,"column":0},"end":{"line":660,"column":1}},"310":{"start":{"line":657,"column":2},"end":{"line":657,"column":76}},"311":{"start":{"line":658,"column":2},"end":{"line":658,"column":220}},"312":{"start":{"line":659,"column":2},"end":{"line":659,"column":18}},"313":{"start":{"line":662,"column":0},"end":{"line":671,"column":1}},"314":{"start":{"line":663,"column":2},"end":{"line":663,"column":66}},"315":{"start":{"line":664,"column":2},"end":{"line":664,"column":66}},"316":{"start":{"line":665,"column":2},"end":{"line":665,"column":75}},"317":{"start":{"line":666,"column":2},"end":{"line":670,"column":5}},"318":{"start":{"line":673,"column":0},"end":{"line":679,"column":1}},"319":{"start":{"line":674,"column":2},"end":{"line":678,"column":3}},"320":{"start":{"line":675,"column":4},"end":{"line":677,"column":5}},"321":{"start":{"line":676,"column":6},"end":{"line":676,"column":175}},"322":{"start":{"line":681,"column":0},"end":{"line":695,"column":1}},"323":{"start":{"line":683,"column":2},"end":{"line":683,"column":33}},"324":{"start":{"line":684,"column":2},"end":{"line":684,"column":234}},"325":{"start":{"line":686,"column":2},"end":{"line":688,"column":3}},"326":{"start":{"line":687,"column":4},"end":{"line":687,"column":11}},"327":{"start":{"line":689,"column":2},"end":{"line":689,"column":53}},"328":{"start":{"line":690,"column":2},"end":{"line":690,"column":190}},"329":{"start":{"line":692,"column":2},"end":{"line":694,"column":5}},"330":{"start":{"line":693,"column":4},"end":{"line":693,"column":220}},"331":{"start":{"line":697,"column":0},"end":{"line":699,"column":1}},"332":{"start":{"line":698,"column":2},"end":{"line":698,"column":54}},"333":{"start":{"line":705,"column":0},"end":{"line":761,"column":1}},"334":{"start":{"line":706,"column":2},"end":{"line":706,"column":50}},"335":{"start":{"line":707,"column":2},"end":{"line":707,"column":50}},"336":{"start":{"line":709,"column":2},"end":{"line":709,"column":36}},"337":{"start":{"line":711,"column":2},"end":{"line":711,"column":33}},"338":{"start":{"line":712,"column":2},"end":{"line":712,"column":56}},"339":{"start":{"line":713,"column":2},"end":{"line":713,"column":53}},"340":{"start":{"line":714,"column":2},"end":{"line":714,"column":47}},"341":{"start":{"line":716,"column":2},"end":{"line":716,"column":25}},"342":{"start":{"line":717,"column":2},"end":{"line":722,"column":3}},"343":{"start":{"line":718,"column":4},"end":{"line":720,"column":5}},"344":{"start":{"line":719,"column":6},"end":{"line":719,"column":60}},"345":{"start":{"line":721,"column":4},"end":{"line":721,"column":41}},"346":{"start":{"line":724,"column":2},"end":{"line":726,"column":4}},"347":{"start":{"line":725,"column":4},"end":{"line":725,"column":25}},"348":{"start":{"line":727,"column":2},"end":{"line":729,"column":4}},"349":{"start":{"line":728,"column":4},"end":{"line":728,"column":37}},"350":{"start":{"line":730,"column":2},"end":{"line":732,"column":4}},"351":{"start":{"line":731,"column":4},"end":{"line":731,"column":80}},"352":{"start":{"line":738,"column":2},"end":{"line":754,"column":4}},"353":{"start":{"line":739,"column":4},"end":{"line":739,"column":50}},"354":{"start":{"line":740,"column":4},"end":{"line":744,"column":5}},"355":{"start":{"line":741,"column":6},"end":{"line":743,"column":21}},"356":{"start":{"line":742,"column":8},"end":{"line":742,"column":32}},"357":{"start":{"line":745,"column":4},"end":{"line":745,"column":252}},"358":{"start":{"line":746,"column":4},"end":{"line":750,"column":5}},"359":{"start":{"line":747,"column":6},"end":{"line":749,"column":9}},"360":{"start":{"line":748,"column":8},"end":{"line":748,"column":76}},"361":{"start":{"line":751,"column":4},"end":{"line":753,"column":60}},"362":{"start":{"line":752,"column":6},"end":{"line":752,"column":100}},"363":{"start":{"line":756,"column":2},"end":{"line":756,"column":60}},"364":{"start":{"line":757,"column":2},"end":{"line":757,"column":51}},"365":{"start":{"line":758,"column":2},"end":{"line":758,"column":41}},"366":{"start":{"line":760,"column":2},"end":{"line":760,"column":30}},"367":{"start":{"line":767,"column":0},"end":{"line":779,"column":1}},"368":{"start":{"line":768,"column":2},"end":{"line":768,"column":177}},"369":{"start":{"line":769,"column":2},"end":{"line":777,"column":3}},"370":{"start":{"line":770,"column":4},"end":{"line":770,"column":44}},"371":{"start":{"line":771,"column":4},"end":{"line":771,"column":98}},"372":{"start":{"line":772,"column":4},"end":{"line":776,"column":18}},"373":{"start":{"line":773,"column":6},"end":{"line":773,"column":47}},"374":{"start":{"line":775,"column":6},"end":{"line":775,"column":28}},"375":{"start":{"line":778,"column":2},"end":{"line":778,"column":25}},"376":{"start":{"line":781,"column":0},"end":{"line":781,"column":36}}},"branchMap":{"1":{"line":27,"type":"cond-expr","locations":[{"start":{"line":27,"column":70},"end":{"line":27,"column":73}},{"start":{"line":27,"column":76},"end":{"line":27,"column":94}}]},"2":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":46},"end":{"line":27,"column":49}},{"start":{"line":27,"column":53},"end":{"line":27,"column":67}}]},"3":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":25},"end":{"line":58,"column":46}},{"start":{"line":58,"column":50},"end":{"line":58,"column":52}}]},"4":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":36},"end":{"line":74,"column":41}},{"start":{"line":74,"column":45},"end":{"line":74,"column":75}}]},"5":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":8},"end":{"line":142,"column":8}},{"start":{"line":142,"column":8},"end":{"line":142,"column":8}}]},"6":{"line":142,"type":"binary-expr","locations":[{"start":{"line":142,"column":12},"end":{"line":142,"column":21}},{"start":{"line":142,"column":25},"end":{"line":142,"column":42}}]},"7":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":8},"end":{"line":147,"column":8}},{"start":{"line":147,"column":8},"end":{"line":147,"column":8}}]},"8":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":14},"end":{"line":156,"column":14}},{"start":{"line":156,"column":14},"end":{"line":156,"column":14}}]},"9":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":12},"end":{"line":161,"column":12}},{"start":{"line":161,"column":12},"end":{"line":161,"column":12}}]},"10":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":10},"end":{"line":169,"column":10}},{"start":{"line":169,"column":10},"end":{"line":169,"column":10}}]},"11":{"line":188,"type":"cond-expr","locations":[{"start":{"line":188,"column":41},"end":{"line":188,"column":66}},{"start":{"line":188,"column":69},"end":{"line":188,"column":82}}]},"12":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":6},"end":{"line":191,"column":6}},{"start":{"line":191,"column":6},"end":{"line":191,"column":6}}]},"13":{"line":197,"type":"binary-expr","locations":[{"start":{"line":197,"column":6},"end":{"line":197,"column":18}},{"start":{"line":197,"column":22},"end":{"line":197,"column":50}}]},"14":{"line":218,"type":"binary-expr","locations":[{"start":{"line":218,"column":25},"end":{"line":218,"column":32}},{"start":{"line":218,"column":36},"end":{"line":218,"column":40}},{"start":{"line":218,"column":44},"end":{"line":218,"column":49}}]},"15":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":8},"end":{"line":219,"column":8}},{"start":{"line":219,"column":8},"end":{"line":219,"column":8}}]},"16":{"line":219,"type":"binary-expr","locations":[{"start":{"line":219,"column":12},"end":{"line":219,"column":22}},{"start":{"line":219,"column":26},"end":{"line":219,"column":52}}]},"17":{"line":223,"type":"if","locations":[{"start":{"line":223,"column":8},"end":{"line":223,"column":8}},{"start":{"line":223,"column":8},"end":{"line":223,"column":8}}]},"18":{"line":241,"type":"cond-expr","locations":[{"start":{"line":241,"column":45},"end":{"line":241,"column":49}},{"start":{"line":241,"column":52},"end":{"line":241,"column":65}}]},"19":{"line":246,"type":"if","locations":[{"start":{"line":246,"column":8},"end":{"line":246,"column":8}},{"start":{"line":246,"column":8},"end":{"line":246,"column":8}}]},"20":{"line":252,"type":"if","locations":[{"start":{"line":252,"column":16},"end":{"line":252,"column":16}},{"start":{"line":252,"column":16},"end":{"line":252,"column":16}}]},"21":{"line":256,"type":"if","locations":[{"start":{"line":256,"column":14},"end":{"line":256,"column":14}},{"start":{"line":256,"column":14},"end":{"line":256,"column":14}}]},"22":{"line":259,"type":"binary-expr","locations":[{"start":{"line":259,"column":16},"end":{"line":259,"column":37}},{"start":{"line":259,"column":41},"end":{"line":259,"column":45}}]},"23":{"line":264,"type":"if","locations":[{"start":{"line":264,"column":10},"end":{"line":264,"column":10}},{"start":{"line":264,"column":10},"end":{"line":264,"column":10}}]},"24":{"line":267,"type":"if","locations":[{"start":{"line":267,"column":10},"end":{"line":267,"column":10}},{"start":{"line":267,"column":10},"end":{"line":267,"column":10}}]},"25":{"line":275,"type":"cond-expr","locations":[{"start":{"line":275,"column":30},"end":{"line":275,"column":89}},{"start":{"line":275,"column":92},"end":{"line":275,"column":151}}]},"26":{"line":301,"type":"if","locations":[{"start":{"line":301,"column":6},"end":{"line":301,"column":6}},{"start":{"line":301,"column":6},"end":{"line":301,"column":6}}]},"27":{"line":337,"type":"if","locations":[{"start":{"line":337,"column":6},"end":{"line":337,"column":6}},{"start":{"line":337,"column":6},"end":{"line":337,"column":6}}]},"28":{"line":348,"type":"if","locations":[{"start":{"line":348,"column":6},"end":{"line":348,"column":6}},{"start":{"line":348,"column":6},"end":{"line":348,"column":6}}]},"29":{"line":352,"type":"if","locations":[{"start":{"line":352,"column":8},"end":{"line":352,"column":8}},{"start":{"line":352,"column":8},"end":{"line":352,"column":8}}]},"30":{"line":367,"type":"if","locations":[{"start":{"line":367,"column":6},"end":{"line":367,"column":6}},{"start":{"line":367,"column":6},"end":{"line":367,"column":6}}]},"31":{"line":378,"type":"cond-expr","locations":[{"start":{"line":378,"column":149},"end":{"line":378,"column":169}},{"start":{"line":378,"column":172},"end":{"line":381,"column":10}}]},"32":{"line":378,"type":"binary-expr","locations":[{"start":{"line":378,"column":19},"end":{"line":378,"column":63}},{"start":{"line":378,"column":67},"end":{"line":378,"column":146}}]},"33":{"line":387,"type":"if","locations":[{"start":{"line":387,"column":6},"end":{"line":387,"column":6}},{"start":{"line":387,"column":6},"end":{"line":387,"column":6}}]},"34":{"line":389,"type":"binary-expr","locations":[{"start":{"line":389,"column":17},"end":{"line":389,"column":33}},{"start":{"line":389,"column":37},"end":{"line":389,"column":63}}]},"35":{"line":397,"type":"if","locations":[{"start":{"line":397,"column":6},"end":{"line":397,"column":6}},{"start":{"line":397,"column":6},"end":{"line":397,"column":6}}]},"36":{"line":411,"type":"if","locations":[{"start":{"line":411,"column":8},"end":{"line":411,"column":8}},{"start":{"line":411,"column":8},"end":{"line":411,"column":8}}]},"37":{"line":412,"type":"if","locations":[{"start":{"line":412,"column":10},"end":{"line":412,"column":10}},{"start":{"line":412,"column":10},"end":{"line":412,"column":10}}]},"38":{"line":416,"type":"if","locations":[{"start":{"line":416,"column":15},"end":{"line":416,"column":15}},{"start":{"line":416,"column":15},"end":{"line":416,"column":15}}]},"39":{"line":424,"type":"if","locations":[{"start":{"line":424,"column":6},"end":{"line":424,"column":6}},{"start":{"line":424,"column":6},"end":{"line":424,"column":6}}]},"40":{"line":439,"type":"if","locations":[{"start":{"line":439,"column":8},"end":{"line":439,"column":8}},{"start":{"line":439,"column":8},"end":{"line":439,"column":8}}]},"41":{"line":444,"type":"if","locations":[{"start":{"line":444,"column":8},"end":{"line":444,"column":8}},{"start":{"line":444,"column":8},"end":{"line":444,"column":8}}]},"42":{"line":452,"type":"if","locations":[{"start":{"line":452,"column":8},"end":{"line":452,"column":8}},{"start":{"line":452,"column":8},"end":{"line":452,"column":8}}]},"43":{"line":458,"type":"if","locations":[{"start":{"line":458,"column":12},"end":{"line":458,"column":12}},{"start":{"line":458,"column":12},"end":{"line":458,"column":12}}]},"44":{"line":467,"type":"if","locations":[{"start":{"line":467,"column":14},"end":{"line":467,"column":14}},{"start":{"line":467,"column":14},"end":{"line":467,"column":14}}]},"45":{"line":467,"type":"binary-expr","locations":[{"start":{"line":467,"column":18},"end":{"line":467,"column":42}},{"start":{"line":467,"column":46},"end":{"line":467,"column":58}}]},"46":{"line":468,"type":"if","locations":[{"start":{"line":468,"column":16},"end":{"line":468,"column":16}},{"start":{"line":468,"column":16},"end":{"line":468,"column":16}}]},"47":{"line":470,"type":"if","locations":[{"start":{"line":470,"column":18},"end":{"line":470,"column":18}},{"start":{"line":470,"column":18},"end":{"line":470,"column":18}}]},"48":{"line":471,"type":"binary-expr","locations":[{"start":{"line":471,"column":30},"end":{"line":471,"column":37}},{"start":{"line":471,"column":41},"end":{"line":471,"column":43}}]},"49":{"line":475,"type":"if","locations":[{"start":{"line":475,"column":16},"end":{"line":475,"column":16}},{"start":{"line":475,"column":16},"end":{"line":475,"column":16}}]},"50":{"line":476,"type":"if","locations":[{"start":{"line":476,"column":18},"end":{"line":476,"column":18}},{"start":{"line":476,"column":18},"end":{"line":476,"column":18}}]},"51":{"line":476,"type":"binary-expr","locations":[{"start":{"line":476,"column":22},"end":{"line":476,"column":48}},{"start":{"line":476,"column":52},"end":{"line":476,"column":72}},{"start":{"line":476,"column":76},"end":{"line":476,"column":107}}]},"52":{"line":483,"type":"if","locations":[{"start":{"line":483,"column":12},"end":{"line":483,"column":12}},{"start":{"line":483,"column":12},"end":{"line":483,"column":12}}]},"53":{"line":489,"type":"if","locations":[{"start":{"line":489,"column":10},"end":{"line":489,"column":10}},{"start":{"line":489,"column":10},"end":{"line":489,"column":10}}]},"54":{"line":492,"type":"if","locations":[{"start":{"line":492,"column":10},"end":{"line":492,"column":10}},{"start":{"line":492,"column":10},"end":{"line":492,"column":10}}]},"55":{"line":495,"type":"if","locations":[{"start":{"line":495,"column":10},"end":{"line":495,"column":10}},{"start":{"line":495,"column":10},"end":{"line":495,"column":10}}]},"56":{"line":496,"type":"if","locations":[{"start":{"line":496,"column":12},"end":{"line":496,"column":12}},{"start":{"line":496,"column":12},"end":{"line":496,"column":12}}]},"57":{"line":496,"type":"binary-expr","locations":[{"start":{"line":496,"column":16},"end":{"line":496,"column":42}},{"start":{"line":496,"column":46},"end":{"line":496,"column":66}},{"start":{"line":496,"column":70},"end":{"line":496,"column":101}}]},"58":{"line":502,"type":"cond-expr","locations":[{"start":{"line":502,"column":55},"end":{"line":502,"column":99}},{"start":{"line":502,"column":102},"end":{"line":502,"column":106}}]},"59":{"line":504,"type":"if","locations":[{"start":{"line":504,"column":6},"end":{"line":504,"column":6}},{"start":{"line":504,"column":6},"end":{"line":504,"column":6}}]},"60":{"line":507,"type":"if","locations":[{"start":{"line":507,"column":10},"end":{"line":507,"column":10}},{"start":{"line":507,"column":10},"end":{"line":507,"column":10}}]},"61":{"line":512,"type":"binary-expr","locations":[{"start":{"line":512,"column":40},"end":{"line":512,"column":66}},{"start":{"line":512,"column":70},"end":{"line":512,"column":121}},{"start":{"line":512,"column":125},"end":{"line":512,"column":160}},{"start":{"line":512,"column":164},"end":{"line":512,"column":187}},{"start":{"line":512,"column":191},"end":{"line":512,"column":264}}]},"62":{"line":527,"type":"if","locations":[{"start":{"line":527,"column":8},"end":{"line":527,"column":8}},{"start":{"line":527,"column":8},"end":{"line":527,"column":8}}]},"63":{"line":527,"type":"binary-expr","locations":[{"start":{"line":527,"column":12},"end":{"line":527,"column":22}},{"start":{"line":527,"column":26},"end":{"line":527,"column":42}}]},"64":{"line":529,"type":"binary-expr","locations":[{"start":{"line":529,"column":10},"end":{"line":529,"column":26}},{"start":{"line":529,"column":30},"end":{"line":529,"column":56}}]},"65":{"line":535,"type":"if","locations":[{"start":{"line":535,"column":8},"end":{"line":535,"column":8}},{"start":{"line":535,"column":8},"end":{"line":535,"column":8}}]},"66":{"line":535,"type":"binary-expr","locations":[{"start":{"line":535,"column":12},"end":{"line":535,"column":59}},{"start":{"line":535,"column":63},"end":{"line":535,"column":119}}]},"67":{"line":543,"type":"if","locations":[{"start":{"line":543,"column":6},"end":{"line":543,"column":6}},{"start":{"line":543,"column":6},"end":{"line":543,"column":6}}]},"68":{"line":548,"type":"if","locations":[{"start":{"line":548,"column":6},"end":{"line":548,"column":6}},{"start":{"line":548,"column":6},"end":{"line":548,"column":6}}]},"69":{"line":553,"type":"if","locations":[{"start":{"line":553,"column":6},"end":{"line":553,"column":6}},{"start":{"line":553,"column":6},"end":{"line":553,"column":6}}]},"70":{"line":553,"type":"binary-expr","locations":[{"start":{"line":553,"column":10},"end":{"line":553,"column":50}},{"start":{"line":553,"column":54},"end":{"line":553,"column":94}}]},"71":{"line":558,"type":"binary-expr","locations":[{"start":{"line":558,"column":13},"end":{"line":558,"column":108}},{"start":{"line":558,"column":112},"end":{"line":558,"column":128}},{"start":{"line":558,"column":132},"end":{"line":558,"column":253}},{"start":{"line":558,"column":257},"end":{"line":558,"column":382}}]},"72":{"line":562,"type":"if","locations":[{"start":{"line":562,"column":6},"end":{"line":562,"column":6}},{"start":{"line":562,"column":6},"end":{"line":562,"column":6}}]},"73":{"line":601,"type":"if","locations":[{"start":{"line":601,"column":2},"end":{"line":601,"column":2}},{"start":{"line":601,"column":2},"end":{"line":601,"column":2}}]},"74":{"line":604,"type":"if","locations":[{"start":{"line":604,"column":6},"end":{"line":604,"column":6}},{"start":{"line":604,"column":6},"end":{"line":604,"column":6}}]},"75":{"line":605,"type":"binary-expr","locations":[{"start":{"line":605,"column":26},"end":{"line":605,"column":41}},{"start":{"line":605,"column":45},"end":{"line":605,"column":85}}]},"76":{"line":609,"type":"binary-expr","locations":[{"start":{"line":609,"column":16},"end":{"line":609,"column":31}},{"start":{"line":609,"column":35},"end":{"line":609,"column":44}}]},"77":{"line":623,"type":"if","locations":[{"start":{"line":623,"column":4},"end":{"line":623,"column":4}},{"start":{"line":623,"column":4},"end":{"line":623,"column":4}}]},"78":{"line":623,"type":"binary-expr","locations":[{"start":{"line":623,"column":8},"end":{"line":623,"column":22}},{"start":{"line":623,"column":26},"end":{"line":623,"column":87}}]},"79":{"line":643,"type":"if","locations":[{"start":{"line":643,"column":2},"end":{"line":643,"column":2}},{"start":{"line":643,"column":2},"end":{"line":643,"column":2}}]},"80":{"line":645,"type":"if","locations":[{"start":{"line":645,"column":6},"end":{"line":645,"column":6}},{"start":{"line":645,"column":6},"end":{"line":645,"column":6}}]},"81":{"line":674,"type":"if","locations":[{"start":{"line":674,"column":2},"end":{"line":674,"column":2}},{"start":{"line":674,"column":2},"end":{"line":674,"column":2}}]},"82":{"line":684,"type":"binary-expr","locations":[{"start":{"line":684,"column":32},"end":{"line":684,"column":61}},{"start":{"line":684,"column":65},"end":{"line":684,"column":74}}]},"83":{"line":686,"type":"if","locations":[{"start":{"line":686,"column":2},"end":{"line":686,"column":2}},{"start":{"line":686,"column":2},"end":{"line":686,"column":2}}]},"84":{"line":689,"type":"binary-expr","locations":[{"start":{"line":689,"column":25},"end":{"line":689,"column":46}},{"start":{"line":689,"column":50},"end":{"line":689,"column":52}}]},"85":{"line":690,"type":"binary-expr","locations":[{"start":{"line":690,"column":32},"end":{"line":690,"column":68}},{"start":{"line":690,"column":72},"end":{"line":690,"column":88}}]},"86":{"line":713,"type":"binary-expr","locations":[{"start":{"line":713,"column":25},"end":{"line":713,"column":46}},{"start":{"line":713,"column":50},"end":{"line":713,"column":52}}]},"87":{"line":718,"type":"if","locations":[{"start":{"line":718,"column":4},"end":{"line":718,"column":4}},{"start":{"line":718,"column":4},"end":{"line":718,"column":4}}]},"88":{"line":740,"type":"if","locations":[{"start":{"line":740,"column":4},"end":{"line":740,"column":4}},{"start":{"line":740,"column":4},"end":{"line":740,"column":4}}]},"89":{"line":746,"type":"if","locations":[{"start":{"line":746,"column":4},"end":{"line":746,"column":4}},{"start":{"line":746,"column":4},"end":{"line":746,"column":4}}]},"90":{"line":768,"type":"binary-expr","locations":[{"start":{"line":768,"column":24},"end":{"line":768,"column":85}},{"start":{"line":768,"column":89},"end":{"line":768,"column":104}},{"start":{"line":768,"column":108},"end":{"line":768,"column":176}}]},"91":{"line":769,"type":"if","locations":[{"start":{"line":769,"column":2},"end":{"line":769,"column":2}},{"start":{"line":769,"column":2},"end":{"line":769,"column":2}}]},"92":{"line":772,"type":"cond-expr","locations":[{"start":{"line":772,"column":733},"end":{"line":774,"column":17}},{"start":{"line":774,"column":20},"end":{"line":774,"column":35}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayContainer"," * "," */","","'use strict';","","var _extends3 = _interopRequireDefault(require('babel-runtime/helpers/extends'));","","var _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));","","var _possibleConstructorReturn3 = _interopRequireDefault(require('babel-runtime/helpers/possibleConstructorReturn'));","","var _inherits3 = _interopRequireDefault(require('babel-runtime/helpers/inherits'));","","var _stringify2 = _interopRequireDefault(require('babel-runtime/core-js/json/stringify'));","","var _keys2 = _interopRequireDefault(require('babel-runtime/core-js/object/keys'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","var _require = require('./RelayContainerUtils'),","    getComponentName = _require.getComponentName,","    getReactComponent = _require.getReactComponent;","","var containerContextTypes = {","  relay: require('./RelayPropTypes').Environment,","  route: require('./RelayPropTypes').QueryConfig.isRequired,","  useFakeData: require('react').PropTypes.bool","};","","/**"," * @public"," *"," * RelayContainer is a higher order component that provides the ability to:"," *"," *  - Encode data dependencies using query fragments that are parameterized by"," *    routes and variables."," *  - Manipulate variables via methods on `this.props.relay`."," *  - Automatically subscribe to data changes."," *  - Avoid unnecessary updates if data is unchanged."," *  - Propagate the `route` via context (available on `this.props.relay`)."," *"," */","function createContainerComponent(Component, spec) {","  var ComponentClass = getReactComponent(Component);","  var componentName = getComponentName(Component);","  var containerName = getContainerName(Component);","  var fragments = spec.fragments;","  var fragmentNames = (0, _keys2['default'])(fragments);","  var initialVariables = spec.initialVariables || {};","  var prepareVariables = spec.prepareVariables;","  var specShouldComponentUpdate = spec.shouldComponentUpdate;","","  var RelayContainer = function (_React$Component) {","    (0, _inherits3['default'])(RelayContainer, _React$Component);","","    function RelayContainer(props, context) {","      (0, _classCallCheck3['default'])(this, RelayContainer);","","      var _this = (0, _possibleConstructorReturn3['default'])(this, _React$Component.call(this, props, context));","","      var relay = context.relay,","          route = context.route;","","      require('fbjs/lib/invariant')(require('./isRelayEnvironment')(relay), 'RelayContainer: `%s` was rendered with invalid Relay context `%s`. ' + 'Make sure the `relay` property on the React context conforms to the ' + '`RelayEnvironment` interface.', containerName, relay);","      require('fbjs/lib/invariant')(route && typeof route.name === 'string', 'RelayContainer: `%s` was rendered without a valid route. Make sure ' + 'the route is valid, and make sure that it is correctly set on the ' + 'parent component\\'s context (e.g. using <RelayRootContainer>).', containerName);","","      _this._didShowFakeDataWarning = false;","      _this._fragmentPointers = {};","      _this._hasStaleQueryData = false;","      _this._fragmentResolvers = {};","","      _this.mounted = true;","      _this.pending = null;","      _this.state = {","        queryData: {},","        rawVariables: {},","        relayProp: {","          applyUpdate: _this.context.relay.applyUpdate,","          commitUpdate: _this.context.relay.commitUpdate,","          forceFetch: _this.forceFetch.bind(_this),","          getPendingTransactions: _this.getPendingTransactions.bind(_this),","          hasFragmentData: _this.hasFragmentData.bind(_this),","          hasOptimisticUpdate: _this.hasOptimisticUpdate.bind(_this),","          hasPartialData: _this.hasPartialData.bind(_this),","          pendingVariables: null,","          route: route,","          setVariables: _this.setVariables.bind(_this),","          variables: {}","        }","      };","      return _this;","    }","","    /**","     * Requests an update to variables. This primes the cache for the new","     * variables and notifies the caller of changes via the callback. As data","     * becomes ready, the component will be updated.","     */","","","    RelayContainer.prototype.setVariables = function setVariables(partialVariables, callback) {","      this._runVariables(partialVariables, callback, false);","    };","","    /**","     * Requests an update to variables. Unlike `setVariables`, this forces data","     * to be fetched and written for the supplied variables. Any data that","     * previously satisfied the queries will be overwritten.","     */","","","    RelayContainer.prototype.forceFetch = function forceFetch(partialVariables, callback) {","      this._runVariables(partialVariables, callback, true);","    };","","    /**","     * Creates a query for each of the component's fragments using the given","     * variables, and fragment pointers that can be used to resolve the results","     * of those queries. The fragment pointers are of the same shape as the","     * `_fragmentPointers` property.","     */","","","    RelayContainer.prototype._createQuerySetAndFragmentPointers = function _createQuerySetAndFragmentPointers(variables) {","      var _this2 = this;","","      var fragmentPointers = {};","      var querySet = {};","      var storeData = this.context.relay.getStoreData();","      fragmentNames.forEach(function (fragmentName) {","        var fragment = getFragment(fragmentName, _this2.context.route, variables);","        var queryData = _this2.state.queryData[fragmentName];","        if (!fragment || queryData == null) {","          return;","        }","","        var fragmentPointer = void 0;","        if (fragment.isPlural()) {","          (function () {","            require('fbjs/lib/invariant')(Array.isArray(queryData), 'RelayContainer: Invalid queryData for `%s`, expected an array ' + 'of records because the corresponding fragment is plural.', fragmentName);","            var dataIDs = [];","            queryData.forEach(function (data, ii) {","              /* $FlowFixMe(>=0.36.0) Flow error detected","               * during the deploy of Flow v0.36.0. To see the error, remove this","               * comment and run Flow */","              var dataID = require('./RelayRecord').getDataIDForObject(data);","              if (dataID) {","                querySet[fragmentName + ii] = storeData.buildFragmentQueryForDataID(fragment, dataID);","                dataIDs.push(dataID);","              }","            });","            if (dataIDs.length) {","              fragmentPointer = { fragment: fragment, dataIDs: dataIDs };","            }","          })();","        } else {","          /* $FlowFixMe(>=0.19.0) - queryData is mixed but getID expects Object","           */","          var dataID = require('./RelayRecord').getDataIDForObject(queryData);","          if (dataID) {","            fragmentPointer = {","              fragment: fragment,","              dataIDs: dataID","            };","            querySet[fragmentName] = storeData.buildFragmentQueryForDataID(fragment, dataID);","          }","        }","","        fragmentPointers[fragmentName] = fragmentPointer;","      });","      return { fragmentPointers: fragmentPointers, querySet: querySet };","    };","","    RelayContainer.prototype._runVariables = function _runVariables(partialVariables, callback, forceFetch) {","      var _this3 = this;","","      validateVariables(initialVariables, partialVariables);","      var lastVariables = this.state.rawVariables;","      var prevVariables = this.pending ? this.pending.rawVariables : lastVariables;","      var rawVariables = mergeVariables(prevVariables, partialVariables);","      var nextVariables = rawVariables;","      if (prepareVariables) {","        var metaRoute = require('./RelayMetaRoute').get(this.context.route.name);","        nextVariables = prepareVariables(rawVariables, metaRoute);","        validateVariables(initialVariables, nextVariables);","      }","","      this.pending && this.pending.request.abort();","","      var completeProfiler = require('./RelayProfiler').profile('RelayContainer.setVariables', {","        containerName: containerName,","        nextVariables: nextVariables","      });","","      // Because the pending fetch is always canceled, we need to build a new","      // set of queries that includes the updated variables and initiate a new","      // fetch.","","      var _createQuerySetAndFra = this._createQuerySetAndFragmentPointers(nextVariables),","          querySet = _createQuerySetAndFra.querySet,","          fragmentPointers = _createQuerySetAndFra.fragmentPointers;","","      var onReadyStateChange = require('fbjs/lib/ErrorUtils').guard(function (readyState) {","        var aborted = readyState.aborted,","            done = readyState.done,","            error = readyState.error,","            ready = readyState.ready;","","        var isComplete = aborted || done || error;","        if (isComplete && _this3.pending === current) {","          _this3.pending = null;","        }","        var partialState = void 0;","        if (ready) {","          // Only update query data if variables changed. Otherwise, `querySet`","          // and `fragmentPointers` will be empty, and `nextVariables` will be","          // equal to `lastVariables`.","          _this3._fragmentPointers = fragmentPointers;","          _this3._updateFragmentResolvers(_this3.context.relay);","          var _queryData = _this3._getQueryData(_this3.props);","          partialState = {","            queryData: _queryData,","            rawVariables: rawVariables,","            relayProp: (0, _extends3['default'])({}, _this3.state.relayProp, {","              pendingVariables: null,","              variables: nextVariables","            })","          };","        } else {","          partialState = {","            relayProp: (0, _extends3['default'])({}, _this3.state.relayProp, {","              pendingVariables: isComplete ? null : nextVariables","            })","          };","        }","        var mounted = _this3.mounted;","        if (mounted) {","          (function () {","            var updateProfiler = require('./RelayProfiler').profile('RelayContainer.update');","            require('./relayUnstableBatchedUpdates')(function () {","              _this3.setState(partialState, function () {","                updateProfiler.stop();","                if (isComplete) {","                  completeProfiler.stop();","                }","              });","              if (callback) {","                callback.call(","                // eslint-disable-next-line react/no-string-refs","                _this3.refs.component || null, (0, _extends3['default'])({}, readyState, { mounted: mounted }));","              }","            });","          })();","        } else {","          if (callback) {","            callback((0, _extends3['default'])({}, readyState, { mounted: mounted }));","          }","          if (isComplete) {","            completeProfiler.stop();","          }","        }","      }, 'RelayContainer.onReadyStateChange');","","      var current = {","        rawVariables: rawVariables,","        request: forceFetch ? this.context.relay.forceFetch(querySet, onReadyStateChange) : this.context.relay.primeCache(querySet, onReadyStateChange)","      };","      this.pending = current;","    };","","    /**","     * Determine if the supplied record reflects an optimistic update.","     */","","","    RelayContainer.prototype.hasOptimisticUpdate = function hasOptimisticUpdate(record) {","      var dataID = require('./RelayRecord').getDataIDForObject(record);","      require('fbjs/lib/invariant')(dataID != null, 'RelayContainer.hasOptimisticUpdate(): Expected a record in `%s`.', componentName);","      return this.context.relay.getStoreData().hasOptimisticUpdate(dataID);","    };","","    /**","     * Returns the pending mutation transactions affecting the given record.","     */","","","    RelayContainer.prototype.getPendingTransactions = function getPendingTransactions(record) {","      var dataID = require('./RelayRecord').getDataIDForObject(record);","      require('fbjs/lib/invariant')(dataID != null, 'RelayContainer.getPendingTransactions(): Expected a record in `%s`.', componentName);","      var storeData = this.context.relay.getStoreData();","      var mutationIDs = storeData.getClientMutationIDs(dataID);","      if (!mutationIDs) {","        return null;","      }","      var mutationQueue = storeData.getMutationQueue();","      return mutationIDs.map(function (id) {","        return mutationQueue.getTransaction(id);","      });","    };","","    /**","     * Checks if data for a deferred fragment is ready. This method should","     * *always* be called before rendering a child component whose fragment was","     * deferred (unless that child can handle null or missing data).","     */","","","    RelayContainer.prototype.hasFragmentData = function hasFragmentData(fragmentReference, record) {","      // convert builder -> fragment in order to get the fragment's name","      var dataID = require('./RelayRecord').getDataIDForObject(record);","      require('fbjs/lib/invariant')(dataID != null, 'RelayContainer.hasFragmentData(): Second argument is not a valid ' + 'record. For `<%s X={this.props.X} />`, use ' + '`this.props.hasFragmentData(%s.getFragment(\\'X\\'), this.props.X)`.', componentName, componentName);","      var fragment = getDeferredFragment(fragmentReference, this.context, this.state.relayProp.variables);","      require('fbjs/lib/invariant')(fragment instanceof require('./RelayQuery').Fragment, 'RelayContainer.hasFragmentData(): First argument is not a valid ' + 'fragment. Ensure that there are no failing `if` or `unless` ' + 'conditions.');","      var storeData = this.context.relay.getStoreData();","      return storeData.getCachedStore().hasFragmentData(dataID, fragment.getCompositeHash());","    };","","    /**","     * Determine if the supplied record might be missing data.","     */","","","    RelayContainer.prototype.hasPartialData = function hasPartialData(record) {","      return require('./RelayRecordStatusMap').isPartialStatus(record[require('./RelayRecord').MetadataKey.STATUS]);","    };","","    RelayContainer.prototype.componentWillMount = function componentWillMount() {","      if (this.context.route.useMockData) {","        return;","      }","      this.setState(this._initialize(this.props, this.context, initialVariables, null));","    };","","    RelayContainer.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps, maybeNextContext) {","      var _this4 = this;","","      var nextContext = maybeNextContext;","      require('fbjs/lib/invariant')(nextContext, 'RelayContainer: Expected a context to be set.');","      if (nextContext.route.useMockData) {","        return;","      }","      this.setState(function (state) {","        if (_this4.context.relay !== nextContext.relay) {","          _this4._cleanup();","        }","        return _this4._initialize(nextProps, nextContext, resetPropOverridesForVariables(spec, nextProps, state.rawVariables), state.rawVariables);","      });","    };","","    RelayContainer.prototype.componentWillUnmount = function componentWillUnmount() {","      this._cleanup();","      this.mounted = false;","    };","","    RelayContainer.prototype._initialize = function _initialize(props, context, propVariables, prevVariables) {","      var rawVariables = getVariablesWithPropOverrides(spec, props, propVariables);","      var nextVariables = rawVariables;","      if (prepareVariables) {","        // TODO: Allow routes without names, #7856965.","        var metaRoute = require('./RelayMetaRoute').get(context.route.name);","        nextVariables = prepareVariables(rawVariables, metaRoute);","        validateVariables(initialVariables, nextVariables);","      }","      this._updateFragmentPointers(props, context, nextVariables, prevVariables);","      this._updateFragmentResolvers(context.relay);","      return {","        queryData: this._getQueryData(props),","        rawVariables: rawVariables,","        relayProp: this.state.relayProp.route === context.route && require('fbjs/lib/shallowEqual')(this.state.relayProp.variables, nextVariables) ? this.state.relayProp : (0, _extends3['default'])({}, this.state.relayProp, {","          route: context.route,","          variables: nextVariables","        })","      };","    };","","    RelayContainer.prototype._cleanup = function _cleanup() {","      // A guarded error in mounting might prevent initialization of resolvers.","      if (this._fragmentResolvers) {","        require('fbjs/lib/forEachObject')(this._fragmentResolvers, function (fragmentResolver) {","          return fragmentResolver && fragmentResolver.dispose();","        });","      }","","      this._fragmentPointers = {};","      this._fragmentResolvers = {};","","      var pending = this.pending;","      if (pending) {","        pending.request.abort();","        this.pending = null;","      }","    };","","    RelayContainer.prototype._updateFragmentResolvers = function _updateFragmentResolvers(environment) {","      var _this5 = this;","","      var fragmentPointers = this._fragmentPointers;","      var fragmentResolvers = this._fragmentResolvers;","      fragmentNames.forEach(function (fragmentName) {","        var fragmentPointer = fragmentPointers[fragmentName];","        var fragmentResolver = fragmentResolvers[fragmentName];","        if (!fragmentPointer) {","          if (fragmentResolver) {","            fragmentResolver.dispose();","            fragmentResolvers[fragmentName] = null;","          }","        } else if (!fragmentResolver) {","          fragmentResolver = environment.getFragmentResolver(fragmentPointer.fragment, _this5._handleFragmentDataUpdate.bind(_this5));","          fragmentResolvers[fragmentName] = fragmentResolver;","        }","      });","    };","","    RelayContainer.prototype._handleFragmentDataUpdate = function _handleFragmentDataUpdate() {","      if (!this.mounted) {","        return;","      }","      var queryData = this._getQueryData(this.props);","      var updateProfiler = require('./RelayProfiler').profile('RelayContainer.handleFragmentDataUpdate');","      this.setState({ queryData: queryData }, updateProfiler.stop);","    };","","    RelayContainer.prototype._updateFragmentPointers = function _updateFragmentPointers(props, context, variables, prevVariables) {","      var _this6 = this;","","      var fragmentPointers = this._fragmentPointers;","      fragmentNames.forEach(function (fragmentName) {","        var propValue = props[fragmentName];","        require('fbjs/lib/warning')(propValue !== undefined, 'RelayContainer: Expected prop `%s` to be supplied to `%s`, but ' + 'got `undefined`. Pass an explicit `null` if this is intentional.', fragmentName, componentName);","        if (propValue == null) {","          fragmentPointers[fragmentName] = null;","          return;","        }","        // handle invalid prop values using a warning at first.","        if (typeof propValue !== 'object') {","          require('fbjs/lib/warning')(false, 'RelayContainer: Expected prop `%s` supplied to `%s` to be an ' + 'object, got `%s`.', fragmentName, componentName, propValue);","          fragmentPointers[fragmentName] = null;","          return;","        }","        var fragment = getFragment(fragmentName, context.route, variables);","        var dataIDOrIDs = void 0;","","        if (fragment.isPlural()) {","          var _ret3 = function () {","            // Plural fragments require the prop value to be an array of fragment","            // pointers, which are merged into a single fragment pointer to pass","            // to the query resolver `resolve`.","            require('fbjs/lib/invariant')(Array.isArray(propValue), 'RelayContainer: Invalid prop `%s` supplied to `%s`, expected an ' + 'array of records because the corresponding fragment has ' + '`@relay(plural: true)`.', fragmentName, componentName);","            if (!propValue.length) {","              // Nothing to observe: pass the empty array through","              fragmentPointers[fragmentName] = null;","              return {","                v: void 0","              };","            }","            var dataIDs = null;","            propValue.forEach(function (item, ii) {","              if (typeof item === 'object' && item != null) {","                if (require('./RelayFragmentPointer').hasConcreteFragment(item, fragment)) {","                  var dataID = require('./RelayRecord').getDataIDForObject(item);","                  if (dataID) {","                    dataIDs = dataIDs || [];","                    dataIDs.push(dataID);","                  }","                }","                if (process.env.NODE_ENV !== 'production') {","                  if (!context.route.useMockData && !context.useFakeData && !_this6._didShowFakeDataWarning) {","                    var isValid = validateFragmentProp(componentName, fragmentName, fragment, item, prevVariables);","                    _this6._didShowFakeDataWarning = !isValid;","                  }","                }","              }","            });","            if (dataIDs) {","              require('fbjs/lib/invariant')(dataIDs.length === propValue.length, 'RelayContainer: Invalid prop `%s` supplied to `%s`. Some ' + 'array items contain data fetched by Relay and some items ' + 'contain null/mock data.', fragmentName, componentName);","            }","            dataIDOrIDs = dataIDs;","          }();","","          if (typeof _ret3 === \"object\") return _ret3.v;","        } else {","          require('fbjs/lib/invariant')(!Array.isArray(propValue), 'RelayContainer: Invalid prop `%s` supplied to `%s`, expected a ' + 'single record because the corresponding fragment is not plural ' + '(i.e. does not have `@relay(plural: true)`).', fragmentName, componentName);","          if (require('./RelayFragmentPointer').hasConcreteFragment(propValue, fragment)) {","            dataIDOrIDs = require('./RelayRecord').getDataIDForObject(propValue);","          }","          if (process.env.NODE_ENV !== 'production') {","            if (!context.route.useMockData && !context.useFakeData && !_this6._didShowFakeDataWarning) {","              var isValid = validateFragmentProp(componentName, fragmentName, fragment, propValue, prevVariables);","              _this6._didShowFakeDataWarning = !isValid;","            }","          }","        }","        fragmentPointers[fragmentName] = dataIDOrIDs ? { fragment: fragment, dataIDs: dataIDOrIDs } : null;","      });","      if (process.env.NODE_ENV !== 'production') {","        // If a fragment pointer is null, warn if it was found on another prop.","        fragmentNames.forEach(function (fragmentName) {","          if (fragmentPointers[fragmentName]) {","            return;","          }","          var fragment = getFragment(fragmentName, context.route, variables);","          (0, _keys2['default'])(props).forEach(function (propName) {","            require('fbjs/lib/warning')(fragmentPointers[propName] || !require('./RelayRecord').isRecord(props[propName]) || typeof props[propName] !== 'object' || props[propName] == null || !require('./RelayFragmentPointer').hasFragment(props[propName], fragment), 'RelayContainer: Expected record data for prop `%s` on `%s`, ' + 'but it was instead on prop `%s`. Did you misspell a prop or ' + 'pass record data into the wrong prop?', fragmentName, componentName, propName);","          });","        });","      }","    };","","    RelayContainer.prototype._getQueryData = function _getQueryData(props) {","      var _this7 = this;","","      var queryData = {};","      var fragmentPointers = this._fragmentPointers;","      require('fbjs/lib/forEachObject')(this._fragmentResolvers, function (fragmentResolver, propName) {","        var propValue = props[propName];","        var fragmentPointer = fragmentPointers[propName];","","        if (!propValue || !fragmentPointer) {","          // Clear any subscriptions since there is no data.","          fragmentResolver && fragmentResolver.dispose();","          // Allow mock data to pass through without modification.","          queryData[propName] = propValue;","        } else {","          queryData[propName] = fragmentResolver.resolve(fragmentPointer.fragment, fragmentPointer.dataIDs);","        }","        if (_this7.state.queryData.hasOwnProperty(propName) && queryData[propName] !== _this7.state.queryData[propName]) {","          _this7._hasStaleQueryData = true;","        }","      });","      return queryData;","    };","","    RelayContainer.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState, nextContext) {","      if (specShouldComponentUpdate) {","        return specShouldComponentUpdate();","      }","","      // Flag indicating that query data changed since previous render.","      if (this._hasStaleQueryData) {","        this._hasStaleQueryData = false;","        return true;","      }","","      if (this.context.relay !== nextContext.relay || this.context.route !== nextContext.route) {","        return true;","      }","","      var fragmentPointers = this._fragmentPointers;","      return !require('./RelayContainerComparators').areNonQueryPropsEqual(fragments, this.props, nextProps) || fragmentPointers && !require('./RelayContainerComparators').areQueryResultsEqual(fragmentPointers, this.state.queryData, nextState.queryData) || !require('./RelayContainerComparators').areQueryVariablesEqual(this.state.relayProp.variables, nextState.relayProp.variables);","    };","","    RelayContainer.prototype.render = function render() {","      if (ComponentClass) {","        return require('react').createElement(ComponentClass, (0, _extends3['default'])({}, this.props, this.state.queryData, {","          ref: 'component' // eslint-disable-line react/no-string-refs","          , relay: this.state.relayProp","        }));","      } else {","        // Stateless functional.","        var Fn = Component;","        return require('react').createElement(Fn, (0, _extends3['default'])({}, this.props, this.state.queryData, {","          relay: this.state.relayProp","        }));","      }","    };","","    return RelayContainer;","  }(require('react').Component);","","  function getFragment(fragmentName, route, variables) {","    var fragmentBuilder = fragments[fragmentName];","    require('fbjs/lib/invariant')(fragmentBuilder, 'RelayContainer: Expected `%s` to have a query fragment named `%s`.', containerName, fragmentName);","    var fragment = buildContainerFragment(containerName, fragmentName, fragmentBuilder, initialVariables);","    // TODO: Allow routes without names, #7856965.","    var metaRoute = require('./RelayMetaRoute').get(route.name);","    return require('./RelayQuery').Fragment.create(fragment, metaRoute, variables);","  }","","  initializeProfiler(RelayContainer);","  RelayContainer.contextTypes = containerContextTypes;","  RelayContainer.displayName = containerName;","  require('./RelayContainerProxy').proxyMethods(RelayContainer, Component);","","  return RelayContainer;","}","","/**"," * TODO: Stop allowing props to override variables, #7856288."," */","function getVariablesWithPropOverrides(spec, props, variables) {","  var initialVariables = spec.initialVariables;","  if (initialVariables) {","    var mergedVariables = void 0;","    for (var _key in initialVariables) {","      if (_key in props) {","        mergedVariables = mergedVariables || (0, _extends3['default'])({}, variables);","        mergedVariables[_key] = props[_key];","      }","    }","    variables = mergedVariables || variables;","  }","  return variables;","}","","/**"," * Compare props and variables and reset the internal query variables if outside"," * query variables change the component."," *"," * TODO: Stop allowing props to override variables, #7856288."," */","function resetPropOverridesForVariables(spec, props, variables) {","  var initialVariables = spec.initialVariables;","  for (var _key2 in initialVariables) {","    if (_key2 in props && !require('fbjs/lib/areEqual')(props[_key2], variables[_key2])) {","      return initialVariables;","    }","  }","  return variables;","}","","function initializeProfiler(RelayContainer) {","  require('./RelayProfiler').instrumentMethods(RelayContainer.prototype, {","    componentWillMount: 'RelayContainer.prototype.componentWillMount',","    componentWillReceiveProps: 'RelayContainer.prototype.componentWillReceiveProps',","    shouldComponentUpdate: 'RelayContainer.prototype.shouldComponentUpdate'","  });","}","","/**"," * Merges a partial update into a set of variables. If no variables changed, the"," * same object is returned. Otherwise, a new object is returned."," */","function mergeVariables(currentVariables, partialVariables) {","  if (partialVariables) {","    for (var _key3 in partialVariables) {","      if (currentVariables[_key3] !== partialVariables[_key3]) {","        return (0, _extends3['default'])({}, currentVariables, partialVariables);","      }","    }","  }","  return currentVariables;","}","","/**"," * Wrapper around `buildRQL.Fragment` with contextual error messages."," */","function buildContainerFragment(containerName, fragmentName, fragmentBuilder, variables) {","  var fragment = require('./buildRQL').Fragment(fragmentBuilder, variables);","  require('fbjs/lib/invariant')(fragment, 'Relay.QL defined on container `%s` named `%s` is not a valid fragment. ' + 'A typical fragment is defined using: Relay.QL`fragment on Type {...}`', containerName, fragmentName);","  return fragment;","}","","function getDeferredFragment(fragmentReference, context, variables) {","  var route = require('./RelayMetaRoute').get(context.route.name);","  var concreteFragment = fragmentReference.getFragment(variables);","  var concreteVariables = fragmentReference.getVariables(route, variables);","  return require('./RelayQuery').Fragment.create(concreteFragment, route, concreteVariables, {","    isDeferred: true,","    isContainerFragment: fragmentReference.isContainerFragment(),","    isTypeConditional: false","  });","}","","function validateVariables(initialVariables, partialVariables) {","  if (partialVariables) {","    for (var _key4 in partialVariables) {","      require('fbjs/lib/warning')(initialVariables.hasOwnProperty(_key4), 'RelayContainer: Expected query variable `%s` to be initialized in ' + '`initialVariables`.', _key4);","    }","  }","}","","function validateSpec(componentName, spec) {","","  var fragments = spec.fragments;","  require('fbjs/lib/invariant')(typeof fragments === 'object' && fragments, 'Relay.createContainer(%s, ...): Missing `fragments`, which is expected ' + 'to be an object mapping from `propName` to: () => Relay.QL`...`', componentName);","","  if (!spec.initialVariables) {","    return;","  }","  var initialVariables = spec.initialVariables || {};","  require('fbjs/lib/invariant')(typeof initialVariables === 'object' && initialVariables, 'Relay.createContainer(%s, ...): Expected `initialVariables` to be an ' + 'object.', componentName);","","  require('fbjs/lib/forEachObject')(fragments, function (_, name) {","    require('fbjs/lib/warning')(!initialVariables.hasOwnProperty(name), 'Relay.createContainer(%s, ...): `%s` is used both as a fragment name ' + 'and variable name. Please give them unique names.', componentName, name);","  });","}","","function getContainerName(Component) {","  return 'Relay(' + getComponentName(Component) + ')';","}","","/**"," * Creates a lazy Relay container. The actual container is created the first"," * time a container is being constructed by React's rendering engine."," */","function create(Component, spec) {","  var componentName = getComponentName(Component);","  var containerName = getContainerName(Component);","","  validateSpec(componentName, spec);","","  var fragments = spec.fragments;","  var fragmentNames = (0, _keys2['default'])(fragments);","  var initialVariables = spec.initialVariables || {};","  var prepareVariables = spec.prepareVariables;","","  var Container = void 0;","  function ContainerConstructor(props, context) {","    if (!Container) {","      Container = createContainerComponent(Component, spec);","    }","    return new Container(props, context);","  }","","  ContainerConstructor.getFragmentNames = function () {","    return fragmentNames;","  };","  ContainerConstructor.hasFragment = function (fragmentName) {","    return !!fragments[fragmentName];","  };","  ContainerConstructor.hasVariable = function (variableName) {","    return Object.prototype.hasOwnProperty.call(initialVariables, variableName);","  };","","  /**","   * Retrieves a reference to the fragment by name. An optional second argument","   * can be supplied to override the component's default variables.","   */","  ContainerConstructor.getFragment = function (fragmentName, variableMapping) {","    var fragmentBuilder = fragments[fragmentName];","    if (!fragmentBuilder) {","      require('fbjs/lib/invariant')(false, '%s.getFragment(): `%s` is not a valid fragment name. Available ' + 'fragments names: %s', containerName, fragmentName, fragmentNames.map(function (name) {","        return '`' + name + '`';","      }).join(', '));","    }","    require('fbjs/lib/invariant')(typeof fragmentBuilder === 'function', 'RelayContainer: Expected `%s.fragments.%s` to be a function returning ' + 'a fragment. Example: `%s: () => Relay.QL`fragment on ...`', containerName, fragmentName, fragmentName);","    if (variableMapping) {","      variableMapping = require('fbjs/lib/filterObject')(variableMapping, function (_, name) {","        return Object.prototype.hasOwnProperty.call(initialVariables, name);","      });","    }","    return require('./RelayFragmentReference').createForContainer(function () {","      return buildContainerFragment(containerName, fragmentName, fragmentBuilder, initialVariables);","    }, initialVariables, variableMapping, prepareVariables);","  };","","  ContainerConstructor.contextTypes = containerContextTypes;","  ContainerConstructor.displayName = containerName;","  ContainerConstructor.moduleName = null;","","  return ContainerConstructor;","}","","/**"," * Returns whether the fragment `prop` contains a fragment pointer for the given"," * fragment's data, warning if it does not."," */","function validateFragmentProp(componentName, fragmentName, fragment, prop, prevVariables) {","  var hasFragmentData = require('./RelayFragmentPointer').hasFragment(prop, fragment) || !!prevVariables && require('fbjs/lib/areEqual')(prevVariables, fragment.getVariables());","  if (!hasFragmentData) {","    var variables = fragment.getVariables();","    var fetchedVariables = require('./RelayFragmentPointer').getFragmentVariables(prop, fragment);","    require('fbjs/lib/warning')(false, 'RelayContainer: component `%s` was rendered with variables ' + 'that differ from the variables used to fetch fragment ' + '`%s`. The fragment was fetched with variables `%s`, but rendered ' + 'with variables `%s`. This can indicate one of two possibilities: \\n' + ' - The parent set the correct variables in the query - ' + '`%s.getFragment(\\'%s\\', {...})` - but did not pass the same ' + 'variables when rendering the component. Be sure to tell the ' + 'component what variables to use by passing them as props: ' + '`<%s ... %s />`.\\n' + ' - You are intentionally passing fake data to this ' + 'component, in which case ignore this warning.', componentName, fragmentName, fetchedVariables ? fetchedVariables.map(function (vars) {","      return (0, _stringify2['default'])(vars);","    }).join(', ') : '(not fetched)', (0, _stringify2['default'])(variables), componentName, fragmentName, componentName, (0, _keys2['default'])(variables).map(function (key) {","      return key + '={...}';","    }).join(' '));","  }","  return hasFragmentData;","}","","module.exports = { create: create };"],"l":{"15":1,"17":1,"19":1,"21":1,"23":1,"25":1,"27":6,"29":1,"33":1,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"62":0,"63":0,"65":1,"66":0,"68":0,"70":0,"73":0,"74":0,"76":0,"77":0,"78":0,"79":0,"81":0,"82":0,"83":0,"100":0,"110":0,"111":0,"121":0,"122":0,"133":0,"134":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"155":0,"156":0,"157":0,"158":0,"161":0,"162":0,"168":0,"169":0,"170":0,"174":0,"178":0,"180":0,"183":0,"184":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"197":0,"199":0,"208":0,"212":0,"213":0,"218":0,"219":0,"220":0,"222":0,"223":0,"227":0,"228":0,"229":0,"230":0,"239":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"256":0,"257":0,"264":0,"265":0,"267":0,"268":0,"273":0,"277":0,"285":0,"286":0,"287":0,"288":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"304":0,"305":0,"306":0,"317":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"332":0,"333":0,"336":0,"337":0,"338":0,"340":0,"343":0,"344":0,"346":0,"347":0,"348":0,"349":0,"351":0,"352":0,"353":0,"355":0,"359":0,"360":0,"361":0,"364":0,"365":0,"366":0,"367":0,"369":0,"370":0,"371":0,"373":0,"374":0,"375":0,"385":0,"387":0,"388":0,"389":0,"393":0,"394":0,"396":0,"397":0,"398":0,"399":0,"403":0,"404":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"416":0,"417":0,"418":0,"423":0,"424":0,"425":0,"427":0,"428":0,"429":0,"432":0,"433":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"444":0,"445":0,"446":0,"447":0,"449":0,"450":0,"452":0,"453":0,"457":0,"458":0,"460":0,"461":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"475":0,"476":0,"477":0,"478":0,"483":0,"484":0,"486":0,"489":0,"491":0,"492":0,"493":0,"495":0,"496":0,"497":0,"498":0,"502":0,"504":0,"506":0,"507":0,"508":0,"510":0,"511":0,"512":0,"518":0,"519":0,"521":0,"522":0,"523":0,"524":0,"525":0,"527":0,"529":0,"531":0,"533":0,"535":0,"536":0,"539":0,"542":0,"543":0,"544":0,"548":0,"549":0,"550":0,"553":0,"554":0,"557":0,"558":0,"561":0,"562":0,"563":0,"569":0,"570":0,"576":0,"579":1,"580":0,"581":0,"582":0,"584":0,"585":0,"588":0,"589":0,"590":0,"591":0,"593":0,"599":1,"600":0,"601":0,"602":0,"603":0,"604":0,"605":0,"606":0,"609":0,"611":0,"620":1,"621":0,"622":0,"623":0,"624":0,"627":0,"630":1,"631":0,"642":1,"643":0,"644":0,"645":0,"646":0,"650":0,"656":1,"657":0,"658":0,"659":0,"662":1,"663":0,"664":0,"665":0,"666":0,"673":1,"674":0,"675":0,"676":0,"681":1,"683":0,"684":0,"686":0,"687":0,"689":0,"690":0,"692":0,"693":0,"697":1,"698":0,"705":1,"706":0,"707":0,"709":0,"711":0,"712":0,"713":0,"714":0,"716":0,"717":1,"718":0,"719":0,"721":0,"724":0,"725":0,"727":0,"728":0,"730":0,"731":0,"738":0,"739":0,"740":0,"741":0,"742":0,"745":0,"746":0,"747":0,"748":0,"751":0,"752":0,"756":0,"757":0,"758":0,"760":0,"767":1,"768":0,"769":0,"770":0,"771":0,"772":0,"773":0,"775":0,"778":0,"781":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayContainerUtils.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayContainerUtils.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1},"b":{"1":[0,0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"isReactComponent","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":37}}},"2":{"name":"getReactComponent","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":38}}},"3":{"name":"getComponentName","line":34,"loc":{"start":{"line":34,"column":0},"end":{"line":34,"column":37}}}},"statementMap":{"1":{"start":{"line":22,"column":0},"end":{"line":24,"column":1}},"2":{"start":{"line":23,"column":2},"end":{"line":23,"column":129}},"3":{"start":{"line":26,"column":0},"end":{"line":32,"column":1}},"4":{"start":{"line":27,"column":2},"end":{"line":31,"column":3}},"5":{"start":{"line":28,"column":4},"end":{"line":28,"column":21}},"6":{"start":{"line":30,"column":4},"end":{"line":30,"column":16}},"7":{"start":{"line":34,"column":0},"end":{"line":46,"column":1}},"8":{"start":{"line":35,"column":2},"end":{"line":35,"column":20}},"9":{"start":{"line":36,"column":2},"end":{"line":36,"column":52}},"10":{"start":{"line":37,"column":2},"end":{"line":44,"column":3}},"11":{"start":{"line":38,"column":4},"end":{"line":38,"column":61}},"12":{"start":{"line":39,"column":9},"end":{"line":44,"column":3}},"13":{"start":{"line":41,"column":4},"end":{"line":41,"column":75}},"14":{"start":{"line":43,"column":4},"end":{"line":43,"column":26}},"15":{"start":{"line":45,"column":2},"end":{"line":45,"column":14}},"16":{"start":{"line":48,"column":0},"end":{"line":51,"column":2}}},"branchMap":{"1":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":12},"end":{"line":23,"column":21}},{"start":{"line":23,"column":25},"end":{"line":23,"column":64}},{"start":{"line":23,"column":68},"end":{"line":23,"column":87}},{"start":{"line":23,"column":91},"end":{"line":23,"column":127}}]},"2":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":2},"end":{"line":27,"column":2}},{"start":{"line":27,"column":2},"end":{"line":27,"column":2}}]},"3":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]},"4":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":11},"end":{"line":38,"column":37}},{"start":{"line":38,"column":41},"end":{"line":38,"column":60}}]},"5":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":9},"end":{"line":39,"column":9}},{"start":{"line":39,"column":9},"end":{"line":39,"column":9}}]},"6":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":11},"end":{"line":41,"column":32}},{"start":{"line":41,"column":36},"end":{"line":41,"column":50}},{"start":{"line":41,"column":54},"end":{"line":41,"column":74}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayContainerUtils"," * "," */","","'use strict';","","/**"," * @internal"," *"," * Helper for checking if this is a React Component"," * created with React.Component or React.createClass()."," */","","function isReactComponent(component) {","  return !!(component && typeof component.prototype === 'object' && component.prototype && component.prototype.isReactComponent);","}","","function getReactComponent(Component) {","  if (isReactComponent(Component)) {","    return Component;","  } else {","    return null;","  }","}","","function getComponentName(Component) {","  var name = void 0;","  var ComponentClass = getReactComponent(Component);","  if (ComponentClass) {","    name = ComponentClass.displayName || ComponentClass.name;","  } else if (typeof Component === 'function') {","    // This is a stateless functional component.","    name = Component.displayName || Component.name || 'StatelessComponent';","  } else {","    name = 'ReactElement';","  }","  return name;","}","","module.exports = {","  getComponentName: getComponentName,","  getReactComponent: getReactComponent","};"],"l":{"22":1,"23":0,"26":1,"27":0,"28":0,"30":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"41":0,"43":0,"45":0,"48":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayPropTypes.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayPropTypes.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"Container","line":19,"loc":{"start":{"line":19,"column":13},"end":{"line":19,"column":64}}},"2":{"name":"Environment","line":28,"loc":{"start":{"line":28,"column":15},"end":{"line":28,"column":68}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":16,"column":35}},"2":{"start":{"line":18,"column":0},"end":{"line":42,"column":2}},"3":{"start":{"line":20,"column":4},"end":{"line":20,"column":36}},"4":{"start":{"line":21,"column":4},"end":{"line":25,"column":5}},"5":{"start":{"line":22,"column":6},"end":{"line":22,"column":126}},"6":{"start":{"line":23,"column":11},"end":{"line":25,"column":5}},"7":{"start":{"line":24,"column":6},"end":{"line":24,"column":143}},"8":{"start":{"line":26,"column":4},"end":{"line":26,"column":16}},"9":{"start":{"line":29,"column":4},"end":{"line":29,"column":34}},"10":{"start":{"line":30,"column":4},"end":{"line":32,"column":5}},"11":{"start":{"line":31,"column":6},"end":{"line":31,"column":216}},"12":{"start":{"line":33,"column":4},"end":{"line":33,"column":16}},"13":{"start":{"line":44,"column":0},"end":{"line":44,"column":32}}},"branchMap":{"1":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":4}},{"start":{"line":21,"column":4},"end":{"line":21,"column":4}}]},"2":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":11},"end":{"line":23,"column":11}},{"start":{"line":23,"column":11},"end":{"line":23,"column":11}}]},"3":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":4},"end":{"line":30,"column":4}},{"start":{"line":30,"column":4},"end":{"line":30,"column":4}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayPropTypes"," * "," */","","'use strict';","","var _require = require('react'),","    PropTypes = _require.PropTypes;","","var RelayPropTypes = {","  Container: function Container(props, propName, componentName) {","    var component = props[propName];","    if (component == null) {","      return new Error(require('fbjs/lib/sprintf')('Required prop `%s` was not specified in `%s`.', propName, componentName));","    } else if (!require('./isRelayContainer')(component)) {","      return new Error(require('fbjs/lib/sprintf')('Invalid prop `%s` supplied to `%s`, expected a RelayContainer.', propName, componentName));","    }","    return null;","  },","  Environment: function Environment(props, propName, componentName) {","    var context = props[propName];","    if (!require('./isRelayEnvironment')(context)) {","      return new Error(require('fbjs/lib/sprintf')('Invalid prop/context `%s` supplied to `%s`, expected `%s` to be ' + 'an object conforming to the `RelayEnvironment` interface.', propName, componentName, context));","    }","    return null;","  },","","","  QueryConfig: PropTypes.shape({","    name: PropTypes.string.isRequired,","    params: PropTypes.object.isRequired,","    queries: PropTypes.object.isRequired","  })","};","","module.exports = RelayPropTypes;"],"l":{"15":1,"18":1,"20":0,"21":0,"22":0,"23":0,"24":0,"26":0,"29":0,"30":0,"31":0,"33":0,"44":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayContainerProxy.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayContainerProxy.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":14,"column":0},"end":{"line":14,"column":53}}},"branchMap":{},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayContainerProxy"," */","","'use strict';","","module.exports = require('./RelayOSSContainerProxy');"],"l":{"14":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayOSSContainerProxy.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayOSSContainerProxy.js","s":{"1":1,"2":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"proxyMethods","line":19,"loc":{"start":{"line":19,"column":16},"end":{"line":19,"column":60}}}},"statementMap":{"1":{"start":{"line":18,"column":0},"end":{"line":20,"column":2}},"2":{"start":{"line":22,"column":0},"end":{"line":22,"column":40}}},"branchMap":{},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayOSSContainerProxy"," * "," */","","'use strict';","","/**"," * This feature is deprecated and unavailable in open source."," */","var RelayOSSContainerProxy = {","  proxyMethods: function proxyMethods(Container, Component) {}","};","","module.exports = RelayOSSContainerProxy;"],"l":{"18":1,"22":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayDefaultNetworkLayer.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayDefaultNetworkLayer.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":4,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1,"54":0,"55":1,"56":1,"57":0,"58":0,"59":0,"60":0,"61":1,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":1,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":1},"b":{"1":[3,1],"2":[4,4],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"f":{"1":4,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":37}}},"2":{"name":"(anonymous_2)","line":25,"loc":{"start":{"line":25,"column":31},"end":{"line":25,"column":43}}},"3":{"name":"RelayDefaultNetworkLayer","line":28,"loc":{"start":{"line":28,"column":2},"end":{"line":28,"column":47}}},"4":{"name":"sendMutation","line":40,"loc":{"start":{"line":40,"column":52},"end":{"line":40,"column":83}}},"5":{"name":"(anonymous_5)","line":41,"loc":{"start":{"line":41,"column":44},"end":{"line":41,"column":62}}},"6":{"name":"(anonymous_6)","line":43,"loc":{"start":{"line":43,"column":12},"end":{"line":43,"column":31}}},"7":{"name":"(anonymous_7)","line":50,"loc":{"start":{"line":50,"column":16},"end":{"line":50,"column":33}}},"8":{"name":"sendQueries","line":55,"loc":{"start":{"line":55,"column":51},"end":{"line":55,"column":82}}},"9":{"name":"(anonymous_9)","line":58,"loc":{"start":{"line":58,"column":49},"end":{"line":58,"column":68}}},"10":{"name":"(anonymous_10)","line":59,"loc":{"start":{"line":59,"column":44},"end":{"line":59,"column":62}}},"11":{"name":"(anonymous_11)","line":61,"loc":{"start":{"line":61,"column":14},"end":{"line":61,"column":33}}},"12":{"name":"(anonymous_12)","line":70,"loc":{"start":{"line":70,"column":18},"end":{"line":70,"column":35}}},"13":{"name":"supports","line":76,"loc":{"start":{"line":76,"column":48},"end":{"line":76,"column":68}}},"14":{"name":"_sendMutation","line":86,"loc":{"start":{"line":86,"column":53},"end":{"line":86,"column":85}}},"15":{"name":"(anonymous_15)","line":118,"loc":{"start":{"line":118,"column":59},"end":{"line":118,"column":79}}},"16":{"name":"_sendQuery","line":128,"loc":{"start":{"line":128,"column":50},"end":{"line":128,"column":79}}},"17":{"name":"throwOnServerError","line":151,"loc":{"start":{"line":151,"column":0},"end":{"line":151,"column":47}}},"18":{"name":"(anonymous_18)","line":155,"loc":{"start":{"line":155,"column":32},"end":{"line":155,"column":51}}},"19":{"name":"formatRequestErrors","line":164,"loc":{"start":{"line":164,"column":0},"end":{"line":164,"column":46}}},"20":{"name":"(anonymous_20)","line":169,"loc":{"start":{"line":169,"column":20},"end":{"line":169,"column":40}}},"21":{"name":"(anonymous_21)","line":177,"loc":{"start":{"line":177,"column":59},"end":{"line":177,"column":76}}},"22":{"name":"(anonymous_22)","line":183,"loc":{"start":{"line":183,"column":114},"end":{"line":183,"column":137}}},"23":{"name":"createRequestError","line":192,"loc":{"start":{"line":192,"column":0},"end":{"line":192,"column":62}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":81}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":95}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":90}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":68}},"5":{"start":{"line":23,"column":0},"end":{"line":23,"column":97}},"6":{"start":{"line":23,"column":39},"end":{"line":23,"column":95}},"7":{"start":{"line":25,"column":0},"end":{"line":143,"column":4}},"8":{"start":{"line":28,"column":2},"end":{"line":38,"column":3}},"9":{"start":{"line":29,"column":4},"end":{"line":29,"column":69}},"10":{"start":{"line":31,"column":4},"end":{"line":31,"column":20}},"11":{"start":{"line":32,"column":4},"end":{"line":32,"column":53}},"12":{"start":{"line":35,"column":4},"end":{"line":35,"column":53}},"13":{"start":{"line":36,"column":4},"end":{"line":36,"column":51}},"14":{"start":{"line":37,"column":4},"end":{"line":37,"column":45}},"15":{"start":{"line":40,"column":2},"end":{"line":53,"column":4}},"16":{"start":{"line":41,"column":4},"end":{"line":52,"column":7}},"17":{"start":{"line":42,"column":6},"end":{"line":42,"column":27}},"18":{"start":{"line":44,"column":6},"end":{"line":49,"column":7}},"19":{"start":{"line":45,"column":8},"end":{"line":45,"column":64}},"20":{"start":{"line":46,"column":8},"end":{"line":46,"column":30}},"21":{"start":{"line":48,"column":8},"end":{"line":48,"column":52}},"22":{"start":{"line":51,"column":6},"end":{"line":51,"column":35}},"23":{"start":{"line":55,"column":2},"end":{"line":74,"column":4}},"24":{"start":{"line":56,"column":4},"end":{"line":56,"column":21}},"25":{"start":{"line":58,"column":4},"end":{"line":73,"column":8}},"26":{"start":{"line":59,"column":6},"end":{"line":72,"column":9}},"27":{"start":{"line":60,"column":8},"end":{"line":60,"column":29}},"28":{"start":{"line":62,"column":8},"end":{"line":69,"column":9}},"29":{"start":{"line":63,"column":10},"end":{"line":63,"column":66}},"30":{"start":{"line":64,"column":10},"end":{"line":64,"column":32}},"31":{"start":{"line":65,"column":15},"end":{"line":69,"column":9}},"32":{"start":{"line":66,"column":10},"end":{"line":66,"column":118}},"33":{"start":{"line":68,"column":10},"end":{"line":68,"column":54}},"34":{"start":{"line":71,"column":8},"end":{"line":71,"column":37}},"35":{"start":{"line":76,"column":2},"end":{"line":79,"column":4}},"36":{"start":{"line":78,"column":4},"end":{"line":78,"column":17}},"37":{"start":{"line":86,"column":2},"end":{"line":121,"column":4}},"38":{"start":{"line":87,"column":4},"end":{"line":87,"column":22}},"39":{"start":{"line":88,"column":4},"end":{"line":88,"column":35}},"40":{"start":{"line":89,"column":4},"end":{"line":117,"column":5}},"41":{"start":{"line":90,"column":6},"end":{"line":92,"column":7}},"42":{"start":{"line":91,"column":8},"end":{"line":91,"column":77}},"43":{"start":{"line":93,"column":6},"end":{"line":93,"column":36}},"44":{"start":{"line":94,"column":6},"end":{"line":94,"column":57}},"45":{"start":{"line":95,"column":6},"end":{"line":95,"column":88}},"46":{"start":{"line":96,"column":6},"end":{"line":100,"column":7}},"47":{"start":{"line":97,"column":8},"end":{"line":99,"column":9}},"48":{"start":{"line":98,"column":10},"end":{"line":98,"column":53}},"49":{"start":{"line":101,"column":6},"end":{"line":104,"column":9}},"50":{"start":{"line":106,"column":6},"end":{"line":116,"column":9}},"51":{"start":{"line":118,"column":4},"end":{"line":120,"column":7}},"52":{"start":{"line":119,"column":6},"end":{"line":119,"column":51}},"53":{"start":{"line":128,"column":2},"end":{"line":140,"column":4}},"54":{"start":{"line":129,"column":4},"end":{"line":139,"column":8}},"55":{"start":{"line":142,"column":2},"end":{"line":142,"column":34}},"56":{"start":{"line":151,"column":0},"end":{"line":159,"column":1}},"57":{"start":{"line":152,"column":2},"end":{"line":158,"column":3}},"58":{"start":{"line":153,"column":4},"end":{"line":153,"column":20}},"59":{"start":{"line":155,"column":4},"end":{"line":157,"column":7}},"60":{"start":{"line":156,"column":6},"end":{"line":156,"column":66}},"61":{"start":{"line":164,"column":0},"end":{"line":190,"column":1}},"62":{"start":{"line":165,"column":2},"end":{"line":165,"column":26}},"63":{"start":{"line":166,"column":2},"end":{"line":166,"column":26}},"64":{"start":{"line":168,"column":2},"end":{"line":168,"column":56}},"65":{"start":{"line":169,"column":2},"end":{"line":189,"column":16}},"66":{"start":{"line":170,"column":4},"end":{"line":171,"column":31}},"67":{"start":{"line":173,"column":4},"end":{"line":173,"column":31}},"68":{"start":{"line":174,"column":4},"end":{"line":174,"column":43}},"69":{"start":{"line":177,"column":4},"end":{"line":186,"column":23}},"70":{"start":{"line":178,"column":6},"end":{"line":179,"column":28}},"71":{"start":{"line":181,"column":6},"end":{"line":181,"column":43}},"72":{"start":{"line":182,"column":6},"end":{"line":182,"column":56}},"73":{"start":{"line":183,"column":6},"end":{"line":185,"column":20}},"74":{"start":{"line":184,"column":8},"end":{"line":184,"column":36}},"75":{"start":{"line":188,"column":4},"end":{"line":188,"column":46}},"76":{"start":{"line":192,"column":0},"end":{"line":199,"column":1}},"77":{"start":{"line":193,"column":2},"end":{"line":193,"column":96}},"78":{"start":{"line":194,"column":2},"end":{"line":194,"column":154}},"79":{"start":{"line":195,"column":2},"end":{"line":195,"column":158}},"80":{"start":{"line":196,"column":2},"end":{"line":196,"column":25}},"81":{"start":{"line":197,"column":2},"end":{"line":197,"column":32}},"82":{"start":{"line":198,"column":2},"end":{"line":198,"column":15}},"83":{"start":{"line":201,"column":0},"end":{"line":201,"column":42}}},"branchMap":{"1":{"line":23,"type":"cond-expr","locations":[{"start":{"line":23,"column":70},"end":{"line":23,"column":73}},{"start":{"line":23,"column":76},"end":{"line":23,"column":94}}]},"2":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":46},"end":{"line":23,"column":49}},{"start":{"line":23,"column":53},"end":{"line":23,"column":67}}]},"3":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":6},"end":{"line":44,"column":6}},{"start":{"line":44,"column":6},"end":{"line":44,"column":6}}]},"4":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":8},"end":{"line":62,"column":8}},{"start":{"line":62,"column":8},"end":{"line":62,"column":8}}]},"5":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":15},"end":{"line":65,"column":15}},{"start":{"line":65,"column":15},"end":{"line":65,"column":15}}]},"6":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":4},"end":{"line":89,"column":4}},{"start":{"line":89,"column":4},"end":{"line":89,"column":4}}]},"7":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":6},"end":{"line":90,"column":6}},{"start":{"line":90,"column":6},"end":{"line":90,"column":6}}]},"8":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":8},"end":{"line":97,"column":8}},{"start":{"line":97,"column":8},"end":{"line":97,"column":8}}]},"9":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":2},"end":{"line":152,"column":2}},{"start":{"line":152,"column":2},"end":{"line":152,"column":2}}]},"10":{"line":152,"type":"binary-expr","locations":[{"start":{"line":152,"column":6},"end":{"line":152,"column":28}},{"start":{"line":152,"column":32},"end":{"line":152,"column":53}}]},"11":{"line":177,"type":"cond-expr","locations":[{"start":{"line":177,"column":38},"end":{"line":186,"column":17}},{"start":{"line":186,"column":20},"end":{"line":186,"column":22}}]},"12":{"line":193,"type":"cond-expr","locations":[{"start":{"line":193,"column":75},"end":{"line":193,"column":85}},{"start":{"line":193,"column":88},"end":{"line":193,"column":95}}]},"13":{"line":194,"type":"cond-expr","locations":[{"start":{"line":194,"column":50},"end":{"line":194,"column":94}},{"start":{"line":194,"column":97},"end":{"line":194,"column":153}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayDefaultNetworkLayer"," * "," */","","'use strict';","","var _extends3 = _interopRequireDefault(require('babel-runtime/helpers/extends'));","","var _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));","","var _stringify2 = _interopRequireDefault(require('babel-runtime/core-js/json/stringify'));","","var _promise2 = _interopRequireDefault(require('fbjs/lib/Promise'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","var RelayDefaultNetworkLayer = function () {","  // InitWithRetries","","  function RelayDefaultNetworkLayer(uri, init) {","    (0, _classCallCheck3['default'])(this, RelayDefaultNetworkLayer);","","    this._uri = uri;","    this._init = (0, _extends3['default'])({}, init);","","    // Facilitate reuse when creating custom network layers.","    this.sendMutation = this.sendMutation.bind(this);","    this.sendQueries = this.sendQueries.bind(this);","    this.supports = this.supports.bind(this);","  }","","  RelayDefaultNetworkLayer.prototype.sendMutation = function sendMutation(request) {","    return this._sendMutation(request).then(function (result) {","      return result.json();","    }).then(function (payload) {","      if (payload.hasOwnProperty('errors')) {","        var error = createRequestError(request, '200', payload);","        request.reject(error);","      } else {","        request.resolve({ response: payload.data });","      }","    })['catch'](function (error) {","      return request.reject(error);","    });","  };","","  RelayDefaultNetworkLayer.prototype.sendQueries = function sendQueries(requests) {","    var _this = this;","","    return _promise2['default'].all(requests.map(function (request) {","      return _this._sendQuery(request).then(function (result) {","        return result.json();","      }).then(function (payload) {","        if (payload.hasOwnProperty('errors')) {","          var error = createRequestError(request, '200', payload);","          request.reject(error);","        } else if (!payload.hasOwnProperty('data')) {","          request.reject(new Error('Server response was missing for query ' + ('`' + request.getDebugName() + '`.')));","        } else {","          request.resolve({ response: payload.data });","        }","      })['catch'](function (error) {","        return request.reject(error);","      });","    }));","  };","","  RelayDefaultNetworkLayer.prototype.supports = function supports() {","    // Does not support the only defined option, \"defer\".","    return false;","  };","","  /**","   * Sends a POST request with optional files.","   */","","","  RelayDefaultNetworkLayer.prototype._sendMutation = function _sendMutation(request) {","    var init = void 0;","    var files = request.getFiles();","    if (files) {","      if (!global.FormData) {","        throw new Error('Uploading files without `FormData` not supported.');","      }","      var formData = new FormData();","      formData.append('query', request.getQueryString());","      formData.append('variables', (0, _stringify2['default'])(request.getVariables()));","      for (var filename in files) {","        if (files.hasOwnProperty(filename)) {","          formData.append(filename, files[filename]);","        }","      }","      init = (0, _extends3['default'])({}, this._init, {","        body: formData,","        method: 'POST'","      });","    } else {","      init = (0, _extends3['default'])({}, this._init, {","        body: (0, _stringify2['default'])({","          query: request.getQueryString(),","          variables: request.getVariables()","        }),","        headers: (0, _extends3['default'])({}, this._init.headers, {","          'Accept': '*/*',","          'Content-Type': 'application/json'","        }),","        method: 'POST'","      });","    }","    return require('fbjs/lib/fetch')(this._uri, init).then(function (response) {","      return throwOnServerError(request, response);","    });","  };","","  /**","   * Sends a POST request and retries if the request fails or times out.","   */","","","  RelayDefaultNetworkLayer.prototype._sendQuery = function _sendQuery(request) {","    return require('fbjs/lib/fetchWithRetries')(this._uri, (0, _extends3['default'])({}, this._init, {","      body: (0, _stringify2['default'])({","        query: request.getQueryString(),","        variables: request.getVariables()","      }),","      headers: (0, _extends3['default'])({}, this._init.headers, {","        'Accept': '*/*',","        'Content-Type': 'application/json'","      }),","      method: 'POST'","    }));","  };","","  return RelayDefaultNetworkLayer;","}();","","/**"," * Rejects HTTP responses with a status code that is not >= 200 and < 300."," * This is done to follow the internal behavior of `fetchWithRetries`."," */","","","function throwOnServerError(request, response) {","  if (response.status >= 200 && response.status < 300) {","    return response;","  } else {","    return response.text().then(function (payload) {","      throw createRequestError(request, response.status, payload);","    });","  }","}","","/**"," * Formats an error response from GraphQL server request."," */","function formatRequestErrors(request, errors) {","  var CONTEXT_BEFORE = 20;","  var CONTEXT_LENGTH = 60;","","  var queryLines = request.getQueryString().split('\\n');","  return errors.map(function (_ref, ii) {","    var locations = _ref.locations,","        message = _ref.message;","","    var prefix = ii + 1 + '. ';","    var indent = ' '.repeat(prefix.length);","","    //custom errors thrown in graphql-server may not have locations","    var locationMessage = locations ? '\\n' + locations.map(function (_ref2) {","      var column = _ref2.column,","          line = _ref2.line;","","      var queryLine = queryLines[line - 1];","      var offset = Math.min(column - 1, CONTEXT_BEFORE);","      return [queryLine.substr(column - 1 - offset, CONTEXT_LENGTH), ' '.repeat(Math.max(0, offset)) + '^^^'].map(function (messageLine) {","        return indent + messageLine;","      }).join('\\n');","    }).join('\\n') : '';","","    return prefix + message + locationMessage;","  }).join('\\n');","}","","function createRequestError(request, responseStatus, payload) {","  var requestType = request instanceof require('./RelayMutationRequest') ? 'mutation' : 'query';","  var errorReason = typeof payload === 'object' ? formatRequestErrors(request, payload.errors) : 'Server response had an error status: ' + responseStatus;","  var error = new Error('Server request for ' + requestType + ' `' + request.getDebugName() + '` ' + ('failed for the following reasons:\\n\\n' + errorReason));","  error.source = payload;","  error.status = responseStatus;","  return error;","}","","module.exports = RelayDefaultNetworkLayer;"],"l":{"15":1,"17":1,"19":1,"21":1,"23":4,"25":1,"28":1,"29":0,"31":0,"32":0,"35":0,"36":0,"37":0,"40":1,"41":0,"42":0,"44":0,"45":0,"46":0,"48":0,"51":0,"55":1,"56":0,"58":0,"59":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"68":0,"71":0,"76":1,"78":0,"86":1,"87":0,"88":0,"89":0,"90":0,"91":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"101":0,"106":0,"118":0,"119":0,"128":1,"129":0,"142":1,"151":1,"152":0,"153":0,"155":0,"156":0,"164":1,"165":0,"166":0,"168":0,"169":0,"170":0,"173":0,"174":0,"177":0,"178":0,"181":0,"182":0,"183":0,"184":0,"188":0,"192":1,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"201":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayEnvironmentSerializer.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayEnvironmentSerializer.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":1},"b":{"1":[1,0],"2":[1,1]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":37}}},"2":{"name":"serialize","line":20,"loc":{"start":{"line":20,"column":13},"end":{"line":20,"column":50}}},"3":{"name":"deserialize","line":23,"loc":{"start":{"line":23,"column":15},"end":{"line":23,"column":41}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":90}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":97}},"3":{"start":{"line":17,"column":39},"end":{"line":17,"column":95}},"4":{"start":{"line":19,"column":0},"end":{"line":26,"column":2}},"5":{"start":{"line":21,"column":4},"end":{"line":21,"column":72}},"6":{"start":{"line":24,"column":4},"end":{"line":24,"column":102}},"7":{"start":{"line":28,"column":0},"end":{"line":28,"column":44}}},"branchMap":{"1":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":70},"end":{"line":17,"column":73}},{"start":{"line":17,"column":76},"end":{"line":17,"column":94}}]},"2":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":46},"end":{"line":17,"column":49}},{"start":{"line":17,"column":53},"end":{"line":17,"column":67}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayEnvironmentSerializer"," * "," */","","'use strict';","","var _stringify2 = _interopRequireDefault(require('babel-runtime/core-js/json/stringify'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","var RelayEnvironmentSerializer = {","  serialize: function serialize(relayEnvironment) {","    return (0, _stringify2['default'])(relayEnvironment.getStoreData());","  },","  deserialize: function deserialize(str) {","    return new (require('./RelayEnvironment'))(require('./RelayStoreData').fromJSON(JSON.parse(str)));","  }","};","","module.exports = RelayEnvironmentSerializer;"],"l":{"15":1,"17":1,"19":1,"21":0,"24":0,"28":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayEnvironmentTypes.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayEnvironmentTypes.js","s":{},"b":{},"f":{},"fnMap":{},"statementMap":{},"branchMap":{},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayEnvironmentTypes"," * "," */","","'use strict';"],"l":{}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayError.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayError.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1},"b":{},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"create","line":21,"loc":{"start":{"line":21,"column":10},"end":{"line":21,"column":40}}},"2":{"name":"createWarning","line":28,"loc":{"start":{"line":28,"column":17},"end":{"line":28,"column":54}}},"3":{"name":"createError","line":40,"loc":{"start":{"line":40,"column":0},"end":{"line":40,"column":47}}}},"statementMap":{"1":{"start":{"line":20,"column":0},"end":{"line":35,"column":2}},"2":{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},"3":{"start":{"line":23,"column":6},"end":{"line":23,"column":39}},"4":{"start":{"line":26,"column":4},"end":{"line":26,"column":54}},"5":{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},"6":{"start":{"line":30,"column":6},"end":{"line":30,"column":41}},"7":{"start":{"line":33,"column":4},"end":{"line":33,"column":51}},"8":{"start":{"line":40,"column":0},"end":{"line":48,"column":1}},"9":{"start":{"line":42,"column":2},"end":{"line":42,"column":93}},"10":{"start":{"line":44,"column":2},"end":{"line":44,"column":20}},"11":{"start":{"line":45,"column":2},"end":{"line":45,"column":20}},"12":{"start":{"line":46,"column":2},"end":{"line":46,"column":24}},"13":{"start":{"line":47,"column":2},"end":{"line":47,"column":15}},"14":{"start":{"line":50,"column":0},"end":{"line":50,"column":28}}},"branchMap":{},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayError"," * "," */","","'use strict';","","/**"," * @internal"," *"," * Factory methods for constructing errors in Relay."," */","var RelayError = {","  create: function create(name, format) {","    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {","      args[_key - 2] = arguments[_key];","    }","","    return createError('mustfix', name, format, args);","  },","  createWarning: function createWarning(name, format) {","    for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {","      args[_key2 - 2] = arguments[_key2];","    }","","    return createError('warn', name, format, args);","  }","};","","/**"," * @private"," */","function createError(type, name, format, args) {","  /*eslint-disable fb-www/sprintf-like-args */","  var error = new Error(require('fbjs/lib/sprintf').apply(undefined, [format].concat(args)));","  /*eslint-enable fb-www/sprintf-like-args */","  error.name = name;","  error.type = type;","  error.framesToPop = 2;","  return error;","}","","module.exports = RelayError;"],"l":{"20":1,"22":0,"23":0,"26":0,"29":0,"30":0,"33":0,"40":1,"42":0,"44":0,"45":0,"46":0,"47":0,"50":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayEventStatus.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayEventStatus.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"1":[1,0],"2":[1,1],"3":[0,0,0,0,0,0,0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":37}}},"2":{"name":"parseEvents","line":24,"loc":{"start":{"line":24,"column":15},"end":{"line":24,"column":44}}},"3":{"name":"(anonymous_3)","line":25,"loc":{"start":{"line":25,"column":25},"end":{"line":25,"column":62}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":81}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":97}},"3":{"start":{"line":17,"column":39},"end":{"line":17,"column":95}},"4":{"start":{"line":23,"column":0},"end":{"line":67,"column":2}},"5":{"start":{"line":25,"column":4},"end":{"line":65,"column":7}},"6":{"start":{"line":26,"column":6},"end":{"line":59,"column":7}},"7":{"start":{"line":28,"column":10},"end":{"line":31,"column":13}},"8":{"start":{"line":33,"column":10},"end":{"line":36,"column":13}},"9":{"start":{"line":38,"column":10},"end":{"line":42,"column":13}},"10":{"start":{"line":44,"column":10},"end":{"line":48,"column":13}},"11":{"start":{"line":52,"column":10},"end":{"line":56,"column":13}},"12":{"start":{"line":58,"column":10},"end":{"line":58,"column":36}}},"branchMap":{"1":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":70},"end":{"line":17,"column":73}},{"start":{"line":17,"column":76},"end":{"line":17,"column":94}}]},"2":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":46},"end":{"line":17,"column":49}},{"start":{"line":17,"column":53},"end":{"line":17,"column":67}}]},"3":{"line":26,"type":"switch","locations":[{"start":{"line":27,"column":8},"end":{"line":31,"column":13}},{"start":{"line":32,"column":8},"end":{"line":36,"column":13}},{"start":{"line":37,"column":8},"end":{"line":42,"column":13}},{"start":{"line":43,"column":8},"end":{"line":48,"column":13}},{"start":{"line":49,"column":8},"end":{"line":49,"column":39}},{"start":{"line":50,"column":8},"end":{"line":50,"column":47}},{"start":{"line":51,"column":8},"end":{"line":56,"column":13}},{"start":{"line":57,"column":8},"end":{"line":58,"column":36}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayEventStatus"," * "," */","","'use strict';","","var _extends3 = _interopRequireDefault(require('babel-runtime/helpers/extends'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","/**"," * Parses Relay ready state events so users of RelayRenderer can have more fine grain control in the"," * relayRender callback."," */","module.exports = {","  parseEvents: function parseEvents(events) {","    return events.reduce(function (intermediateStatus, event) {","      switch (event.type) {","        case 'CACHE_RESTORE_FAILED':","          return (0, _extends3['default'])({}, intermediateStatus, {","            error: true,","            loadingCache: false","          });","        case 'NETWORK_QUERY_ERROR':","          return (0, _extends3['default'])({}, intermediateStatus, {","            error: true,","            loadingNetwork: false","          });","        case 'NETWORK_QUERY_START':","          return (0, _extends3['default'])({}, intermediateStatus, {","            error: false,","            loadingNetwork: true,","            ready: false","          });","        case 'CACHE_RESTORE_START':","          return (0, _extends3['default'])({}, intermediateStatus, {","            error: false,","            loadingCache: true,","            ready: false","          });","        case 'CACHE_RESTORED_REQUIRED':","        case 'NETWORK_QUERY_RECEIVED_REQUIRED':","        case 'NETWORK_QUERY_RECEIVED_ALL':","          return (0, _extends3['default'])({}, intermediateStatus, {","            error: false,","            loadingCache: false,","            ready: true","          });","        default:","          return intermediateStatus;","      }","    }, {","      error: false,","      loadingCache: false,","      loadingNetwork: false,","      ready: false","    });","  }","};"],"l":{"15":1,"17":1,"23":1,"25":0,"26":0,"28":0,"33":0,"38":0,"44":0,"52":0,"58":0}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayFetchMode.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayFetchMode.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1},"b":{"1":[1,0],"2":[1,1]},"f":{"1":1},"fnMap":{"1":{"name":"_interopRequireDefault","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":37}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":86}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":97}},"3":{"start":{"line":17,"column":39},"end":{"line":17,"column":95}},"4":{"start":{"line":19,"column":0},"end":{"line":23,"column":3}},"5":{"start":{"line":25,"column":0},"end":{"line":25,"column":32}}},"branchMap":{"1":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":70},"end":{"line":17,"column":73}},{"start":{"line":17,"column":76},"end":{"line":17,"column":94}}]},"2":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":46},"end":{"line":17,"column":49}},{"start":{"line":17,"column":53},"end":{"line":17,"column":67}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayFetchMode"," * "," */","","'use strict';","","var _freeze2 = _interopRequireDefault(require('babel-runtime/core-js/object/freeze'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","var RelayFetchMode = (0, _freeze2['default'])({","  CLIENT: 'CLIENT',","  PRELOAD: 'PRELOAD',","  REFETCH: 'REFETCH'","});","","module.exports = RelayFetchMode;"],"l":{"15":1,"17":1,"19":1,"25":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayFragmentPointer.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayFragmentPointer.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"addFragment","line":23,"loc":{"start":{"line":23,"column":15},"end":{"line":23,"column":54}}},"2":{"name":"hasConcreteFragment","line":43,"loc":{"start":{"line":43,"column":23},"end":{"line":43,"column":70}}},"3":{"name":"hasFragment","line":57,"loc":{"start":{"line":57,"column":15},"end":{"line":57,"column":54}}},"4":{"name":"(anonymous_4)","line":60,"loc":{"start":{"line":60,"column":31},"end":{"line":60,"column":47}}},"5":{"name":"getVariablesForID","line":66,"loc":{"start":{"line":66,"column":21},"end":{"line":66,"column":68}}},"6":{"name":"getFragmentVariables","line":83,"loc":{"start":{"line":83,"column":24},"end":{"line":83,"column":72}}},"7":{"name":"create","line":94,"loc":{"start":{"line":94,"column":10},"end":{"line":94,"column":44}}},"8":{"name":"createForRoot","line":99,"loc":{"start":{"line":99,"column":17},"end":{"line":99,"column":54}}},"9":{"name":"(anonymous_9)","line":106,"loc":{"start":{"line":106,"column":43},"end":{"line":106,"column":59}}},"10":{"name":"getRootFragment","line":126,"loc":{"start":{"line":126,"column":0},"end":{"line":126,"column":32}}},"11":{"name":"(anonymous_11)","line":132,"loc":{"start":{"line":132,"column":30},"end":{"line":132,"column":47}}}},"statementMap":{"1":{"start":{"line":22,"column":0},"end":{"line":124,"column":2}},"2":{"start":{"line":24,"column":4},"end":{"line":24,"column":43}},"3":{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},"4":{"start":{"line":26,"column":6},"end":{"line":26,"column":46}},"5":{"start":{"line":28,"column":4},"end":{"line":28,"column":221}},"6":{"start":{"line":29,"column":4},"end":{"line":29,"column":54}},"7":{"start":{"line":30,"column":4},"end":{"line":30,"column":47}},"8":{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},"9":{"start":{"line":32,"column":6},"end":{"line":32,"column":50}},"10":{"start":{"line":34,"column":4},"end":{"line":34,"column":204}},"11":{"start":{"line":35,"column":4},"end":{"line":35,"column":47}},"12":{"start":{"line":44,"column":4},"end":{"line":44,"column":43}},"13":{"start":{"line":45,"column":4},"end":{"line":48,"column":5}},"14":{"start":{"line":46,"column":6},"end":{"line":46,"column":57}},"15":{"start":{"line":47,"column":6},"end":{"line":47,"column":53}},"16":{"start":{"line":49,"column":4},"end":{"line":49,"column":17}},"17":{"start":{"line":58,"column":4},"end":{"line":58,"column":83}},"18":{"start":{"line":59,"column":4},"end":{"line":63,"column":5}},"19":{"start":{"line":60,"column":6},"end":{"line":62,"column":9}},"20":{"start":{"line":61,"column":8},"end":{"line":61,"column":75}},"21":{"start":{"line":64,"column":4},"end":{"line":64,"column":17}},"22":{"start":{"line":67,"column":4},"end":{"line":67,"column":43}},"23":{"start":{"line":68,"column":4},"end":{"line":74,"column":5}},"24":{"start":{"line":69,"column":6},"end":{"line":69,"column":46}},"25":{"start":{"line":70,"column":6},"end":{"line":73,"column":7}},"26":{"start":{"line":71,"column":8},"end":{"line":71,"column":214}},"27":{"start":{"line":72,"column":8},"end":{"line":72,"column":28}},"28":{"start":{"line":75,"column":4},"end":{"line":75,"column":16}},"29":{"start":{"line":84,"column":4},"end":{"line":84,"column":43}},"30":{"start":{"line":85,"column":4},"end":{"line":91,"column":5}},"31":{"start":{"line":86,"column":6},"end":{"line":86,"column":58}},"32":{"start":{"line":90,"column":6},"end":{"line":90,"column":39}},"33":{"start":{"line":92,"column":4},"end":{"line":92,"column":16}},"34":{"start":{"line":95,"column":4},"end":{"line":95,"column":57}},"35":{"start":{"line":96,"column":4},"end":{"line":96,"column":55}},"36":{"start":{"line":97,"column":4},"end":{"line":97,"column":18}},"37":{"start":{"line":100,"column":4},"end":{"line":100,"column":42}},"38":{"start":{"line":101,"column":4},"end":{"line":103,"column":5}},"39":{"start":{"line":102,"column":6},"end":{"line":102,"column":18}},"40":{"start":{"line":104,"column":4},"end":{"line":104,"column":43}},"41":{"start":{"line":105,"column":4},"end":{"line":105,"column":22}},"42":{"start":{"line":106,"column":4},"end":{"line":115,"column":7}},"43":{"start":{"line":107,"column":6},"end":{"line":107,"column":53}},"44":{"start":{"line":109,"column":6},"end":{"line":109,"column":66}},"45":{"start":{"line":110,"column":6},"end":{"line":114,"column":7}},"46":{"start":{"line":111,"column":8},"end":{"line":111,"column":28}},"47":{"start":{"line":113,"column":8},"end":{"line":113,"column":69}},"48":{"start":{"line":117,"column":4},"end":{"line":117,"column":51}},"49":{"start":{"line":118,"column":4},"end":{"line":118,"column":77}},"50":{"start":{"line":119,"column":4},"end":{"line":121,"column":5}},"51":{"start":{"line":120,"column":6},"end":{"line":120,"column":22}},"52":{"start":{"line":122,"column":4},"end":{"line":122,"column":23}},"53":{"start":{"line":126,"column":0},"end":{"line":141,"column":1}},"54":{"start":{"line":127,"column":2},"end":{"line":127,"column":39}},"55":{"start":{"line":128,"column":2},"end":{"line":130,"column":3}},"56":{"start":{"line":129,"column":4},"end":{"line":129,"column":197}},"57":{"start":{"line":131,"column":2},"end":{"line":131,"column":24}},"58":{"start":{"line":132,"column":2},"end":{"line":139,"column":5}},"59":{"start":{"line":133,"column":4},"end":{"line":138,"column":5}},"60":{"start":{"line":134,"column":6},"end":{"line":134,"column":230}},"61":{"start":{"line":135,"column":6},"end":{"line":135,"column":23}},"62":{"start":{"line":136,"column":11},"end":{"line":138,"column":5}},"63":{"start":{"line":137,"column":6},"end":{"line":137,"column":289}},"64":{"start":{"line":140,"column":2},"end":{"line":140,"column":18}},"65":{"start":{"line":143,"column":0},"end":{"line":143,"column":38}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":25,"column":4}},{"start":{"line":25,"column":4},"end":{"line":25,"column":4}}]},"2":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":34},"end":{"line":28,"column":65}},{"start":{"line":28,"column":69},"end":{"line":28,"column":88}}]},"3":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":31,"column":4}},{"start":{"line":31,"column":4},"end":{"line":31,"column":4}}]},"4":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":4},"end":{"line":45,"column":4}},{"start":{"line":45,"column":4},"end":{"line":45,"column":4}}]},"5":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":39}},{"start":{"line":45,"column":43},"end":{"line":45,"column":62}}]},"6":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":4},"end":{"line":59,"column":4}},{"start":{"line":59,"column":4},"end":{"line":59,"column":4}}]},"7":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":4},"end":{"line":68,"column":4}},{"start":{"line":68,"column":4},"end":{"line":68,"column":4}}]},"8":{"line":68,"type":"binary-expr","locations":[{"start":{"line":68,"column":8},"end":{"line":68,"column":39}},{"start":{"line":68,"column":43},"end":{"line":68,"column":62}}]},"9":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":6},"end":{"line":70,"column":6}},{"start":{"line":70,"column":6},"end":{"line":70,"column":6}}]},"10":{"line":71,"type":"binary-expr","locations":[{"start":{"line":71,"column":38},"end":{"line":71,"column":62}},{"start":{"line":71,"column":66},"end":{"line":71,"column":88}}]},"11":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":4},"end":{"line":85,"column":4}},{"start":{"line":85,"column":4},"end":{"line":85,"column":4}}]},"12":{"line":85,"type":"binary-expr","locations":[{"start":{"line":85,"column":8},"end":{"line":85,"column":39}},{"start":{"line":85,"column":43},"end":{"line":85,"column":62}}]},"13":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":4},"end":{"line":101,"column":4}},{"start":{"line":101,"column":4},"end":{"line":101,"column":4}}]},"14":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":6},"end":{"line":110,"column":6}},{"start":{"line":110,"column":6},"end":{"line":110,"column":6}}]},"15":{"line":118,"type":"binary-expr","locations":[{"start":{"line":118,"column":30},"end":{"line":118,"column":44}},{"start":{"line":118,"column":48},"end":{"line":118,"column":68}},{"start":{"line":118,"column":72},"end":{"line":118,"column":76}}]},"16":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":4},"end":{"line":119,"column":4}},{"start":{"line":119,"column":4},"end":{"line":119,"column":4}}]},"17":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":2},"end":{"line":128,"column":2}},{"start":{"line":128,"column":2},"end":{"line":128,"column":2}}]},"18":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":4},"end":{"line":133,"column":4}},{"start":{"line":133,"column":4},"end":{"line":133,"column":4}}]},"19":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":11},"end":{"line":136,"column":11}},{"start":{"line":136,"column":11},"end":{"line":136,"column":11}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayFragmentPointer"," * "," */","","'use strict';","","/**"," * Fragment pointers encapsulate the fetched data for a fragment reference. They"," * are opaque tokens that are used by Relay containers to read data that is then"," * passed to the underlying React component."," *"," * @internal"," */","var RelayFragmentPointer = {","  addFragment: function addFragment(record, fragment) {","    var fragmentMap = record.__fragments__;","    if (fragmentMap == null) {","      fragmentMap = record.__fragments__ = {};","    }","    require('fbjs/lib/invariant')(typeof fragmentMap === 'object' && fragmentMap != null, 'RelayFragmentPointer: Expected record to contain a fragment map, got ' + '`%s` for record `%s`.', fragmentMap, record.__dataID__);","    var fragmentID = fragment.getConcreteFragmentID();","    var variableList = fragmentMap[fragmentID];","    if (variableList == null) {","      variableList = fragmentMap[fragmentID] = [];","    }","    require('fbjs/lib/invariant')(Array.isArray(variableList), 'RelayFragmentPointer: Expected record to contain a fragment/variable ' + 'map, got `%s` for record `%s`.', variableList, record.__dataID__);","    variableList.push(fragment.getVariables());","  },","","","  /**","   * Returns true if the concrete fragment is included in the fragment pointer","   * results, regardless of the variables.","   */","  hasConcreteFragment: function hasConcreteFragment(record, fragment) {","    var fragmentMap = record.__fragments__;","    if (typeof fragmentMap === 'object' && fragmentMap != null) {","      var _fragmentID = fragment.getConcreteFragmentID();","      return fragmentMap.hasOwnProperty(_fragmentID);","    }","    return false;","  },","","","  /**","   * Returns true if the combination of concrete fragment + variables is","   * included in the fragment pointer results.","   */","  hasFragment: function hasFragment(record, fragment) {","    var variableList = RelayFragmentPointer.getFragmentVariables(record, fragment);","    if (variableList != null) {","      return variableList.some(function (vars) {","        return require('fbjs/lib/areEqual')(vars, fragment.getVariables());","      });","    }","    return false;","  },","  getVariablesForID: function getVariablesForID(record, fragmentID) {","    var fragmentMap = record.__fragments__;","    if (typeof fragmentMap === 'object' && fragmentMap != null) {","      var variables = fragmentMap[fragmentID];","      if (variables) {","        require('fbjs/lib/invariant')(Array.isArray(variables) && variables.length === 1, 'RelayFragmentPointer: Expected an array with at most one set of ' + 'variables per concrete fragment, got %s.', variables);","        return variables[0];","      }","    }","    return null;","  },","","","  /**","   * Returns the list of variables whose results are available for the given","   * concrete fragment.","   */","  getFragmentVariables: function getFragmentVariables(record, fragment) {","    var fragmentMap = record.__fragments__;","    if (typeof fragmentMap === 'object' && fragmentMap != null) {","      var _fragmentID2 = fragment.getConcreteFragmentID();","      /* $FlowFixMe(>=0.36.0) Flow error detected during","       * the deploy of Flow v0.36.0. To see the error, remove this comment and","       * run Flow */","      return fragmentMap[_fragmentID2];","    }","    return null;","  },","  create: function create(dataID, fragment) {","    var record = require('./RelayRecord').create(dataID);","    RelayFragmentPointer.addFragment(record, fragment);","    return record;","  },","  createForRoot: function createForRoot(store, query) {","    var fragment = getRootFragment(query);","    if (!fragment) {","      return null;","    }","    var storageKey = query.getStorageKey();","    var pointers = [];","    require('./forEachRootCallArg')(query, function (_ref) {","      var identifyingArgKey = _ref.identifyingArgKey;","","      var dataID = store.getDataID(storageKey, identifyingArgKey);","      if (dataID == null) {","        pointers.push(null);","      } else {","        pointers.push(RelayFragmentPointer.create(dataID, fragment));","      }","    });","    // Distinguish between singular/plural queries.","    var identifyingArg = query.getIdentifyingArg();","    var identifyingArgValue = identifyingArg && identifyingArg.value || null;","    if (Array.isArray(identifyingArgValue)) {","      return pointers;","    }","    return pointers[0];","  }","};","","function getRootFragment(query) {","  var batchCall = query.getBatchCall();","  if (batchCall) {","    require('fbjs/lib/invariant')(false, 'Queries supplied at the root cannot have batch call variables. Query ' + '`%s` has a batch call variable, `%s`.', query.getName(), batchCall.refParamName);","  }","  var fragment = void 0;","  query.getChildren().forEach(function (child) {","    if (child instanceof require('./RelayQuery').Fragment) {","      require('fbjs/lib/invariant')(!fragment, 'Queries supplied at the root should contain exactly one fragment ' + '(e.g. `${Component.getFragment(\\'...\\')}`). Query `%s` contains ' + 'more than one fragment.', query.getName());","      fragment = child;","    } else if (child instanceof require('./RelayQuery').Field) {","      require('fbjs/lib/invariant')(child.isGenerated(), 'Queries supplied at the root should contain exactly one fragment ' + 'and no fields. Query `%s` contains a field, `%s`. If you need to ' + 'fetch fields, declare them in a Relay container.', query.getName(), child.getSchemaName());","    }","  });","  return fragment;","}","","module.exports = RelayFragmentPointer;"],"l":{"22":1,"24":0,"25":0,"26":0,"28":0,"29":0,"30":0,"31":0,"32":0,"34":0,"35":0,"44":0,"45":0,"46":0,"47":0,"49":0,"58":0,"59":0,"60":0,"61":0,"64":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"75":0,"84":0,"85":0,"86":0,"90":0,"92":0,"95":0,"96":0,"97":0,"100":0,"101":0,"102":0,"104":0,"105":0,"106":0,"107":0,"109":0,"110":0,"111":0,"113":0,"117":0,"118":0,"119":0,"120":0,"122":0,"126":1,"127":0,"128":0,"129":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"140":0,"143":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayFragmentReference.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayFragmentReference.js","s":{"1":1,"2":1,"3":1,"4":2,"5":1,"6":1,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":1,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":0,"34":1,"35":0,"36":1,"37":0,"38":0,"39":1,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":1,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":1,"73":0,"74":1,"75":0,"76":1,"77":0,"78":1,"79":0,"80":0,"81":0,"82":0,"83":0,"84":1,"85":1},"b":{"1":[2,0],"2":[2,2],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":2,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":37}}},"2":{"name":"(anonymous_2)","line":80,"loc":{"start":{"line":80,"column":29},"end":{"line":80,"column":41}}},"3":{"name":"createForContainer","line":81,"loc":{"start":{"line":81,"column":46},"end":{"line":81,"column":143}}},"4":{"name":"RelayFragmentReference","line":87,"loc":{"start":{"line":87,"column":2},"end":{"line":87,"column":103}}},"5":{"name":"conditionOnType","line":101,"loc":{"start":{"line":101,"column":53},"end":{"line":101,"column":80}}},"6":{"name":"getConditions","line":106,"loc":{"start":{"line":106,"column":51},"end":{"line":106,"column":76}}},"7":{"name":"getFragmentUnconditional","line":110,"loc":{"start":{"line":110,"column":62},"end":{"line":110,"column":98}}},"8":{"name":"getInitialVariables","line":119,"loc":{"start":{"line":119,"column":57},"end":{"line":119,"column":88}}},"9":{"name":"getVariableMapping","line":123,"loc":{"start":{"line":123,"column":56},"end":{"line":123,"column":86}}},"10":{"name":"defer","line":132,"loc":{"start":{"line":132,"column":43},"end":{"line":132,"column":60}}},"11":{"name":"_if","line":142,"loc":{"start":{"line":142,"column":43},"end":{"line":142,"column":63}}},"12":{"name":"unless","line":157,"loc":{"start":{"line":157,"column":44},"end":{"line":157,"column":67}}},"13":{"name":"getFragment","line":172,"loc":{"start":{"line":172,"column":49},"end":{"line":172,"column":81}}},"14":{"name":"(anonymous_14)","line":175,"loc":{"start":{"line":175,"column":40},"end":{"line":175,"column":56}}},"15":{"name":"getVariables","line":192,"loc":{"start":{"line":192,"column":50},"end":{"line":192,"column":90}}},"16":{"name":"(anonymous_16)","line":200,"loc":{"start":{"line":200,"column":57},"end":{"line":200,"column":80}}},"17":{"name":"isContainerFragment","line":221,"loc":{"start":{"line":221,"column":57},"end":{"line":221,"column":88}}},"18":{"name":"isDeferred","line":225,"loc":{"start":{"line":225,"column":48},"end":{"line":225,"column":70}}},"19":{"name":"isTypeConditional","line":229,"loc":{"start":{"line":229,"column":55},"end":{"line":229,"column":84}}},"20":{"name":"_addCondition","line":233,"loc":{"start":{"line":233,"column":51},"end":{"line":233,"column":85}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":81}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":95}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":97}},"4":{"start":{"line":19,"column":39},"end":{"line":19,"column":95}},"5":{"start":{"line":80,"column":0},"end":{"line":243,"column":4}},"6":{"start":{"line":81,"column":2},"end":{"line":85,"column":4}},"7":{"start":{"line":82,"column":4},"end":{"line":82,"column":116}},"8":{"start":{"line":83,"column":4},"end":{"line":83,"column":42}},"9":{"start":{"line":84,"column":4},"end":{"line":84,"column":21}},"10":{"start":{"line":87,"column":2},"end":{"line":99,"column":3}},"11":{"start":{"line":88,"column":4},"end":{"line":88,"column":67}},"12":{"start":{"line":90,"column":4},"end":{"line":90,"column":28}},"13":{"start":{"line":91,"column":4},"end":{"line":91,"column":52}},"14":{"start":{"line":92,"column":4},"end":{"line":92,"column":31}},"15":{"start":{"line":93,"column":4},"end":{"line":93,"column":42}},"16":{"start":{"line":94,"column":4},"end":{"line":94,"column":38}},"17":{"start":{"line":95,"column":4},"end":{"line":95,"column":29}},"18":{"start":{"line":96,"column":4},"end":{"line":96,"column":36}},"19":{"start":{"line":97,"column":4},"end":{"line":97,"column":44}},"20":{"start":{"line":98,"column":4},"end":{"line":98,"column":46}},"21":{"start":{"line":101,"column":2},"end":{"line":104,"column":4}},"22":{"start":{"line":102,"column":4},"end":{"line":102,"column":35}},"23":{"start":{"line":103,"column":4},"end":{"line":103,"column":16}},"24":{"start":{"line":106,"column":2},"end":{"line":108,"column":4}},"25":{"start":{"line":107,"column":4},"end":{"line":107,"column":28}},"26":{"start":{"line":110,"column":2},"end":{"line":117,"column":4}},"27":{"start":{"line":111,"column":4},"end":{"line":111,"column":34}},"28":{"start":{"line":112,"column":4},"end":{"line":115,"column":5}},"29":{"start":{"line":113,"column":6},"end":{"line":113,"column":40}},"30":{"start":{"line":114,"column":6},"end":{"line":114,"column":32}},"31":{"start":{"line":116,"column":4},"end":{"line":116,"column":20}},"32":{"start":{"line":119,"column":2},"end":{"line":121,"column":4}},"33":{"start":{"line":120,"column":4},"end":{"line":120,"column":34}},"34":{"start":{"line":123,"column":2},"end":{"line":125,"column":4}},"35":{"start":{"line":124,"column":4},"end":{"line":124,"column":33}},"36":{"start":{"line":132,"column":2},"end":{"line":135,"column":4}},"37":{"start":{"line":133,"column":4},"end":{"line":133,"column":28}},"38":{"start":{"line":134,"column":4},"end":{"line":134,"column":16}},"39":{"start":{"line":142,"column":2},"end":{"line":150,"column":4}},"40":{"start":{"line":143,"column":4},"end":{"line":143,"column":72}},"41":{"start":{"line":144,"column":4},"end":{"line":144,"column":154}},"42":{"start":{"line":145,"column":4},"end":{"line":148,"column":7}},"43":{"start":{"line":149,"column":4},"end":{"line":149,"column":16}},"44":{"start":{"line":157,"column":2},"end":{"line":165,"column":4}},"45":{"start":{"line":158,"column":4},"end":{"line":158,"column":72}},"46":{"start":{"line":159,"column":4},"end":{"line":159,"column":158}},"47":{"start":{"line":160,"column":4},"end":{"line":163,"column":7}},"48":{"start":{"line":164,"column":4},"end":{"line":164,"column":16}},"49":{"start":{"line":172,"column":2},"end":{"line":184,"column":4}},"50":{"start":{"line":174,"column":4},"end":{"line":174,"column":38}},"51":{"start":{"line":175,"column":4},"end":{"line":182,"column":5}},"52":{"start":{"line":176,"column":6},"end":{"line":177,"column":43}},"53":{"start":{"line":179,"column":6},"end":{"line":179,"column":52}},"54":{"start":{"line":181,"column":6},"end":{"line":181,"column":18}},"55":{"start":{"line":183,"column":4},"end":{"line":183,"column":43}},"56":{"start":{"line":192,"column":2},"end":{"line":219,"column":4}},"57":{"start":{"line":193,"column":4},"end":{"line":193,"column":21}},"58":{"start":{"line":195,"column":4},"end":{"line":195,"column":79}},"59":{"start":{"line":198,"column":4},"end":{"line":198,"column":48}},"60":{"start":{"line":199,"column":4},"end":{"line":211,"column":5}},"61":{"start":{"line":200,"column":6},"end":{"line":210,"column":9}},"62":{"start":{"line":201,"column":8},"end":{"line":201,"column":76}},"63":{"start":{"line":202,"column":8},"end":{"line":204,"column":9}},"64":{"start":{"line":203,"column":10},"end":{"line":203,"column":59}},"65":{"start":{"line":205,"column":8},"end":{"line":209,"column":9}},"66":{"start":{"line":206,"column":10},"end":{"line":206,"column":167}},"67":{"start":{"line":208,"column":10},"end":{"line":208,"column":39}},"68":{"start":{"line":213,"column":4},"end":{"line":213,"column":50}},"69":{"start":{"line":214,"column":4},"end":{"line":216,"column":5}},"70":{"start":{"line":215,"column":6},"end":{"line":215,"column":63}},"71":{"start":{"line":218,"column":4},"end":{"line":218,"column":26}},"72":{"start":{"line":221,"column":2},"end":{"line":223,"column":4}},"73":{"start":{"line":222,"column":4},"end":{"line":222,"column":37}},"74":{"start":{"line":225,"column":2},"end":{"line":227,"column":4}},"75":{"start":{"line":226,"column":4},"end":{"line":226,"column":28}},"76":{"start":{"line":229,"column":2},"end":{"line":231,"column":4}},"77":{"start":{"line":230,"column":4},"end":{"line":230,"column":35}},"78":{"start":{"line":233,"column":2},"end":{"line":240,"column":4}},"79":{"start":{"line":234,"column":4},"end":{"line":234,"column":38}},"80":{"start":{"line":235,"column":4},"end":{"line":238,"column":5}},"81":{"start":{"line":236,"column":6},"end":{"line":236,"column":22}},"82":{"start":{"line":237,"column":6},"end":{"line":237,"column":36}},"83":{"start":{"line":239,"column":4},"end":{"line":239,"column":31}},"84":{"start":{"line":242,"column":2},"end":{"line":242,"column":32}},"85":{"start":{"line":245,"column":0},"end":{"line":245,"column":40}}},"branchMap":{"1":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":70},"end":{"line":19,"column":73}},{"start":{"line":19,"column":76},"end":{"line":19,"column":94}}]},"2":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":46},"end":{"line":19,"column":49}},{"start":{"line":19,"column":53},"end":{"line":19,"column":67}}]},"3":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":29},"end":{"line":91,"column":45}},{"start":{"line":91,"column":49},"end":{"line":91,"column":51}}]},"4":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":4},"end":{"line":112,"column":4}},{"start":{"line":112,"column":4},"end":{"line":112,"column":4}}]},"5":{"line":175,"type":"if","locations":[{"start":{"line":175,"column":4},"end":{"line":175,"column":4}},{"start":{"line":175,"column":4},"end":{"line":175,"column":4}}]},"6":{"line":175,"type":"binary-expr","locations":[{"start":{"line":175,"column":8},"end":{"line":175,"column":18}},{"start":{"line":175,"column":22},"end":{"line":180,"column":6}}]},"7":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":4},"end":{"line":199,"column":4}},{"start":{"line":199,"column":4},"end":{"line":199,"column":4}}]},"8":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":8},"end":{"line":202,"column":8}},{"start":{"line":202,"column":8},"end":{"line":202,"column":8}}]},"9":{"line":205,"type":"if","locations":[{"start":{"line":205,"column":8},"end":{"line":205,"column":8}},{"start":{"line":205,"column":8},"end":{"line":205,"column":8}}]},"10":{"line":214,"type":"if","locations":[{"start":{"line":214,"column":4},"end":{"line":214,"column":4}},{"start":{"line":214,"column":4},"end":{"line":214,"column":4}}]},"11":{"line":235,"type":"if","locations":[{"start":{"line":235,"column":4},"end":{"line":235,"column":4}},{"start":{"line":235,"column":4},"end":{"line":235,"column":4}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayFragmentReference"," * "," */","","'use strict';","","var _extends3 = _interopRequireDefault(require('babel-runtime/helpers/extends'));","","var _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","/**"," * @internal"," *"," * RelayFragmentReference is the return type of fragment composition:"," *"," *   fragment on Foo {"," *     ${Child.getFragment('bar', {baz: variables.qux})}"," *   }"," *"," * Whereas a fragment defines a sub-query's structure, a fragment reference is"," * a particular instantiation of the fragment as it is composed within a query"," * or another fragment. It encodes the source fragment, initial variables, and"," * a mapping from variables in the composing query's (or fragment's) scope to"," * variables in the fragment's scope."," *"," * The variable mapping is represented by `variableMapping`, a dictionary that"," * maps from names of variables in the parent scope to variables that exist in"," * the fragment. Example:"," *"," * ```"," * // Fragment:"," * var Container = Relay.createContainer(..., {"," *   initialVariables: {"," *     private: 'foo',"," *     public: 'bar',"," *     variable: null,"," *   },"," *   fragments: {"," *     foo: ..."," *   }"," * });"," *"," * // Reference:"," * ${Container.getQuery("," *   'foo',"," *   // Variable Mapping:"," *   {"," *     public: 'BAR',"," *     variable: variables.source,"," *   }"," * )}"," * ```"," *"," * When evaluating the referenced fragment, `$public` will be overridden with"," * `'Bar'`. The value of `$variable` will become the value of `$source` in the"," * outer scope. This is analagous to:"," *"," * ```"," * function inner(private = 'foo', public = 'bar', variable) {}"," * function outer(source) {"," *   inner(public = 'BAR', variable = source);"," * }"," * ```"," *"," * Where the value of the inner `variable` depends on how `outer` is called."," *"," * The `prepareVariables` function allows for variables to be modified based on"," * the runtime environment or route name."," */","var RelayFragmentReference = function () {","  RelayFragmentReference.createForContainer = function createForContainer(fragmentGetter, initialVariables, variableMapping, prepareVariables) {","    var reference = new RelayFragmentReference(fragmentGetter, initialVariables, variableMapping, prepareVariables);","    reference._isContainerFragment = true;","    return reference;","  };","","  function RelayFragmentReference(fragmentGetter, initialVariables, variableMapping, prepareVariables) {","    (0, _classCallCheck3['default'])(this, RelayFragmentReference);","","    this._conditions = null;","    this._initialVariables = initialVariables || {};","    this._fragment = undefined;","    this._fragmentGetter = fragmentGetter;","    this._isContainerFragment = false;","    this._isDeferred = false;","    this._isTypeConditional = false;","    this._variableMapping = variableMapping;","    this._prepareVariables = prepareVariables;","  }","","  RelayFragmentReference.prototype.conditionOnType = function conditionOnType() {","    this._isTypeConditional = true;","    return this;","  };","","  RelayFragmentReference.prototype.getConditions = function getConditions() {","    return this._conditions;","  };","","  RelayFragmentReference.prototype.getFragmentUnconditional = function getFragmentUnconditional() {","    var fragment = this._fragment;","    if (fragment == null) {","      fragment = this._fragmentGetter();","      this._fragment = fragment;","    }","    return fragment;","  };","","  RelayFragmentReference.prototype.getInitialVariables = function getInitialVariables() {","    return this._initialVariables;","  };","","  RelayFragmentReference.prototype.getVariableMapping = function getVariableMapping() {","    return this._variableMapping;","  };","","  /**","   * Mark this usage of the fragment as deferred.","   */","","","  RelayFragmentReference.prototype.defer = function defer() {","    this._isDeferred = true;","    return this;","  };","","  /**","   * Mark this fragment for inclusion only if the given variable is truthy.","   */","","","  RelayFragmentReference.prototype['if'] = function _if(value) {","    var callVariable = require('./QueryBuilder').getCallVariable(value);","    require('fbjs/lib/invariant')(callVariable, 'RelayFragmentReference: Invalid value `%s` supplied to `if()`. ' + 'Expected a variable.', callVariable);","    this._addCondition({","      passingValue: true,","      variable: callVariable.callVariableName","    });","    return this;","  };","","  /**","   * Mark this fragment for inclusion only if the given variable is falsy.","   */","","","  RelayFragmentReference.prototype.unless = function unless(value) {","    var callVariable = require('./QueryBuilder').getCallVariable(value);","    require('fbjs/lib/invariant')(callVariable, 'RelayFragmentReference: Invalid value `%s` supplied to `unless()`. ' + 'Expected a variable.', callVariable);","    this._addCondition({","      passingValue: false,","      variable: callVariable.callVariableName","    });","    return this;","  };","","  /**","   * Get the referenced fragment if all conditions are met.","   */","","","  RelayFragmentReference.prototype.getFragment = function getFragment(variables) {","    // determine if the variables match the supplied if/unless conditions","    var conditions = this._conditions;","    if (conditions && !conditions.every(function (_ref) {","      var variable = _ref.variable,","          passingValue = _ref.passingValue;","","      return !!variables[variable] === passingValue;","    })) {","      return null;","    }","    return this.getFragmentUnconditional();","  };","","  /**","   * Get the variables to pass to the referenced fragment, accounting for","   * initial values, overrides, and route-specific variables.","   */","","","  RelayFragmentReference.prototype.getVariables = function getVariables(route, variables) {","    var _this = this;","","    var innerVariables = (0, _extends3['default'])({}, this._initialVariables);","","    // map variables from outer -> inner scope","    var variableMapping = this._variableMapping;","    if (variableMapping) {","      require('fbjs/lib/forEachObject')(variableMapping, function (value, name) {","        var callVariable = require('./QueryBuilder').getCallVariable(value);","        if (callVariable) {","          value = variables[callVariable.callVariableName];","        }","        if (value === undefined) {","          require('fbjs/lib/warning')(false, 'RelayFragmentReference: Variable `%s` is undefined in fragment ' + '`%s`.', name, _this.getFragmentUnconditional().name);","        } else {","          innerVariables[name] = value;","        }","      });","    }","","    var prepareVariables = this._prepareVariables;","    if (prepareVariables) {","      innerVariables = prepareVariables(innerVariables, route);","    }","","    return innerVariables;","  };","","  RelayFragmentReference.prototype.isContainerFragment = function isContainerFragment() {","    return this._isContainerFragment;","  };","","  RelayFragmentReference.prototype.isDeferred = function isDeferred() {","    return this._isDeferred;","  };","","  RelayFragmentReference.prototype.isTypeConditional = function isTypeConditional() {","    return this._isTypeConditional;","  };","","  RelayFragmentReference.prototype._addCondition = function _addCondition(condition) {","    var conditions = this._conditions;","    if (!conditions) {","      conditions = [];","      this._conditions = conditions;","    }","    conditions.push(condition);","  };","","  return RelayFragmentReference;","}();","","module.exports = RelayFragmentReference;"],"l":{"15":1,"17":1,"19":2,"80":1,"81":1,"82":0,"83":0,"84":0,"87":1,"88":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"101":1,"102":0,"103":0,"106":1,"107":0,"110":1,"111":0,"112":0,"113":0,"114":0,"116":0,"119":1,"120":0,"123":1,"124":0,"132":1,"133":0,"134":0,"142":1,"143":0,"144":0,"145":0,"149":0,"157":1,"158":0,"159":0,"160":0,"164":0,"172":1,"174":0,"175":0,"176":0,"179":0,"181":0,"183":0,"192":1,"193":0,"195":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"205":0,"206":0,"208":0,"213":0,"214":0,"215":0,"218":0,"221":1,"222":0,"225":1,"226":0,"229":1,"230":0,"233":1,"234":0,"235":0,"236":0,"237":0,"239":0,"242":1,"245":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayGarbageCollection.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayGarbageCollection.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"initialize","line":31,"loc":{"start":{"line":31,"column":14},"end":{"line":31,"column":46}}},"2":{"name":"scheduleCollection","line":41,"loc":{"start":{"line":41,"column":22},"end":{"line":41,"column":52}}},"3":{"name":"scheduleCollectionFromNode","line":56,"loc":{"start":{"line":56,"column":30},"end":{"line":56,"column":74}}},"4":{"name":"scheduler","line":65,"loc":{"start":{"line":65,"column":0},"end":{"line":65,"column":24}}},"5":{"name":"runIteration","line":67,"loc":{"start":{"line":67,"column":21},"end":{"line":67,"column":45}}},"6":{"name":"enqueue","line":84,"loc":{"start":{"line":84,"column":0},"end":{"line":84,"column":21}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":21}},"2":{"start":{"line":23,"column":0},"end":{"line":63,"column":2}},"3":{"start":{"line":32,"column":4},"end":{"line":32,"column":143}},"4":{"start":{"line":33,"column":4},"end":{"line":33,"column":29}},"5":{"start":{"line":34,"column":4},"end":{"line":34,"column":81}},"6":{"start":{"line":42,"column":4},"end":{"line":42,"column":88}},"7":{"start":{"line":44,"column":4},"end":{"line":46,"column":5}},"8":{"start":{"line":45,"column":6},"end":{"line":45,"column":33}},"9":{"start":{"line":57,"column":4},"end":{"line":57,"column":88}},"10":{"start":{"line":59,"column":4},"end":{"line":61,"column":5}},"11":{"start":{"line":60,"column":6},"end":{"line":60,"column":47}},"12":{"start":{"line":65,"column":0},"end":{"line":82,"column":1}},"13":{"start":{"line":66,"column":2},"end":{"line":66,"column":92}},"14":{"start":{"line":67,"column":2},"end":{"line":80,"column":4}},"15":{"start":{"line":69,"column":4},"end":{"line":69,"column":196}},"16":{"start":{"line":70,"column":4},"end":{"line":70,"column":23}},"17":{"start":{"line":71,"column":4},"end":{"line":71,"column":23}},"18":{"start":{"line":72,"column":4},"end":{"line":75,"column":5}},"19":{"start":{"line":73,"column":6},"end":{"line":73,"column":22}},"20":{"start":{"line":74,"column":6},"end":{"line":74,"column":19}},"21":{"start":{"line":77,"column":4},"end":{"line":79,"column":5}},"22":{"start":{"line":78,"column":6},"end":{"line":78,"column":28}},"23":{"start":{"line":81,"column":2},"end":{"line":81,"column":24}},"24":{"start":{"line":84,"column":0},"end":{"line":86,"column":1}},"25":{"start":{"line":85,"column":2},"end":{"line":85,"column":68}},"26":{"start":{"line":88,"column":0},"end":{"line":88,"column":40}}},"branchMap":{"1":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":4},"end":{"line":44,"column":4}},{"start":{"line":44,"column":4},"end":{"line":44,"column":4}}]},"2":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":4},"end":{"line":59,"column":4}},{"start":{"line":59,"column":4},"end":{"line":59,"column":4}}]},"3":{"line":72,"type":"binary-expr","locations":[{"start":{"line":72,"column":11},"end":{"line":72,"column":18}},{"start":{"line":72,"column":23},"end":{"line":72,"column":38}},{"start":{"line":72,"column":42},"end":{"line":72,"column":66}}]},"4":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":4},"end":{"line":77,"column":4}},{"start":{"line":77,"column":4},"end":{"line":77,"column":4}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayGarbageCollection"," * "," */","","'use strict';","","var _stepLength = -1; // collect in a single pass by default","","/**"," * Public API for controlling garbage collection of `RelayStoreData`."," *"," * Provides methods to control the garbage collection of records in"," * `RelayStoreData`."," */","var RelayGarbageCollection = {","  /**","   * Initializes garbage collection: must be called before any records are","   * fetched. When records are collected after calls to `scheduleCollection` or","   * `scheduleCollectionFromNode`, records are collected in steps, with a","   * maximum of `stepLength` records traversed in a step. Steps are scheduled","   * via the `RelayStore` task queue (using the injected scheduler).","   */","  initialize: function initialize(stepLength) {","    require('fbjs/lib/invariant')(stepLength > 0, 'RelayGarbageCollection: step length must be greater than zero, got ' + '`%s`.', stepLength);","    _stepLength = stepLength;","    require('./RelayStore').getStoreData().initializeGarbageCollector(scheduler);","  },","","","  /**","   * Collects any un-referenced records in the store.","   */","  scheduleCollection: function scheduleCollection() {","    var garbageCollector = require('./RelayStore').getStoreData().getGarbageCollector();","","    if (garbageCollector) {","      garbageCollector.collect();","    }","  },","","","  /**","   * Collects any un-referenced records reachable from the given record via","   * graph traversal of fields.","   *","   * NOTE: If the given record is still referenced, no records are collected.","   */","  scheduleCollectionFromNode: function scheduleCollectionFromNode(dataID) {","    var garbageCollector = require('./RelayStore').getStoreData().getGarbageCollector();","","    if (garbageCollector) {","      garbageCollector.collectFromNode(dataID);","    }","  }","};","","function scheduler(run) {","  var pendingQueryTracker = require('./RelayStore').getStoreData().getPendingQueryTracker();","  var runIteration = function runIteration() {","    // TODO: #9366746: integrate RelayRenderer/Container with GC hold","    require('fbjs/lib/warning')(!pendingQueryTracker.hasPendingQueries(), 'RelayGarbageCollection: GC is executing during a fetch, but the ' + 'pending query may rely on data that is collected.');","    var iterations = 0;","    var hasNext = true;","    while (hasNext && (_stepLength < 0 || iterations < _stepLength)) {","      hasNext = run();","      iterations++;","    }","    // This is effectively a (possibly async) `while` loop","    if (hasNext) {","      enqueue(runIteration);","    }","  };","  enqueue(runIteration);","}","","function enqueue(fn) {","  require('./RelayStore').getStoreData().getTaskQueue().enqueue(fn);","}","","module.exports = RelayGarbageCollection;"],"l":{"15":1,"23":1,"32":0,"33":0,"34":0,"42":0,"44":0,"45":0,"57":0,"59":0,"60":0,"65":1,"66":0,"67":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"77":0,"78":0,"81":0,"84":1,"85":0,"88":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayGarbageCollector.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayGarbageCollector.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1,"39":0,"40":0,"41":0,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":1,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":1,"79":0,"80":0,"81":0,"82":0,"83":0,"84":1,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":1,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":1,"111":1},"b":{"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0]},"f":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":37}}},"2":{"name":"(anonymous_2)","line":25,"loc":{"start":{"line":25,"column":28},"end":{"line":25,"column":40}}},"3":{"name":"RelayGarbageCollector","line":26,"loc":{"start":{"line":26,"column":2},"end":{"line":26,"column":55}}},"4":{"name":"register","line":38,"loc":{"start":{"line":38,"column":45},"end":{"line":38,"column":71}}},"5":{"name":"incrementReferenceCount","line":44,"loc":{"start":{"line":44,"column":60},"end":{"line":44,"column":101}}},"6":{"name":"decrementReferenceCount","line":52,"loc":{"start":{"line":52,"column":60},"end":{"line":52,"column":101}}},"7":{"name":"acquireHold","line":75,"loc":{"start":{"line":75,"column":48},"end":{"line":75,"column":71}}},"8":{"name":"release","line":81,"loc":{"start":{"line":81,"column":15},"end":{"line":81,"column":34}}},"9":{"name":"collectFromNode","line":98,"loc":{"start":{"line":98,"column":52},"end":{"line":98,"column":85}}},"10":{"name":"collect","line":110,"loc":{"start":{"line":110,"column":44},"end":{"line":110,"column":63}}},"11":{"name":"(anonymous_11)","line":113,"loc":{"start":{"line":113,"column":55},"end":{"line":113,"column":83}}},"12":{"name":"_scheduleCollection","line":121,"loc":{"start":{"line":121,"column":56},"end":{"line":121,"column":87}}},"13":{"name":"(anonymous_13)","line":128,"loc":{"start":{"line":128,"column":41},"end":{"line":128,"column":53}}},"14":{"name":"_processQueue","line":134,"loc":{"start":{"line":134,"column":50},"end":{"line":134,"column":75}}},"15":{"name":"(anonymous_15)","line":145,"loc":{"start":{"line":145,"column":20},"end":{"line":145,"column":32}}},"16":{"name":"_getNextUnreferencedID","line":172,"loc":{"start":{"line":172,"column":59},"end":{"line":172,"column":93}}},"17":{"name":"_traverseRecord","line":185,"loc":{"start":{"line":185,"column":52},"end":{"line":185,"column":85}}},"18":{"name":"(anonymous_18)","line":188,"loc":{"start":{"line":188,"column":46},"end":{"line":188,"column":75}}},"19":{"name":"(anonymous_19)","line":192,"loc":{"start":{"line":192,"column":59},"end":{"line":192,"column":73}}},"20":{"name":"(anonymous_20)","line":198,"loc":{"start":{"line":198,"column":22},"end":{"line":198,"column":38}}},"21":{"name":"_collectRecord","line":215,"loc":{"start":{"line":215,"column":51},"end":{"line":215,"column":83}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":97}},"3":{"start":{"line":17,"column":39},"end":{"line":17,"column":95}},"4":{"start":{"line":25,"column":0},"end":{"line":226,"column":4}},"5":{"start":{"line":26,"column":2},"end":{"line":36,"column":3}},"6":{"start":{"line":27,"column":4},"end":{"line":27,"column":66}},"7":{"start":{"line":29,"column":4},"end":{"line":29,"column":30}},"8":{"start":{"line":30,"column":4},"end":{"line":30,"column":31}},"9":{"start":{"line":31,"column":4},"end":{"line":31,"column":31}},"10":{"start":{"line":32,"column":4},"end":{"line":32,"column":30}},"11":{"start":{"line":33,"column":4},"end":{"line":33,"column":25}},"12":{"start":{"line":34,"column":4},"end":{"line":34,"column":32}},"13":{"start":{"line":35,"column":4},"end":{"line":35,"column":32}},"14":{"start":{"line":38,"column":2},"end":{"line":42,"column":4}},"15":{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},"16":{"start":{"line":40,"column":6},"end":{"line":40,"column":34}},"17":{"start":{"line":44,"column":2},"end":{"line":50,"column":4}},"18":{"start":{"line":46,"column":4},"end":{"line":48,"column":5}},"19":{"start":{"line":47,"column":6},"end":{"line":47,"column":34}},"20":{"start":{"line":49,"column":4},"end":{"line":49,"column":30}},"21":{"start":{"line":52,"column":2},"end":{"line":59,"column":4}},"22":{"start":{"line":53,"column":4},"end":{"line":57,"column":5}},"23":{"start":{"line":54,"column":6},"end":{"line":54,"column":138}},"24":{"start":{"line":55,"column":6},"end":{"line":55,"column":34}},"25":{"start":{"line":56,"column":6},"end":{"line":56,"column":13}},"26":{"start":{"line":58,"column":4},"end":{"line":58,"column":30}},"27":{"start":{"line":75,"column":2},"end":{"line":91,"column":4}},"28":{"start":{"line":76,"column":4},"end":{"line":76,"column":21}},"29":{"start":{"line":78,"column":4},"end":{"line":78,"column":27}},"30":{"start":{"line":79,"column":4},"end":{"line":79,"column":28}},"31":{"start":{"line":80,"column":4},"end":{"line":90,"column":6}},"32":{"start":{"line":82,"column":8},"end":{"line":82,"column":109}},"33":{"start":{"line":83,"column":8},"end":{"line":83,"column":131}},"34":{"start":{"line":84,"column":8},"end":{"line":84,"column":26}},"35":{"start":{"line":85,"column":8},"end":{"line":85,"column":33}},"36":{"start":{"line":86,"column":8},"end":{"line":88,"column":9}},"37":{"start":{"line":87,"column":10},"end":{"line":87,"column":38}},"38":{"start":{"line":98,"column":2},"end":{"line":103,"column":4}},"39":{"start":{"line":99,"column":4},"end":{"line":102,"column":5}},"40":{"start":{"line":100,"column":6},"end":{"line":100,"column":41}},"41":{"start":{"line":101,"column":6},"end":{"line":101,"column":33}},"42":{"start":{"line":110,"column":2},"end":{"line":119,"column":4}},"43":{"start":{"line":111,"column":4},"end":{"line":111,"column":22}},"44":{"start":{"line":113,"column":4},"end":{"line":117,"column":7}},"45":{"start":{"line":114,"column":6},"end":{"line":116,"column":7}},"46":{"start":{"line":115,"column":8},"end":{"line":115,"column":45}},"47":{"start":{"line":118,"column":4},"end":{"line":118,"column":31}},"48":{"start":{"line":121,"column":2},"end":{"line":132,"column":4}},"49":{"start":{"line":122,"column":4},"end":{"line":122,"column":22}},"50":{"start":{"line":124,"column":4},"end":{"line":126,"column":5}},"51":{"start":{"line":125,"column":6},"end":{"line":125,"column":13}},"52":{"start":{"line":127,"column":4},"end":{"line":127,"column":29}},"53":{"start":{"line":128,"column":4},"end":{"line":131,"column":7}},"54":{"start":{"line":129,"column":6},"end":{"line":129,"column":34}},"55":{"start":{"line":130,"column":6},"end":{"line":130,"column":29}},"56":{"start":{"line":134,"column":2},"end":{"line":170,"column":4}},"57":{"start":{"line":135,"column":4},"end":{"line":135,"column":22}},"58":{"start":{"line":137,"column":4},"end":{"line":140,"column":5}},"59":{"start":{"line":139,"column":6},"end":{"line":139,"column":13}},"60":{"start":{"line":141,"column":4},"end":{"line":141,"column":30}},"61":{"start":{"line":143,"column":4},"end":{"line":143,"column":56}},"62":{"start":{"line":144,"column":4},"end":{"line":144,"column":53}},"63":{"start":{"line":145,"column":4},"end":{"line":169,"column":7}},"64":{"start":{"line":147,"column":6},"end":{"line":150,"column":7}},"65":{"start":{"line":148,"column":8},"end":{"line":148,"column":37}},"66":{"start":{"line":149,"column":8},"end":{"line":149,"column":21}},"67":{"start":{"line":152,"column":6},"end":{"line":152,"column":51}},"68":{"start":{"line":153,"column":6},"end":{"line":163,"column":7}},"69":{"start":{"line":154,"column":8},"end":{"line":154,"column":49}},"70":{"start":{"line":155,"column":8},"end":{"line":157,"column":9}},"71":{"start":{"line":156,"column":10},"end":{"line":156,"column":47}},"72":{"start":{"line":158,"column":8},"end":{"line":158,"column":47}},"73":{"start":{"line":159,"column":8},"end":{"line":161,"column":9}},"74":{"start":{"line":160,"column":10},"end":{"line":160,"column":46}},"75":{"start":{"line":162,"column":8},"end":{"line":162,"column":38}},"76":{"start":{"line":167,"column":6},"end":{"line":167,"column":62}},"77":{"start":{"line":168,"column":6},"end":{"line":168,"column":34}},"78":{"start":{"line":172,"column":2},"end":{"line":180,"column":4}},"79":{"start":{"line":173,"column":4},"end":{"line":178,"column":5}},"80":{"start":{"line":174,"column":6},"end":{"line":174,"column":49}},"81":{"start":{"line":175,"column":6},"end":{"line":177,"column":7}},"82":{"start":{"line":176,"column":8},"end":{"line":176,"column":22}},"83":{"start":{"line":179,"column":4},"end":{"line":179,"column":16}},"84":{"start":{"line":185,"column":2},"end":{"line":213,"column":4}},"85":{"start":{"line":186,"column":4},"end":{"line":186,"column":22}},"86":{"start":{"line":188,"column":4},"end":{"line":212,"column":7}},"87":{"start":{"line":189,"column":6},"end":{"line":211,"column":7}},"88":{"start":{"line":190,"column":8},"end":{"line":190,"column":15}},"89":{"start":{"line":191,"column":13},"end":{"line":211,"column":7}},"90":{"start":{"line":192,"column":8},"end":{"line":196,"column":11}},"91":{"start":{"line":193,"column":10},"end":{"line":195,"column":11}},"92":{"start":{"line":194,"column":12},"end":{"line":194,"column":45}},"93":{"start":{"line":197,"column":13},"end":{"line":211,"column":7}},"94":{"start":{"line":198,"column":8},"end":{"line":205,"column":11}},"95":{"start":{"line":199,"column":10},"end":{"line":204,"column":11}},"96":{"start":{"line":200,"column":12},"end":{"line":200,"column":77}},"97":{"start":{"line":201,"column":12},"end":{"line":203,"column":13}},"98":{"start":{"line":202,"column":14},"end":{"line":202,"column":53}},"99":{"start":{"line":206,"column":13},"end":{"line":211,"column":7}},"100":{"start":{"line":207,"column":8},"end":{"line":207,"column":74}},"101":{"start":{"line":208,"column":8},"end":{"line":210,"column":9}},"102":{"start":{"line":209,"column":10},"end":{"line":209,"column":49}},"103":{"start":{"line":215,"column":2},"end":{"line":223,"column":4}},"104":{"start":{"line":216,"column":4},"end":{"line":216,"column":57}},"105":{"start":{"line":217,"column":4},"end":{"line":219,"column":5}},"106":{"start":{"line":218,"column":6},"end":{"line":218,"column":45}},"107":{"start":{"line":220,"column":4},"end":{"line":220,"column":58}},"108":{"start":{"line":221,"column":4},"end":{"line":221,"column":56}},"109":{"start":{"line":222,"column":4},"end":{"line":222,"column":35}},"110":{"start":{"line":225,"column":2},"end":{"line":225,"column":31}},"111":{"start":{"line":228,"column":0},"end":{"line":228,"column":39}}},"branchMap":{"1":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":70},"end":{"line":17,"column":73}},{"start":{"line":17,"column":76},"end":{"line":17,"column":94}}]},"2":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":46},"end":{"line":17,"column":49}},{"start":{"line":17,"column":53},"end":{"line":17,"column":67}}]},"3":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":39,"column":4}},{"start":{"line":39,"column":4},"end":{"line":39,"column":4}}]},"4":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":46,"column":4}},{"start":{"line":46,"column":4},"end":{"line":46,"column":4}}]},"5":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":4},"end":{"line":53,"column":4}},{"start":{"line":53,"column":4},"end":{"line":53,"column":4}}]},"6":{"line":53,"type":"binary-expr","locations":[{"start":{"line":53,"column":8},"end":{"line":53,"column":47}},{"start":{"line":53,"column":51},"end":{"line":53,"column":79}}]},"7":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":8},"end":{"line":86,"column":8}},{"start":{"line":86,"column":8},"end":{"line":86,"column":8}}]},"8":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":4},"end":{"line":99,"column":4}},{"start":{"line":99,"column":4},"end":{"line":99,"column":4}}]},"9":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":6},"end":{"line":114,"column":6}},{"start":{"line":114,"column":6},"end":{"line":114,"column":6}}]},"10":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":4},"end":{"line":124,"column":4}},{"start":{"line":124,"column":4},"end":{"line":124,"column":4}}]},"11":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":4},"end":{"line":137,"column":4}},{"start":{"line":137,"column":4},"end":{"line":137,"column":4}}]},"12":{"line":137,"type":"binary-expr","locations":[{"start":{"line":137,"column":8},"end":{"line":137,"column":26}},{"start":{"line":137,"column":30},"end":{"line":137,"column":51}},{"start":{"line":137,"column":55},"end":{"line":137,"column":84}}]},"13":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":6},"end":{"line":147,"column":6}},{"start":{"line":147,"column":6},"end":{"line":147,"column":6}}]},"14":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":6},"end":{"line":153,"column":6}},{"start":{"line":153,"column":6},"end":{"line":153,"column":6}}]},"15":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":8},"end":{"line":155,"column":8}},{"start":{"line":155,"column":8},"end":{"line":155,"column":8}}]},"16":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":8},"end":{"line":159,"column":8}},{"start":{"line":159,"column":8},"end":{"line":159,"column":8}}]},"17":{"line":175,"type":"if","locations":[{"start":{"line":175,"column":6},"end":{"line":175,"column":6}},{"start":{"line":175,"column":6},"end":{"line":175,"column":6}}]},"18":{"line":175,"type":"binary-expr","locations":[{"start":{"line":175,"column":10},"end":{"line":175,"column":48}},{"start":{"line":175,"column":52},"end":{"line":175,"column":81}}]},"19":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":6},"end":{"line":189,"column":6}},{"start":{"line":189,"column":6},"end":{"line":189,"column":6}}]},"20":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":13},"end":{"line":191,"column":13}},{"start":{"line":191,"column":13},"end":{"line":191,"column":13}}]},"21":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":10},"end":{"line":193,"column":10}},{"start":{"line":193,"column":10},"end":{"line":193,"column":10}}]},"22":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":13},"end":{"line":197,"column":13}},{"start":{"line":197,"column":13},"end":{"line":197,"column":13}}]},"23":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":10},"end":{"line":199,"column":10}},{"start":{"line":199,"column":10},"end":{"line":199,"column":10}}]},"24":{"line":199,"type":"binary-expr","locations":[{"start":{"line":199,"column":14},"end":{"line":199,"column":38}},{"start":{"line":199,"column":42},"end":{"line":199,"column":55}}]},"25":{"line":201,"type":"if","locations":[{"start":{"line":201,"column":12},"end":{"line":201,"column":12}},{"start":{"line":201,"column":12},"end":{"line":201,"column":12}}]},"26":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":13},"end":{"line":206,"column":13}},{"start":{"line":206,"column":13},"end":{"line":206,"column":13}}]},"27":{"line":206,"type":"binary-expr","locations":[{"start":{"line":206,"column":17},"end":{"line":206,"column":42}},{"start":{"line":206,"column":46},"end":{"line":206,"column":60}}]},"28":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":8},"end":{"line":208,"column":8}},{"start":{"line":208,"column":8},"end":{"line":208,"column":8}}]},"29":{"line":217,"type":"if","locations":[{"start":{"line":217,"column":4},"end":{"line":217,"column":4}},{"start":{"line":217,"column":4},"end":{"line":217,"column":4}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayGarbageCollector"," * "," */","","'use strict';","","var _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","/**"," * @internal"," *"," * Provides methods to track the number of references to registered records and"," * remove un-referenced records from Relay's cache."," */","var RelayGarbageCollector = function () {","  function RelayGarbageCollector(storeData, scheduler) {","    (0, _classCallCheck3['default'])(this, RelayGarbageCollector);","","    this._activeHoldCount = 0;","    this._collectionQueue = [];","    this._isCollecting = false;","    this._isScheduled = false;","    this._refCounts = {};","    this._scheduler = scheduler;","    this._storeData = storeData;","  }","","  RelayGarbageCollector.prototype.register = function register(dataID) {","    if (!this._refCounts.hasOwnProperty(dataID)) {","      this._refCounts[dataID] = 0;","    }","  };","","  RelayGarbageCollector.prototype.incrementReferenceCount = function incrementReferenceCount(dataID) {","    // Inlined `register` since this is a reasonably hot code path.","    if (!this._refCounts.hasOwnProperty(dataID)) {","      this._refCounts[dataID] = 0;","    }","    this._refCounts[dataID]++;","  };","","  RelayGarbageCollector.prototype.decrementReferenceCount = function decrementReferenceCount(dataID) {","    if (!this._refCounts.hasOwnProperty(dataID) || this._refCounts[dataID] <= 0) {","      require('fbjs/lib/warning')(false, 'RelayGarbageCollector: Expected id `%s` be referenced before being ' + 'unreferenced.', dataID);","      this._refCounts[dataID] = 0;","      return;","    }","    this._refCounts[dataID]--;","  };","","  /**","   * Notify the collector that GC should be put on hold/paused. The hold can be","   * released by calling the returned callback.","   *","   * Example use cases:","   * - In-flight queries may have been diffed against cached records that are","   *   unreferenced and eligible for GC. If these records were collected there","   *   would be insufficient data in the cache to render.","   * - There may be a gap between a query response being processed and rendering","   *   the component that initiated the fetch. If records were collected there","   *   would be insufficient data in the cache to render.","   */","","","  RelayGarbageCollector.prototype.acquireHold = function acquireHold() {","    var _this = this;","","    var isReleased = false;","    this._activeHoldCount++;","    return {","      release: function release() {","        require('fbjs/lib/invariant')(!isReleased, 'RelayGarbageCollector: hold can only be released once.');","        require('fbjs/lib/invariant')(_this._activeHoldCount > 0, 'RelayGarbageCollector: cannot decrease hold count below zero.');","        isReleased = true;","        _this._activeHoldCount--;","        if (_this._activeHoldCount === 0) {","          _this._scheduleCollection();","        }","      }","    };","  };","","  /**","   * Schedules a collection starting at the given record.","   */","","","  RelayGarbageCollector.prototype.collectFromNode = function collectFromNode(dataID) {","    if (this._refCounts[dataID] === 0) {","      this._collectionQueue.push(dataID);","      this._scheduleCollection();","    }","  };","","  /**","   * Schedules a collection for any currently unreferenced records.","   */","","","  RelayGarbageCollector.prototype.collect = function collect() {","    var _this2 = this;","","    require('fbjs/lib/forEachObject')(this._refCounts, function (refCount, dataID) {","      if (refCount === 0) {","        _this2._collectionQueue.push(dataID);","      }","    });","    this._scheduleCollection();","  };","","  RelayGarbageCollector.prototype._scheduleCollection = function _scheduleCollection() {","    var _this3 = this;","","    if (this._isScheduled) {","      return;","    }","    this._isScheduled = true;","    require('fbjs/lib/resolveImmediate')(function () {","      _this3._isScheduled = false;","      _this3._processQueue();","    });","  };","","  RelayGarbageCollector.prototype._processQueue = function _processQueue() {","    var _this4 = this;","","    if (this._isCollecting || this._activeHoldCount || !this._collectionQueue.length) {","      // already scheduled, active hold, or nothing to do","      return;","    }","    this._isCollecting = true;","","    var cachedRecords = this._storeData.getCachedData();","    var freshRecords = this._storeData.getNodeData();","    this._scheduler(function () {","      // exit if a hold was acquired since the last execution","      if (_this4._activeHoldCount) {","        _this4._isCollecting = false;","        return false;","      }","","      var dataID = _this4._getNextUnreferencedID();","      if (dataID) {","        var cachedRecord = cachedRecords[dataID];","        if (cachedRecord) {","          _this4._traverseRecord(cachedRecord);","        }","        var freshRecord = freshRecords[dataID];","        if (freshRecord) {","          _this4._traverseRecord(freshRecord);","        }","        _this4._collectRecord(dataID);","      }","","      // only allow new collections to be scheduled once the current one","      // is complete","      _this4._isCollecting = !!_this4._collectionQueue.length;","      return _this4._isCollecting;","    });","  };","","  RelayGarbageCollector.prototype._getNextUnreferencedID = function _getNextUnreferencedID() {","    while (this._collectionQueue.length) {","      var dataID = this._collectionQueue.shift();","      if (this._refCounts.hasOwnProperty(dataID) && this._refCounts[dataID] === 0) {","        return dataID;","      }","    }","    return null;","  };","","  // $FlowFixMe(>=0.34.0)","","","  RelayGarbageCollector.prototype._traverseRecord = function _traverseRecord(record) {","    var _this5 = this;","","    require('fbjs/lib/forEachObject')(record, function (value, storageKey) {","      if (storageKey === require('./RelayRecord').MetadataKey.PATH) {","        return;","      } else if (value instanceof require('./GraphQLRange')) {","        value.getEdgeIDs({ includeDeleted: true }).forEach(function (id) {","          if (id != null) {","            _this5._collectionQueue.push(id);","          }","        });","      } else if (Array.isArray(value)) {","        value.forEach(function (item) {","          if (typeof item === 'object' && item !== null) {","            var linkedID = require('./RelayRecord').getDataIDForObject(item);","            if (linkedID != null) {","              _this5._collectionQueue.push(linkedID);","            }","          }","        });","      } else if (typeof value === 'object' && value !== null) {","        var linkedID = require('./RelayRecord').getDataIDForObject(value);","        if (linkedID != null) {","          _this5._collectionQueue.push(linkedID);","        }","      }","    });","  };","","  RelayGarbageCollector.prototype._collectRecord = function _collectRecord(dataID) {","    var queryTracker = this._storeData.getQueryTracker();","    if (queryTracker) {","      queryTracker.untrackNodesForID(dataID);","    }","    this._storeData.getQueuedStore().removeRecord(dataID);","    this._storeData.getRangeData().removeRecord(dataID);","    delete this._refCounts[dataID];","  };","","  return RelayGarbageCollector;","}();","","module.exports = RelayGarbageCollector;"],"l":{"15":1,"17":1,"25":1,"26":1,"27":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"38":1,"39":0,"40":0,"44":1,"46":0,"47":0,"49":0,"52":1,"53":0,"54":0,"55":0,"56":0,"58":0,"75":1,"76":0,"78":0,"79":0,"80":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"98":1,"99":0,"100":0,"101":0,"110":1,"111":0,"113":0,"114":0,"115":0,"118":0,"121":1,"122":0,"124":0,"125":0,"127":0,"128":0,"129":0,"130":0,"134":1,"135":0,"137":0,"139":0,"141":0,"143":0,"144":0,"145":0,"147":0,"148":0,"149":0,"152":0,"153":0,"154":0,"155":0,"156":0,"158":0,"159":0,"160":0,"162":0,"167":0,"168":0,"172":1,"173":0,"174":0,"175":0,"176":0,"179":0,"185":1,"186":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"206":0,"207":0,"208":0,"209":0,"215":1,"216":0,"217":0,"218":0,"220":0,"221":0,"222":0,"225":1,"228":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayGraphQLMutation.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayGraphQLMutation.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":4,"7":1,"8":1,"9":1,"10":1,"11":1,"12":0,"13":1,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":1,"33":0,"34":0,"35":1,"36":0,"37":1,"38":1,"39":0,"40":1,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":1,"62":0,"63":1,"64":0,"65":1,"66":0,"67":1,"68":0,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"75":1,"76":0,"77":1,"78":0,"79":0,"80":0,"81":0,"82":0,"83":1,"84":0,"85":0,"86":0,"87":1,"88":0,"89":0,"90":0,"91":1,"92":0,"93":1,"94":0,"95":0,"96":0,"97":0,"98":1,"99":1},"b":{"1":[4,0],"2":[4,4],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0]},"f":{"1":4,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":37}}},"2":{"name":"(anonymous_2)","line":54,"loc":{"start":{"line":54,"column":27},"end":{"line":54,"column":39}}},"3":{"name":"create","line":60,"loc":{"start":{"line":60,"column":32},"end":{"line":60,"column":82}}},"4":{"name":"createWithFiles","line":71,"loc":{"start":{"line":71,"column":41},"end":{"line":71,"column":107}}},"5":{"name":"RelayGraphQLMutation","line":121,"loc":{"start":{"line":121,"column":2},"end":{"line":121,"column":95}}},"6":{"name":"applyOptimistic","line":146,"loc":{"start":{"line":146,"column":51},"end":{"line":146,"column":122}}},"7":{"name":"commit","line":165,"loc":{"start":{"line":165,"column":42},"end":{"line":165,"column":67}}},"8":{"name":"rollback","line":172,"loc":{"start":{"line":172,"column":44},"end":{"line":172,"column":64}}},"9":{"name":"_createTransaction","line":178,"loc":{"start":{"line":178,"column":54},"end":{"line":178,"column":119}}},"10":{"name":"getNextCollisionID","line":185,"loc":{"start":{"line":185,"column":0},"end":{"line":185,"column":30}}},"11":{"name":"(anonymous_11)","line":196,"loc":{"start":{"line":196,"column":32},"end":{"line":196,"column":44}}},"12":{"name":"PendingGraphQLTransaction","line":201,"loc":{"start":{"line":201,"column":2},"end":{"line":201,"column":137}}},"13":{"name":"getCallName","line":225,"loc":{"start":{"line":225,"column":52},"end":{"line":225,"column":75}}},"14":{"name":"getCollisionKey","line":230,"loc":{"start":{"line":230,"column":56},"end":{"line":230,"column":83}}},"15":{"name":"getConfigs","line":234,"loc":{"start":{"line":234,"column":51},"end":{"line":234,"column":73}}},"16":{"name":"getFiles","line":238,"loc":{"start":{"line":238,"column":49},"end":{"line":238,"column":69}}},"17":{"name":"getOptimisticConfigs","line":242,"loc":{"start":{"line":242,"column":61},"end":{"line":242,"column":93}}},"18":{"name":"getOptimisticQuery","line":246,"loc":{"start":{"line":246,"column":59},"end":{"line":246,"column":98}}},"19":{"name":"getOptimisticResponse","line":255,"loc":{"start":{"line":255,"column":62},"end":{"line":255,"column":95}}},"20":{"name":"getQuery","line":259,"loc":{"start":{"line":259,"column":49},"end":{"line":259,"column":78}}},"21":{"name":"commit","line":270,"loc":{"start":{"line":270,"column":47},"end":{"line":270,"column":72}}},"22":{"name":"applyOptimistic","line":277,"loc":{"start":{"line":277,"column":56},"end":{"line":277,"column":90}}},"23":{"name":"rollback","line":284,"loc":{"start":{"line":284,"column":49},"end":{"line":284,"column":69}}},"24":{"name":"_getVariables","line":288,"loc":{"start":{"line":288,"column":54},"end":{"line":288,"column":79}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":81}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":95}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":82}},"5":{"start":{"line":23,"column":0},"end":{"line":23,"column":97}},"6":{"start":{"line":23,"column":39},"end":{"line":23,"column":95}},"7":{"start":{"line":25,"column":0},"end":{"line":26,"column":53}},"8":{"start":{"line":28,"column":0},"end":{"line":28,"column":44}},"9":{"start":{"line":29,"column":0},"end":{"line":29,"column":27}},"10":{"start":{"line":54,"column":0},"end":{"line":183,"column":4}},"11":{"start":{"line":60,"column":2},"end":{"line":62,"column":4}},"12":{"start":{"line":61,"column":4},"end":{"line":61,"column":76}},"13":{"start":{"line":71,"column":2},"end":{"line":73,"column":4}},"14":{"start":{"line":72,"column":4},"end":{"line":72,"column":77}},"15":{"start":{"line":121,"column":2},"end":{"line":131,"column":3}},"16":{"start":{"line":122,"column":4},"end":{"line":122,"column":65}},"17":{"start":{"line":124,"column":4},"end":{"line":124,"column":24}},"18":{"start":{"line":125,"column":4},"end":{"line":125,"column":32}},"19":{"start":{"line":126,"column":4},"end":{"line":126,"column":32}},"20":{"start":{"line":127,"column":4},"end":{"line":127,"column":36}},"21":{"start":{"line":128,"column":4},"end":{"line":128,"column":40}},"22":{"start":{"line":129,"column":4},"end":{"line":129,"column":98}},"23":{"start":{"line":130,"column":4},"end":{"line":130,"column":29}},"24":{"start":{"line":146,"column":2},"end":{"line":150,"column":4}},"25":{"start":{"line":147,"column":4},"end":{"line":147,"column":174}},"26":{"start":{"line":148,"column":4},"end":{"line":148,"column":85}},"27":{"start":{"line":149,"column":4},"end":{"line":149,"column":54}},"28":{"start":{"line":165,"column":2},"end":{"line":170,"column":4}},"29":{"start":{"line":166,"column":4},"end":{"line":168,"column":5}},"30":{"start":{"line":167,"column":6},"end":{"line":167,"column":52}},"31":{"start":{"line":169,"column":4},"end":{"line":169,"column":45}},"32":{"start":{"line":172,"column":2},"end":{"line":176,"column":4}},"33":{"start":{"line":173,"column":4},"end":{"line":175,"column":5}},"34":{"start":{"line":174,"column":6},"end":{"line":174,"column":42}},"35":{"start":{"line":178,"column":2},"end":{"line":180,"column":4}},"36":{"start":{"line":179,"column":4},"end":{"line":179,"column":177}},"37":{"start":{"line":182,"column":2},"end":{"line":182,"column":30}},"38":{"start":{"line":185,"column":0},"end":{"line":187,"column":1}},"39":{"start":{"line":186,"column":2},"end":{"line":186,"column":30}},"40":{"start":{"line":196,"column":0},"end":{"line":303,"column":4}},"41":{"start":{"line":201,"column":2},"end":{"line":221,"column":3}},"42":{"start":{"line":202,"column":4},"end":{"line":202,"column":70}},"43":{"start":{"line":204,"column":4},"end":{"line":204,"column":23}},"44":{"start":{"line":205,"column":4},"end":{"line":205,"column":24}},"45":{"start":{"line":206,"column":4},"end":{"line":206,"column":32}},"46":{"start":{"line":207,"column":4},"end":{"line":207,"column":52}},"47":{"start":{"line":208,"column":4},"end":{"line":208,"column":58}},"48":{"start":{"line":209,"column":4},"end":{"line":209,"column":38}},"49":{"start":{"line":210,"column":4},"end":{"line":210,"column":54}},"50":{"start":{"line":211,"column":4},"end":{"line":211,"column":54}},"51":{"start":{"line":212,"column":4},"end":{"line":212,"column":70}},"52":{"start":{"line":213,"column":4},"end":{"line":213,"column":22}},"53":{"start":{"line":214,"column":4},"end":{"line":214,"column":26}},"54":{"start":{"line":215,"column":4},"end":{"line":215,"column":35}},"55":{"start":{"line":216,"column":4},"end":{"line":216,"column":36}},"56":{"start":{"line":218,"column":4},"end":{"line":218,"column":123}},"57":{"start":{"line":220,"column":4},"end":{"line":220,"column":47}},"58":{"start":{"line":225,"column":2},"end":{"line":228,"column":4}},"59":{"start":{"line":226,"column":4},"end":{"line":226,"column":189}},"60":{"start":{"line":227,"column":4},"end":{"line":227,"column":41}},"61":{"start":{"line":230,"column":2},"end":{"line":232,"column":4}},"62":{"start":{"line":231,"column":4},"end":{"line":231,"column":30}},"63":{"start":{"line":234,"column":2},"end":{"line":236,"column":4}},"64":{"start":{"line":235,"column":4},"end":{"line":235,"column":25}},"65":{"start":{"line":238,"column":2},"end":{"line":240,"column":4}},"66":{"start":{"line":239,"column":4},"end":{"line":239,"column":23}},"67":{"start":{"line":242,"column":2},"end":{"line":244,"column":4}},"68":{"start":{"line":243,"column":4},"end":{"line":243,"column":35}},"69":{"start":{"line":246,"column":2},"end":{"line":253,"column":4}},"70":{"start":{"line":247,"column":4},"end":{"line":251,"column":5}},"71":{"start":{"line":248,"column":6},"end":{"line":248,"column":90}},"72":{"start":{"line":249,"column":6},"end":{"line":249,"column":159}},"73":{"start":{"line":250,"column":6},"end":{"line":250,"column":42}},"74":{"start":{"line":252,"column":4},"end":{"line":252,"column":36}},"75":{"start":{"line":255,"column":2},"end":{"line":257,"column":4}},"76":{"start":{"line":256,"column":4},"end":{"line":256,"column":134}},"77":{"start":{"line":259,"column":2},"end":{"line":266,"column":4}},"78":{"start":{"line":260,"column":4},"end":{"line":264,"column":5}},"79":{"start":{"line":261,"column":6},"end":{"line":261,"column":80}},"80":{"start":{"line":262,"column":6},"end":{"line":262,"column":159}},"81":{"start":{"line":263,"column":6},"end":{"line":263,"column":32}},"82":{"start":{"line":265,"column":4},"end":{"line":265,"column":26}},"83":{"start":{"line":270,"column":2},"end":{"line":275,"column":4}},"84":{"start":{"line":271,"column":4},"end":{"line":273,"column":5}},"85":{"start":{"line":272,"column":6},"end":{"line":272,"column":30}},"86":{"start":{"line":274,"column":4},"end":{"line":274,"column":45}},"87":{"start":{"line":277,"column":2},"end":{"line":282,"column":4}},"88":{"start":{"line":278,"column":4},"end":{"line":280,"column":5}},"89":{"start":{"line":279,"column":6},"end":{"line":279,"column":40}},"90":{"start":{"line":281,"column":4},"end":{"line":281,"column":54}},"91":{"start":{"line":284,"column":2},"end":{"line":286,"column":4}},"92":{"start":{"line":285,"column":4},"end":{"line":285,"column":40}},"93":{"start":{"line":288,"column":2},"end":{"line":300,"column":4}},"94":{"start":{"line":289,"column":4},"end":{"line":289,"column":38}},"95":{"start":{"line":290,"column":4},"end":{"line":292,"column":5}},"96":{"start":{"line":291,"column":6},"end":{"line":291,"column":195}},"97":{"start":{"line":293,"column":4},"end":{"line":299,"column":7}},"98":{"start":{"line":302,"column":2},"end":{"line":302,"column":35}},"99":{"start":{"line":305,"column":0},"end":{"line":305,"column":38}}},"branchMap":{"1":{"line":23,"type":"cond-expr","locations":[{"start":{"line":23,"column":70},"end":{"line":23,"column":73}},{"start":{"line":23,"column":76},"end":{"line":23,"column":94}}]},"2":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":46},"end":{"line":23,"column":49}},{"start":{"line":23,"column":53},"end":{"line":23,"column":67}}]},"3":{"line":126,"type":"binary-expr","locations":[{"start":{"line":126,"column":18},"end":{"line":126,"column":23}},{"start":{"line":126,"column":27},"end":{"line":126,"column":31}}]},"4":{"line":128,"type":"binary-expr","locations":[{"start":{"line":128,"column":22},"end":{"line":128,"column":31}},{"start":{"line":128,"column":35},"end":{"line":128,"column":39}}]},"5":{"line":129,"type":"binary-expr","locations":[{"start":{"line":129,"column":25},"end":{"line":129,"column":37}},{"start":{"line":129,"column":41},"end":{"line":129,"column":97}}]},"6":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":4},"end":{"line":166,"column":4}},{"start":{"line":166,"column":4},"end":{"line":166,"column":4}}]},"7":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":4},"end":{"line":173,"column":4}},{"start":{"line":173,"column":4},"end":{"line":173,"column":4}}]},"8":{"line":207,"type":"binary-expr","locations":[{"start":{"line":207,"column":28},"end":{"line":207,"column":43}},{"start":{"line":207,"column":47},"end":{"line":207,"column":51}}]},"9":{"line":208,"type":"binary-expr","locations":[{"start":{"line":208,"column":31},"end":{"line":208,"column":49}},{"start":{"line":208,"column":53},"end":{"line":208,"column":57}}]},"10":{"line":210,"type":"binary-expr","locations":[{"start":{"line":210,"column":21},"end":{"line":210,"column":30}},{"start":{"line":210,"column":34},"end":{"line":210,"column":53}}]},"11":{"line":211,"type":"binary-expr","locations":[{"start":{"line":211,"column":21},"end":{"line":211,"column":30}},{"start":{"line":211,"column":34},"end":{"line":211,"column":53}}]},"12":{"line":247,"type":"if","locations":[{"start":{"line":247,"column":4},"end":{"line":247,"column":4}},{"start":{"line":247,"column":4},"end":{"line":247,"column":4}}]},"13":{"line":247,"type":"binary-expr","locations":[{"start":{"line":247,"column":8},"end":{"line":247,"column":33}},{"start":{"line":247,"column":37},"end":{"line":247,"column":58}}]},"14":{"line":260,"type":"if","locations":[{"start":{"line":260,"column":4},"end":{"line":260,"column":4}},{"start":{"line":260,"column":4},"end":{"line":260,"column":4}}]},"15":{"line":271,"type":"if","locations":[{"start":{"line":271,"column":4},"end":{"line":271,"column":4}},{"start":{"line":271,"column":4},"end":{"line":271,"column":4}}]},"16":{"line":278,"type":"if","locations":[{"start":{"line":278,"column":4},"end":{"line":278,"column":4}},{"start":{"line":278,"column":4},"end":{"line":278,"column":4}}]},"17":{"line":290,"type":"if","locations":[{"start":{"line":290,"column":4},"end":{"line":290,"column":4}},{"start":{"line":290,"column":4},"end":{"line":290,"column":4}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayGraphQLMutation"," * "," */","","'use strict';","","var _defineProperty3 = _interopRequireDefault(require('babel-runtime/helpers/defineProperty'));","","var _extends5 = _interopRequireDefault(require('babel-runtime/helpers/extends'));","","var _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));","","var _keys2 = _interopRequireDefault(require('babel-runtime/core-js/object/keys'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","var _require = require('./RelayConnectionInterface'),","    CLIENT_MUTATION_ID = _require.CLIENT_MUTATION_ID;","","var COUNTER_PREFIX = 'RelayGraphQLMutation';","var collisionIDCounter = 0;","","/**"," * @internal"," *"," * Low-level API for modeling a GraphQL mutation."," *"," * This is the lowest level of abstraction at which product code may deal with"," * mutations in Relay, and it corresponds to the mutation operation (\"a write"," * followed by a fetch\") described in the GraphQL Specification. You specify"," * the mutation, the inputs, and the query."," *"," * (There is an even lower-level representation, `RelayMutationRequest`,"," * underlying this which is an entirely internal implementation detail that"," * product code need not be aware of.)"," *"," * Low-level mutations cannot (yet) be applied optimistically or rolled back."," * They don't provide any bells and whistles such as fat queries or tracked"," * queries. If you want those, you can opt in to the higher-level"," * `RelayMutation` API."," *"," * @see http://facebook.github.io/graphql/."," *"," */","","var RelayGraphQLMutation = function () {","","  /**","   * Simplest method for creating a RelayGraphQLMutation instance from a static","   * `mutation`, some `variables` and an `environment`.","   */","  RelayGraphQLMutation.create = function create(mutation, variables, environment) {","    return new RelayGraphQLMutation(mutation, variables, null, environment);","  };","","  /**","   * Specialized method for creating RelayGraphQLMutation instances that takes a","   * `files` object in addition to the base `mutation`, `variables` and","   * `environment` parameters.","   */","","","  RelayGraphQLMutation.createWithFiles = function createWithFiles(mutation, variables, files, environment) {","    return new RelayGraphQLMutation(mutation, variables, files, environment);","  };","","  /**","   * General constructor for creating RelayGraphQLMutation instances with","   * optional `files`, `callbacks` and `collisionKey` arguments.","   *","   * Callers must provide an appropriate `mutation`:","   *","   *    Relay.QL`","   *      mutation StoryLikeQuery {","   *        likeStory(input: $input) {","   *          clientMutationId","   *          story {","   *            likeCount","   *            likers {","   *              actor {","   *                name","   *              }","   *            }","   *          }","   *        }","   *      }","   *    `;","   *","   * And set of `variables`:","   *","   *    {","   *      input: {","   *        feedbackId: 'aFeedbackId',","   *      },","   *    }","   *","   * As per the GraphQL Relay Specification:","   *","   * - The mutation should take a single argument named \"input\".","   * - That input argument should contain a (string) \"clientMutationId\" property","   *   for the purposes of reconciling requests and responses (automatically","   *   added by the RelayGraphQLMutation API).","   * - The query should request \"clientMutationId\" as a subselection.","   *","   * @see http://facebook.github.io/relay/docs/graphql-mutations.html","   * @see http://facebook.github.io/relay/graphql/mutations.htm","   *","   * If not supplied, a unique collision key is derived (meaning that the","   * created mutation will be independent and not collide with any other).","   */","","","  function RelayGraphQLMutation(query, variables, files, environment, callbacks, collisionKey) {","    (0, _classCallCheck3['default'])(this, RelayGraphQLMutation);","","    this._query = query;","    this._variables = variables;","    this._files = files || null;","    this._environment = environment;","    this._callbacks = callbacks || null;","    this._collisionKey = collisionKey || COUNTER_PREFIX + ':collisionKey:' + getNextCollisionID();","    this._transaction = null;","  }","","  /**","   * Call this to optimistically apply an update to the store.","   *","   * The optional `config` parameter can be used to configure a `RANGE_ADD` type","   * mutation, similar to `RelayMutation` API.","   *","   * Optionally, follow up with a call to `commit()` to send the mutation","   * to the server.","   *","   * Note: An optimistic update may only be applied once.","   */","","","  RelayGraphQLMutation.prototype.applyOptimistic = function applyOptimistic(optimisticQuery, optimisticResponse, configs) {","    require('fbjs/lib/invariant')(!this._transaction, 'RelayGraphQLMutation: `applyOptimistic()` was called on an instance ' + 'that already has a transaction in progress.');","    this._transaction = this._createTransaction(optimisticQuery, optimisticResponse);","    return this._transaction.applyOptimistic(configs);","  };","","  /**","   * Call this to send the mutation to the server.","   *","   * The optional `config` parameter can be used to configure a `RANGE_ADD` type","   * mutation, similar to the `RelayMutation` API.","   *","   * Optionally, precede with a call to `applyOptimistic()` to apply an update","   * optimistically to the store.","   *","   * Note: This method may only be called once per instance.","   */","","","  RelayGraphQLMutation.prototype.commit = function commit(configs) {","    if (!this._transaction) {","      this._transaction = this._createTransaction();","    }","    return this._transaction.commit(configs);","  };","","  RelayGraphQLMutation.prototype.rollback = function rollback() {","    if (this._transaction) {","      return this._transaction.rollback();","    }","  };","","  RelayGraphQLMutation.prototype._createTransaction = function _createTransaction(optimisticQuery, optimisticResponse) {","    return new PendingGraphQLTransaction(this._environment, this._query, this._variables, this._files, optimisticQuery, optimisticResponse, this._collisionKey, this._callbacks);","  };","","  return RelayGraphQLMutation;","}();","","function getNextCollisionID() {","  return collisionIDCounter++;","}","","/**"," * @internal"," *"," * Data structure conforming to the `PendingTransaction` interface specified by"," * `RelayMutationQueue`."," */","","var PendingGraphQLTransaction = function () {","","  // Other properties:","","  // These properties required to conform to the PendingTransaction interface:","  function PendingGraphQLTransaction(environment, query, variables, files, optimisticQuery, optimisticResponse, collisionKey, callbacks) {","    (0, _classCallCheck3['default'])(this, PendingGraphQLTransaction);","","    this._configs = [];","    this._query = query;","    this._variables = variables;","    this._optimisticQuery = optimisticQuery || null;","    this._optimisticResponse = optimisticResponse || null;","    this._collisionKey = collisionKey;","    this.onFailure = callbacks && callbacks.onFailure;","    this.onSuccess = callbacks && callbacks.onSuccess;","    this.status = require('./RelayMutationTransactionStatus').CREATED;","    this.error = null;","    this._mutation = null;","    this._optimisticConfigs = null;","    this._optimisticMutation = null;","","    this.mutationTransaction = environment.getStoreData().getMutationQueue().createTransactionWithPendingTransaction(this);","","    this.id = this.mutationTransaction.getID();","  }","","  // Methods from the PendingTransaction interface.","","  PendingGraphQLTransaction.prototype.getCallName = function getCallName() {","    require('fbjs/lib/invariant')(this._mutation, 'RelayGraphQLMutation: `getCallName()` called but no mutation exists ' + '(`getQuery()` must be called first to construct the mutation).');","    return this._mutation.getCall().name;","  };","","  PendingGraphQLTransaction.prototype.getCollisionKey = function getCollisionKey() {","    return this._collisionKey;","  };","","  PendingGraphQLTransaction.prototype.getConfigs = function getConfigs() {","    return this._configs;","  };","","  PendingGraphQLTransaction.prototype.getFiles = function getFiles() {","    return this._files;","  };","","  PendingGraphQLTransaction.prototype.getOptimisticConfigs = function getOptimisticConfigs() {","    return this._optimisticConfigs;","  };","","  PendingGraphQLTransaction.prototype.getOptimisticQuery = function getOptimisticQuery(storeData) {","    if (!this._optimisticMutation && this._optimisticQuery) {","      var concreteMutation = require('./QueryBuilder').getMutation(this._optimisticQuery);","      var mutation = require('./RelayQuery').Mutation.create(concreteMutation, require('./RelayMetaRoute').get('$RelayGraphQLMutation'), this._getVariables());","      this._optimisticMutation = mutation; // Cast RelayQuery.{Node -> Mutation}.","    }","    return this._optimisticMutation;","  };","","  PendingGraphQLTransaction.prototype.getOptimisticResponse = function getOptimisticResponse() {","    return (0, _extends5['default'])({}, this._optimisticResponse, (0, _defineProperty3['default'])({}, CLIENT_MUTATION_ID, this.id));","  };","","  PendingGraphQLTransaction.prototype.getQuery = function getQuery(storeData) {","    if (!this._mutation) {","      var concreteMutation = require('./QueryBuilder').getMutation(this._query);","      var mutation = require('./RelayQuery').Mutation.create(concreteMutation, require('./RelayMetaRoute').get('$RelayGraphQLMutation'), this._getVariables());","      this._mutation = mutation; // Cast RelayQuery.{Node -> Mutation}.","    }","    return this._mutation;","  };","","  // Additional methods outside the PendingTransaction interface.","","  PendingGraphQLTransaction.prototype.commit = function commit(configs) {","    if (configs) {","      this._configs = configs;","    }","    return this.mutationTransaction.commit();","  };","","  PendingGraphQLTransaction.prototype.applyOptimistic = function applyOptimistic(configs) {","    if (configs) {","      this._optimisticConfigs = configs;","    }","    return this.mutationTransaction.applyOptimistic();","  };","","  PendingGraphQLTransaction.prototype.rollback = function rollback() {","    this.mutationTransaction.rollback();","  };","","  PendingGraphQLTransaction.prototype._getVariables = function _getVariables() {","    var input = this._variables.input;","    if (!input) {","      require('fbjs/lib/invariant')(false, 'RelayGraphQLMutation: Required `input` variable is missing ' + '(supplied variables were: [%s]).', (0, _keys2['default'])(this._variables).join(', '));","    }","    return (0, _extends5['default'])({}, this._variables, {","      /* $FlowFixMe(>=0.35.0) - This comment","       * suppresses an error that was found when Flow v0.35.0 was deployed. To","       * see the error, remove this comment and run flow ~/www or","       * flow ~/www/html/js/mobile or flow ~/fbobjc/Libraries/FBReactKit/js */","      input: (0, _extends5['default'])({}, input, (0, _defineProperty3['default'])({}, CLIENT_MUTATION_ID, this.id))","    });","  };","","  return PendingGraphQLTransaction;","}();","","module.exports = RelayGraphQLMutation;"],"l":{"15":1,"17":1,"19":1,"21":1,"23":4,"25":1,"28":1,"29":1,"54":1,"60":1,"61":0,"71":1,"72":0,"121":1,"122":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"146":1,"147":0,"148":0,"149":0,"165":1,"166":0,"167":0,"169":0,"172":1,"173":0,"174":0,"178":1,"179":0,"182":1,"185":1,"186":0,"196":1,"201":1,"202":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"218":0,"220":0,"225":1,"226":0,"227":0,"230":1,"231":0,"234":1,"235":0,"238":1,"239":0,"242":1,"243":0,"246":1,"247":0,"248":0,"249":0,"250":0,"252":0,"255":1,"256":0,"259":1,"260":0,"261":0,"262":0,"263":0,"265":0,"270":1,"271":0,"272":0,"274":0,"277":1,"278":0,"279":0,"281":0,"284":1,"285":0,"288":1,"289":0,"290":0,"291":0,"293":0,"302":1,"305":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayGraphQLTag.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayGraphQLTag.js","s":{"1":1,"2":0,"3":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"graphql","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":19}}}},"statementMap":{"1":{"start":{"line":19,"column":0},"end":{"line":21,"column":1}},"2":{"start":{"line":20,"column":2},"end":{"line":20,"column":229}},"3":{"start":{"line":23,"column":0},"end":{"line":25,"column":2}}},"branchMap":{},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayGraphQLTag"," * "," */","","'use strict';","","/**"," * Runtime function to correspond to the `graphql` tagged template function."," * All calls to this function should be transformed by the plugin."," */","function graphql() {","  require('fbjs/lib/invariant')(false, 'graphql: Unexpected invocation at runtime. Either the Babel transform ' + 'was not set up, or it failed to identify this call site. Make sure it ' + 'is being used verbatim as `graphql`.');","}","","module.exports = {","  graphql: graphql","};"],"l":{"19":1,"20":0,"23":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayInternals.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayInternals.js","s":{"1":2,"2":0},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":21,"column":0},"end":{"line":26,"column":2}},"2":{"start":{"line":28,"column":0},"end":{"line":28,"column":32}}},"branchMap":{},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayInternals"," * "," */","","'use strict';","","/**"," * This module contains internal Relay modules that we expose for development"," * tools. They should be considered private APIs."," *"," * @internal"," */","var RelayInternals = {","  NetworkLayer: require('./RelayStore').getStoreData().getNetworkLayer(),","  DefaultStoreData: require('./RelayStore').getStoreData(),","  flattenRelayQuery: require('./flattenRelayQuery'),","  printRelayQuery: require('./printRelayQuery')","};","","module.exports = RelayInternals;"],"l":{"21":2,"28":0}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayInternalTypes.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayInternalTypes.js","s":{},"b":{},"f":{},"fnMap":{},"statementMap":{},"branchMap":{},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayInternalTypes"," * "," */","","'use strict';","","/**"," * @internal"," *"," * These are types shared across multiple files within Relay internals."," */"],"l":{}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayMetricsRecorder.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayMetricsRecorder.js","s":{"1":1,"2":1,"3":1,"4":1,"5":3,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1,"53":0,"54":0,"55":0,"56":1,"57":0,"58":0,"59":0,"60":0,"61":1,"62":0,"63":0,"64":0,"65":1,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":1,"73":1},"b":{"1":[3,0],"2":[3,3],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":3,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":37}}},"2":{"name":"(anonymous_2)","line":50,"loc":{"start":{"line":50,"column":27},"end":{"line":50,"column":39}}},"3":{"name":"RelayMetricsRecorder","line":51,"loc":{"start":{"line":51,"column":2},"end":{"line":51,"column":34}}},"4":{"name":"start","line":68,"loc":{"start":{"line":68,"column":41},"end":{"line":68,"column":58}}},"5":{"name":"stop","line":81,"loc":{"start":{"line":81,"column":40},"end":{"line":81,"column":56}}},"6":{"name":"getMetrics","line":92,"loc":{"start":{"line":92,"column":46},"end":{"line":92,"column":68}}},"7":{"name":"(anonymous_7)","line":97,"loc":{"start":{"line":97,"column":47},"end":{"line":97,"column":63}}},"8":{"name":"(anonymous_8)","line":99,"loc":{"start":{"line":99,"column":15},"end":{"line":99,"column":31}}},"9":{"name":"(anonymous_9)","line":103,"loc":{"start":{"line":103,"column":45},"end":{"line":103,"column":61}}},"10":{"name":"_measure","line":122,"loc":{"start":{"line":122,"column":44},"end":{"line":122,"column":78}}},"11":{"name":"_instrumentProfile","line":128,"loc":{"start":{"line":128,"column":54},"end":{"line":128,"column":88}}},"12":{"name":"(anonymous_12)","line":132,"loc":{"start":{"line":132,"column":11},"end":{"line":132,"column":23}}},"13":{"name":"_startMeasurement","line":141,"loc":{"start":{"line":141,"column":53},"end":{"line":141,"column":86}}},"14":{"name":"_stopMeasurement","line":147,"loc":{"start":{"line":147,"column":52},"end":{"line":147,"column":84}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":81}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":95}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":82}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":97}},"5":{"start":{"line":21,"column":39},"end":{"line":21,"column":95}},"6":{"start":{"line":23,"column":0},"end":{"line":26,"column":2}},"7":{"start":{"line":50,"column":0},"end":{"line":159,"column":4}},"8":{"start":{"line":51,"column":2},"end":{"line":66,"column":3}},"9":{"start":{"line":52,"column":4},"end":{"line":52,"column":65}},"10":{"start":{"line":54,"column":4},"end":{"line":54,"column":28}},"11":{"start":{"line":55,"column":4},"end":{"line":55,"column":28}},"12":{"start":{"line":56,"column":4},"end":{"line":56,"column":24}},"13":{"start":{"line":57,"column":4},"end":{"line":57,"column":28}},"14":{"start":{"line":58,"column":4},"end":{"line":58,"column":33}},"15":{"start":{"line":59,"column":4},"end":{"line":59,"column":33}},"16":{"start":{"line":60,"column":4},"end":{"line":60,"column":31}},"17":{"start":{"line":62,"column":4},"end":{"line":62,"column":45}},"18":{"start":{"line":63,"column":4},"end":{"line":63,"column":65}},"19":{"start":{"line":64,"column":4},"end":{"line":64,"column":63}},"20":{"start":{"line":65,"column":4},"end":{"line":65,"column":61}},"21":{"start":{"line":68,"column":2},"end":{"line":79,"column":4}},"22":{"start":{"line":69,"column":4},"end":{"line":71,"column":5}},"23":{"start":{"line":70,"column":6},"end":{"line":70,"column":13}},"24":{"start":{"line":72,"column":4},"end":{"line":72,"column":68}},"25":{"start":{"line":73,"column":4},"end":{"line":73,"column":27}},"26":{"start":{"line":74,"column":4},"end":{"line":74,"column":29}},"27":{"start":{"line":75,"column":4},"end":{"line":75,"column":32}},"28":{"start":{"line":77,"column":4},"end":{"line":77,"column":74}},"29":{"start":{"line":78,"column":4},"end":{"line":78,"column":82}},"30":{"start":{"line":81,"column":2},"end":{"line":90,"column":4}},"31":{"start":{"line":82,"column":4},"end":{"line":84,"column":5}},"32":{"start":{"line":83,"column":6},"end":{"line":83,"column":13}},"33":{"start":{"line":85,"column":4},"end":{"line":85,"column":96}},"34":{"start":{"line":86,"column":4},"end":{"line":86,"column":28}},"35":{"start":{"line":88,"column":4},"end":{"line":88,"column":74}},"36":{"start":{"line":89,"column":4},"end":{"line":89,"column":82}},"37":{"start":{"line":92,"column":2},"end":{"line":120,"column":4}},"38":{"start":{"line":93,"column":4},"end":{"line":93,"column":43}},"39":{"start":{"line":95,"column":4},"end":{"line":95,"column":22}},"40":{"start":{"line":96,"column":4},"end":{"line":96,"column":32}},"41":{"start":{"line":97,"column":4},"end":{"line":102,"column":7}},"42":{"start":{"line":98,"column":6},"end":{"line":98,"column":77}},"43":{"start":{"line":100,"column":6},"end":{"line":100,"column":53}},"44":{"start":{"line":101,"column":6},"end":{"line":101,"column":53}},"45":{"start":{"line":103,"column":4},"end":{"line":112,"column":7}},"46":{"start":{"line":104,"column":6},"end":{"line":111,"column":7}},"47":{"start":{"line":105,"column":8},"end":{"line":105,"column":18}},"48":{"start":{"line":106,"column":13},"end":{"line":111,"column":7}},"49":{"start":{"line":107,"column":8},"end":{"line":107,"column":17}},"50":{"start":{"line":110,"column":8},"end":{"line":110,"column":67}},"51":{"start":{"line":114,"column":4},"end":{"line":119,"column":6}},"52":{"start":{"line":122,"column":2},"end":{"line":126,"column":4}},"53":{"start":{"line":123,"column":4},"end":{"line":123,"column":33}},"54":{"start":{"line":124,"column":4},"end":{"line":124,"column":15}},"55":{"start":{"line":125,"column":4},"end":{"line":125,"column":32}},"56":{"start":{"line":128,"column":2},"end":{"line":139,"column":4}},"57":{"start":{"line":129,"column":4},"end":{"line":129,"column":21}},"58":{"start":{"line":131,"column":4},"end":{"line":131,"column":57}},"59":{"start":{"line":132,"column":4},"end":{"line":138,"column":6}},"60":{"start":{"line":133,"column":6},"end":{"line":137,"column":9}},"61":{"start":{"line":141,"column":2},"end":{"line":145,"column":4}},"62":{"start":{"line":142,"column":4},"end":{"line":142,"column":110}},"63":{"start":{"line":143,"column":4},"end":{"line":143,"column":34}},"64":{"start":{"line":144,"column":4},"end":{"line":144,"column":72}},"65":{"start":{"line":147,"column":2},"end":{"line":156,"column":4}},"66":{"start":{"line":148,"column":4},"end":{"line":148,"column":47}},"67":{"start":{"line":149,"column":4},"end":{"line":149,"column":46}},"68":{"start":{"line":150,"column":4},"end":{"line":150,"column":65}},"69":{"start":{"line":152,"column":4},"end":{"line":152,"column":68}},"70":{"start":{"line":153,"column":4},"end":{"line":153,"column":41}},"71":{"start":{"line":155,"column":4},"end":{"line":155,"column":39}},"72":{"start":{"line":158,"column":2},"end":{"line":158,"column":30}},"73":{"start":{"line":161,"column":0},"end":{"line":161,"column":38}}},"branchMap":{"1":{"line":21,"type":"cond-expr","locations":[{"start":{"line":21,"column":70},"end":{"line":21,"column":73}},{"start":{"line":21,"column":76},"end":{"line":21,"column":94}}]},"2":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":46},"end":{"line":21,"column":49}},{"start":{"line":21,"column":53},"end":{"line":21,"column":67}}]},"3":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":4},"end":{"line":69,"column":4}},{"start":{"line":69,"column":4},"end":{"line":69,"column":4}}]},"4":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":4},"end":{"line":82,"column":4}},{"start":{"line":82,"column":4},"end":{"line":82,"column":4}}]},"5":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":6},"end":{"line":104,"column":6}},{"start":{"line":104,"column":6},"end":{"line":104,"column":6}}]},"6":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":13},"end":{"line":106,"column":13}},{"start":{"line":106,"column":13},"end":{"line":106,"column":13}}]},"7":{"line":142,"type":"binary-expr","locations":[{"start":{"line":142,"column":31},"end":{"line":142,"column":55}},{"start":{"line":142,"column":59},"end":{"line":142,"column":109}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayMetricsRecorder"," * "," */","","'use strict';","","var _extends3 = _interopRequireDefault(require('babel-runtime/helpers/extends'));","","var _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));","","var _keys2 = _interopRequireDefault(require('babel-runtime/core-js/object/keys'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","var measurementDefaults = {","  aggregateTime: 0,","  callCount: 0","};","","/**"," * Collects timing information from key Relay subsystems."," *"," * Example:"," *"," * ```"," * var recorder = new RelayMetricsRecorder();"," * recorder.start();"," * // ... do work ..."," * recorder.stop();"," * var metrics = recorder.getMetrics();"," * ```"," *"," * Metrics:"," * - `recordingTime`: the total time spent recording (between calls to `start()`"," *   and `stop()`)."," * - `totalTime`: the total time spent inside profiled Relay functions."," * - `measurements`: an object mapping names of profiled functions to profiling"," *   data including:"," *   - `aggregateTime`: total time spent in the method."," *   - `callCount`: number of times the method was called."," */","var RelayMetricsRecorder = function () {","  function RelayMetricsRecorder() {","    (0, _classCallCheck3['default'])(this, RelayMetricsRecorder);","","    this._isEnabled = false;","    this._measurements = {};","    this._profiles = [];","    this._profileStack = [];","    this._recordingStartTime = 0;","    this._recordingTotalTime = 0;","    this._startTimesStack = [];","","    this._measure = this._measure.bind(this);","    this._instrumentProfile = this._instrumentProfile.bind(this);","    this._startMeasurement = this._startMeasurement.bind(this);","    this._stopMeasurement = this._stopMeasurement.bind(this);","  }","","  RelayMetricsRecorder.prototype.start = function start() {","    if (this._isEnabled) {","      return;","    }","    this._recordingStartTime = require('fbjs/lib/performanceNow')();","    this._isEnabled = true;","    this._profileStack = [0];","    this._startTimesStack = [0];","","    require('./RelayProfiler').attachAggregateHandler('*', this._measure);","    require('./RelayProfiler').attachProfileHandler('*', this._instrumentProfile);","  };","","  RelayMetricsRecorder.prototype.stop = function stop() {","    if (!this._isEnabled) {","      return;","    }","    this._recordingTotalTime += require('fbjs/lib/performanceNow')() - this._recordingStartTime;","    this._isEnabled = false;","","    require('./RelayProfiler').detachAggregateHandler('*', this._measure);","    require('./RelayProfiler').detachProfileHandler('*', this._instrumentProfile);","  };","","  RelayMetricsRecorder.prototype.getMetrics = function getMetrics() {","    var _measurements = this._measurements;","","    var totalTime = 0;","    var sortedMeasurements = {};","    (0, _keys2['default'])(_measurements).sort(function (a, b) {","      return _measurements[b].aggregateTime - _measurements[a].aggregateTime;","    }).forEach(function (name) {","      totalTime += _measurements[name].aggregateTime;","      sortedMeasurements[name] = _measurements[name];","    });","    var sortedProfiles = this._profiles.sort(function (a, b) {","      if (a.startTime < b.startTime) {","        return -1;","      } else if (a.startTime > b.startTime) {","        return 1;","      } else {","        // lower duration first","        return a.endTime - a.startTime - (b.endTime - b.startTime);","      }","    });","","    return {","      measurements: sortedMeasurements,","      profiles: sortedProfiles,","      recordingTime: this._recordingTotalTime,","      totalTime: totalTime","    };","  };","","  RelayMetricsRecorder.prototype._measure = function _measure(name, callback) {","    this._startMeasurement(name);","    callback();","    this._stopMeasurement(name);","  };","","  RelayMetricsRecorder.prototype._instrumentProfile = function _instrumentProfile(name) {","    var _this = this;","","    var startTime = require('fbjs/lib/performanceNow')();","    return function () {","      _this._profiles.push({","        endTime: require('fbjs/lib/performanceNow')(),","        name: name,","        startTime: startTime","      });","    };","  };","","  RelayMetricsRecorder.prototype._startMeasurement = function _startMeasurement(name) {","    this._measurements[name] = this._measurements[name] || (0, _extends3['default'])({}, measurementDefaults);","    this._profileStack.unshift(0);","    this._startTimesStack.unshift(require('fbjs/lib/performanceNow')());","  };","","  RelayMetricsRecorder.prototype._stopMeasurement = function _stopMeasurement(name) {","    var innerTime = this._profileStack.shift();","    var start = this._startTimesStack.shift();","    var totalTime = require('fbjs/lib/performanceNow')() - start;","","    this._measurements[name].aggregateTime += totalTime - innerTime;","    this._measurements[name].callCount++;","","    this._profileStack[0] += totalTime;","  };","","  return RelayMetricsRecorder;","}();","","module.exports = RelayMetricsRecorder;"],"l":{"15":1,"17":1,"19":1,"21":3,"23":1,"50":1,"51":1,"52":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"62":0,"63":0,"64":0,"65":0,"68":1,"69":0,"70":0,"72":0,"73":0,"74":0,"75":0,"77":0,"78":0,"81":1,"82":0,"83":0,"85":0,"86":0,"88":0,"89":0,"92":1,"93":0,"95":0,"96":0,"97":0,"98":0,"100":0,"101":0,"103":0,"104":0,"105":0,"106":0,"107":0,"110":0,"114":0,"122":1,"123":0,"124":0,"125":0,"128":1,"129":0,"131":0,"132":0,"133":0,"141":1,"142":0,"143":0,"144":0,"147":1,"148":0,"149":0,"150":0,"152":0,"153":0,"155":0,"158":1,"161":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayMockRenderer.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayMockRenderer.js","s":{"1":1,"2":1,"3":1,"4":1,"5":3,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":1,"16":0,"17":1,"18":1,"19":1},"b":{"1":[3,0],"2":[3,3]},"f":{"1":3,"2":1,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":37}}},"2":{"name":"(anonymous_2)","line":39,"loc":{"start":{"line":39,"column":24},"end":{"line":39,"column":52}}},"3":{"name":"RelayMockRenderer","line":42,"loc":{"start":{"line":42,"column":2},"end":{"line":42,"column":31}}},"4":{"name":"getChildContext","line":65,"loc":{"start":{"line":65,"column":48},"end":{"line":65,"column":75}}},"5":{"name":"render","line":69,"loc":{"start":{"line":69,"column":39},"end":{"line":69,"column":57}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":117}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":83}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":97}},"5":{"start":{"line":21,"column":39},"end":{"line":21,"column":95}},"6":{"start":{"line":39,"column":0},"end":{"line":74,"column":30}},"7":{"start":{"line":40,"column":2},"end":{"line":40,"column":66}},"8":{"start":{"line":42,"column":2},"end":{"line":63,"column":3}},"9":{"start":{"line":43,"column":4},"end":{"line":43,"column":62}},"10":{"start":{"line":45,"column":4},"end":{"line":45,"column":95}},"11":{"start":{"line":47,"column":4},"end":{"line":61,"column":6}},"12":{"start":{"line":62,"column":4},"end":{"line":62,"column":17}},"13":{"start":{"line":65,"column":2},"end":{"line":67,"column":4}},"14":{"start":{"line":66,"column":4},"end":{"line":66,"column":28}},"15":{"start":{"line":69,"column":2},"end":{"line":71,"column":4}},"16":{"start":{"line":70,"column":4},"end":{"line":70,"column":31}},"17":{"start":{"line":73,"column":2},"end":{"line":73,"column":27}},"18":{"start":{"line":76,"column":0},"end":{"line":80,"column":2}},"19":{"start":{"line":83,"column":0},"end":{"line":83,"column":35}}},"branchMap":{"1":{"line":21,"type":"cond-expr","locations":[{"start":{"line":21,"column":70},"end":{"line":21,"column":73}},{"start":{"line":21,"column":76},"end":{"line":21,"column":94}}]},"2":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":46},"end":{"line":21,"column":49}},{"start":{"line":21,"column":53},"end":{"line":21,"column":67}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayMockRenderer"," * "," */","","'use strict';","","var _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));","","var _possibleConstructorReturn3 = _interopRequireDefault(require('babel-runtime/helpers/possibleConstructorReturn'));","","var _inherits3 = _interopRequireDefault(require('babel-runtime/helpers/inherits'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","/**"," * A helper for rendering RelayContainers with mock data, outside of a"," * RelayRootContainer/RelayRenderer. This is intended for use in unit tests or"," * component browser-style interfaces."," *"," * Note: For unit tests, you may need to mock `ReactDOM` as follows:"," *"," * ```"," * jest"," *   .disableAutomock()"," *   .mock('ReactDOM', () => ({}));"," * ```"," *"," * Currently ReactDOM and ReactTestRenderer cannot both be loaded in the same"," * test, and Relay transitively includes ReactDOM under its default settings."," */","var RelayMockRenderer = function (_React$Component) {","  (0, _inherits3['default'])(RelayMockRenderer, _React$Component);","","  function RelayMockRenderer() {","    (0, _classCallCheck3['default'])(this, RelayMockRenderer);","","    var _this = (0, _possibleConstructorReturn3['default'])(this, _React$Component.call(this));","","    _this.mockContext = {","      relay: {","        forceFetch: require('fbjs/lib/emptyFunction'),","        getFragmentResolver: require('fbjs/lib/emptyFunction'),","        getStoreData: require('fbjs/lib/emptyFunction'),","        primeCache: require('fbjs/lib/emptyFunction')","      },","      route: {","        name: '$RelayMockRenderer',","        params: {},","        queries: {},","        useMockData: true","      },","      useFakeData: true","    };","    return _this;","  }","","  RelayMockRenderer.prototype.getChildContext = function getChildContext() {","    return this.mockContext;","  };","","  RelayMockRenderer.prototype.render = function render() {","    return this.props.render();","  };","","  return RelayMockRenderer;","}(require('react').Component);","","RelayMockRenderer.childContextTypes = {","  relay: require('./RelayPropTypes').Environment,","  route: require('./RelayPropTypes').QueryConfig.isRequired,","  useFakeData: require('react').PropTypes.bool","};","","","module.exports = RelayMockRenderer;"],"l":{"15":1,"17":1,"19":1,"21":3,"39":1,"40":1,"42":1,"43":0,"45":0,"47":0,"62":0,"65":1,"66":0,"69":1,"70":0,"73":1,"76":1,"83":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayMutationDebugPrinter.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayMutationDebugPrinter.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"printOptimisticMutation","line":21,"loc":{"start":{"line":21,"column":27},"end":{"line":21,"column":77}}},"2":{"name":"printMutation","line":33,"loc":{"start":{"line":33,"column":17},"end":{"line":33,"column":53}}}},"statementMap":{"1":{"start":{"line":20,"column":0},"end":{"line":50,"column":2}},"2":{"start":{"line":23,"column":4},"end":{"line":25,"column":5}},"3":{"start":{"line":24,"column":6},"end":{"line":24,"column":13}},"4":{"start":{"line":26,"column":4},"end":{"line":26,"column":65}},"5":{"start":{"line":28,"column":4},"end":{"line":28,"column":50}},"6":{"start":{"line":29,"column":4},"end":{"line":29,"column":26}},"7":{"start":{"line":30,"column":4},"end":{"line":30,"column":23}},"8":{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},"9":{"start":{"line":36,"column":6},"end":{"line":36,"column":13}},"10":{"start":{"line":38,"column":4},"end":{"line":38,"column":74}},"11":{"start":{"line":39,"column":4},"end":{"line":39,"column":30}},"12":{"start":{"line":41,"column":4},"end":{"line":41,"column":48}},"13":{"start":{"line":42,"column":4},"end":{"line":42,"column":60}},"14":{"start":{"line":43,"column":4},"end":{"line":43,"column":23}},"15":{"start":{"line":45,"column":4},"end":{"line":45,"column":44}},"16":{"start":{"line":46,"column":4},"end":{"line":46,"column":55}},"17":{"start":{"line":47,"column":4},"end":{"line":47,"column":23}},"18":{"start":{"line":52,"column":0},"end":{"line":52,"column":43}}},"branchMap":{"1":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":4},"end":{"line":23,"column":4}},{"start":{"line":23,"column":4},"end":{"line":23,"column":4}}]},"2":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":8},"end":{"line":23,"column":31}},{"start":{"line":23,"column":35},"end":{"line":23,"column":52}}]},"3":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":4},"end":{"line":35,"column":4}},{"start":{"line":35,"column":4},"end":{"line":35,"column":4}}]},"4":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":8},"end":{"line":35,"column":31}},{"start":{"line":35,"column":35},"end":{"line":35,"column":52}}]},"5":{"line":38,"type":"cond-expr","locations":[{"start":{"line":38,"column":31},"end":{"line":38,"column":66}},{"start":{"line":38,"column":69},"end":{"line":38,"column":73}}]},"6":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":11},"end":{"line":39,"column":15}},{"start":{"line":39,"column":19},"end":{"line":39,"column":29}}]},"7":{"line":42,"type":"cond-expr","locations":[{"start":{"line":42,"column":31},"end":{"line":42,"column":53}},{"start":{"line":42,"column":56},"end":{"line":42,"column":58}}]},"8":{"line":46,"type":"cond-expr","locations":[{"start":{"line":46,"column":31},"end":{"line":46,"column":48}},{"start":{"line":46,"column":51},"end":{"line":46,"column":53}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayMutationDebugPrinter"," * "," */","","'use strict';","","/**"," * @internal"," *"," * Helper functions to print mutation queries for debugging purposes."," */","var RelayMutationDebugPrinter = {","  printOptimisticMutation: function printOptimisticMutation(query, response) {","    /* eslint-disable no-console */","    if (!console.groupCollapsed || !console.groupEnd) {","      return;","    }","    RelayMutationDebugPrinter.printMutation(query, 'Optimistic');","","    console.groupCollapsed('Optimistic Response');","    console.log(response);","    console.groupEnd();","    /* eslint-enable no-console */","  },","  printMutation: function printMutation(query, name) {","    /* eslint-disable no-console */","    if (!console.groupCollapsed || !console.groupEnd) {","      return;","    }","    var printedQuery = query ? require('./printRelayQuery')(query) : null;","    name = name || 'Mutation';","","    console.groupCollapsed(name + ' Variables');","    console.log(printedQuery ? printedQuery.variables : {});","    console.groupEnd();","","    console.groupCollapsed(name + ' Query');","    console.log(printedQuery ? printedQuery.text : '');","    console.groupEnd();","    /* eslint-enable no-console */","  }","};","","module.exports = RelayMutationDebugPrinter;"],"l":{"20":1,"23":0,"24":0,"26":0,"28":0,"29":0,"30":0,"35":0,"36":0,"38":0,"39":0,"41":0,"42":0,"43":0,"45":0,"46":0,"47":0,"52":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayMutation.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayMutation.js","s":{"1":1,"2":1,"3":1,"4":1,"5":3,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":1,"20":0,"21":1,"22":0,"23":1,"24":0,"25":1,"26":0,"27":1,"28":0,"29":1,"30":0,"31":1,"32":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":1,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":1,"88":1,"89":0,"90":0,"91":0,"92":1},"b":{"1":[3,0],"2":[3,3],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0]},"f":{"1":3,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":37}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":20},"end":{"line":28,"column":32}}},"3":{"name":"RelayMutation","line":29,"loc":{"start":{"line":29,"column":2},"end":{"line":29,"column":32}}},"4":{"name":"bindEnvironment","line":42,"loc":{"start":{"line":42,"column":44},"end":{"line":42,"column":82}}},"5":{"name":"getMutation","line":57,"loc":{"start":{"line":57,"column":40},"end":{"line":57,"column":63}}},"6":{"name":"getFatQuery","line":85,"loc":{"start":{"line":85,"column":40},"end":{"line":85,"column":63}}},"7":{"name":"getConfigs","line":165,"loc":{"start":{"line":165,"column":39},"end":{"line":165,"column":61}}},"8":{"name":"getVariables","line":174,"loc":{"start":{"line":174,"column":41},"end":{"line":174,"column":65}}},"9":{"name":"getFiles","line":183,"loc":{"start":{"line":183,"column":37},"end":{"line":183,"column":57}}},"10":{"name":"getOptimisticResponse","line":201,"loc":{"start":{"line":201,"column":50},"end":{"line":201,"column":83}}},"11":{"name":"getOptimisticConfigs","line":213,"loc":{"start":{"line":213,"column":49},"end":{"line":213,"column":81}}},"12":{"name":"getCollisionKey","line":225,"loc":{"start":{"line":225,"column":44},"end":{"line":225,"column":71}}},"13":{"name":"_resolveProps","line":229,"loc":{"start":{"line":229,"column":42},"end":{"line":229,"column":67}}},"14":{"name":"(anonymous_14)","line":237,"loc":{"start":{"line":237,"column":49},"end":{"line":237,"column":90}}},"15":{"name":"(anonymous_15)","line":253,"loc":{"start":{"line":253,"column":36},"end":{"line":253,"column":56}}},"16":{"name":"(anonymous_16)","line":267,"loc":{"start":{"line":267,"column":50},"end":{"line":267,"column":68}}},"17":{"name":"(anonymous_17)","line":288,"loc":{"start":{"line":288,"column":32},"end":{"line":288,"column":50}}},"18":{"name":"getFragment","line":295,"loc":{"start":{"line":295,"column":30},"end":{"line":295,"column":82}}},"19":{"name":"(anonymous_19)","line":301,"loc":{"start":{"line":301,"column":197},"end":{"line":301,"column":213}}},"20":{"name":"(anonymous_20)","line":309,"loc":{"start":{"line":309,"column":66},"end":{"line":309,"column":78}}},"21":{"name":"buildMutationFragment","line":322,"loc":{"start":{"line":322,"column":0},"end":{"line":322,"column":87}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":81}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":95}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":82}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":97}},"5":{"start":{"line":21,"column":39},"end":{"line":21,"column":95}},"6":{"start":{"line":28,"column":0},"end":{"line":315,"column":4}},"7":{"start":{"line":29,"column":2},"end":{"line":35,"column":3}},"8":{"start":{"line":30,"column":4},"end":{"line":30,"column":58}},"9":{"start":{"line":32,"column":4},"end":{"line":32,"column":41}},"10":{"start":{"line":33,"column":4},"end":{"line":33,"column":36}},"11":{"start":{"line":34,"column":4},"end":{"line":34,"column":34}},"12":{"start":{"line":42,"column":2},"end":{"line":49,"column":4}},"13":{"start":{"line":43,"column":4},"end":{"line":48,"column":5}},"14":{"start":{"line":44,"column":6},"end":{"line":44,"column":38}},"15":{"start":{"line":45,"column":6},"end":{"line":45,"column":27}},"16":{"start":{"line":47,"column":6},"end":{"line":47,"column":167}},"17":{"start":{"line":57,"column":2},"end":{"line":59,"column":4}},"18":{"start":{"line":58,"column":4},"end":{"line":58,"column":129}},"19":{"start":{"line":85,"column":2},"end":{"line":87,"column":4}},"20":{"start":{"line":86,"column":4},"end":{"line":86,"column":129}},"21":{"start":{"line":165,"column":2},"end":{"line":167,"column":4}},"22":{"start":{"line":166,"column":4},"end":{"line":166,"column":128}},"23":{"start":{"line":174,"column":2},"end":{"line":176,"column":4}},"24":{"start":{"line":175,"column":4},"end":{"line":175,"column":130}},"25":{"start":{"line":183,"column":2},"end":{"line":185,"column":4}},"26":{"start":{"line":184,"column":4},"end":{"line":184,"column":16}},"27":{"start":{"line":201,"column":2},"end":{"line":203,"column":4}},"28":{"start":{"line":202,"column":4},"end":{"line":202,"column":16}},"29":{"start":{"line":213,"column":2},"end":{"line":215,"column":4}},"30":{"start":{"line":214,"column":4},"end":{"line":214,"column":16}},"31":{"start":{"line":225,"column":2},"end":{"line":227,"column":4}},"32":{"start":{"line":226,"column":4},"end":{"line":226,"column":16}},"33":{"start":{"line":229,"column":2},"end":{"line":293,"column":4}},"34":{"start":{"line":230,"column":4},"end":{"line":230,"column":21}},"35":{"start":{"line":232,"column":4},"end":{"line":232,"column":47}},"36":{"start":{"line":233,"column":4},"end":{"line":233,"column":67}},"37":{"start":{"line":235,"column":4},"end":{"line":235,"column":38}},"38":{"start":{"line":236,"column":4},"end":{"line":236,"column":61}},"39":{"start":{"line":237,"column":4},"end":{"line":284,"column":7}},"40":{"start":{"line":238,"column":6},"end":{"line":238,"column":42}},"41":{"start":{"line":239,"column":6},"end":{"line":239,"column":234}},"42":{"start":{"line":241,"column":6},"end":{"line":243,"column":7}},"43":{"start":{"line":242,"column":8},"end":{"line":242,"column":15}},"44":{"start":{"line":244,"column":6},"end":{"line":247,"column":7}},"45":{"start":{"line":245,"column":8},"end":{"line":245,"column":170}},"46":{"start":{"line":246,"column":8},"end":{"line":246,"column":15}},"47":{"start":{"line":249,"column":6},"end":{"line":249,"column":252}},"48":{"start":{"line":251,"column":6},"end":{"line":283,"column":7}},"49":{"start":{"line":252,"column":8},"end":{"line":252,"column":236}},"50":{"start":{"line":253,"column":8},"end":{"line":265,"column":11}},"51":{"start":{"line":254,"column":10},"end":{"line":254,"column":232}},"52":{"start":{"line":255,"column":10},"end":{"line":261,"column":11}},"53":{"start":{"line":256,"column":12},"end":{"line":256,"column":96}},"54":{"start":{"line":257,"column":12},"end":{"line":260,"column":13}},"55":{"start":{"line":258,"column":14},"end":{"line":258,"column":51}},"56":{"start":{"line":259,"column":14},"end":{"line":259,"column":336}},"57":{"start":{"line":262,"column":10},"end":{"line":262,"column":73}},"58":{"start":{"line":263,"column":10},"end":{"line":263,"column":198}},"59":{"start":{"line":264,"column":10},"end":{"line":264,"column":24}},"60":{"start":{"line":267,"column":8},"end":{"line":269,"column":11}},"61":{"start":{"line":268,"column":10},"end":{"line":268,"column":59}},"62":{"start":{"line":271,"column":8},"end":{"line":271,"column":237}},"63":{"start":{"line":272,"column":8},"end":{"line":278,"column":9}},"64":{"start":{"line":273,"column":10},"end":{"line":273,"column":99}},"65":{"start":{"line":274,"column":10},"end":{"line":277,"column":11}},"66":{"start":{"line":275,"column":12},"end":{"line":275,"column":49}},"67":{"start":{"line":276,"column":12},"end":{"line":276,"column":310}},"68":{"start":{"line":279,"column":8},"end":{"line":279,"column":76}},"69":{"start":{"line":280,"column":8},"end":{"line":282,"column":9}},"70":{"start":{"line":281,"column":10},"end":{"line":281,"column":82}},"71":{"start":{"line":285,"column":4},"end":{"line":285,"column":31}},"72":{"start":{"line":287,"column":4},"end":{"line":292,"column":5}},"73":{"start":{"line":288,"column":6},"end":{"line":290,"column":9}},"74":{"start":{"line":289,"column":8},"end":{"line":289,"column":83}},"75":{"start":{"line":291,"column":6},"end":{"line":291,"column":37}},"76":{"start":{"line":295,"column":2},"end":{"line":312,"column":4}},"77":{"start":{"line":296,"column":4},"end":{"line":296,"column":22}},"78":{"start":{"line":298,"column":4},"end":{"line":298,"column":35}},"79":{"start":{"line":299,"column":4},"end":{"line":299,"column":50}},"80":{"start":{"line":300,"column":4},"end":{"line":304,"column":5}},"81":{"start":{"line":301,"column":6},"end":{"line":303,"column":21}},"82":{"start":{"line":302,"column":8},"end":{"line":302,"column":32}},"83":{"start":{"line":306,"column":4},"end":{"line":306,"column":55}},"84":{"start":{"line":307,"column":4},"end":{"line":307,"column":49}},"85":{"start":{"line":309,"column":4},"end":{"line":311,"column":60}},"86":{"start":{"line":310,"column":6},"end":{"line":310,"column":97}},"87":{"start":{"line":314,"column":2},"end":{"line":314,"column":23}},"88":{"start":{"line":322,"column":0},"end":{"line":326,"column":1}},"89":{"start":{"line":323,"column":2},"end":{"line":323,"column":76}},"90":{"start":{"line":324,"column":2},"end":{"line":324,"column":218}},"91":{"start":{"line":325,"column":2},"end":{"line":325,"column":18}},"92":{"start":{"line":328,"column":0},"end":{"line":328,"column":31}}},"branchMap":{"1":{"line":21,"type":"cond-expr","locations":[{"start":{"line":21,"column":70},"end":{"line":21,"column":73}},{"start":{"line":21,"column":76},"end":{"line":21,"column":94}}]},"2":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":46},"end":{"line":21,"column":49}},{"start":{"line":21,"column":53},"end":{"line":21,"column":67}}]},"3":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":43,"column":4}},{"start":{"line":43,"column":4},"end":{"line":43,"column":4}}]},"4":{"line":233,"type":"binary-expr","locations":[{"start":{"line":233,"column":27},"end":{"line":233,"column":60}},{"start":{"line":233,"column":64},"end":{"line":233,"column":66}}]},"5":{"line":241,"type":"if","locations":[{"start":{"line":241,"column":6},"end":{"line":241,"column":6}},{"start":{"line":241,"column":6},"end":{"line":241,"column":6}}]},"6":{"line":244,"type":"if","locations":[{"start":{"line":244,"column":6},"end":{"line":244,"column":6}},{"start":{"line":244,"column":6},"end":{"line":244,"column":6}}]},"7":{"line":251,"type":"if","locations":[{"start":{"line":251,"column":6},"end":{"line":251,"column":6}},{"start":{"line":251,"column":6},"end":{"line":251,"column":6}}]},"8":{"line":254,"type":"binary-expr","locations":[{"start":{"line":254,"column":40},"end":{"line":254,"column":64}},{"start":{"line":254,"column":68},"end":{"line":254,"column":80}}]},"9":{"line":255,"type":"if","locations":[{"start":{"line":255,"column":10},"end":{"line":255,"column":10}},{"start":{"line":255,"column":10},"end":{"line":255,"column":10}}]},"10":{"line":257,"type":"if","locations":[{"start":{"line":257,"column":12},"end":{"line":257,"column":12}},{"start":{"line":257,"column":12},"end":{"line":257,"column":12}}]},"11":{"line":257,"type":"binary-expr","locations":[{"start":{"line":257,"column":16},"end":{"line":257,"column":32}},{"start":{"line":257,"column":36},"end":{"line":257,"column":66}}]},"12":{"line":272,"type":"if","locations":[{"start":{"line":272,"column":8},"end":{"line":272,"column":8}},{"start":{"line":272,"column":8},"end":{"line":272,"column":8}}]},"13":{"line":274,"type":"if","locations":[{"start":{"line":274,"column":10},"end":{"line":274,"column":10}},{"start":{"line":274,"column":10},"end":{"line":274,"column":10}}]},"14":{"line":274,"type":"binary-expr","locations":[{"start":{"line":274,"column":14},"end":{"line":274,"column":30}},{"start":{"line":274,"column":34},"end":{"line":274,"column":64}}]},"15":{"line":280,"type":"if","locations":[{"start":{"line":280,"column":8},"end":{"line":280,"column":8}},{"start":{"line":280,"column":8},"end":{"line":280,"column":8}}]},"16":{"line":287,"type":"if","locations":[{"start":{"line":287,"column":4},"end":{"line":287,"column":4}},{"start":{"line":287,"column":4},"end":{"line":287,"column":4}}]},"17":{"line":300,"type":"if","locations":[{"start":{"line":300,"column":4},"end":{"line":300,"column":4}},{"start":{"line":300,"column":4},"end":{"line":300,"column":4}}]},"18":{"line":306,"type":"binary-expr","locations":[{"start":{"line":306,"column":27},"end":{"line":306,"column":48}},{"start":{"line":306,"column":52},"end":{"line":306,"column":54}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayMutation"," * "," */","","'use strict';","","var _extends3 = _interopRequireDefault(require('babel-runtime/helpers/extends'));","","var _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));","","var _keys2 = _interopRequireDefault(require('babel-runtime/core-js/object/keys'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","/**"," * @public"," *"," * RelayMutation is the base class for modeling mutations of data."," */","var RelayMutation = function () {","  function RelayMutation(props) {","    (0, _classCallCheck3['default'])(this, RelayMutation);","","    this._didShowFakeDataWarning = false;","    this._didValidateConfig = false;","    this._unresolvedProps = props;","  }","","  /**","   * @internal","   */","","","  RelayMutation.prototype.bindEnvironment = function bindEnvironment(environment) {","    if (!this._environment) {","      this._environment = environment;","      this._resolveProps();","    } else {","      require('fbjs/lib/invariant')(environment === this._environment, '%s: Mutation instance cannot be used in different Relay environments.', this.constructor.name);","    }","  };","","  /**","   * Each mutation corresponds to a field on the server which is used by clients","   * to communicate the type of mutation to be executed.","   */","","","  RelayMutation.prototype.getMutation = function getMutation() {","    require('fbjs/lib/invariant')(false, '%s: Expected abstract method `getMutation` to be implemented.', this.constructor.name);","  };","","  /**","   * \"Fat queries\" represent a predetermined set of fields that may change as a","   * result of a mutation, and which should therefore be queried in order to get","   * a consistent view of the data after performing a mutation. In practice, we","   * query for a subset of those fields because we intersect the fat query with","   * the tracked query we have for a given node (ie. the pieces of data we've","   * previously queried for and have therefore written to the store).","   *","   * Fat queries can be written like normal GraphQL queries with one main","   * exception: fat queries use childless non-scalar fields to indicate that","   * anything under that field may change. For example, the fat query for","   * feedback_like contains the field `like_sentence` with no child fields.","   * This means that any field below `like_sentence` may change as a result of","   * feedback_like.","   *","   * When adding a fat query, consider *all* of the data that might change as a","   * result of the mutation - not just data that we currently use in Relay. We","   * don't need to worry about overfetching here (this query is never executed","   * on its own; the infrastructure always intersects it with what is actually","   * needed), and if we omit fields here we might get odd consistency behavior","   * in the future when we add new views or modify existing ones.","   */","","","  RelayMutation.prototype.getFatQuery = function getFatQuery() {","    require('fbjs/lib/invariant')(false, '%s: Expected abstract method `getFatQuery` to be implemented.', this.constructor.name);","  };","","  /**","   * These configurations are used to generate the query for the mutation to be","   * sent to the server and to correctly write the server's response into the","   * client store.","   *","   * Possible configuration types:","   *","   * -  FIELDS_CHANGE provides configuration for mutation fields.","   *    {","   *      type: RelayMutationType.FIELDS_CHANGE;","   *      fieldIDs: {[fieldName: string]: DataID | Array<DataID>};","   *    }","   *    where fieldIDs map `fieldName`s from the fatQuery to a DataID or","   *    array of DataIDs to be updated in the store.","   *","   * -  RANGE_ADD provides configuration for adding a new edge to a range.","   *    {","   *      type: RelayMutationType.RANGE_ADD;","   *      parentName: string;","   *      parentID: string;","   *      connectionName: string;","   *      edgeName: string;","   *      rangeBehaviors:","   *        {[call: string]: GraphQLMutatorConstants.RANGE_OPERATIONS};","   *    }","   *    where `parentName` is the field in the fatQuery that contains the range,","   *    `parentID` is the DataID of `parentName` in the store, `connectionName`","   *    is the name of the range, `edgeName` is the name of the key in server","   *    response that contains the newly created edge, `rangeBehaviors` maps","   *    stringified representation of calls on the connection to","   *    GraphQLMutatorConstants.RANGE_OPERATIONS.","   *","   * -  NODE_DELETE provides configuration for deleting a node and the","   *    corresponding edge from a range.","   *    {","   *      type: RelayMutationType.NODE_DELETE;","   *      parentName: string;","   *      parentID: string;","   *      connectionName: string;","   *      deletedIDFieldName: string;","   *    }","   *    where `parentName`, `parentID` and `connectionName` refer to the same","   *    things as in RANGE_ADD, `deletedIDFieldName` is the name of the key in","   *    the server response that contains the DataID of the deleted node.","   *","   * -  RANGE_DELETE provides configuration for deleting an edge from a range","   *    but doesn't delete the node.","   *    {","   *      type: RelayMutationType.RANGE_DELETE;","   *      parentName: string;","   *      parentID: string;","   *      connectionName: string;","   *      deletedIDFieldName: string | Array<string>;","   *      pathToConnection: Array<string>;","   *    }","   *    where `parentName`, `parentID`, `connectionName` and","   *    `deletedIDFieldName` refer to the same things as in NODE_DELETE.","   *    `deletedIDFieldName` can also be a path from the response root to the","   *    deleted node. `pathToConnection` is a path from `parentName` to","   *    `connectionName`.","   *","   * -  REQUIRED_CHILDREN is used to append additional children (fragments or","   *    fields) to the mutation query. Any data fetched for these children is","   *    not written to the client store, but you can add code to process it","   *    in the `onSuccess` callback passed to the `RelayEnvironment` `applyUpdate`","   *    method. You may need to use this, for example, to fetch fields on a new","   *    object created by the mutation (and which Relay would normally not","   *    attempt to fetch because it has not previously fetched anything for that","   *    object).","   *    {","   *      type: RelayMutationType.REQUIRED_CHILDREN;","   *      children: Array<RelayQuery.Node>;","   *    }","   */","","","  RelayMutation.prototype.getConfigs = function getConfigs() {","    require('fbjs/lib/invariant')(false, '%s: Expected abstract method `getConfigs` to be implemented.', this.constructor.name);","  };","","  /**","   * These variables form the \"input\" to the mutation query sent to the server.","   */","","","  RelayMutation.prototype.getVariables = function getVariables() {","    require('fbjs/lib/invariant')(false, '%s: Expected abstract method `getVariables` to be implemented.', this.constructor.name);","  };","","  /**","   * These will be sent along with the mutation query to the server.","   */","","","  RelayMutation.prototype.getFiles = function getFiles() {","    return null;","  };","","  /**","   * When a request is sent to the server, mutations can optionally construct an","   * optimistic response that has the same shape as the server response payload.","   * This optimistic response is used to pre-emptively update the client cache","   * to simulate an instantaneous response.","   *","   * The optimistic response may be a subset or superset of the actual response","   * payload. It can be a subset if certain fields are impossible to create on","   * the client (and if views are expected to handle the data inconsistency). It","   * can be a superset of the actual response payload if certain fields that are","   * affected have not been queried by the client, yet.","   */","","","  RelayMutation.prototype.getOptimisticResponse = function getOptimisticResponse() {","    return null;","  };","","  /**","   * Optional. Similar to `getConfig`, this is used to create the query","   * corresponding to the `optimisticResponse`. If not provided, the query","   * will be inferred from the optimistic response. Most subclasses shouldn't","   * need to extend this method.","   */","","","  RelayMutation.prototype.getOptimisticConfigs = function getOptimisticConfigs() {","    return null;","  };","","  /**","   * An optional collision key allows a mutation to identify itself with other","   * mutations that affect the same fields. Mutations with the same collision","   * are sent to the server serially and in-order to avoid unpredictable and","   * potentially incorrect behavior.","   */","","","  RelayMutation.prototype.getCollisionKey = function getCollisionKey() {","    return null;","  };","","  RelayMutation.prototype._resolveProps = function _resolveProps() {","    var _this = this;","","    var fragments = this.constructor.fragments;","    var initialVariables = this.constructor.initialVariables || {};","","    var props = this._unresolvedProps;","    var resolvedProps = (0, _extends3['default'])({}, props);","    require('fbjs/lib/forEachObject')(fragments, function (fragmentBuilder, fragmentName) {","      var propValue = props[fragmentName];","      require('fbjs/lib/warning')(propValue !== undefined, 'RelayMutation: Expected data for fragment `%s` to be supplied to ' + '`%s` as a prop. Pass an explicit `null` if this is intentional.', fragmentName, _this.constructor.name);","","      if (propValue == null) {","        return;","      }","      if (typeof propValue !== 'object') {","        require('fbjs/lib/warning')(false, 'RelayMutation: Expected data for fragment `%s` supplied to `%s` ' + 'to be an object.', fragmentName, _this.constructor.name);","        return;","      }","","      var fragment = require('./RelayQuery').Fragment.create(buildMutationFragment(_this.constructor.name, fragmentName, fragmentBuilder, initialVariables), require('./RelayMetaRoute').get('$RelayMutation_' + _this.constructor.name), initialVariables);","","      if (fragment.isPlural()) {","        require('fbjs/lib/invariant')(Array.isArray(propValue), 'RelayMutation: Invalid prop `%s` supplied to `%s`, expected an ' + 'array of records because the corresponding fragment is plural.', fragmentName, _this.constructor.name);","        var dataIDs = propValue.map(function (item, ii) {","          require('fbjs/lib/invariant')(typeof item === 'object' && item != null, 'RelayMutation: Invalid prop `%s` supplied to `%s`, ' + 'expected element at index %s to have query data.', fragmentName, _this.constructor.name, ii);","          if (process.env.NODE_ENV !== 'production') {","            var hasFragmentData = require('./RelayFragmentPointer').hasFragment(item, fragment);","            if (!hasFragmentData && !_this._didShowFakeDataWarning) {","              _this._didShowFakeDataWarning = true;","              require('fbjs/lib/warning')(false, 'RelayMutation: Expected prop `%s` element at index %s ' + 'supplied to `%s` to be data fetched by Relay. This is ' + 'likely an error unless you are purposely passing in mock ' + 'data that conforms to the shape of this mutation\\'s fragment.', fragmentName, ii, _this.constructor.name);","            }","          }","          var dataID = require('./RelayRecord').getDataIDForObject(item);","          require('fbjs/lib/invariant')(dataID, 'RelayMutation: Invalid prop `%s` supplied to `%s`, ' + 'expected element at index %s to have query data.', fragmentName, _this.constructor.name, ii);","          return dataID;","        });","","        resolvedProps[fragmentName] = dataIDs.map(function (dataID) {","          return _this._environment.read(fragment, dataID);","        });","      } else {","        require('fbjs/lib/invariant')(!Array.isArray(propValue), 'RelayMutation: Invalid prop `%s` supplied to `%s`, expected a ' + 'single record because the corresponding fragment is not plural.', fragmentName, _this.constructor.name);","        if (process.env.NODE_ENV !== 'production') {","          var hasFragmentData = require('./RelayFragmentPointer').hasFragment(propValue, fragment);","          if (!hasFragmentData && !_this._didShowFakeDataWarning) {","            _this._didShowFakeDataWarning = true;","            require('fbjs/lib/warning')(false, 'RelayMutation: Expected prop `%s` supplied to `%s` to ' + 'be data fetched by Relay. This is likely an error unless ' + 'you are purposely passing in mock data that conforms to ' + 'the shape of this mutation\\'s fragment.', fragmentName, _this.constructor.name);","          }","        }","        var dataID = require('./RelayRecord').getDataIDForObject(propValue);","        if (dataID) {","          resolvedProps[fragmentName] = _this._environment.read(fragment, dataID);","        }","      }","    });","    this.props = resolvedProps;","","    if (!this._didValidateConfig) {","      this.getConfigs().forEach(function (config) {","        return require('./validateMutationConfig')(config, _this.constructor.name);","      });","      this._didValidateConfig = true;","    }","  };","","  RelayMutation.getFragment = function getFragment(fragmentName, variableMapping) {","    var _this2 = this;","","    var fragments = this.fragments;","    var fragmentBuilder = fragments[fragmentName];","    if (!fragmentBuilder) {","      require('fbjs/lib/invariant')(false, '%s.getFragment(): `%s` is not a valid fragment name. Available ' + 'fragments names: %s', this.name, fragmentName, (0, _keys2['default'])(fragments).map(function (name) {","        return '`' + name + '`';","      }).join(', '));","    }","","    var initialVariables = this.initialVariables || {};","    var prepareVariables = this.prepareVariables;","","    return require('./RelayFragmentReference').createForContainer(function () {","      return buildMutationFragment(_this2.name, fragmentName, fragmentBuilder, initialVariables);","    }, initialVariables, variableMapping, prepareVariables);","  };","","  return RelayMutation;","}();","","/**"," * Wrapper around `buildRQL.Fragment` with contextual error messages."," */","","","function buildMutationFragment(mutationName, fragmentName, fragmentBuilder, variables) {","  var fragment = require('./buildRQL').Fragment(fragmentBuilder, variables);","  require('fbjs/lib/invariant')(fragment, 'Relay.QL defined on mutation `%s` named `%s` is not a valid fragment. ' + 'A typical fragment is defined using: Relay.QL`fragment on Type {...}`', mutationName, fragmentName);","  return fragment;","}","","module.exports = RelayMutation;"],"l":{"15":1,"17":1,"19":1,"21":3,"28":1,"29":1,"30":0,"32":0,"33":0,"34":0,"42":1,"43":0,"44":0,"45":0,"47":0,"57":1,"58":0,"85":1,"86":0,"165":1,"166":0,"174":1,"175":0,"183":1,"184":0,"201":1,"202":0,"213":1,"214":0,"225":1,"226":0,"229":1,"230":0,"232":0,"233":0,"235":0,"236":0,"237":0,"238":0,"239":0,"241":0,"242":0,"244":0,"245":0,"246":0,"249":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"262":0,"263":0,"264":0,"267":0,"268":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"279":0,"280":0,"281":0,"285":0,"287":0,"288":0,"289":0,"291":0,"295":1,"296":0,"298":0,"299":0,"300":0,"301":0,"302":0,"306":0,"307":0,"309":0,"310":0,"314":1,"322":1,"323":0,"324":0,"325":0,"328":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayMutationQuery.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayMutationQuery.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":1,"136":0,"137":0,"138":0,"139":1,"140":0,"141":0,"142":0,"143":1,"144":0,"145":0,"146":0,"147":0,"148":0,"149":1,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":1,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":1,"172":0,"173":1,"174":0,"175":0,"176":0,"177":1,"178":0,"179":1,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0,0],"23":[0,0,0,0,0,0],"24":[0,0],"25":[0,0,0],"26":[0,0],"27":[0,0,0],"28":[0,0],"29":[0,0,0],"30":[0,0],"31":[0,0],"32":[0,0,0],"33":[0,0],"34":[0,0],"35":[0,0,0],"36":[0,0],"37":[0,0,0],"38":[0,0],"39":[0,0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0},"fnMap":{"1":{"name":"buildFragmentForFields","line":47,"loc":{"start":{"line":47,"column":26},"end":{"line":47,"column":64}}},"2":{"name":"(anonymous_2)","line":53,"loc":{"start":{"line":53,"column":48},"end":{"line":53,"column":82}}},"3":{"name":"(anonymous_3)","line":57,"loc":{"start":{"line":57,"column":22},"end":{"line":57,"column":40}}},"4":{"name":"buildFragmentForEdgeDeletion","line":101,"loc":{"start":{"line":101,"column":32},"end":{"line":101,"column":77}}},"5":{"name":"filterUnterminatedRange","line":117,"loc":{"start":{"line":117,"column":36},"end":{"line":117,"column":75}}},"6":{"name":"buildFragmentForEdgeInsertion","line":152,"loc":{"start":{"line":152,"column":33},"end":{"line":152,"column":79}}},"7":{"name":"(anonymous_7)","line":165,"loc":{"start":{"line":165,"column":28},"end":{"line":165,"column":52}}},"8":{"name":"(anonymous_8)","line":170,"loc":{"start":{"line":170,"column":7},"end":{"line":170,"column":19}}},"9":{"name":"(anonymous_9)","line":175,"loc":{"start":{"line":175,"column":35},"end":{"line":175,"column":64}}},"10":{"name":"(anonymous_10)","line":193,"loc":{"start":{"line":193,"column":33},"end":{"line":193,"column":56}}},"11":{"name":"filterUnterminatedRange","line":218,"loc":{"start":{"line":218,"column":38},"end":{"line":218,"column":77}}},"12":{"name":"buildFragmentForOptimisticUpdate","line":235,"loc":{"start":{"line":235,"column":36},"end":{"line":235,"column":85}}},"13":{"name":"buildQueryForOptimisticUpdate","line":249,"loc":{"start":{"line":249,"column":33},"end":{"line":249,"column":79}}},"14":{"name":"buildQuery","line":268,"loc":{"start":{"line":268,"column":14},"end":{"line":268,"column":41}}},"15":{"name":"(anonymous_15)","line":286,"loc":{"start":{"line":286,"column":20},"end":{"line":286,"column":38}}},"16":{"name":"(anonymous_16)","line":289,"loc":{"start":{"line":289,"column":48},"end":{"line":289,"column":65}}},"17":{"name":"(anonymous_17)","line":295,"loc":{"start":{"line":295,"column":13},"end":{"line":295,"column":25}}},"18":{"name":"(anonymous_18)","line":298,"loc":{"start":{"line":298,"column":34},"end":{"line":298,"column":58}}},"19":{"name":"(anonymous_19)","line":385,"loc":{"start":{"line":385,"column":131},"end":{"line":385,"column":148}}},"20":{"name":"getFieldFromFatQuery","line":391,"loc":{"start":{"line":391,"column":0},"end":{"line":391,"column":51}}},"21":{"name":"buildMutationFragment","line":397,"loc":{"start":{"line":397,"column":0},"end":{"line":397,"column":49}}},"22":{"name":"buildFragmentForDeletedConnectionNodeID","line":404,"loc":{"start":{"line":404,"column":0},"end":{"line":404,"column":71}}},"23":{"name":"buildEdgeField","line":423,"loc":{"start":{"line":423,"column":0},"end":{"line":423,"column":56}}},"24":{"name":"sanitizeRangeBehaviors","line":456,"loc":{"start":{"line":456,"column":0},"end":{"line":456,"column":48}}},"25":{"name":"(anonymous_25)","line":467,"loc":{"start":{"line":467,"column":52},"end":{"line":467,"column":74}}},"26":{"name":"validateConnection","line":491,"loc":{"start":{"line":491,"column":0},"end":{"line":491,"column":68}}},"27":{"name":"getConnectionAndValidate","line":501,"loc":{"start":{"line":501,"column":0},"end":{"line":501,"column":75}}},"28":{"name":"findDescendantFields","line":513,"loc":{"start":{"line":513,"column":0},"end":{"line":513,"column":51}}},"29":{"name":"traverse","line":515,"loc":{"start":{"line":515,"column":2},"end":{"line":515,"column":26}}},"30":{"name":"(anonymous_30)","line":525,"loc":{"start":{"line":525,"column":33},"end":{"line":525,"column":50}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":16,"column":31}},"2":{"start":{"line":20,"column":0},"end":{"line":20,"column":82}},"3":{"start":{"line":22,"column":0},"end":{"line":24,"column":56}},"4":{"start":{"line":38,"column":0},"end":{"line":389,"column":2}},"5":{"start":{"line":48,"column":4},"end":{"line":50,"column":31}},"6":{"start":{"line":52,"column":4},"end":{"line":52,"column":27}},"7":{"start":{"line":53,"column":4},"end":{"line":80,"column":7}},"8":{"start":{"line":54,"column":6},"end":{"line":54,"column":63}},"9":{"start":{"line":55,"column":6},"end":{"line":55,"column":43}},"10":{"start":{"line":56,"column":6},"end":{"line":56,"column":31}},"11":{"start":{"line":57,"column":6},"end":{"line":59,"column":9}},"12":{"start":{"line":58,"column":8},"end":{"line":58,"column":93}},"13":{"start":{"line":60,"column":6},"end":{"line":60,"column":57}},"14":{"start":{"line":61,"column":6},"end":{"line":61,"column":31}},"15":{"start":{"line":62,"column":6},"end":{"line":67,"column":7}},"16":{"start":{"line":63,"column":8},"end":{"line":63,"column":81}},"17":{"start":{"line":64,"column":8},"end":{"line":66,"column":9}},"18":{"start":{"line":65,"column":10},"end":{"line":65,"column":44}},"19":{"start":{"line":69,"column":6},"end":{"line":78,"column":7}},"20":{"start":{"line":70,"column":8},"end":{"line":70,"column":76}},"21":{"start":{"line":71,"column":8},"end":{"line":71,"column":76}},"22":{"start":{"line":73,"column":8},"end":{"line":73,"column":79}},"23":{"start":{"line":74,"column":8},"end":{"line":74,"column":133}},"24":{"start":{"line":75,"column":8},"end":{"line":75,"column":109}},"25":{"start":{"line":76,"column":8},"end":{"line":76,"column":139}},"26":{"start":{"line":77,"column":8},"end":{"line":77,"column":27}},"27":{"start":{"line":81,"column":4},"end":{"line":81,"column":58}},"28":{"start":{"line":102,"column":4},"end":{"line":106,"column":32}},"29":{"start":{"line":108,"column":4},"end":{"line":108,"column":63}},"30":{"start":{"line":112,"column":4},"end":{"line":112,"column":68}},"31":{"start":{"line":114,"column":4},"end":{"line":114,"column":27}},"32":{"start":{"line":115,"column":4},"end":{"line":115,"column":83}},"33":{"start":{"line":116,"column":4},"end":{"line":127,"column":5}},"34":{"start":{"line":117,"column":6},"end":{"line":119,"column":8}},"35":{"start":{"line":118,"column":8},"end":{"line":118,"column":55}},"36":{"start":{"line":120,"column":6},"end":{"line":120,"column":109}},"37":{"start":{"line":121,"column":6},"end":{"line":126,"column":7}},"38":{"start":{"line":123,"column":8},"end":{"line":123,"column":75}},"39":{"start":{"line":125,"column":8},"end":{"line":125,"column":41}},"40":{"start":{"line":128,"column":4},"end":{"line":128,"column":58}},"41":{"start":{"line":153,"column":4},"end":{"line":159,"column":32}},"42":{"start":{"line":161,"column":4},"end":{"line":161,"column":27}},"43":{"start":{"line":162,"column":4},"end":{"line":162,"column":38}},"44":{"start":{"line":163,"column":4},"end":{"line":163,"column":68}},"45":{"start":{"line":164,"column":4},"end":{"line":164,"column":32}},"46":{"start":{"line":165,"column":4},"end":{"line":167,"column":7}},"47":{"start":{"line":166,"column":6},"end":{"line":166,"column":108}},"48":{"start":{"line":169,"column":4},"end":{"line":207,"column":5}},"49":{"start":{"line":170,"column":6},"end":{"line":206,"column":11}},"50":{"start":{"line":172,"column":8},"end":{"line":172,"column":78}},"51":{"start":{"line":174,"column":8},"end":{"line":174,"column":35}},"52":{"start":{"line":175,"column":8},"end":{"line":202,"column":11}},"53":{"start":{"line":176,"column":10},"end":{"line":176,"column":78}},"54":{"start":{"line":177,"column":10},"end":{"line":179,"column":11}},"55":{"start":{"line":178,"column":12},"end":{"line":178,"column":19}},"56":{"start":{"line":181,"column":10},"end":{"line":181,"column":74}},"57":{"start":{"line":182,"column":10},"end":{"line":182,"column":93}},"58":{"start":{"line":184,"column":10},"end":{"line":188,"column":11}},"59":{"start":{"line":185,"column":12},"end":{"line":185,"column":79}},"60":{"start":{"line":186,"column":12},"end":{"line":186,"column":95}},"61":{"start":{"line":187,"column":12},"end":{"line":187,"column":72}},"62":{"start":{"line":190,"column":10},"end":{"line":201,"column":11}},"63":{"start":{"line":193,"column":12},"end":{"line":195,"column":15}},"64":{"start":{"line":194,"column":14},"end":{"line":194,"column":89}},"65":{"start":{"line":199,"column":12},"end":{"line":199,"column":544}},"66":{"start":{"line":200,"column":12},"end":{"line":200,"column":80}},"67":{"start":{"line":203,"column":8},"end":{"line":205,"column":9}},"68":{"start":{"line":204,"column":10},"end":{"line":204,"column":84}},"69":{"start":{"line":209,"column":4},"end":{"line":226,"column":5}},"70":{"start":{"line":210,"column":6},"end":{"line":210,"column":65}},"71":{"start":{"line":214,"column":6},"end":{"line":214,"column":70}},"72":{"start":{"line":216,"column":6},"end":{"line":216,"column":59}},"73":{"start":{"line":217,"column":6},"end":{"line":225,"column":7}},"74":{"start":{"line":218,"column":8},"end":{"line":220,"column":10}},"75":{"start":{"line":219,"column":10},"end":{"line":219,"column":124}},"76":{"start":{"line":221,"column":8},"end":{"line":221,"column":112}},"77":{"start":{"line":222,"column":8},"end":{"line":224,"column":9}},"78":{"start":{"line":223,"column":10},"end":{"line":223,"column":44}},"79":{"start":{"line":228,"column":4},"end":{"line":228,"column":58}},"80":{"start":{"line":236,"column":4},"end":{"line":237,"column":34}},"81":{"start":{"line":241,"column":4},"end":{"line":241,"column":101}},"82":{"start":{"line":242,"column":4},"end":{"line":242,"column":58}},"83":{"start":{"line":250,"column":4},"end":{"line":252,"column":34}},"84":{"start":{"line":254,"column":4},"end":{"line":257,"column":9}},"85":{"start":{"line":258,"column":4},"end":{"line":258,"column":148}},"86":{"start":{"line":269,"column":4},"end":{"line":274,"column":32}},"87":{"start":{"line":276,"column":4},"end":{"line":280,"column":8}},"88":{"start":{"line":282,"column":4},"end":{"line":284,"column":5}},"89":{"start":{"line":283,"column":6},"end":{"line":283,"column":49}},"90":{"start":{"line":286,"column":4},"end":{"line":379,"column":7}},"91":{"start":{"line":287,"column":6},"end":{"line":378,"column":7}},"92":{"start":{"line":289,"column":10},"end":{"line":291,"column":13}},"93":{"start":{"line":290,"column":12},"end":{"line":290,"column":118}},"94":{"start":{"line":292,"column":10},"end":{"line":292,"column":50}},"95":{"start":{"line":294,"column":10},"end":{"line":305,"column":11}},"96":{"start":{"line":295,"column":12},"end":{"line":304,"column":17}},"97":{"start":{"line":296,"column":14},"end":{"line":296,"column":85}},"98":{"start":{"line":297,"column":14},"end":{"line":297,"column":58}},"99":{"start":{"line":298,"column":14},"end":{"line":302,"column":17}},"100":{"start":{"line":299,"column":16},"end":{"line":299,"column":46}},"101":{"start":{"line":300,"column":16},"end":{"line":300,"column":63}},"102":{"start":{"line":301,"column":16},"end":{"line":301,"column":35}},"103":{"start":{"line":303,"column":14},"end":{"line":303,"column":33}},"104":{"start":{"line":307,"column":10},"end":{"line":307,"column":16}},"105":{"start":{"line":311,"column":10},"end":{"line":313,"column":11}},"106":{"start":{"line":312,"column":12},"end":{"line":312,"column":48}},"107":{"start":{"line":315,"column":10},"end":{"line":323,"column":14}},"108":{"start":{"line":325,"column":10},"end":{"line":327,"column":11}},"109":{"start":{"line":326,"column":12},"end":{"line":326,"column":31}},"110":{"start":{"line":329,"column":10},"end":{"line":329,"column":16}},"111":{"start":{"line":333,"column":10},"end":{"line":339,"column":13}},"112":{"start":{"line":340,"column":10},"end":{"line":340,"column":38}},"113":{"start":{"line":341,"column":10},"end":{"line":341,"column":145}},"114":{"start":{"line":342,"column":10},"end":{"line":342,"column":99}},"115":{"start":{"line":343,"column":10},"end":{"line":343,"column":38}},"116":{"start":{"line":345,"column":10},"end":{"line":354,"column":11}},"117":{"start":{"line":346,"column":12},"end":{"line":346,"column":117}},"118":{"start":{"line":347,"column":12},"end":{"line":347,"column":47}},"119":{"start":{"line":349,"column":12},"end":{"line":349,"column":84}},"120":{"start":{"line":350,"column":12},"end":{"line":350,"column":84}},"121":{"start":{"line":351,"column":12},"end":{"line":351,"column":84}},"122":{"start":{"line":353,"column":12},"end":{"line":353,"column":31}},"123":{"start":{"line":356,"column":10},"end":{"line":356,"column":16}},"124":{"start":{"line":360,"column":10},"end":{"line":362,"column":11}},"125":{"start":{"line":361,"column":12},"end":{"line":361,"column":52}},"126":{"start":{"line":364,"column":10},"end":{"line":368,"column":14}},"127":{"start":{"line":370,"column":10},"end":{"line":372,"column":11}},"128":{"start":{"line":371,"column":12},"end":{"line":371,"column":31}},"129":{"start":{"line":374,"column":10},"end":{"line":374,"column":16}},"130":{"start":{"line":377,"column":10},"end":{"line":377,"column":136}},"131":{"start":{"line":381,"column":4},"end":{"line":383,"column":5}},"132":{"start":{"line":382,"column":6},"end":{"line":382,"column":25}},"133":{"start":{"line":385,"column":4},"end":{"line":387,"column":27}},"134":{"start":{"line":386,"column":6},"end":{"line":386,"column":27}},"135":{"start":{"line":391,"column":0},"end":{"line":395,"column":1}},"136":{"start":{"line":392,"column":2},"end":{"line":392,"column":55}},"137":{"start":{"line":393,"column":2},"end":{"line":393,"column":112}},"138":{"start":{"line":394,"column":2},"end":{"line":394,"column":15}},"139":{"start":{"line":397,"column":0},"end":{"line":402,"column":1}},"140":{"start":{"line":398,"column":2},"end":{"line":398,"column":101}},"141":{"start":{"line":400,"column":2},"end":{"line":400,"column":130}},"142":{"start":{"line":401,"column":2},"end":{"line":401,"column":18}},"143":{"start":{"line":404,"column":0},"end":{"line":421,"column":1}},"144":{"start":{"line":405,"column":2},"end":{"line":405,"column":108}},"145":{"start":{"line":406,"column":2},"end":{"line":409,"column":5}},"146":{"start":{"line":410,"column":2},"end":{"line":419,"column":3}},"147":{"start":{"line":411,"column":4},"end":{"line":418,"column":7}},"148":{"start":{"line":420,"column":2},"end":{"line":420,"column":50}},"149":{"start":{"line":423,"column":0},"end":{"line":454,"column":1}},"150":{"start":{"line":424,"column":2},"end":{"line":430,"column":6}},"151":{"start":{"line":431,"column":2},"end":{"line":444,"column":3}},"152":{"start":{"line":432,"column":4},"end":{"line":443,"column":8}},"153":{"start":{"line":445,"column":2},"end":{"line":445,"column":40}},"154":{"start":{"line":446,"column":2},"end":{"line":451,"column":6}},"155":{"start":{"line":452,"column":2},"end":{"line":452,"column":125}},"156":{"start":{"line":453,"column":2},"end":{"line":453,"column":19}},"157":{"start":{"line":456,"column":0},"end":{"line":485,"column":1}},"158":{"start":{"line":462,"column":2},"end":{"line":464,"column":3}},"159":{"start":{"line":463,"column":4},"end":{"line":463,"column":26}},"160":{"start":{"line":466,"column":2},"end":{"line":466,"column":28}},"161":{"start":{"line":467,"column":2},"end":{"line":480,"column":5}},"162":{"start":{"line":468,"column":4},"end":{"line":479,"column":5}},"163":{"start":{"line":469,"column":6},"end":{"line":473,"column":21}},"164":{"start":{"line":474,"column":6},"end":{"line":474,"column":80}},"165":{"start":{"line":475,"column":6},"end":{"line":478,"column":7}},"166":{"start":{"line":476,"column":8},"end":{"line":476,"column":42}},"167":{"start":{"line":477,"column":8},"end":{"line":477,"column":31}},"168":{"start":{"line":481,"column":2},"end":{"line":483,"column":3}},"169":{"start":{"line":482,"column":4},"end":{"line":482,"column":518}},"170":{"start":{"line":484,"column":2},"end":{"line":484,"column":24}},"171":{"start":{"line":491,"column":0},"end":{"line":493,"column":1}},"172":{"start":{"line":492,"column":2},"end":{"line":492,"column":186}},"173":{"start":{"line":501,"column":0},"end":{"line":507,"column":1}},"174":{"start":{"line":502,"column":2},"end":{"line":502,"column":70}},"175":{"start":{"line":503,"column":2},"end":{"line":506,"column":3}},"176":{"start":{"line":505,"column":4},"end":{"line":505,"column":67}},"177":{"start":{"line":513,"column":0},"end":{"line":532,"column":1}},"178":{"start":{"line":514,"column":2},"end":{"line":514,"column":18}},"179":{"start":{"line":515,"column":2},"end":{"line":529,"column":3}},"180":{"start":{"line":516,"column":4},"end":{"line":521,"column":5}},"181":{"start":{"line":517,"column":6},"end":{"line":520,"column":7}},"182":{"start":{"line":518,"column":8},"end":{"line":518,"column":26}},"183":{"start":{"line":519,"column":8},"end":{"line":519,"column":15}},"184":{"start":{"line":522,"column":4},"end":{"line":528,"column":5}},"185":{"start":{"line":525,"column":6},"end":{"line":527,"column":9}},"186":{"start":{"line":526,"column":8},"end":{"line":526,"column":31}},"187":{"start":{"line":530,"column":2},"end":{"line":530,"column":21}},"188":{"start":{"line":531,"column":2},"end":{"line":531,"column":16}},"189":{"start":{"line":534,"column":0},"end":{"line":534,"column":36}}},"branchMap":{"1":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":6},"end":{"line":62,"column":6}},{"start":{"line":62,"column":6},"end":{"line":62,"column":6}}]},"2":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":8},"end":{"line":64,"column":8}},{"start":{"line":64,"column":8},"end":{"line":64,"column":8}}]},"3":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":6},"end":{"line":69,"column":6}},{"start":{"line":69,"column":6},"end":{"line":69,"column":6}}]},"4":{"line":69,"type":"binary-expr","locations":[{"start":{"line":69,"column":10},"end":{"line":69,"column":47}},{"start":{"line":69,"column":51},"end":{"line":69,"column":73}},{"start":{"line":69,"column":77},"end":{"line":69,"column":93}}]},"5":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":48},"end":{"line":74,"column":60}},{"start":{"line":74,"column":64},"end":{"line":74,"column":111}}]},"6":{"line":76,"type":"binary-expr","locations":[{"start":{"line":76,"column":48},"end":{"line":76,"column":61}},{"start":{"line":76,"column":65},"end":{"line":76,"column":113}}]},"7":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":4},"end":{"line":116,"column":4}},{"start":{"line":116,"column":4},"end":{"line":116,"column":4}}]},"8":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":6},"end":{"line":121,"column":6}},{"start":{"line":121,"column":6},"end":{"line":121,"column":6}}]},"9":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":4},"end":{"line":169,"column":4}},{"start":{"line":169,"column":4},"end":{"line":169,"column":4}}]},"10":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":10},"end":{"line":177,"column":10}},{"start":{"line":177,"column":10},"end":{"line":177,"column":10}}]},"11":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":10},"end":{"line":184,"column":10}},{"start":{"line":184,"column":10},"end":{"line":184,"column":10}}]},"12":{"line":184,"type":"binary-expr","locations":[{"start":{"line":184,"column":14},"end":{"line":184,"column":51}},{"start":{"line":184,"column":55},"end":{"line":184,"column":77}},{"start":{"line":184,"column":81},"end":{"line":184,"column":97}}]},"13":{"line":187,"type":"binary-expr","locations":[{"start":{"line":187,"column":50},"end":{"line":187,"column":63}},{"start":{"line":187,"column":67},"end":{"line":187,"column":69}}]},"14":{"line":190,"type":"if","locations":[{"start":{"line":190,"column":10},"end":{"line":190,"column":10}},{"start":{"line":190,"column":10},"end":{"line":190,"column":10}}]},"15":{"line":190,"type":"binary-expr","locations":[{"start":{"line":190,"column":14},"end":{"line":190,"column":27}},{"start":{"line":190,"column":31},"end":{"line":190,"column":56}}]},"16":{"line":203,"type":"if","locations":[{"start":{"line":203,"column":8},"end":{"line":203,"column":8}},{"start":{"line":203,"column":8},"end":{"line":203,"column":8}}]},"17":{"line":209,"type":"if","locations":[{"start":{"line":209,"column":4},"end":{"line":209,"column":4}},{"start":{"line":209,"column":4},"end":{"line":209,"column":4}}]},"18":{"line":217,"type":"if","locations":[{"start":{"line":217,"column":6},"end":{"line":217,"column":6}},{"start":{"line":217,"column":6},"end":{"line":217,"column":6}}]},"19":{"line":219,"type":"binary-expr","locations":[{"start":{"line":219,"column":17},"end":{"line":219,"column":56}},{"start":{"line":219,"column":60},"end":{"line":219,"column":123}}]},"20":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":8},"end":{"line":222,"column":8}},{"start":{"line":222,"column":8},"end":{"line":222,"column":8}}]},"21":{"line":282,"type":"if","locations":[{"start":{"line":282,"column":4},"end":{"line":282,"column":4}},{"start":{"line":282,"column":4},"end":{"line":282,"column":4}}]},"22":{"line":282,"type":"binary-expr","locations":[{"start":{"line":282,"column":8},"end":{"line":282,"column":45}},{"start":{"line":282,"column":49},"end":{"line":282,"column":71}},{"start":{"line":282,"column":75},"end":{"line":282,"column":91}}]},"23":{"line":287,"type":"switch","locations":[{"start":{"line":288,"column":8},"end":{"line":307,"column":16}},{"start":{"line":309,"column":8},"end":{"line":329,"column":16}},{"start":{"line":331,"column":8},"end":{"line":331,"column":57}},{"start":{"line":332,"column":8},"end":{"line":356,"column":16}},{"start":{"line":358,"column":8},"end":{"line":374,"column":16}},{"start":{"line":376,"column":8},"end":{"line":377,"column":136}}]},"24":{"line":294,"type":"if","locations":[{"start":{"line":294,"column":10},"end":{"line":294,"column":10}},{"start":{"line":294,"column":10},"end":{"line":294,"column":10}}]},"25":{"line":294,"type":"binary-expr","locations":[{"start":{"line":294,"column":14},"end":{"line":294,"column":51}},{"start":{"line":294,"column":55},"end":{"line":294,"column":77}},{"start":{"line":294,"column":81},"end":{"line":294,"column":97}}]},"26":{"line":311,"type":"if","locations":[{"start":{"line":311,"column":10},"end":{"line":311,"column":10}},{"start":{"line":311,"column":10},"end":{"line":311,"column":10}}]},"27":{"line":311,"type":"binary-expr","locations":[{"start":{"line":311,"column":14},"end":{"line":311,"column":51}},{"start":{"line":311,"column":55},"end":{"line":311,"column":77}},{"start":{"line":311,"column":81},"end":{"line":311,"column":97}}]},"28":{"line":325,"type":"if","locations":[{"start":{"line":325,"column":10},"end":{"line":325,"column":10}},{"start":{"line":325,"column":10},"end":{"line":325,"column":10}}]},"29":{"line":325,"type":"binary-expr","locations":[{"start":{"line":325,"column":14},"end":{"line":325,"column":51}},{"start":{"line":325,"column":55},"end":{"line":325,"column":77}},{"start":{"line":325,"column":81},"end":{"line":325,"column":97}}]},"30":{"line":341,"type":"cond-expr","locations":[{"start":{"line":341,"column":78},"end":{"line":341,"column":114}},{"start":{"line":341,"column":117},"end":{"line":341,"column":144}}]},"31":{"line":345,"type":"if","locations":[{"start":{"line":345,"column":10},"end":{"line":345,"column":10}},{"start":{"line":345,"column":10},"end":{"line":345,"column":10}}]},"32":{"line":345,"type":"binary-expr","locations":[{"start":{"line":345,"column":14},"end":{"line":345,"column":51}},{"start":{"line":345,"column":55},"end":{"line":345,"column":77}},{"start":{"line":345,"column":81},"end":{"line":345,"column":97}}]},"33":{"line":346,"type":"cond-expr","locations":[{"start":{"line":346,"column":86},"end":{"line":346,"column":100}},{"start":{"line":346,"column":103},"end":{"line":346,"column":116}}]},"34":{"line":360,"type":"if","locations":[{"start":{"line":360,"column":10},"end":{"line":360,"column":10}},{"start":{"line":360,"column":10},"end":{"line":360,"column":10}}]},"35":{"line":360,"type":"binary-expr","locations":[{"start":{"line":360,"column":14},"end":{"line":360,"column":51}},{"start":{"line":360,"column":55},"end":{"line":360,"column":77}},{"start":{"line":360,"column":81},"end":{"line":360,"column":97}}]},"36":{"line":370,"type":"if","locations":[{"start":{"line":370,"column":10},"end":{"line":370,"column":10}},{"start":{"line":370,"column":10},"end":{"line":370,"column":10}}]},"37":{"line":370,"type":"binary-expr","locations":[{"start":{"line":370,"column":14},"end":{"line":370,"column":51}},{"start":{"line":370,"column":55},"end":{"line":370,"column":77}},{"start":{"line":370,"column":81},"end":{"line":370,"column":97}}]},"38":{"line":381,"type":"if","locations":[{"start":{"line":381,"column":4},"end":{"line":381,"column":4}},{"start":{"line":381,"column":4},"end":{"line":381,"column":4}}]},"39":{"line":381,"type":"binary-expr","locations":[{"start":{"line":381,"column":8},"end":{"line":381,"column":45}},{"start":{"line":381,"column":49},"end":{"line":381,"column":71}},{"start":{"line":381,"column":75},"end":{"line":381,"column":91}}]},"40":{"line":431,"type":"if","locations":[{"start":{"line":431,"column":2},"end":{"line":431,"column":2}},{"start":{"line":431,"column":2},"end":{"line":431,"column":2}}]},"41":{"line":431,"type":"binary-expr","locations":[{"start":{"line":431,"column":6},"end":{"line":431,"column":67}},{"start":{"line":431,"column":71},"end":{"line":431,"column":117}}]},"42":{"line":462,"type":"if","locations":[{"start":{"line":462,"column":2},"end":{"line":462,"column":2}},{"start":{"line":462,"column":2},"end":{"line":462,"column":2}}]},"43":{"line":468,"type":"if","locations":[{"start":{"line":468,"column":4},"end":{"line":468,"column":4}},{"start":{"line":468,"column":4},"end":{"line":468,"column":4}}]},"44":{"line":474,"type":"cond-expr","locations":[{"start":{"line":474,"column":70},"end":{"line":474,"column":73}},{"start":{"line":474,"column":76},"end":{"line":474,"column":78}}]},"45":{"line":475,"type":"if","locations":[{"start":{"line":475,"column":6},"end":{"line":475,"column":6}},{"start":{"line":475,"column":6},"end":{"line":475,"column":6}}]},"46":{"line":476,"type":"binary-expr","locations":[{"start":{"line":476,"column":23},"end":{"line":476,"column":35}},{"start":{"line":476,"column":39},"end":{"line":476,"column":41}}]},"47":{"line":481,"type":"if","locations":[{"start":{"line":481,"column":2},"end":{"line":481,"column":2}},{"start":{"line":481,"column":2},"end":{"line":481,"column":2}}]},"48":{"line":482,"type":"cond-expr","locations":[{"start":{"line":482,"column":273},"end":{"line":482,"column":275}},{"start":{"line":482,"column":278},"end":{"line":482,"column":281}}]},"49":{"line":482,"type":"cond-expr","locations":[{"start":{"line":482,"column":311},"end":{"line":482,"column":326}},{"start":{"line":482,"column":329},"end":{"line":482,"column":443}}]},"50":{"line":482,"type":"cond-expr","locations":[{"start":{"line":482,"column":357},"end":{"line":482,"column":402}},{"start":{"line":482,"column":405},"end":{"line":482,"column":443}}]},"51":{"line":482,"type":"cond-expr","locations":[{"start":{"line":482,"column":471},"end":{"line":482,"column":511}},{"start":{"line":482,"column":514},"end":{"line":482,"column":516}}]},"52":{"line":492,"type":"cond-expr","locations":[{"start":{"line":492,"column":153},"end":{"line":492,"column":179}},{"start":{"line":492,"column":182},"end":{"line":492,"column":184}}]},"53":{"line":503,"type":"if","locations":[{"start":{"line":503,"column":2},"end":{"line":503,"column":2}},{"start":{"line":503,"column":2},"end":{"line":503,"column":2}}]},"54":{"line":516,"type":"if","locations":[{"start":{"line":516,"column":4},"end":{"line":516,"column":4}},{"start":{"line":516,"column":4},"end":{"line":516,"column":4}}]},"55":{"line":517,"type":"if","locations":[{"start":{"line":517,"column":6},"end":{"line":517,"column":6}},{"start":{"line":517,"column":6},"end":{"line":517,"column":6}}]},"56":{"line":522,"type":"if","locations":[{"start":{"line":522,"column":4},"end":{"line":522,"column":4}},{"start":{"line":522,"column":4},"end":{"line":522,"column":4}}]},"57":{"line":522,"type":"binary-expr","locations":[{"start":{"line":522,"column":8},"end":{"line":522,"column":25}},{"start":{"line":522,"column":29},"end":{"line":522,"column":77}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayMutationQuery"," * "," */","","'use strict';","","var _require = require('./GraphQLMutatorConstants'),","    REFETCH = _require.REFETCH;","// This should probably use disjoint unions.","","","var CLIENT_MUTATION_ID = require('./RelayConnectionInterface').CLIENT_MUTATION_ID;","","var ANY_TYPE = require('./RelayNodeInterface').ANY_TYPE,","    ID = require('./RelayNodeInterface').ID,","    TYPENAME = require('./RelayNodeInterface').TYPENAME;","","/**"," * @internal"," *"," * Constructs query fragments that are sent with mutations, which should ensure"," * that any records changed as a result of mutations are brought up-to-date."," *"," * The fragments are a minimal subset created by intersecting the \"fat query\""," * (fields that a mutation declares may have changed) with the \"tracked query\""," * (fields representing data previously queried and written into the store)."," */","","","var RelayMutationQuery = {","  /**","   * Accepts a mapping from field names to data IDs. The field names must exist","   * as top-level fields in the fat query. These top-level fields are used to","   * re-fetch any data that has changed for records identified by the data IDs.","   *","   * The supplied mapping may contain multiple field names. In addition, each","   * field name may map to an array of data IDs if the field is plural.","   */","  buildFragmentForFields: function buildFragmentForFields(_ref) {","    var fatQuery = _ref.fatQuery,","        fieldIDs = _ref.fieldIDs,","        tracker = _ref.tracker;","","    var mutatedFields = [];","    require('fbjs/lib/forEachObject')(fieldIDs, function (dataIDOrIDs, fieldName) {","      var fatField = getFieldFromFatQuery(fatQuery, fieldName);","      var dataIDs = [].concat(dataIDOrIDs);","      var trackedChildren = [];","      dataIDs.forEach(function (dataID) {","        trackedChildren.push.apply(trackedChildren, tracker.getTrackedChildrenForID(dataID));","      });","      var trackedField = fatField.clone(trackedChildren);","      var mutationField = null;","      if (trackedField) {","        mutationField = require('./intersectRelayQuery')(trackedField, fatField);","        if (mutationField) {","          mutatedFields.push(mutationField);","        }","      }","      /* eslint-disable no-console */","      if (process.env.NODE_ENV !== 'production' && console.groupCollapsed && console.groupEnd) {","        console.groupCollapsed('Building fragment for `' + fieldName + '`');","        console.log(require('./RelayNodeInterface').ID + ': ', dataIDOrIDs);","","        var RelayMutationDebugPrinter = require('./RelayMutationDebugPrinter');","        RelayMutationDebugPrinter.printMutation(trackedField && buildMutationFragment(fatQuery, [trackedField]), 'Tracked Fragment');","        RelayMutationDebugPrinter.printMutation(buildMutationFragment(fatQuery, [fatField]), 'Fat Fragment');","        RelayMutationDebugPrinter.printMutation(mutationField && buildMutationFragment(fatQuery, [mutationField]), 'Intersected Fragment');","        console.groupEnd();","      }","      /* eslint-enable no-console */","    });","    return buildMutationFragment(fatQuery, mutatedFields);","  },","","","  /**","   * Creates a fragment used to update any data as a result of a mutation that","   * deletes an edge from a connection. The primary difference between this and","   * `createForFields` is whether or not the connection edges are re-fetched.","   *","   * `connectionName`","   *   Name of the connection field from which the edge is being deleted.","   *","   * `parentID`","   *   ID of the parent record containing the connection which may have metadata","   *   that needs to be re-fetched.","   *","   * `parentName`","   *   Name of the top-level field in the fat query that corresponds to the","   *   parent record.","   */","  buildFragmentForEdgeDeletion: function buildFragmentForEdgeDeletion(_ref2) {","    var fatQuery = _ref2.fatQuery,","        connectionName = _ref2.connectionName,","        parentID = _ref2.parentID,","        parentName = _ref2.parentName,","        tracker = _ref2.tracker;","","    var fatParent = getFieldFromFatQuery(fatQuery, parentName);","","    // The connection may not be explicit in the fat query, but if it is, we","    // try to validate it.","    getConnectionAndValidate(fatParent, parentName, connectionName);","","    var mutatedFields = [];","    var trackedParent = fatParent.clone(tracker.getTrackedChildrenForID(parentID));","    if (trackedParent) {","      var filterUnterminatedRange = function filterUnterminatedRange(node) {","        return node.getSchemaName() === connectionName;","      };","      var mutatedField = require('./intersectRelayQuery')(trackedParent, fatParent, filterUnterminatedRange);","      if (mutatedField) {","        // If we skipped validation above, we get a second chance here.","        getConnectionAndValidate(mutatedField, parentName, connectionName);","","        mutatedFields.push(mutatedField);","      }","    }","    return buildMutationFragment(fatQuery, mutatedFields);","  },","","","  /**","   * Creates a fragment used to fetch data necessary to insert a new edge into","   * an existing connection.","   *","   * `connectionName`","   *   Name of the connection field into which the edge is being inserted.","   *","   * `parentID`","   *   ID of the parent record containing the connection which may have metadata","   *   that needs to be re-fetched.","   *","   * `edgeName`","   *   Name of the top-level field in the fat query that corresponds to the","   *   newly inserted edge.","   *","   * `parentName`","   *   Name of the top-level field in the fat query that corresponds to the","   *   parent record. If not supplied, metadata on the parent record and any","   *   connections without entries in `rangeBehaviors` will not be updated.","   */","  buildFragmentForEdgeInsertion: function buildFragmentForEdgeInsertion(_ref3) {","    var fatQuery = _ref3.fatQuery,","        connectionName = _ref3.connectionName,","        parentID = _ref3.parentID,","        edgeName = _ref3.edgeName,","        parentName = _ref3.parentName,","        rangeBehaviors = _ref3.rangeBehaviors,","        tracker = _ref3.tracker;","","    var mutatedFields = [];","    var keysWithoutRangeBehavior = {};","    var trackedChildren = tracker.getTrackedChildrenForID(parentID);","    var trackedConnections = [];","    trackedChildren.forEach(function (trackedChild) {","      trackedConnections.push.apply(trackedConnections, findDescendantFields(trackedChild, connectionName));","    });","","    if (trackedConnections.length) {","      (function () {","        // If the first instance of the connection passes validation, all will.","        validateConnection(parentName, connectionName, trackedConnections[0]);","","        var mutatedEdgeFields = [];","        trackedConnections.forEach(function (trackedConnection) {","          var trackedEdges = findDescendantFields(trackedConnection, 'edges');","          if (!trackedEdges.length) {","            return;","          }","","          var callsWithValues = trackedConnection.getRangeBehaviorCalls();","          var rangeBehavior = require('./getRangeBehavior')(rangeBehaviors, callsWithValues);","          /* eslint-disable no-console */","          if (process.env.NODE_ENV !== 'production' && console.groupCollapsed && console.groupEnd) {","            var serializeRelayQueryCall = require('./serializeRelayQueryCall');","            var serializedCalls = callsWithValues.map(serializeRelayQueryCall).sort().join('');","            console.log(serializedCalls + ': ' + (rangeBehavior || ''));","          }","          /* eslint-enable no-console */","          if (rangeBehavior && rangeBehavior !== REFETCH) {","            // Include edges from all connections that exist in `rangeBehaviors`.","            // This may add duplicates, but they will eventually be flattened.","            trackedEdges.forEach(function (trackedEdge) {","              mutatedEdgeFields.push.apply(mutatedEdgeFields, trackedEdge.getChildren());","            });","          } else {","            // If the connection is not in `rangeBehaviors` or we have explicitly","            // set the behavior to `refetch`, re-fetch it.","            require('fbjs/lib/warning')(rangeBehavior === REFETCH, 'RelayMutation: The connection `%s` on the mutation field `%s` ' + 'that corresponds to the ID `%s` did not match any of the ' + '`rangeBehaviors` specified in your RANGE_ADD config. This means ' + 'that the entire connection will be refetched. Configure a range ' + 'behavior for this mutation in order to fetch only the new edge ' + 'and to enable optimistic mutations or use `refetch` to squelch ' + 'this warning.', trackedConnection.getStorageKey(), parentName, parentID);","            keysWithoutRangeBehavior[trackedConnection.getShallowHash()] = true;","          }","        });","        if (mutatedEdgeFields.length) {","          mutatedFields.push(buildEdgeField(parentID, edgeName, mutatedEdgeFields));","        }","      })();","    }","","    if (parentName != null) {","      var fatParent = getFieldFromFatQuery(fatQuery, parentName);","","      // The connection may not be explicit in the fat query, but if it is, we","      // try to validate it.","      getConnectionAndValidate(fatParent, parentName, connectionName);","","      var trackedParent = fatParent.clone(trackedChildren);","      if (trackedParent) {","        var filterUnterminatedRange = function filterUnterminatedRange(node) {","          return node.getSchemaName() === connectionName && !keysWithoutRangeBehavior.hasOwnProperty(node.getShallowHash());","        };","        var mutatedParent = require('./intersectRelayQuery')(trackedParent, fatParent, filterUnterminatedRange);","        if (mutatedParent) {","          mutatedFields.push(mutatedParent);","        }","      }","    }","","    return buildMutationFragment(fatQuery, mutatedFields);","  },","","","  /**","   * Creates a fragment used to fetch the given optimistic response.","   */","  buildFragmentForOptimisticUpdate: function buildFragmentForOptimisticUpdate(_ref4) {","    var response = _ref4.response,","        fatQuery = _ref4.fatQuery;","","    // Silences RelayQueryNode being incompatible with sub-class RelayQueryField","    // A detailed error description is available in #7635477","    var mutatedFields = require('./RelayOptimisticMutationUtils').inferRelayFieldsFromData(response);","    return buildMutationFragment(fatQuery, mutatedFields);","  },","","","  /**","   * Creates a RelayQuery.Mutation used to fetch the given optimistic response.","   */","  buildQueryForOptimisticUpdate: function buildQueryForOptimisticUpdate(_ref5) {","    var fatQuery = _ref5.fatQuery,","        mutation = _ref5.mutation,","        response = _ref5.response;","","    var children = [require('fbjs/lib/nullthrows')(RelayMutationQuery.buildFragmentForOptimisticUpdate({","      response: response,","      fatQuery: fatQuery","    }))];","    return require('./RelayQuery').Mutation.build('OptimisticQuery', fatQuery.getType(), mutation.calls[0].name, null, children, mutation.metadata);","  },","","","  /**","   * Creates a RelayQuery.Mutation for the given config. See type","   * `MutationConfig` and the `buildFragmentForEdgeInsertion`,","   * `buildFragmentForEdgeDeletion` and `buildFragmentForFields` methods above","   * for possible configs.","   */","  buildQuery: function buildQuery(_ref6) {","    var configs = _ref6.configs,","        fatQuery = _ref6.fatQuery,","        input = _ref6.input,","        mutationName = _ref6.mutationName,","        mutation = _ref6.mutation,","        tracker = _ref6.tracker;","","    var children = [require('./RelayQuery').Field.build({","      fieldName: CLIENT_MUTATION_ID,","      type: 'String',","      metadata: { isRequisite: true }","    })];","    /* eslint-disable no-console */","    if (process.env.NODE_ENV !== 'production' && console.groupCollapsed && console.groupEnd) {","      console.groupCollapsed('Mutation Configs');","    }","    /* eslint-enable no-console */","    configs.forEach(function (config) {","      switch (config.type) {","        case require('./RelayMutationType').REQUIRED_CHILDREN:","          var newChildren = config.children.map(function (child) {","            return require('./RelayQuery').Fragment.create(child, require('./RelayMetaRoute').get('$buildQuery'), {});","          });","          children = children.concat(newChildren);","          /* eslint-disable no-console */","          if (process.env.NODE_ENV !== 'production' && console.groupCollapsed && console.groupEnd) {","            (function () {","              var RelayMutationDebugPrinter = require('./RelayMutationDebugPrinter');","              console.groupCollapsed('REQUIRED_CHILDREN');","              newChildren.forEach(function (child, index) {","                console.groupCollapsed(index);","                RelayMutationDebugPrinter.printMutation(child);","                console.groupEnd();","              });","              console.groupEnd();","            })();","          }","          /* eslint-enable no-console */","          break;","","        case require('./RelayMutationType').RANGE_ADD:","          /* eslint-disable no-console */","          if (process.env.NODE_ENV !== 'production' && console.groupCollapsed && console.groupEnd) {","            console.groupCollapsed('RANGE_ADD');","          }","          /* eslint-enable no-console */","          children.push(RelayMutationQuery.buildFragmentForEdgeInsertion({","            connectionName: config.connectionName,","            edgeName: config.edgeName,","            fatQuery: fatQuery,","            parentID: config.parentID,","            parentName: config.parentName,","            rangeBehaviors: sanitizeRangeBehaviors(config.rangeBehaviors),","            tracker: tracker","          }));","          /* eslint-disable no-console */","          if (process.env.NODE_ENV !== 'production' && console.groupCollapsed && console.groupEnd) {","            console.groupEnd();","          }","          /* eslint-enable no-console */","          break;","","        case require('./RelayMutationType').RANGE_DELETE:","        case require('./RelayMutationType').NODE_DELETE:","          var edgeDeletion = RelayMutationQuery.buildFragmentForEdgeDeletion({","            connectionName: config.connectionName,","            fatQuery: fatQuery,","            parentID: config.parentID,","            parentName: config.parentName,","            tracker: tracker","          });","          children.push(edgeDeletion);","          var deletedIDFieldName = Array.isArray(config.deletedIDFieldName) ? config.deletedIDFieldName.concat(ID) : [config.deletedIDFieldName];","          var nodeDeletion = buildFragmentForDeletedConnectionNodeID(deletedIDFieldName, fatQuery);","          children.push(nodeDeletion);","          /* eslint-disable no-console */","          if (process.env.NODE_ENV !== 'production' && console.groupCollapsed && console.groupEnd) {","            var configType = config === require('./RelayMutationType').RANGE_DELETE ? 'RANGE_DELETE' : 'NODE_DELETE';","            console.groupCollapsed(configType);","","            var _RelayMutationDebugPrinter = require('./RelayMutationDebugPrinter');","            _RelayMutationDebugPrinter.printMutation(edgeDeletion, 'Edge Fragment');","            _RelayMutationDebugPrinter.printMutation(nodeDeletion, 'Node Fragment');","","            console.groupEnd();","          }","          /* eslint-enable no-console */","          break;","","        case require('./RelayMutationType').FIELDS_CHANGE:","          /* eslint-disable no-console */","          if (process.env.NODE_ENV !== 'production' && console.groupCollapsed && console.groupEnd) {","            console.groupCollapsed('FIELDS_CHANGE');","          }","          /* eslint-enable no-console */","          children.push(RelayMutationQuery.buildFragmentForFields({","            fatQuery: fatQuery,","            fieldIDs: config.fieldIDs,","            tracker: tracker","          }));","          /* eslint-disable no-console */","          if (process.env.NODE_ENV !== 'production' && console.groupCollapsed && console.groupEnd) {","            console.groupEnd();","          }","          /* eslint-enable no-console */","          break;","","        default:","          require('fbjs/lib/invariant')(false, 'RelayMutationQuery: Unrecognized config key `%s` for `%s`.', config.type, mutationName);","      }","    });","    /* eslint-disable no-console */","    if (process.env.NODE_ENV !== 'production' && console.groupCollapsed && console.groupEnd) {","      console.groupEnd();","    }","    /* eslint-enable no-console */","    return require('./RelayQuery').Mutation.build(mutationName, fatQuery.getType(), mutation.calls[0].name, input, children.filter(function (child) {","      return child != null;","    }), mutation.metadata);","  }","};","","function getFieldFromFatQuery(fatQuery, fieldName) {","  var field = fatQuery.getFieldByStorageKey(fieldName);","  require('fbjs/lib/invariant')(field, 'RelayMutationQuery: Invalid field name on fat query, `%s`.', fieldName);","  return field;","}","","function buildMutationFragment(fatQuery, fields) {","  var fragment = require('./RelayQuery').Fragment.build('MutationQuery', fatQuery.getType(), fields);","","  require('fbjs/lib/invariant')(fragment instanceof require('./RelayQuery').Fragment, 'RelayMutationQuery: Expected a fragment.');","  return fragment;","}","","function buildFragmentForDeletedConnectionNodeID(fieldNames, fatQuery) {","  require('fbjs/lib/invariant')(fieldNames.length > 0, 'RelayMutationQuery: Invalid deleted node id name.');","  var field = require('./RelayQuery').Field.build({","    fieldName: fieldNames[fieldNames.length - 1],","    type: 'String'","  });","  for (var ii = fieldNames.length - 2; ii >= 0; ii--) {","    field = require('./RelayQuery').Field.build({","      fieldName: fieldNames[ii],","      type: ANY_TYPE,","      children: [field],","      metadata: {","        canHaveSubselections: true","      }","    });","  }","  return buildMutationFragment(fatQuery, [field]);","}","","function buildEdgeField(parentID, edgeName, edgeFields) {","  var fields = [require('./RelayQuery').Field.build({","    fieldName: 'cursor',","    type: 'String'","  }), require('./RelayQuery').Field.build({","    fieldName: TYPENAME,","    type: 'String'","  })];","  if (require('./RelayConnectionInterface').EDGES_HAVE_SOURCE_FIELD && !require('./RelayRecord').isClientID(parentID)) {","    fields.push(require('./RelayQuery').Field.build({","      children: [require('./RelayQuery').Field.build({","        fieldName: ID,","        type: 'String'","      }), require('./RelayQuery').Field.build({","        fieldName: TYPENAME,","        type: 'String'","      })],","      fieldName: 'source',","      metadata: { canHaveSubselections: true },","      type: ANY_TYPE","    }));","  }","  fields.push.apply(fields, edgeFields);","  var edgeField = require('./flattenRelayQuery')(require('./RelayQuery').Field.build({","    children: fields,","    fieldName: edgeName,","    metadata: { canHaveSubselections: true },","    type: ANY_TYPE","  }));","  require('fbjs/lib/invariant')(edgeField instanceof require('./RelayQuery').Field, 'RelayMutationQuery: Expected a field.');","  return edgeField;","}","","function sanitizeRangeBehaviors(rangeBehaviors) {","  // Prior to 0.4.1 you would have to specify the args in your range behaviors","  // in the same order they appeared in your query. From 0.4.1 onward, args in a","  // range behavior key must be in alphabetical order.","","  // No need to sanitize if defined as a function","  if (typeof rangeBehaviors === 'function') {","    return rangeBehaviors;","  }","","  var unsortedKeys = void 0;","  require('fbjs/lib/forEachObject')(rangeBehaviors, function (value, key) {","    if (key !== '') {","      var keyParts = key","      // Remove the last parenthesis","      .slice(0, -1)","      // Slice on unescaped parentheses followed immediately by a `.`","      .split(/\\)\\./);","      var sortedKey = keyParts.sort().join(').') + (keyParts.length ? ')' : '');","      if (sortedKey !== key) {","        unsortedKeys = unsortedKeys || [];","        unsortedKeys.push(key);","      }","    }","  });","  if (unsortedKeys) {","    require('fbjs/lib/invariant')(false, 'RelayMutation: To define a range behavior key without sorting ' + 'the arguments alphabetically is disallowed as of Relay 0.5.1. Please ' + 'sort the argument names of the range behavior key%s `%s`%s.', unsortedKeys.length === 1 ? '' : 's', unsortedKeys.length === 1 ? unsortedKeys[0] : unsortedKeys.length === 2 ? unsortedKeys[0] + '` and `' + unsortedKeys[1] : unsortedKeys.slice(0, -1).join('`, `'), unsortedKeys.length > 2 ? ', and `' + unsortedKeys.slice(-1) + '`' : '');","  }","  return rangeBehaviors;","}","","/**"," * Confirms that the `connection` field extracted from the fat query at"," * `parentName` -> `connectionName` is actually a connection."," */","function validateConnection(parentName, connectionName, connection) {","  require('fbjs/lib/invariant')(connection.isConnection(), 'RelayMutationQuery: Expected field `%s`%s to be a connection.', connectionName, parentName ? ' on `' + parentName + '`' : '');","}","","/**"," * Convenience wrapper around validateConnection that gracefully attempts to"," * extract the connection identified by `connectionName` from the `parentField`."," * If the connection isn't present (because it wasn't in the fat query or"," * because it didn't survive query intersection), validation is skipped."," */","function getConnectionAndValidate(parentField, parentName, connectionName) {","  var connections = findDescendantFields(parentField, connectionName);","  if (connections.length) {","    // If the first instance of the connection passes validation, all will.","    validateConnection(parentName, connectionName, connections[0]);","  }","}","","/**"," * Finds all direct and indirect child fields of `node` with the given"," * field name."," */","function findDescendantFields(rootNode, fieldName) {","  var fields = [];","  function traverse(node) {","    if (node instanceof require('./RelayQuery').Field) {","      if (node.getSchemaName() === fieldName) {","        fields.push(node);","        return;","      }","    }","    if (node === rootNode || node instanceof require('./RelayQuery').Fragment) {","      // Search fragments and the root node for matching fields, but skip","      // descendant non-matching fields.","      node.getChildren().forEach(function (child) {","        return traverse(child);","      });","    }","  }","  traverse(rootNode);","  return fields;","}","","module.exports = RelayMutationQuery;"],"l":{"15":1,"20":1,"22":1,"38":1,"48":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"69":0,"70":0,"71":0,"73":0,"74":0,"75":0,"76":0,"77":0,"81":0,"102":0,"108":0,"112":0,"114":0,"115":0,"116":0,"117":0,"118":0,"120":0,"121":0,"123":0,"125":0,"128":0,"153":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"169":0,"170":0,"172":0,"174":0,"175":0,"176":0,"177":0,"178":0,"181":0,"182":0,"184":0,"185":0,"186":0,"187":0,"190":0,"193":0,"194":0,"199":0,"200":0,"203":0,"204":0,"209":0,"210":0,"214":0,"216":0,"217":0,"218":0,"219":0,"221":0,"222":0,"223":0,"228":0,"236":0,"241":0,"242":0,"250":0,"254":0,"258":0,"269":0,"276":0,"282":0,"283":0,"286":0,"287":0,"289":0,"290":0,"292":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"303":0,"307":0,"311":0,"312":0,"315":0,"325":0,"326":0,"329":0,"333":0,"340":0,"341":0,"342":0,"343":0,"345":0,"346":0,"347":0,"349":0,"350":0,"351":0,"353":0,"356":0,"360":0,"361":0,"364":0,"370":0,"371":0,"374":0,"377":0,"381":0,"382":0,"385":0,"386":0,"391":1,"392":0,"393":0,"394":0,"397":1,"398":0,"400":0,"401":0,"404":1,"405":0,"406":0,"410":0,"411":0,"420":0,"423":1,"424":0,"431":0,"432":0,"445":0,"446":0,"452":0,"453":0,"456":1,"462":0,"463":0,"466":0,"467":0,"468":0,"469":0,"474":0,"475":0,"476":0,"477":0,"481":0,"482":0,"484":0,"491":1,"492":0,"501":1,"502":0,"503":0,"505":0,"513":1,"514":0,"515":1,"516":0,"517":0,"518":0,"519":0,"522":0,"525":0,"526":0,"530":0,"531":0,"534":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayMutationRequest.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayMutationRequest.js","s":{"1":1,"2":1,"3":1,"4":1,"5":3,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":1,"18":0,"19":1,"20":0,"21":1,"22":0,"23":1,"24":0,"25":1,"26":0,"27":0,"28":0,"29":1,"30":1},"b":{"1":[3,0],"2":[3,3],"3":[0,0]},"f":{"1":3,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":37}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":27},"end":{"line":28,"column":48}}},"3":{"name":"RelayMutationRequest","line":31,"loc":{"start":{"line":31,"column":2},"end":{"line":31,"column":49}}},"4":{"name":"getDebugName","line":49,"loc":{"start":{"line":49,"column":48},"end":{"line":49,"column":72}}},"5":{"name":"getFiles","line":60,"loc":{"start":{"line":60,"column":44},"end":{"line":60,"column":64}}},"6":{"name":"getVariables","line":72,"loc":{"start":{"line":72,"column":48},"end":{"line":72,"column":72}}},"7":{"name":"getQueryString","line":83,"loc":{"start":{"line":83,"column":50},"end":{"line":83,"column":76}}},"8":{"name":"getMutation","line":93,"loc":{"start":{"line":93,"column":47},"end":{"line":93,"column":70}}},"9":{"name":"_getPrintedQuery","line":104,"loc":{"start":{"line":104,"column":52},"end":{"line":104,"column":80}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":117}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":83}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":97}},"5":{"start":{"line":21,"column":39},"end":{"line":21,"column":95}},"6":{"start":{"line":28,"column":0},"end":{"line":112,"column":32}},"7":{"start":{"line":29,"column":2},"end":{"line":29,"column":62}},"8":{"start":{"line":31,"column":2},"end":{"line":40,"column":3}},"9":{"start":{"line":32,"column":4},"end":{"line":32,"column":65}},"10":{"start":{"line":34,"column":4},"end":{"line":34,"column":88}},"11":{"start":{"line":36,"column":4},"end":{"line":36,"column":31}},"12":{"start":{"line":37,"column":4},"end":{"line":37,"column":31}},"13":{"start":{"line":38,"column":4},"end":{"line":38,"column":25}},"14":{"start":{"line":39,"column":4},"end":{"line":39,"column":17}},"15":{"start":{"line":49,"column":2},"end":{"line":51,"column":4}},"16":{"start":{"line":50,"column":4},"end":{"line":50,"column":36}},"17":{"start":{"line":60,"column":2},"end":{"line":62,"column":4}},"18":{"start":{"line":61,"column":4},"end":{"line":61,"column":23}},"19":{"start":{"line":72,"column":2},"end":{"line":74,"column":4}},"20":{"start":{"line":73,"column":4},"end":{"line":73,"column":45}},"21":{"start":{"line":83,"column":2},"end":{"line":85,"column":4}},"22":{"start":{"line":84,"column":4},"end":{"line":84,"column":40}},"23":{"start":{"line":93,"column":2},"end":{"line":95,"column":4}},"24":{"start":{"line":94,"column":4},"end":{"line":94,"column":26}},"25":{"start":{"line":104,"column":2},"end":{"line":109,"column":4}},"26":{"start":{"line":105,"column":4},"end":{"line":107,"column":5}},"27":{"start":{"line":106,"column":6},"end":{"line":106,"column":72}},"28":{"start":{"line":108,"column":4},"end":{"line":108,"column":30}},"29":{"start":{"line":111,"column":2},"end":{"line":111,"column":30}},"30":{"start":{"line":114,"column":0},"end":{"line":114,"column":38}}},"branchMap":{"1":{"line":21,"type":"cond-expr","locations":[{"start":{"line":21,"column":70},"end":{"line":21,"column":73}},{"start":{"line":21,"column":76},"end":{"line":21,"column":94}}]},"2":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":46},"end":{"line":21,"column":49}},{"start":{"line":21,"column":53},"end":{"line":21,"column":67}}]},"3":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":4},"end":{"line":105,"column":4}},{"start":{"line":105,"column":4},"end":{"line":105,"column":4}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayMutationRequest"," * "," */","","'use strict';","","var _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));","","var _possibleConstructorReturn3 = _interopRequireDefault(require('babel-runtime/helpers/possibleConstructorReturn'));","","var _inherits3 = _interopRequireDefault(require('babel-runtime/helpers/inherits'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","/**"," * @internal"," *"," * Instances of these are made available via `RelayNetworkLayer.sendMutation`."," */","var RelayMutationRequest = function (_Deferred) {","  (0, _inherits3['default'])(RelayMutationRequest, _Deferred);","","  function RelayMutationRequest(mutation, files) {","    (0, _classCallCheck3['default'])(this, RelayMutationRequest);","","    var _this = (0, _possibleConstructorReturn3['default'])(this, _Deferred.call(this));","","    _this._mutation = mutation;","    _this._printedQuery = null;","    _this._files = files;","    return _this;","  }","","  /**","   * @public","   *","   * Gets a string name used to refer to this request for printing debug output.","   */","","","  RelayMutationRequest.prototype.getDebugName = function getDebugName() {","    return this._mutation.getName();","  };","","  /**","   * @public","   *","   * Gets an optional map from name to File objects.","   */","","","  RelayMutationRequest.prototype.getFiles = function getFiles() {","    return this._files;","  };","","  /**","   * @public","   *","   * Gets the variables used by the mutation. These variables should be","   * serialized and sent in the GraphQL request.","   */","","","  RelayMutationRequest.prototype.getVariables = function getVariables() {","    return this._getPrintedQuery().variables;","  };","","  /**","   * @public","   *","   * Gets a string representation of the GraphQL mutation.","   */","","","  RelayMutationRequest.prototype.getQueryString = function getQueryString() {","    return this._getPrintedQuery().text;","  };","","  /**","   * @public","   * @unstable","   */","","","  RelayMutationRequest.prototype.getMutation = function getMutation() {","    return this._mutation;","  };","","  /**","   * @private","   *","   * Returns the memoized printed query.","   */","","","  RelayMutationRequest.prototype._getPrintedQuery = function _getPrintedQuery() {","    if (!this._printedQuery) {","      this._printedQuery = require('./printRelayQuery')(this._mutation);","    }","    return this._printedQuery;","  };","","  return RelayMutationRequest;","}(require('fbjs/lib/Deferred'));","","module.exports = RelayMutationRequest;"],"l":{"15":1,"17":1,"19":1,"21":3,"28":1,"29":1,"31":1,"32":0,"34":0,"36":0,"37":0,"38":0,"39":0,"49":1,"50":0,"60":1,"61":0,"72":1,"73":0,"83":1,"84":0,"93":1,"94":0,"104":1,"105":0,"106":0,"108":0,"111":1,"114":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayMutationTracker.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayMutationTracker.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"isClientOnlyID","line":41,"loc":{"start":{"line":41,"column":18},"end":{"line":41,"column":50}}},"2":{"name":"updateClientServerIDMap","line":49,"loc":{"start":{"line":49,"column":27},"end":{"line":49,"column":80}}},"3":{"name":"getServerIDForClientID","line":56,"loc":{"start":{"line":56,"column":26},"end":{"line":56,"column":68}}},"4":{"name":"putClientIDForMutation","line":63,"loc":{"start":{"line":63,"column":26},"end":{"line":63,"column":86}}},"5":{"name":"getClientIDForMutation","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":76}}},"6":{"name":"deleteClientIDForMutation","line":85,"loc":{"start":{"line":85,"column":29},"end":{"line":85,"column":82}}},"7":{"name":"putErrorNodeForMutation","line":92,"loc":{"start":{"line":92,"column":27},"end":{"line":92,"column":88}}},"8":{"name":"getMutationForErrorNode","line":101,"loc":{"start":{"line":101,"column":27},"end":{"line":101,"column":70}}},"9":{"name":"getErrorNodeForMutation","line":109,"loc":{"start":{"line":109,"column":27},"end":{"line":109,"column":78}}},"10":{"name":"deleteMutationForErrorNode","line":113,"loc":{"start":{"line":113,"column":30},"end":{"line":113,"column":76}}},"11":{"name":"deleteErrorNodeForMutation","line":117,"loc":{"start":{"line":117,"column":30},"end":{"line":117,"column":84}}}},"statementMap":{"1":{"start":{"line":17,"column":0},"end":{"line":17,"column":31}},"2":{"start":{"line":21,"column":0},"end":{"line":21,"column":37}},"3":{"start":{"line":25,"column":0},"end":{"line":25,"column":39}},"4":{"start":{"line":26,"column":0},"end":{"line":26,"column":39}},"5":{"start":{"line":34,"column":0},"end":{"line":120,"column":2}},"6":{"start":{"line":42,"column":4},"end":{"line":42,"column":89}},"7":{"start":{"line":50,"column":4},"end":{"line":50,"column":47}},"8":{"start":{"line":57,"column":4},"end":{"line":57,"column":51}},"9":{"start":{"line":64,"column":4},"end":{"line":64,"column":61}},"10":{"start":{"line":68,"column":4},"end":{"line":68,"column":85}},"11":{"start":{"line":69,"column":4},"end":{"line":72,"column":5}},"12":{"start":{"line":70,"column":6},"end":{"line":70,"column":67}},"13":{"start":{"line":71,"column":6},"end":{"line":71,"column":79}},"14":{"start":{"line":79,"column":4},"end":{"line":79,"column":57}},"15":{"start":{"line":86,"column":4},"end":{"line":86,"column":57}},"16":{"start":{"line":93,"column":4},"end":{"line":93,"column":63}},"17":{"start":{"line":94,"column":4},"end":{"line":94,"column":63}},"18":{"start":{"line":102,"column":4},"end":{"line":102,"column":51}},"19":{"start":{"line":110,"column":4},"end":{"line":110,"column":59}},"20":{"start":{"line":114,"column":4},"end":{"line":114,"column":51}},"21":{"start":{"line":118,"column":4},"end":{"line":118,"column":59}},"22":{"start":{"line":122,"column":0},"end":{"line":122,"column":38}}},"branchMap":{"1":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":11},"end":{"line":42,"column":54}},{"start":{"line":42,"column":58},"end":{"line":42,"column":88}}]},"2":{"line":57,"type":"binary-expr","locations":[{"start":{"line":57,"column":11},"end":{"line":57,"column":42}},{"start":{"line":57,"column":46},"end":{"line":57,"column":50}}]},"3":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":4},"end":{"line":69,"column":4}},{"start":{"line":69,"column":4},"end":{"line":69,"column":4}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayMutationTracker"," * "," */","","'use strict';","","// Maintains a map from the client id to the server id of","// optimistically added nodes","var clientIDToServerIDMap = {};","","// For node-create mutations, maintains an index of the mutation to the","// client ID of an optimistically created node (if it exists).","var mutationIDToClientNodeIDMap = {};","","// For mutations that have errors, maintains a two-directional index of the","// mutation and node with an error.","var clientMutationIDToErrorNodeID = {};","var clientNodeIDToErrorMutationID = {};","","/**"," * @internal"," *"," * Records the client ID and error status of mutations as well as maintaining"," * a mapping of optimistic client IDs to server IDs."," */","var RelayMutationTracker = {","","  /**","   * Checks if the given id represents an object only known on the client side","   * or not. In this case, it is both a client id and does not have a","   * corresponding mapping in the client server id map.","   */","  isClientOnlyID: function isClientOnlyID(dataID) {","    return require('./RelayRecord').isClientID(dataID) && !clientIDToServerIDMap[dataID];","  },","","  /**","   * Updates the map from the client id to the server id for optimistically","   * added nodes.","   */","  updateClientServerIDMap: function updateClientServerIDMap(clientID, serverID) {","    clientIDToServerIDMap[clientID] = serverID;","  },","","  /**","   * Gets the serverID (if one exists) for a given clientID","   */","  getServerIDForClientID: function getServerIDForClientID(clientID) {","    return clientIDToServerIDMap[clientID] || null;","  },","","  /**","   * Record the root node ID associated with the mutation.","   */","  putClientIDForMutation: function putClientIDForMutation(clientID, clientMutationID) {","    mutationIDToClientNodeIDMap[clientMutationID] = clientID;","","    // if an error exists for this mutation ID, remove the error on the previous","    // client ID and 'move' the error on the new client ID","    var errorNodeID = RelayMutationTracker.getErrorNodeForMutation(clientMutationID);","    if (errorNodeID) {","      RelayMutationTracker.deleteMutationForErrorNode(errorNodeID);","      RelayMutationTracker.putErrorNodeForMutation(clientID, clientMutationID);","    }","  },","","  /**","   * Get the root record ID associated with the muation.","   */","  getClientIDForMutation: function getClientIDForMutation(clientMutationID) {","    return mutationIDToClientNodeIDMap[clientMutationID];","  },","","  /**","   * Delete the root record ID associated with the mutation.","   */","  deleteClientIDForMutation: function deleteClientIDForMutation(clientMutationID) {","    delete mutationIDToClientNodeIDMap[clientMutationID];","  },","","  /**","   * Record that an error occurred while creating the given (client) record ID.","   */","  putErrorNodeForMutation: function putErrorNodeForMutation(clientID, clientMutationID) {","    clientNodeIDToErrorMutationID[clientID] = clientMutationID;","    clientMutationIDToErrorNodeID[clientMutationID] = clientID;","  },","","  /**","   * Find the failed mutation that created the given (client) record ID,","   * if any.","   */","  getMutationForErrorNode: function getMutationForErrorNode(clientID) {","    return clientNodeIDToErrorMutationID[clientID];","  },","","  /**","   * Find the (client) ID of the record associated with the given mutation,","   * if any.","   */","  getErrorNodeForMutation: function getErrorNodeForMutation(clientMutationID) {","    return clientMutationIDToErrorNodeID[clientMutationID];","  },","","  deleteMutationForErrorNode: function deleteMutationForErrorNode(clientID) {","    delete clientNodeIDToErrorMutationID[clientID];","  },","","  deleteErrorNodeForMutation: function deleteErrorNodeForMutation(clientMutationID) {","    delete clientMutationIDToErrorNodeID[clientMutationID];","  }","};","","module.exports = RelayMutationTracker;"],"l":{"17":1,"21":1,"25":1,"26":1,"34":1,"42":0,"50":0,"57":0,"64":0,"68":0,"69":0,"70":0,"71":0,"79":0,"86":0,"93":0,"94":0,"102":0,"110":0,"114":0,"118":0,"122":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayMutationTransaction.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayMutationTransaction.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":1,"33":0,"34":1,"35":0,"36":1,"37":0,"38":1,"39":1},"b":{"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0,0],"5":[0,0,0,0,0],"6":[0,0]},"f":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":37}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":31},"end":{"line":30,"column":43}}},"3":{"name":"RelayMutationTransaction","line":31,"loc":{"start":{"line":31,"column":2},"end":{"line":31,"column":55}}},"4":{"name":"applyOptimistic","line":46,"loc":{"start":{"line":46,"column":55},"end":{"line":46,"column":82}}},"5":{"name":"commit","line":61,"loc":{"start":{"line":61,"column":46},"end":{"line":61,"column":64}}},"6":{"name":"recommit","line":69,"loc":{"start":{"line":69,"column":48},"end":{"line":69,"column":68}}},"7":{"name":"rollback","line":76,"loc":{"start":{"line":76,"column":48},"end":{"line":76,"column":68}}},"8":{"name":"getError","line":84,"loc":{"start":{"line":84,"column":48},"end":{"line":84,"column":68}}},"9":{"name":"getStatus","line":88,"loc":{"start":{"line":88,"column":49},"end":{"line":88,"column":70}}},"10":{"name":"getHash","line":92,"loc":{"start":{"line":92,"column":47},"end":{"line":92,"column":66}}},"11":{"name":"getID","line":96,"loc":{"start":{"line":96,"column":45},"end":{"line":96,"column":62}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":97}},"3":{"start":{"line":17,"column":39},"end":{"line":17,"column":95}},"4":{"start":{"line":19,"column":0},"end":{"line":23,"column":74}},"5":{"start":{"line":30,"column":0},"end":{"line":101,"column":4}},"6":{"start":{"line":31,"column":2},"end":{"line":37,"column":3}},"7":{"start":{"line":32,"column":4},"end":{"line":32,"column":69}},"8":{"start":{"line":33,"column":4},"end":{"line":33,"column":29}},"9":{"start":{"line":35,"column":4},"end":{"line":35,"column":18}},"10":{"start":{"line":36,"column":4},"end":{"line":36,"column":40}},"11":{"start":{"line":46,"column":2},"end":{"line":52,"column":4}},"12":{"start":{"line":47,"column":4},"end":{"line":47,"column":34}},"13":{"start":{"line":48,"column":4},"end":{"line":48,"column":144}},"14":{"start":{"line":50,"column":4},"end":{"line":50,"column":50}},"15":{"start":{"line":51,"column":4},"end":{"line":51,"column":16}},"16":{"start":{"line":61,"column":2},"end":{"line":67,"column":4}},"17":{"start":{"line":62,"column":4},"end":{"line":62,"column":34}},"18":{"start":{"line":63,"column":4},"end":{"line":63,"column":189}},"19":{"start":{"line":65,"column":4},"end":{"line":65,"column":41}},"20":{"start":{"line":66,"column":4},"end":{"line":66,"column":16}},"21":{"start":{"line":69,"column":2},"end":{"line":74,"column":4}},"22":{"start":{"line":70,"column":4},"end":{"line":70,"column":34}},"23":{"start":{"line":71,"column":4},"end":{"line":71,"column":264}},"24":{"start":{"line":73,"column":4},"end":{"line":73,"column":41}},"25":{"start":{"line":76,"column":2},"end":{"line":82,"column":4}},"26":{"start":{"line":77,"column":4},"end":{"line":77,"column":34}},"27":{"start":{"line":78,"column":4},"end":{"line":78,"column":352}},"28":{"start":{"line":80,"column":4},"end":{"line":80,"column":28}},"29":{"start":{"line":81,"column":4},"end":{"line":81,"column":43}},"30":{"start":{"line":84,"column":2},"end":{"line":86,"column":4}},"31":{"start":{"line":85,"column":4},"end":{"line":85,"column":50}},"32":{"start":{"line":88,"column":2},"end":{"line":90,"column":4}},"33":{"start":{"line":89,"column":4},"end":{"line":89,"column":128}},"34":{"start":{"line":92,"column":2},"end":{"line":94,"column":4}},"35":{"start":{"line":93,"column":4},"end":{"line":93,"column":45}},"36":{"start":{"line":96,"column":2},"end":{"line":98,"column":4}},"37":{"start":{"line":97,"column":4},"end":{"line":97,"column":20}},"38":{"start":{"line":100,"column":2},"end":{"line":100,"column":34}},"39":{"start":{"line":103,"column":0},"end":{"line":103,"column":42}}},"branchMap":{"1":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":70},"end":{"line":17,"column":73}},{"start":{"line":17,"column":76},"end":{"line":17,"column":94}}]},"2":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":46},"end":{"line":17,"column":49}},{"start":{"line":17,"column":53},"end":{"line":17,"column":67}}]},"3":{"line":63,"type":"binary-expr","locations":[{"start":{"line":63,"column":34},"end":{"line":63,"column":52}},{"start":{"line":63,"column":56},"end":{"line":63,"column":78}}]},"4":{"line":71,"type":"binary-expr","locations":[{"start":{"line":71,"column":34},"end":{"line":71,"column":68}},{"start":{"line":71,"column":72},"end":{"line":71,"column":96}},{"start":{"line":71,"column":100},"end":{"line":71,"column":118}}]},"5":{"line":78,"type":"binary-expr","locations":[{"start":{"line":78,"column":34},"end":{"line":78,"column":68}},{"start":{"line":78,"column":72},"end":{"line":78,"column":96}},{"start":{"line":78,"column":100},"end":{"line":78,"column":124}},{"start":{"line":78,"column":128},"end":{"line":78,"column":146}},{"start":{"line":78,"column":150},"end":{"line":78,"column":172}}]},"6":{"line":89,"type":"cond-expr","locations":[{"start":{"line":89,"column":30},"end":{"line":89,"column":85}},{"start":{"line":89,"column":88},"end":{"line":89,"column":127}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayMutationTransaction"," * "," */","","'use strict';","","var _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","var COLLISION_COMMIT_FAILED = require('./RelayMutationTransactionStatus').COLLISION_COMMIT_FAILED,","    COMMIT_FAILED = require('./RelayMutationTransactionStatus').COMMIT_FAILED,","    COMMIT_QUEUED = require('./RelayMutationTransactionStatus').COMMIT_QUEUED,","    CREATED = require('./RelayMutationTransactionStatus').CREATED,","    UNCOMMITTED = require('./RelayMutationTransactionStatus').UNCOMMITTED;","","/**"," * @internal"," */","","","var RelayMutationTransaction = function () {","  function RelayMutationTransaction(mutationQueue, id) {","    (0, _classCallCheck3['default'])(this, RelayMutationTransaction);","    this._rolledBack = false;","","    this._id = id;","    this._mutationQueue = mutationQueue;","  }","","  /**","   * Applies the transaction to the local store (ie. as an optimistic update).","   *","   * Returns itself so as to provide a \"fluent interface\".","   */","","","  RelayMutationTransaction.prototype.applyOptimistic = function applyOptimistic() {","    var status = this.getStatus();","    require('fbjs/lib/invariant')(status === CREATED, 'RelayMutationTransaction: Only transactions with status `CREATED` ' + 'can be applied.');","","    this._mutationQueue.applyOptimistic(this._id);","    return this;","  };","","  /**","   * Commits the transaction (ie. performs a server update).","   *","   * Returns itself so as to provide a \"fluent interface\".","   */","","","  RelayMutationTransaction.prototype.commit = function commit() {","    var status = this.getStatus();","    require('fbjs/lib/invariant')(status === CREATED || status === UNCOMMITTED, 'RelayMutationTransaction: Only transactions with status `CREATED` or ' + '`UNCOMMITTED` can be committed.');","","    this._mutationQueue.commit(this._id);","    return this;","  };","","  RelayMutationTransaction.prototype.recommit = function recommit() {","    var status = this.getStatus();","    require('fbjs/lib/invariant')(status === COLLISION_COMMIT_FAILED || status === COMMIT_FAILED || status === CREATED, 'RelayMutationTransaction: Only transaction with status ' + '`CREATED`, `COMMIT_FAILED`, or `COLLISION_COMMIT_FAILED` can be ' + 'recomitted.');","","    this._mutationQueue.commit(this._id);","  };","","  RelayMutationTransaction.prototype.rollback = function rollback() {","    var status = this.getStatus();","    require('fbjs/lib/invariant')(status === COLLISION_COMMIT_FAILED || status === COMMIT_FAILED || status === COMMIT_QUEUED || status === CREATED || status === UNCOMMITTED, 'RelayMutationTransaction: Only transactions with status `CREATED`, ' + '`UNCOMMITTED`, `COMMIT_FAILED`, `COLLISION_COMMIT_FAILED`, or ' + '`COMMIT_QUEUED` can be rolled back.');","","    this._rolledBack = true;","    this._mutationQueue.rollback(this._id);","  };","","  RelayMutationTransaction.prototype.getError = function getError() {","    return this._mutationQueue.getError(this._id);","  };","","  RelayMutationTransaction.prototype.getStatus = function getStatus() {","    return this._rolledBack ? require('./RelayMutationTransactionStatus').ROLLED_BACK : this._mutationQueue.getStatus(this._id);","  };","","  RelayMutationTransaction.prototype.getHash = function getHash() {","    return this._id + ':' + this.getStatus();","  };","","  RelayMutationTransaction.prototype.getID = function getID() {","    return this._id;","  };","","  return RelayMutationTransaction;","}();","","module.exports = RelayMutationTransaction;"],"l":{"15":1,"17":1,"19":1,"30":1,"31":1,"32":0,"33":0,"35":0,"36":0,"46":1,"47":0,"48":0,"50":0,"51":0,"61":1,"62":0,"63":0,"65":0,"66":0,"69":1,"70":0,"71":0,"73":0,"76":1,"77":0,"78":0,"80":0,"81":0,"84":1,"85":0,"88":1,"89":0,"92":1,"93":0,"96":1,"97":0,"100":1,"103":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayMutationTransactionStatus.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayMutationTransactionStatus.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":57,"column":2}},"2":{"start":{"line":59,"column":0},"end":{"line":59,"column":48}}},"branchMap":{},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayMutationTransactionStatus"," * "," */","","'use strict';","","var RelayMutationTransactionStatus = {","  /**","   * Transaction has been created but an optimistic update has not been applied.","   * Transaction can be applied (optimistic) or committed (sent to server).","   */","  CREATED: 'CREATED',","","  /**","   * Transaction hasn't yet been sent to the server. Client has an optimistic","   * update applied if the mutation defined one. Transaction can be committed or","   * rolled back.","   */","  UNCOMMITTED: 'UNCOMMITTED',","","  /**","   * Transaction was committed but another transaction with the same collision","   * key is pending, so the transaction has been queued to send to the server.","   */","  COMMIT_QUEUED: 'COMMIT_QUEUED',","","  /**","   * Transaction was queued for commit but another transaction with the same","   * collision queue failed to commit. All transactions in the collision","   * queue, including this one, have been failed as well. Transaction can be","   * recommitted or rolled back.","   */","  COLLISION_COMMIT_FAILED: 'COLLISION_COMMIT_FAILED',","","  /**","   * Transaction was sent to the server for comitting and a response is awaited.","   */","  COMMITTING: 'COMMITTING',","","  /**","   * Transaction was sent to the server for comitting but was failed.","   */","  COMMIT_FAILED: 'COMMIT_FAILED',","","  /**","   * Transaction has been rolled back by the developer.","   */","  ROLLED_BACK: 'ROLLED_BACK'","};","","module.exports = RelayMutationTransactionStatus;"],"l":{"15":1,"59":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayMutationType.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayMutationType.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":21,"column":2}},"2":{"start":{"line":23,"column":0},"end":{"line":23,"column":35}}},"branchMap":{},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayMutationType"," * "," */","","'use strict';","","var RelayMutationType = {","  FIELDS_CHANGE: 'FIELDS_CHANGE',","  NODE_DELETE: 'NODE_DELETE',","  RANGE_ADD: 'RANGE_ADD',","  RANGE_DELETE: 'RANGE_DELETE',","  REQUIRED_CHILDREN: 'REQUIRED_CHILDREN'","};","","module.exports = RelayMutationType;"],"l":{"15":1,"23":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayNetworkDebug.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayNetworkDebug.js","s":{"1":1,"2":1,"3":1,"4":1,"5":3,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":1,"63":1,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":1},"b":{"1":[2,1],"2":[3,3],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0]},"f":{"1":3,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":37}}},"2":{"name":"(anonymous_2)","line":23,"loc":{"start":{"line":23,"column":27},"end":{"line":23,"column":39}}},"3":{"name":"RelayNetworkDebugger","line":24,"loc":{"start":{"line":24,"column":2},"end":{"line":24,"column":62}}},"4":{"name":"(anonymous_4)","line":31,"loc":{"start":{"line":31,"column":58},"end":{"line":31,"column":77}}},"5":{"name":"(anonymous_5)","line":33,"loc":{"start":{"line":33,"column":7},"end":{"line":33,"column":26}}},"6":{"name":"uninstall","line":38,"loc":{"start":{"line":38,"column":45},"end":{"line":38,"column":66}}},"7":{"name":"logRequest","line":42,"loc":{"start":{"line":42,"column":46},"end":{"line":42,"column":72}}},"8":{"name":"onSettled","line":56,"loc":{"start":{"line":56,"column":20},"end":{"line":56,"column":56}}},"9":{"name":"(anonymous_9)","line":66,"loc":{"start":{"line":66,"column":17},"end":{"line":66,"column":37}}},"10":{"name":"(anonymous_10)","line":68,"loc":{"start":{"line":68,"column":7},"end":{"line":68,"column":24}}},"11":{"name":"createDebuggableFromRequest","line":76,"loc":{"start":{"line":76,"column":0},"end":{"line":76,"column":69}}},"12":{"name":"logResult","line":81,"loc":{"start":{"line":81,"column":15},"end":{"line":81,"column":51}}},"13":{"name":"formatSize","line":115,"loc":{"start":{"line":115,"column":0},"end":{"line":115,"column":27}}},"14":{"name":"init","line":129,"loc":{"start":{"line":129,"column":8},"end":{"line":129,"column":24}}},"15":{"name":"logRequest","line":139,"loc":{"start":{"line":139,"column":14},"end":{"line":139,"column":43}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":82}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":68}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":97}},"5":{"start":{"line":21,"column":39},"end":{"line":21,"column":95}},"6":{"start":{"line":23,"column":0},"end":{"line":74,"column":4}},"7":{"start":{"line":24,"column":2},"end":{"line":36,"column":3}},"8":{"start":{"line":25,"column":4},"end":{"line":25,"column":21}},"9":{"start":{"line":27,"column":4},"end":{"line":27,"column":65}},"10":{"start":{"line":29,"column":4},"end":{"line":29,"column":58}},"11":{"start":{"line":30,"column":4},"end":{"line":30,"column":22}},"12":{"start":{"line":31,"column":4},"end":{"line":35,"column":7}},"13":{"start":{"line":32,"column":6},"end":{"line":32,"column":100}},"14":{"start":{"line":34,"column":6},"end":{"line":34,"column":103}},"15":{"start":{"line":38,"column":2},"end":{"line":40,"column":4}},"16":{"start":{"line":39,"column":4},"end":{"line":39,"column":32}},"17":{"start":{"line":42,"column":2},"end":{"line":71,"column":4}},"18":{"start":{"line":43,"column":4},"end":{"line":43,"column":22}},"19":{"start":{"line":45,"column":4},"end":{"line":48,"column":35}},"20":{"start":{"line":50,"column":4},"end":{"line":50,"column":29}},"21":{"start":{"line":51,"column":4},"end":{"line":51,"column":52}},"22":{"start":{"line":53,"column":4},"end":{"line":53,"column":100}},"23":{"start":{"line":54,"column":4},"end":{"line":54,"column":44}},"24":{"start":{"line":56,"column":4},"end":{"line":64,"column":6}},"25":{"start":{"line":57,"column":6},"end":{"line":57,"column":82}},"26":{"start":{"line":58,"column":6},"end":{"line":58,"column":95}},"27":{"start":{"line":59,"column":6},"end":{"line":59,"column":82}},"28":{"start":{"line":60,"column":6},"end":{"line":60,"column":84}},"29":{"start":{"line":61,"column":6},"end":{"line":61,"column":52}},"30":{"start":{"line":62,"column":6},"end":{"line":62,"column":33}},"31":{"start":{"line":63,"column":6},"end":{"line":63,"column":25}},"32":{"start":{"line":66,"column":4},"end":{"line":70,"column":7}},"33":{"start":{"line":67,"column":6},"end":{"line":67,"column":39}},"34":{"start":{"line":69,"column":6},"end":{"line":69,"column":36}},"35":{"start":{"line":73,"column":2},"end":{"line":73,"column":30}},"36":{"start":{"line":76,"column":0},"end":{"line":112,"column":1}},"37":{"start":{"line":77,"column":2},"end":{"line":111,"column":4}},"38":{"start":{"line":83,"column":6},"end":{"line":86,"column":17}},"39":{"start":{"line":87,"column":6},"end":{"line":87,"column":52}},"40":{"start":{"line":89,"column":6},"end":{"line":89,"column":80}},"41":{"start":{"line":91,"column":6},"end":{"line":95,"column":7}},"42":{"start":{"line":92,"column":8},"end":{"line":92,"column":48}},"43":{"start":{"line":93,"column":8},"end":{"line":93,"column":48}},"44":{"start":{"line":94,"column":8},"end":{"line":94,"column":27}},"45":{"start":{"line":97,"column":6},"end":{"line":97,"column":43}},"46":{"start":{"line":98,"column":6},"end":{"line":98,"column":139}},"47":{"start":{"line":99,"column":6},"end":{"line":99,"column":25}},"48":{"start":{"line":101,"column":6},"end":{"line":101,"column":25}},"49":{"start":{"line":103,"column":6},"end":{"line":105,"column":7}},"50":{"start":{"line":104,"column":8},"end":{"line":104,"column":67}},"51":{"start":{"line":107,"column":6},"end":{"line":107,"column":36}},"52":{"start":{"line":108,"column":6},"end":{"line":108,"column":40}},"53":{"start":{"line":114,"column":0},"end":{"line":114,"column":70}},"54":{"start":{"line":115,"column":0},"end":{"line":124,"column":1}},"55":{"start":{"line":116,"column":2},"end":{"line":116,"column":32}},"56":{"start":{"line":117,"column":2},"end":{"line":117,"column":26}},"57":{"start":{"line":118,"column":2},"end":{"line":118,"column":12}},"58":{"start":{"line":119,"column":2},"end":{"line":121,"column":3}},"59":{"start":{"line":120,"column":4},"end":{"line":120,"column":8}},"60":{"start":{"line":122,"column":2},"end":{"line":122,"column":53}},"61":{"start":{"line":123,"column":2},"end":{"line":123,"column":49}},"62":{"start":{"line":126,"column":0},"end":{"line":126,"column":29}},"63":{"start":{"line":128,"column":0},"end":{"line":142,"column":2}},"64":{"start":{"line":130,"column":4},"end":{"line":130,"column":121}},"65":{"start":{"line":131,"column":4},"end":{"line":131,"column":39}},"66":{"start":{"line":133,"column":4},"end":{"line":133,"column":51}},"67":{"start":{"line":135,"column":4},"end":{"line":137,"column":5}},"68":{"start":{"line":136,"column":6},"end":{"line":136,"column":79}},"69":{"start":{"line":140,"column":4},"end":{"line":140,"column":59}},"70":{"start":{"line":144,"column":0},"end":{"line":144,"column":35}}},"branchMap":{"1":{"line":21,"type":"cond-expr","locations":[{"start":{"line":21,"column":70},"end":{"line":21,"column":73}},{"start":{"line":21,"column":76},"end":{"line":21,"column":94}}]},"2":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":46},"end":{"line":21,"column":49}},{"start":{"line":21,"column":53},"end":{"line":21,"column":67}}]},"3":{"line":53,"type":"binary-expr","locations":[{"start":{"line":53,"column":4},"end":{"line":53,"column":21}},{"start":{"line":53,"column":25},"end":{"line":53,"column":99}}]},"4":{"line":54,"type":"binary-expr","locations":[{"start":{"line":54,"column":4},"end":{"line":54,"column":16}},{"start":{"line":54,"column":20},"end":{"line":54,"column":43}}]},"5":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":6},"end":{"line":58,"column":23}},{"start":{"line":58,"column":27},"end":{"line":58,"column":94}}]},"6":{"line":60,"type":"cond-expr","locations":[{"start":{"line":60,"column":60},"end":{"line":60,"column":65}},{"start":{"line":60,"column":68},"end":{"line":60,"column":75}}]},"7":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":6},"end":{"line":61,"column":21}},{"start":{"line":61,"column":25},"end":{"line":61,"column":51}}]},"8":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":6},"end":{"line":91,"column":6}},{"start":{"line":91,"column":6},"end":{"line":91,"column":6}}]},"9":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":6},"end":{"line":103,"column":6}},{"start":{"line":103,"column":6},"end":{"line":103,"column":6}}]},"10":{"line":107,"type":"binary-expr","locations":[{"start":{"line":107,"column":6},"end":{"line":107,"column":11}},{"start":{"line":107,"column":15},"end":{"line":107,"column":35}}]},"11":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":6},"end":{"line":108,"column":14}},{"start":{"line":108,"column":18},"end":{"line":108,"column":39}}]},"12":{"line":116,"type":"cond-expr","locations":[{"start":{"line":116,"column":25},"end":{"line":116,"column":27}},{"start":{"line":116,"column":30},"end":{"line":116,"column":31}}]},"13":{"line":119,"type":"binary-expr","locations":[{"start":{"line":119,"column":9},"end":{"line":119,"column":39}},{"start":{"line":119,"column":43},"end":{"line":119,"column":63}}]},"14":{"line":130,"type":"cond-expr","locations":[{"start":{"line":130,"column":75},"end":{"line":130,"column":87}},{"start":{"line":130,"column":90},"end":{"line":130,"column":120}}]},"15":{"line":130,"type":"binary-expr","locations":[{"start":{"line":130,"column":22},"end":{"line":130,"column":42}},{"start":{"line":130,"column":46},"end":{"line":130,"column":72}}]},"16":{"line":133,"type":"binary-expr","locations":[{"start":{"line":133,"column":4},"end":{"line":133,"column":19}},{"start":{"line":133,"column":23},"end":{"line":133,"column":50}}]},"17":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":4},"end":{"line":135,"column":4}},{"start":{"line":135,"column":4},"end":{"line":135,"column":4}}]},"18":{"line":140,"type":"binary-expr","locations":[{"start":{"line":140,"column":4},"end":{"line":140,"column":19}},{"start":{"line":140,"column":23},"end":{"line":140,"column":58}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayNetworkDebug"," * "," */","","'use strict';","","var _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));","","var _keys2 = _interopRequireDefault(require('babel-runtime/core-js/object/keys'));","","var _promise2 = _interopRequireDefault(require('fbjs/lib/Promise'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","var RelayNetworkDebugger = function () {","  function RelayNetworkDebugger(environment, graphiqlPrinter) {","    var _this = this;","","    (0, _classCallCheck3['default'])(this, RelayNetworkDebugger);","","    this._initTime = require('fbjs/lib/performanceNow')();","    this._queryID = 0;","    this._subscription = environment.addNetworkSubscriber(function (request) {","      return _this.logRequest(createDebuggableFromRequest('Relay Query', request, graphiqlPrinter));","    }, function (request) {","      return _this.logRequest(createDebuggableFromRequest('Relay Mutation', request, graphiqlPrinter));","    });","  }","","  RelayNetworkDebugger.prototype.uninstall = function uninstall() {","    this._subscription.remove();","  };","","  RelayNetworkDebugger.prototype.logRequest = function logRequest(_ref) {","    var _this2 = this;","","    var name = _ref.name,","        type = _ref.type,","        promise = _ref.promise,","        logResult = _ref.logResult;","","    var id = this._queryID++;","    var timerName = '[' + id + '] Request Duration';","","    console.timeStamp && console.timeStamp('START: [' + id + '] ' + type + ': ' + name + ' \\u2192');","    console.time && console.time(timerName);","","    var onSettled = function onSettled(error, response) {","      var time = (require('fbjs/lib/performanceNow')() - _this2._initTime) / 1000;","      console.timeStamp && console.timeStamp('\\u2190 END: [' + id + '] ' + type + ': ' + name);","      var groupName = '%c[' + id + '] ' + type + ': ' + name + ' @ ' + time + 's';","      console.groupCollapsed(groupName, 'color:' + (error ? 'red' : 'black') + ';');","      console.timeEnd && console.timeEnd(timerName);","      logResult(error, response);","      console.groupEnd();","    };","","    promise.then(function (response) {","      return onSettled(null, response);","    }, function (error) {","      return onSettled(error, null);","    });","  };","","  return RelayNetworkDebugger;","}();","","function createDebuggableFromRequest(type, request, graphiqlPrinter) {","  return {","    name: request.getDebugName(),","    type: type,","    promise: request.getPromise(),","    logResult: function logResult(error, response) {","      /* eslint-disable no-console-disallow */","      var requestSize = formatSize(require('fbjs/lib/xhrSimpleDataSerializer')({","        q: request.getQueryString(),","        query_params: request.getVariables()","      }).length);","      var requestVariables = request.getVariables();","","      console.groupCollapsed('Request Query (Estimated Size: %s)', requestSize);","","      if (graphiqlPrinter) {","        console.groupCollapsed('GraphiQL Link');","        console.debug(graphiqlPrinter(request));","        console.groupEnd();","      }","","      console.groupCollapsed('Query Text');","      console.debug('%c%s\\n', 'font-size:10px; color:#333; font-family:mplus-2m-regular,menlo,' + 'monospaced;', request.getQueryString());","      console.groupEnd();","","      console.groupEnd();","","      if ((0, _keys2['default'])(requestVariables).length > 0) {","        console.log('Request Variables\\n', request.getVariables());","      }","","      error && console.error(error);","      response && console.log(response);","      /* eslint-enable no-console-disallow */","    }","  };","}","","var ALL_UNITS = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];","function formatSize(bytes) {","  var sign = bytes < 0 ? -1 : 1;","  bytes = Math.abs(bytes);","  var i = 0;","  while (bytes >= Math.pow(1024, i + 1) && i < ALL_UNITS.length) {","    i++;","  }","  var value = sign * bytes * 1.0 / Math.pow(1024, i);","  return Number(value.toFixed(2)) + ALL_UNITS[i];","}","","var networkDebugger = void 0;","","var RelayNetworkDebug = {","  init: function init() {","    var environment = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : require('./RelayPublic').Store;","    var graphiqlPrinter = arguments[1];","","    networkDebugger && networkDebugger.uninstall();","    // Without `groupCollapsed`, RelayNetworkDebug is too noisy.","    if (console.groupCollapsed) {","      networkDebugger = new RelayNetworkDebugger(environment, graphiqlPrinter);","    }","  },","  logRequest: function logRequest(request) {","    networkDebugger && networkDebugger.logRequest(request);","  }","};","","module.exports = RelayNetworkDebug;"],"l":{"15":1,"17":1,"19":1,"21":3,"23":1,"24":1,"25":0,"27":0,"29":0,"30":0,"31":0,"32":0,"34":0,"38":1,"39":0,"42":1,"43":0,"45":0,"50":0,"51":0,"53":0,"54":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"66":0,"67":0,"69":0,"73":1,"76":1,"77":0,"83":0,"87":0,"89":0,"91":0,"92":0,"93":0,"94":0,"97":0,"98":0,"99":0,"101":0,"103":0,"104":0,"107":0,"108":0,"114":1,"115":1,"116":0,"117":0,"118":0,"119":0,"120":0,"122":0,"123":0,"126":1,"128":1,"130":0,"131":0,"133":0,"135":0,"136":0,"140":0,"144":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayOptimisticMutationUtils.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayOptimisticMutationUtils.js","s":{"1":1,"2":1,"3":1,"4":1,"5":3,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":1,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":1},"b":{"1":[3,0],"2":[3,3],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0]},"f":{"1":3,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":37}}},"2":{"name":"inferRelayFieldsFromData","line":52,"loc":{"start":{"line":52,"column":28},"end":{"line":52,"column":68}}},"3":{"name":"(anonymous_3)","line":54,"loc":{"start":{"line":54,"column":44},"end":{"line":54,"column":66}}},"4":{"name":"inferRelayPayloadFromData","line":66,"loc":{"start":{"line":66,"column":29},"end":{"line":66,"column":70}}},"5":{"name":"(anonymous_5)","line":68,"loc":{"start":{"line":68,"column":44},"end":{"line":68,"column":66}}},"6":{"name":"inferField","line":86,"loc":{"start":{"line":86,"column":0},"end":{"line":86,"column":32}}},"7":{"name":"inferPayload","line":115,"loc":{"start":{"line":115,"column":0},"end":{"line":115,"column":34}}},"8":{"name":"buildField","line":145,"loc":{"start":{"line":145,"column":0},"end":{"line":147,"column":10}}},"9":{"name":"(anonymous_9)","line":155,"loc":{"start":{"line":155,"column":24},"end":{"line":155,"column":46}}},"10":{"name":"(anonymous_10)","line":171,"loc":{"start":{"line":171,"column":9},"end":{"line":171,"column":21}}},"11":{"name":"(anonymous_11)","line":174,"loc":{"start":{"line":174,"column":51},"end":{"line":174,"column":67}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":81}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":82}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":97}},"5":{"start":{"line":21,"column":39},"end":{"line":21,"column":95}},"6":{"start":{"line":23,"column":0},"end":{"line":23,"column":40}},"7":{"start":{"line":24,"column":0},"end":{"line":24,"column":36}},"8":{"start":{"line":25,"column":0},"end":{"line":25,"column":48}},"9":{"start":{"line":26,"column":0},"end":{"line":26,"column":41}},"10":{"start":{"line":28,"column":0},"end":{"line":29,"column":56}},"11":{"start":{"line":31,"column":0},"end":{"line":32,"column":44}},"12":{"start":{"line":34,"column":0},"end":{"line":37,"column":3}},"13":{"start":{"line":38,"column":0},"end":{"line":41,"column":3}},"14":{"start":{"line":46,"column":0},"end":{"line":84,"column":2}},"15":{"start":{"line":53,"column":4},"end":{"line":53,"column":20}},"16":{"start":{"line":54,"column":4},"end":{"line":58,"column":7}},"17":{"start":{"line":55,"column":6},"end":{"line":57,"column":7}},"18":{"start":{"line":56,"column":8},"end":{"line":56,"column":44}},"19":{"start":{"line":59,"column":4},"end":{"line":59,"column":18}},"20":{"start":{"line":67,"column":4},"end":{"line":67,"column":23}},"21":{"start":{"line":68,"column":4},"end":{"line":81,"column":7}},"22":{"start":{"line":69,"column":6},"end":{"line":80,"column":7}},"23":{"start":{"line":70,"column":8},"end":{"line":72,"column":43}},"24":{"start":{"line":74,"column":8},"end":{"line":79,"column":9}},"25":{"start":{"line":75,"column":10},"end":{"line":75,"column":116}},"26":{"start":{"line":76,"column":10},"end":{"line":76,"column":30}},"27":{"start":{"line":77,"column":15},"end":{"line":79,"column":9}},"28":{"start":{"line":78,"column":10},"end":{"line":78,"column":112}},"29":{"start":{"line":82,"column":4},"end":{"line":82,"column":19}},"30":{"start":{"line":86,"column":0},"end":{"line":113,"column":1}},"31":{"start":{"line":87,"column":2},"end":{"line":90,"column":4}},"32":{"start":{"line":91,"column":2},"end":{"line":91,"column":24}},"33":{"start":{"line":92,"column":2},"end":{"line":106,"column":3}},"34":{"start":{"line":93,"column":4},"end":{"line":93,"column":27}},"35":{"start":{"line":94,"column":4},"end":{"line":99,"column":5}},"36":{"start":{"line":95,"column":6},"end":{"line":95,"column":80}},"37":{"start":{"line":97,"column":6},"end":{"line":97,"column":44}},"38":{"start":{"line":98,"column":6},"end":{"line":98,"column":20}},"39":{"start":{"line":100,"column":4},"end":{"line":100,"column":29}},"40":{"start":{"line":101,"column":9},"end":{"line":106,"column":3}},"41":{"start":{"line":102,"column":4},"end":{"line":102,"column":76}},"42":{"start":{"line":104,"column":4},"end":{"line":104,"column":42}},"43":{"start":{"line":105,"column":4},"end":{"line":105,"column":18}},"44":{"start":{"line":107,"column":2},"end":{"line":111,"column":3}},"45":{"start":{"line":108,"column":4},"end":{"line":108,"column":27}},"46":{"start":{"line":109,"column":9},"end":{"line":111,"column":3}},"47":{"start":{"line":110,"column":4},"end":{"line":110,"column":31}},"48":{"start":{"line":112,"column":2},"end":{"line":112,"column":45}},"49":{"start":{"line":115,"column":0},"end":{"line":143,"column":1}},"50":{"start":{"line":116,"column":2},"end":{"line":119,"column":4}},"51":{"start":{"line":120,"column":2},"end":{"line":120,"column":23}},"52":{"start":{"line":121,"column":2},"end":{"line":139,"column":3}},"53":{"start":{"line":122,"column":4},"end":{"line":133,"column":5}},"54":{"start":{"line":123,"column":6},"end":{"line":123,"column":30}},"55":{"start":{"line":124,"column":6},"end":{"line":132,"column":7}},"56":{"start":{"line":125,"column":8},"end":{"line":125,"column":89}},"57":{"start":{"line":126,"column":8},"end":{"line":129,"column":9}},"58":{"start":{"line":127,"column":10},"end":{"line":127,"column":38}},"59":{"start":{"line":128,"column":10},"end":{"line":128,"column":36}},"60":{"start":{"line":131,"column":8},"end":{"line":131,"column":46}},"61":{"start":{"line":134,"column":4},"end":{"line":134,"column":29}},"62":{"start":{"line":135,"column":9},"end":{"line":139,"column":3}},"63":{"start":{"line":136,"column":4},"end":{"line":136,"column":77}},"64":{"start":{"line":138,"column":4},"end":{"line":138,"column":42}},"65":{"start":{"line":141,"column":2},"end":{"line":141,"column":44}},"66":{"start":{"line":142,"column":2},"end":{"line":142,"column":69}},"67":{"start":{"line":145,"column":0},"end":{"line":190,"column":1}},"68":{"start":{"line":148,"column":2},"end":{"line":148,"column":22}},"69":{"start":{"line":149,"column":2},"end":{"line":149,"column":19}},"70":{"start":{"line":150,"column":2},"end":{"line":182,"column":3}},"71":{"start":{"line":151,"column":4},"end":{"line":151,"column":189}},"72":{"start":{"line":152,"column":4},"end":{"line":152,"column":31}},"73":{"start":{"line":153,"column":4},"end":{"line":164,"column":5}},"74":{"start":{"line":154,"column":6},"end":{"line":154,"column":32}},"75":{"start":{"line":155,"column":6},"end":{"line":163,"column":9}},"76":{"start":{"line":156,"column":8},"end":{"line":156,"column":57}},"77":{"start":{"line":157,"column":8},"end":{"line":157,"column":112}},"78":{"start":{"line":158,"column":8},"end":{"line":158,"column":43}},"79":{"start":{"line":159,"column":8},"end":{"line":162,"column":10}},"80":{"start":{"line":166,"column":4},"end":{"line":166,"column":40}},"81":{"start":{"line":167,"column":4},"end":{"line":167,"column":108}},"82":{"start":{"line":168,"column":4},"end":{"line":168,"column":28}},"83":{"start":{"line":169,"column":4},"end":{"line":181,"column":5}},"84":{"start":{"line":170,"column":6},"end":{"line":180,"column":7}},"85":{"start":{"line":171,"column":8},"end":{"line":177,"column":13}},"86":{"start":{"line":173,"column":10},"end":{"line":173,"column":88}},"87":{"start":{"line":174,"column":10},"end":{"line":176,"column":13}},"88":{"start":{"line":175,"column":12},"end":{"line":175,"column":53}},"89":{"start":{"line":179,"column":8},"end":{"line":179,"column":266}},"90":{"start":{"line":183,"column":2},"end":{"line":189,"column":5}},"91":{"start":{"line":192,"column":0},"end":{"line":192,"column":46}}},"branchMap":{"1":{"line":21,"type":"cond-expr","locations":[{"start":{"line":21,"column":70},"end":{"line":21,"column":73}},{"start":{"line":21,"column":76},"end":{"line":21,"column":94}}]},"2":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":46},"end":{"line":21,"column":49}},{"start":{"line":21,"column":53},"end":{"line":21,"column":67}}]},"3":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":6},"end":{"line":55,"column":6}},{"start":{"line":55,"column":6},"end":{"line":55,"column":6}}]},"4":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":6},"end":{"line":69,"column":6}},{"start":{"line":69,"column":6},"end":{"line":69,"column":6}}]},"5":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":8},"end":{"line":74,"column":8}},{"start":{"line":74,"column":8},"end":{"line":74,"column":8}}]},"6":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":15},"end":{"line":77,"column":15}},{"start":{"line":77,"column":15},"end":{"line":77,"column":15}}]},"7":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":2},"end":{"line":92,"column":2}},{"start":{"line":92,"column":2},"end":{"line":92,"column":2}}]},"8":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":4},"end":{"line":94,"column":4}},{"start":{"line":94,"column":4},"end":{"line":94,"column":4}}]},"9":{"line":94,"type":"binary-expr","locations":[{"start":{"line":94,"column":8},"end":{"line":94,"column":15}},{"start":{"line":94,"column":19},"end":{"line":94,"column":46}}]},"10":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":9},"end":{"line":101,"column":9}},{"start":{"line":101,"column":9},"end":{"line":101,"column":9}}]},"11":{"line":101,"type":"binary-expr","locations":[{"start":{"line":101,"column":13},"end":{"line":101,"column":38}},{"start":{"line":101,"column":42},"end":{"line":101,"column":56}}]},"12":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":2},"end":{"line":107,"column":2}},{"start":{"line":107,"column":2},"end":{"line":107,"column":2}}]},"13":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":9},"end":{"line":109,"column":9}},{"start":{"line":109,"column":9},"end":{"line":109,"column":9}}]},"14":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":2},"end":{"line":121,"column":2}},{"start":{"line":121,"column":2},"end":{"line":121,"column":2}}]},"15":{"line":121,"type":"binary-expr","locations":[{"start":{"line":121,"column":6},"end":{"line":121,"column":26}},{"start":{"line":121,"column":30},"end":{"line":121,"column":53}}]},"16":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":6},"end":{"line":124,"column":6}},{"start":{"line":124,"column":6},"end":{"line":124,"column":6}}]},"17":{"line":124,"type":"binary-expr","locations":[{"start":{"line":124,"column":10},"end":{"line":124,"column":17}},{"start":{"line":124,"column":21},"end":{"line":124,"column":48}}]},"18":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":8},"end":{"line":126,"column":8}},{"start":{"line":126,"column":8},"end":{"line":126,"column":8}}]},"19":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":9},"end":{"line":135,"column":9}},{"start":{"line":135,"column":9},"end":{"line":135,"column":9}}]},"20":{"line":135,"type":"binary-expr","locations":[{"start":{"line":135,"column":13},"end":{"line":135,"column":38}},{"start":{"line":135,"column":42},"end":{"line":135,"column":56}}]},"21":{"line":150,"type":"if","locations":[{"start":{"line":150,"column":2},"end":{"line":150,"column":2}},{"start":{"line":150,"column":2},"end":{"line":150,"column":2}}]},"22":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":4},"end":{"line":153,"column":4}},{"start":{"line":153,"column":4},"end":{"line":153,"column":4}}]},"23":{"line":161,"type":"cond-expr","locations":[{"start":{"line":161,"column":38},"end":{"line":161,"column":46}},{"start":{"line":161,"column":49},"end":{"line":161,"column":54}}]},"24":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":4},"end":{"line":169,"column":4}},{"start":{"line":169,"column":4},"end":{"line":169,"column":4}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayOptimisticMutationUtils"," * "," */","","'use strict';","","var _defineProperty3 = _interopRequireDefault(require('babel-runtime/helpers/defineProperty'));","","var _extends5 = _interopRequireDefault(require('babel-runtime/helpers/extends'));","","var _keys2 = _interopRequireDefault(require('babel-runtime/core-js/object/keys'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","var ARGUMENTS = /^(\\w+)(?:\\((.+?)\\))?$/;","var ARGUMENT_NAME = /(\\w+)(?=\\s*:)/;","var DEPRECATED_CALLS = /^\\w+(?:\\.\\w+\\(.*?\\))+$/;","var DEPRECATED_CALL = /^(\\w+)\\((.*?)\\)$/;","","var NODE = require('./RelayConnectionInterface').NODE,","    EDGES = require('./RelayConnectionInterface').EDGES;","","var ANY_TYPE = require('./RelayNodeInterface').ANY_TYPE,","    ID = require('./RelayNodeInterface').ID;","","var idField = require('./RelayQuery').Field.build({","  fieldName: ID,","  type: 'String'","});","var cursorField = require('./RelayQuery').Field.build({","  fieldName: 'cursor',","  type: 'String'","});","","/**"," * @internal"," */","var RelayOptimisticMutationUtils = {","  /**","   * Given a record-like object, infers fields that could be used to fetch them.","   * Properties that are fetched via fields with arguments can be encoded by","   * serializing the arguments in property keys.","   */","  inferRelayFieldsFromData: function inferRelayFieldsFromData(data) {","    var fields = [];","    require('fbjs/lib/forEachObject')(data, function (value, key) {","      if (!require('./RelayRecord').isMetadataKey(key)) {","        fields.push(inferField(value, key));","      }","    });","    return fields;","  },","  /**","   * Given a record-like object, infer the proper payload to be used to store","   * them. Properties that are fetched via fields with arguments will be","   * encoded by serializing the arguments in property keys.","   */","  inferRelayPayloadFromData: function inferRelayPayloadFromData(data) {","    var payload = data;","    require('fbjs/lib/forEachObject')(data, function (value, key) {","      if (!require('./RelayRecord').isMetadataKey(key)) {","        var _inferPayload = inferPayload(value, key),","            newValue = _inferPayload.newValue,","            _newKey = _inferPayload.newKey;","","        if (_newKey !== key) {","          payload = (0, _extends5['default'])({}, payload, (0, _defineProperty3['default'])({}, _newKey, newValue));","          delete payload[key];","        } else if (newValue !== value) {","          payload = (0, _extends5['default'])({}, payload, (0, _defineProperty3['default'])({}, key, newValue));","        }","      }","    });","    return payload;","  }","};","","function inferField(value, key) {","  var metadata = {","    canHaveSubselections: true,","    isPlural: false","  };","  var children = void 0;","  if (Array.isArray(value)) {","    var element = value[0];","    if (element && typeof element === 'object') {","      children = RelayOptimisticMutationUtils.inferRelayFieldsFromData(element);","    } else {","      metadata.canHaveSubselections = false;","      children = [];","    }","    metadata.isPlural = true;","  } else if (typeof value === 'object' && value !== null) {","    children = RelayOptimisticMutationUtils.inferRelayFieldsFromData(value);","  } else {","    metadata.canHaveSubselections = false;","    children = [];","  }","  if (key === NODE) {","    children.push(idField);","  } else if (key === EDGES) {","    children.push(cursorField);","  }","  return buildField(key, children, metadata);","}","","function inferPayload(value, key) {","  var metadata = {","    canHaveSubselections: true,","    isPlural: false","  };","  var newValue = value;","  if (Array.isArray(value) && Array.isArray(newValue)) {","    for (var ii = 0; ii < value.length; ii++) {","      var element = value[ii];","      if (element && typeof element === 'object') {","        var newElement = RelayOptimisticMutationUtils.inferRelayPayloadFromData(element);","        if (newElement !== element) {","          newValue = newValue.slice();","          newValue[ii] = newElement;","        }","      } else {","        metadata.canHaveSubselections = false;","      }","    }","    metadata.isPlural = true;","  } else if (typeof value === 'object' && value !== null) {","    newValue = RelayOptimisticMutationUtils.inferRelayPayloadFromData(value);","  } else {","    metadata.canHaveSubselections = false;","  }","","  var field = buildField(key, [], metadata);","  return { newValue: newValue, newKey: field.getSerializationKey() };","}","","function buildField(key, children,","// $FlowFixMe(>=0.34.0)","metadata) {","  var fieldName = key;","  var calls = null;","  if (DEPRECATED_CALLS.test(key)) {","    require('fbjs/lib/warning')(false, 'RelayOptimisticMutationUtils: Encountered an optimistic payload with ' + 'a deprecated field call string, `%s`. Use valid GraphQL OSS syntax.', key);","    var parts = key.split('.');","    if (parts.length > 1) {","      fieldName = parts.shift();","      calls = parts.map(function (callString) {","        var captures = callString.match(DEPRECATED_CALL);","        require('fbjs/lib/invariant')(captures, 'RelayOptimisticMutationUtils: Malformed data key, `%s`.', key);","        var value = captures[2].split(',');","        return {","          name: captures[1],","          value: value.length === 1 ? value[0] : value","        };","      });","    }","  } else {","    var captures = key.match(ARGUMENTS);","    require('fbjs/lib/invariant')(captures, 'RelayOptimisticMutationUtils: Malformed data key, `%s`.', key);","    fieldName = captures[1];","    if (captures[2]) {","      try {","        (function () {","          // Relay does not currently have a GraphQL argument parser, so...","          var args = JSON.parse('{' + captures[2].replace(ARGUMENT_NAME, '\"$1\"') + '}');","          calls = (0, _keys2['default'])(args).map(function (name) {","            return { name: name, value: args[name] };","          });","        })();","      } catch (error) {","        require('fbjs/lib/invariant')(false, 'RelayOptimisticMutationUtils: Malformed or unsupported data key, ' + '`%s`. Only booleans, strings, and numbers are currently supported, ' + 'and commas are required. Parse failure reason was `%s`.', key, error.message);","      }","    }","  }","  return require('./RelayQuery').Field.build({","    calls: calls,","    children: children,","    fieldName: fieldName,","    metadata: metadata,","    type: ANY_TYPE","  });","}","","module.exports = RelayOptimisticMutationUtils;"],"l":{"15":1,"17":1,"19":1,"21":3,"23":1,"24":1,"25":1,"26":1,"28":1,"31":1,"34":1,"38":1,"46":1,"53":0,"54":0,"55":0,"56":0,"59":0,"67":0,"68":0,"69":0,"70":0,"74":0,"75":0,"76":0,"77":0,"78":0,"82":0,"86":1,"87":0,"91":0,"92":0,"93":0,"94":0,"95":0,"97":0,"98":0,"100":0,"101":0,"102":0,"104":0,"105":0,"107":0,"108":0,"109":0,"110":0,"112":0,"115":1,"116":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"131":0,"134":0,"135":0,"136":0,"138":0,"141":0,"142":0,"145":1,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"173":0,"174":0,"175":0,"179":0,"183":0,"192":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayPublic.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayPublic.js","s":{"1":2,"2":0,"3":2,"4":0},"b":{"1":[0,2]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":17,"column":1}},"2":{"start":{"line":16,"column":2},"end":{"line":16,"column":86}},"3":{"start":{"line":23,"column":0},"end":{"line":43,"column":2}},"4":{"start":{"line":45,"column":0},"end":{"line":45,"column":29}}},"branchMap":{"1":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":0},"end":{"line":15,"column":0}},{"start":{"line":15,"column":0},"end":{"line":15,"column":0}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayPublic"," * "," */","","'use strict';","","if (typeof global.__REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined') {","  global.__REACT_DEVTOOLS_GLOBAL_HOOK__._relayInternals = require('./RelayInternals');","}","","/**"," * Relay contains the set of public methods used to initialize and orchestrate"," * a React application that uses GraphQL to declare data dependencies."," */","var RelayPublic = {","  Environment: require('./RelayEnvironment'),","  GraphQLMutation: require('./RelayGraphQLMutation'),","  Mutation: require('./RelayMutation'),","  PropTypes: require('./RelayPropTypes'),","  QL: require('./RelayQL'),","  QueryConfig: require('./RelayQueryConfig'),","  ReadyStateRenderer: require('./RelayReadyStateRenderer'),","  Renderer: require('./RelayRenderer'),","  RootContainer: require('./RelayRootContainer'),","  Route: require('./RelayRoute'),","  Store: require('./RelayStore'),","","  createContainer: require('./RelayContainer').create,","  createQuery: require('./createRelayQuery'),","  getQueries: require('./getRelayQueries'),","  disableQueryCaching: require('./RelayQueryCaching').disable,","  injectNetworkLayer: require('./RelayStore').injectNetworkLayer.bind(require('./RelayStore')),","  injectTaskScheduler: require('./RelayStore').injectTaskScheduler.bind(require('./RelayStore')),","  isContainer: require('./isRelayContainer')","};","","module.exports = RelayPublic;"],"l":{"15":2,"16":0,"23":2,"45":0}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayQL.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayQL.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":1,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1},"b":{"1":[1,0],"2":[1,1],"3":[0,0,0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":37}}},"2":{"name":"RelayQL","line":30,"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":26}}},"3":{"name":"assertValidFragment","line":34,"loc":{"start":{"line":34,"column":0},"end":{"line":34,"column":43}}},"4":{"name":"__frag","line":42,"loc":{"start":{"line":42,"column":10},"end":{"line":42,"column":40}}},"5":{"name":"__var","line":56,"loc":{"start":{"line":56,"column":9},"end":{"line":56,"column":36}}},"6":{"name":"__id","line":63,"loc":{"start":{"line":63,"column":8},"end":{"line":63,"column":24}}},"7":{"name":"__createFragment","line":66,"loc":{"start":{"line":66,"column":20},"end":{"line":66,"column":73}}},"8":{"name":"(anonymous_8)","line":67,"loc":{"start":{"line":67,"column":53},"end":{"line":67,"column":65}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":86}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":97}},"3":{"start":{"line":17,"column":39},"end":{"line":17,"column":95}},"4":{"start":{"line":30,"column":0},"end":{"line":32,"column":1}},"5":{"start":{"line":31,"column":2},"end":{"line":31,"column":230}},"6":{"start":{"line":34,"column":0},"end":{"line":36,"column":1}},"7":{"start":{"line":35,"column":2},"end":{"line":35,"column":358}},"8":{"start":{"line":41,"column":0},"end":{"line":71,"column":3}},"9":{"start":{"line":43,"column":4},"end":{"line":46,"column":5}},"10":{"start":{"line":45,"column":6},"end":{"line":45,"column":65}},"11":{"start":{"line":47,"column":4},"end":{"line":53,"column":5}},"12":{"start":{"line":48,"column":6},"end":{"line":52,"column":7}},"13":{"start":{"line":49,"column":8},"end":{"line":49,"column":50}},"14":{"start":{"line":51,"column":8},"end":{"line":51,"column":42}},"15":{"start":{"line":54,"column":4},"end":{"line":54,"column":24}},"16":{"start":{"line":57,"column":4},"end":{"line":57,"column":73}},"17":{"start":{"line":58,"column":4},"end":{"line":60,"column":5}},"18":{"start":{"line":59,"column":6},"end":{"line":59,"column":211}},"19":{"start":{"line":61,"column":4},"end":{"line":61,"column":65}},"20":{"start":{"line":64,"column":4},"end":{"line":64,"column":53}},"21":{"start":{"line":67,"column":4},"end":{"line":69,"column":30}},"22":{"start":{"line":68,"column":6},"end":{"line":68,"column":22}},"23":{"start":{"line":73,"column":0},"end":{"line":73,"column":25}}},"branchMap":{"1":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":70},"end":{"line":17,"column":73}},{"start":{"line":17,"column":76},"end":{"line":17,"column":94}}]},"2":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":46},"end":{"line":17,"column":49}},{"start":{"line":17,"column":53},"end":{"line":17,"column":67}}]},"3":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":32},"end":{"line":35,"column":91}},{"start":{"line":35,"column":95},"end":{"line":35,"column":146}},{"start":{"line":35,"column":150},"end":{"line":35,"column":210}},{"start":{"line":35,"column":214},"end":{"line":35,"column":271}}]},"4":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":43,"column":4}},{"start":{"line":43,"column":4},"end":{"line":43,"column":4}}]},"5":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":4},"end":{"line":47,"column":4}},{"start":{"line":47,"column":4},"end":{"line":47,"column":4}}]},"6":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":6},"end":{"line":48,"column":6}},{"start":{"line":48,"column":6},"end":{"line":48,"column":6}}]},"7":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":4},"end":{"line":58,"column":4}},{"start":{"line":58,"column":4},"end":{"line":58,"column":4}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayQL"," * "," */","","'use strict';","","var _assign2 = _interopRequireDefault(require('babel-runtime/core-js/object/assign'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","/**"," * @public"," *"," * This is a tag function used with template strings to provide the facade of a"," * runtime GraphQL parser. Example usage:"," *"," *   Relay.QL`fragment on User { name }`"," *"," * In actuality, a Babel transform parses these tag templates and replaces it"," * with an internal representation of the query structure."," */","function RelayQL(strings) {","  require('fbjs/lib/invariant')(false, 'RelayQL: Unexpected invocation at runtime. Either the Babel transform ' + 'was not set up, or it failed to identify this call site. Make sure it ' + 'is being used verbatim as `Relay.QL`.');","}","","function assertValidFragment(substitution) {","  require('fbjs/lib/invariant')(substitution instanceof require('./RelayFragmentReference') || require('./QueryBuilder').getFragment(substitution) || require('./QueryBuilder').getFragmentReference(substitution) || require('./QueryBuilder').getFragmentSpread(substitution), 'RelayQL: Invalid fragment composition, use ' + '`${Child.getFragment(\\'name\\')}`.');","}","","/**"," * Private helper methods used by the transformed code."," */","(0, _assign2['default'])(RelayQL, {","  __frag: function __frag(substitution) {","    if (typeof substitution === 'function') {","      // Route conditional fragment, e.g. `${route => matchRoute(route, ...)}`.","      return new (require('./RelayRouteFragment'))(substitution);","    }","    if (substitution != null) {","      if (Array.isArray(substitution)) {","        substitution.forEach(assertValidFragment);","      } else {","        assertValidFragment(substitution);","      }","    }","    return substitution;","  },","  __var: function __var(expression) {","    var variable = require('./QueryBuilder').getCallVariable(expression);","    if (variable) {","      require('fbjs/lib/invariant')(false, 'RelayQL: Invalid argument `%s` supplied via template substitution. ' + 'Instead, use an inline variable (e.g. `comments(count: $count)`).', variable.callVariableName);","    }","    return require('./QueryBuilder').createCallValue(expression);","  },","  __id: function __id() {","    return require('./generateConcreteFragmentID')();","  },","  __createFragment: function __createFragment(fragment, variableMapping) {","    return new (require('./RelayFragmentReference'))(function () {","      return fragment;","    }, null, variableMapping);","  }","});","","module.exports = RelayQL;"],"l":{"15":1,"17":1,"30":1,"31":0,"34":1,"35":0,"41":1,"43":0,"45":0,"47":0,"48":0,"49":0,"51":0,"54":0,"57":0,"58":0,"59":0,"61":0,"64":0,"67":0,"68":0,"73":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayQueryConfig.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayQueryConfig.js","s":{"1":1,"2":1,"3":1,"4":1,"5":3,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":1,"19":1},"b":{"1":[3,0],"2":[3,3],"3":[0,0],"4":[0,0]},"f":{"1":3,"2":1,"3":0,"4":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":37}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":23},"end":{"line":28,"column":35}}},"3":{"name":"RelayQueryConfig","line":31,"loc":{"start":{"line":31,"column":2},"end":{"line":31,"column":46}}},"4":{"name":"prepareVariables","line":61,"loc":{"start":{"line":61,"column":48},"end":{"line":61,"column":89}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":81}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":95}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":86}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":97}},"5":{"start":{"line":21,"column":39},"end":{"line":21,"column":95}},"6":{"start":{"line":28,"column":0},"end":{"line":66,"column":4}},"7":{"start":{"line":31,"column":2},"end":{"line":53,"column":3}},"8":{"start":{"line":32,"column":4},"end":{"line":32,"column":61}},"9":{"start":{"line":34,"column":4},"end":{"line":34,"column":133}},"10":{"start":{"line":36,"column":4},"end":{"line":39,"column":7}},"11":{"start":{"line":40,"column":4},"end":{"line":43,"column":7}},"12":{"start":{"line":44,"column":4},"end":{"line":47,"column":7}},"13":{"start":{"line":49,"column":4},"end":{"line":52,"column":5}},"14":{"start":{"line":50,"column":6},"end":{"line":50,"column":44}},"15":{"start":{"line":51,"column":6},"end":{"line":51,"column":45}},"16":{"start":{"line":61,"column":2},"end":{"line":63,"column":4}},"17":{"start":{"line":62,"column":4},"end":{"line":62,"column":25}},"18":{"start":{"line":65,"column":2},"end":{"line":65,"column":26}},"19":{"start":{"line":68,"column":0},"end":{"line":68,"column":34}}},"branchMap":{"1":{"line":21,"type":"cond-expr","locations":[{"start":{"line":21,"column":70},"end":{"line":21,"column":73}},{"start":{"line":21,"column":76},"end":{"line":21,"column":94}}]},"2":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":46},"end":{"line":21,"column":49}},{"start":{"line":21,"column":53},"end":{"line":21,"column":67}}]},"3":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":13},"end":{"line":42,"column":83}},{"start":{"line":42,"column":87},"end":{"line":42,"column":89}}]},"4":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":49,"column":4}},{"start":{"line":49,"column":4},"end":{"line":49,"column":4}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayQueryConfig"," * "," */","","'use strict';","","var _extends3 = _interopRequireDefault(require('babel-runtime/helpers/extends'));","","var _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));","","var _freeze2 = _interopRequireDefault(require('babel-runtime/core-js/object/freeze'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","/**"," * Configures the root queries and initial variables that define the context in"," * which the top-level component's fragments are requested. This is meant to be"," * subclassed, of which instances are supplied to `RelayRootContainer`."," */","var RelayQueryConfig = function () {","","  // TODO: Deprecate `routeName`, #8478719.","  function RelayQueryConfig(initialVariables) {","    (0, _classCallCheck3['default'])(this, RelayQueryConfig);","","    require('fbjs/lib/invariant')(this.constructor !== RelayQueryConfig, 'RelayQueryConfig: Abstract class cannot be instantiated.');","","    Object.defineProperty(this, 'name', {","      enumerable: true,","      value: this.constructor.routeName","    });","    Object.defineProperty(this, 'params', {","      enumerable: true,","      value: this.prepareVariables((0, _extends3['default'])({}, initialVariables)) || {}","    });","    Object.defineProperty(this, 'queries', {","      enumerable: true,","      value: (0, _extends3['default'])({}, this.constructor.queries)","    });","","    if (process.env.NODE_ENV !== 'production') {","      (0, _freeze2['default'])(this.params);","      (0, _freeze2['default'])(this.queries);","    }","  }","","  /**","   * Provides an opportunity to perform additional logic on the variables.","   * Child class should override this function to perform custom logic.","   */","","","  RelayQueryConfig.prototype.prepareVariables = function prepareVariables(prevVariables) {","    return prevVariables;","  };","","  return RelayQueryConfig;","}();","","module.exports = RelayQueryConfig;"],"l":{"15":1,"17":1,"19":1,"21":3,"28":1,"31":1,"32":0,"34":0,"36":0,"40":0,"44":0,"49":0,"50":0,"51":0,"61":1,"62":0,"65":1,"68":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayReadyStateRenderer.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayReadyStateRenderer.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":4,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1,"43":1,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":0,"56":1},"b":{"1":[4,0],"2":[4,4],"3":[0,0],"4":[0,0,0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0,0,0],"16":[0,0]},"f":{"1":4,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":37}}},"2":{"name":"(anonymous_2)","line":36,"loc":{"start":{"line":36,"column":30},"end":{"line":36,"column":58}}},"3":{"name":"RelayReadyStateRenderer","line":39,"loc":{"start":{"line":39,"column":2},"end":{"line":39,"column":51}}},"4":{"name":"getChildContext","line":50,"loc":{"start":{"line":50,"column":54},"end":{"line":50,"column":81}}},"5":{"name":"shouldComponentUpdate","line":62,"loc":{"start":{"line":62,"column":60},"end":{"line":62,"column":102}}},"6":{"name":"render","line":78,"loc":{"start":{"line":78,"column":45},"end":{"line":78,"column":63}}},"7":{"name":"createContainerPropsFactory","line":123,"loc":{"start":{"line":123,"column":0},"end":{"line":123,"column":39}}},"8":{"name":"(anonymous_8)","line":127,"loc":{"start":{"line":127,"column":9},"end":{"line":127,"column":30}}},"9":{"name":"(anonymous_9)","line":131,"loc":{"start":{"line":131,"column":125},"end":{"line":131,"column":142}}},"10":{"name":"createFragmentPointerForRoot","line":139,"loc":{"start":{"line":139,"column":0},"end":{"line":139,"column":58}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":81}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":95}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":117}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":83}},"5":{"start":{"line":23,"column":0},"end":{"line":23,"column":97}},"6":{"start":{"line":23,"column":39},"end":{"line":23,"column":95}},"7":{"start":{"line":36,"column":0},"end":{"line":115,"column":30}},"8":{"start":{"line":37,"column":2},"end":{"line":37,"column":72}},"9":{"start":{"line":39,"column":2},"end":{"line":48,"column":3}},"10":{"start":{"line":40,"column":4},"end":{"line":40,"column":68}},"11":{"start":{"line":42,"column":4},"end":{"line":42,"column":111}},"12":{"start":{"line":44,"column":4},"end":{"line":46,"column":6}},"13":{"start":{"line":47,"column":4},"end":{"line":47,"column":17}},"14":{"start":{"line":50,"column":2},"end":{"line":55,"column":4}},"15":{"start":{"line":51,"column":4},"end":{"line":54,"column":6}},"16":{"start":{"line":62,"column":2},"end":{"line":76,"column":4}},"17":{"start":{"line":63,"column":4},"end":{"line":63,"column":31}},"18":{"start":{"line":64,"column":4},"end":{"line":66,"column":5}},"19":{"start":{"line":65,"column":6},"end":{"line":65,"column":18}},"20":{"start":{"line":67,"column":4},"end":{"line":67,"column":46}},"21":{"start":{"line":68,"column":4},"end":{"line":68,"column":46}},"22":{"start":{"line":69,"column":4},"end":{"line":71,"column":5}},"23":{"start":{"line":70,"column":6},"end":{"line":70,"column":18}},"24":{"start":{"line":72,"column":4},"end":{"line":74,"column":5}},"25":{"start":{"line":73,"column":6},"end":{"line":73,"column":18}},"26":{"start":{"line":75,"column":4},"end":{"line":75,"column":32}},"27":{"start":{"line":78,"column":2},"end":{"line":112,"column":4}},"28":{"start":{"line":79,"column":4},"end":{"line":79,"column":26}},"29":{"start":{"line":80,"column":4},"end":{"line":80,"column":29}},"30":{"start":{"line":82,"column":4},"end":{"line":84,"column":31}},"31":{"start":{"line":86,"column":4},"end":{"line":102,"column":5}},"32":{"start":{"line":87,"column":6},"end":{"line":100,"column":7}},"33":{"start":{"line":88,"column":8},"end":{"line":95,"column":11}},"34":{"start":{"line":96,"column":13},"end":{"line":100,"column":7}},"35":{"start":{"line":97,"column":8},"end":{"line":97,"column":46}},"36":{"start":{"line":99,"column":8},"end":{"line":99,"column":104}},"37":{"start":{"line":101,"column":6},"end":{"line":101,"column":26}},"38":{"start":{"line":103,"column":4},"end":{"line":106,"column":5}},"39":{"start":{"line":104,"column":6},"end":{"line":104,"column":22}},"40":{"start":{"line":105,"column":6},"end":{"line":105,"column":27}},"41":{"start":{"line":107,"column":4},"end":{"line":111,"column":6}},"42":{"start":{"line":114,"column":2},"end":{"line":114,"column":33}},"43":{"start":{"line":117,"column":0},"end":{"line":120,"column":2}},"44":{"start":{"line":123,"column":0},"end":{"line":137,"column":1}},"45":{"start":{"line":124,"column":2},"end":{"line":124,"column":25}},"46":{"start":{"line":125,"column":2},"end":{"line":125,"column":24}},"47":{"start":{"line":127,"column":2},"end":{"line":136,"column":4}},"48":{"start":{"line":128,"column":4},"end":{"line":130,"column":5}},"49":{"start":{"line":129,"column":6},"end":{"line":129,"column":90}},"50":{"start":{"line":131,"column":4},"end":{"line":133,"column":8}},"51":{"start":{"line":132,"column":6},"end":{"line":132,"column":72}},"52":{"start":{"line":134,"column":4},"end":{"line":134,"column":26}},"53":{"start":{"line":135,"column":4},"end":{"line":135,"column":26}},"54":{"start":{"line":139,"column":0},"end":{"line":141,"column":1}},"55":{"start":{"line":140,"column":2},"end":{"line":140,"column":124}},"56":{"start":{"line":143,"column":0},"end":{"line":143,"column":41}}},"branchMap":{"1":{"line":23,"type":"cond-expr","locations":[{"start":{"line":23,"column":70},"end":{"line":23,"column":73}},{"start":{"line":23,"column":76},"end":{"line":23,"column":94}}]},"2":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":46},"end":{"line":23,"column":49}},{"start":{"line":23,"column":53},"end":{"line":23,"column":67}}]},"3":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":4},"end":{"line":64,"column":4}},{"start":{"line":64,"column":4},"end":{"line":64,"column":4}}]},"4":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":8},"end":{"line":64,"column":51}},{"start":{"line":64,"column":55},"end":{"line":64,"column":102}},{"start":{"line":64,"column":106},"end":{"line":64,"column":153}},{"start":{"line":64,"column":157},"end":{"line":64,"column":194}},{"start":{"line":64,"column":198},"end":{"line":64,"column":233}}]},"5":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":4},"end":{"line":69,"column":4}},{"start":{"line":69,"column":4},"end":{"line":69,"column":4}}]},"6":{"line":69,"type":"binary-expr","locations":[{"start":{"line":69,"column":8},"end":{"line":69,"column":30}},{"start":{"line":69,"column":34},"end":{"line":69,"column":56}}]},"7":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":4},"end":{"line":72,"column":4}},{"start":{"line":72,"column":4},"end":{"line":72,"column":4}}]},"8":{"line":72,"type":"binary-expr","locations":[{"start":{"line":72,"column":8},"end":{"line":72,"column":57}},{"start":{"line":72,"column":61},"end":{"line":72,"column":104}},{"start":{"line":72,"column":108},"end":{"line":72,"column":153}},{"start":{"line":72,"column":157},"end":{"line":72,"column":202}},{"start":{"line":72,"column":206},"end":{"line":72,"column":251}}]},"9":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":4},"end":{"line":86,"column":4}},{"start":{"line":86,"column":4},"end":{"line":86,"column":4}}]},"10":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":6},"end":{"line":87,"column":6}},{"start":{"line":87,"column":6},"end":{"line":87,"column":6}}]},"11":{"line":92,"type":"cond-expr","locations":[{"start":{"line":92,"column":36},"end":{"line":92,"column":76}},{"start":{"line":92,"column":79},"end":{"line":92,"column":83}}]},"12":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":13},"end":{"line":96,"column":13}},{"start":{"line":96,"column":13},"end":{"line":96,"column":13}}]},"13":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":4},"end":{"line":103,"column":4}},{"start":{"line":103,"column":4},"end":{"line":103,"column":4}}]},"14":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":4},"end":{"line":128,"column":4}},{"start":{"line":128,"column":4},"end":{"line":128,"column":4}}]},"15":{"line":128,"type":"binary-expr","locations":[{"start":{"line":128,"column":8},"end":{"line":128,"column":17}},{"start":{"line":128,"column":21},"end":{"line":128,"column":31}},{"start":{"line":128,"column":35},"end":{"line":128,"column":78}},{"start":{"line":128,"column":82},"end":{"line":128,"column":129}}]},"16":{"line":140,"type":"cond-expr","locations":[{"start":{"line":140,"column":17},"end":{"line":140,"column":116}},{"start":{"line":140,"column":119},"end":{"line":140,"column":123}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayReadyStateRenderer"," * "," */","","'use strict';","","var _extends3 = _interopRequireDefault(require('babel-runtime/helpers/extends'));","","var _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));","","var _possibleConstructorReturn3 = _interopRequireDefault(require('babel-runtime/helpers/possibleConstructorReturn'));","","var _inherits3 = _interopRequireDefault(require('babel-runtime/helpers/inherits'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","/**"," * @public"," *"," * RelayReadyStateRenderer synchronously renders a container and query config"," * given `readyState`. The `readyState` must be an accurate representation of"," * the data that currently resides in the supplied `environment`. If you need"," * data to be fetched in addition to rendering, please use `RelayRenderer`."," *"," * If `readyState` is not supplied, the previously rendered `readyState` will"," * continue to be rendered (or null if there is no previous `readyState`)."," */","var RelayReadyStateRenderer = function (_React$Component) {","  (0, _inherits3['default'])(RelayReadyStateRenderer, _React$Component);","","  function RelayReadyStateRenderer(props, context) {","    (0, _classCallCheck3['default'])(this, RelayReadyStateRenderer);","","    var _this = (0, _possibleConstructorReturn3['default'])(this, _React$Component.call(this, props, context));","","    _this.state = {","      getContainerProps: createContainerPropsFactory()","    };","    return _this;","  }","","  RelayReadyStateRenderer.prototype.getChildContext = function getChildContext() {","    return {","      relay: this.props.environment,","      route: this.props.queryConfig","    };","  };","","  /**","   * Avoid updating when we have fetched data but are still not ready.","   */","","","  RelayReadyStateRenderer.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {","    var prevProps = this.props;","    if (prevProps.Container !== nextProps.Container || prevProps.environment !== nextProps.environment || prevProps.queryConfig !== nextProps.queryConfig || prevProps.render !== nextProps.render || prevProps.retry !== nextProps.retry) {","      return true;","    }","    var prevReadyState = prevProps.readyState;","    var nextReadyState = nextProps.readyState;","    if (prevReadyState == null || nextReadyState == null) {","      return true;","    }","    if (prevReadyState.aborted !== nextReadyState.aborted || prevReadyState.done !== nextReadyState.done || prevReadyState.error !== nextReadyState.error || prevReadyState.ready !== nextReadyState.ready || prevReadyState.stale !== nextReadyState.stale) {","      return true;","    }","    return nextReadyState.ready;","  };","","  RelayReadyStateRenderer.prototype.render = function render() {","    var children = void 0;","    var shouldUpdate = false;","","    var _props = this.props,","        readyState = _props.readyState,","        render = _props.render;","","    if (readyState) {","      if (render) {","        children = render({","          done: readyState.done,","          error: readyState.error,","          events: readyState.events,","          props: readyState.ready ? this.state.getContainerProps(this.props) : null,","          retry: this.props.retry,","          stale: readyState.stale","        });","      } else if (readyState.ready) {","        var _Container = this.props.Container;","","        children = require('react').createElement(_Container, this.state.getContainerProps(this.props));","      }","      shouldUpdate = true;","    }","    if (children === undefined) {","      children = null;","      shouldUpdate = false;","    }","    return require('react').createElement(","      require('react-static-container'),","      { shouldUpdate: shouldUpdate },","      children","    );","  };","","  return RelayReadyStateRenderer;","}(require('react').Component);","","RelayReadyStateRenderer.childContextTypes = {","  relay: require('./RelayPropTypes').Environment,","  route: require('./RelayPropTypes').QueryConfig.isRequired","};","","","function createContainerPropsFactory() {","  var prevProps = void 0;","  var querySet = void 0;","","  return function (nextProps) {","    if (!querySet || !prevProps || prevProps.Container !== nextProps.Container || prevProps.queryConfig !== nextProps.queryConfig) {","      querySet = require('./getRelayQueries')(nextProps.Container, nextProps.queryConfig);","    }","    var containerProps = (0, _extends3['default'])({}, nextProps.queryConfig.params, require('fbjs/lib/mapObject')(querySet, function (query) {","      return createFragmentPointerForRoot(nextProps.environment, query);","    }));","    prevProps = nextProps;","    return containerProps;","  };","}","","function createFragmentPointerForRoot(environment, query) {","  return query ? require('./RelayFragmentPointer').createForRoot(environment.getStoreData().getQueuedStore(), query) : null;","}","","module.exports = RelayReadyStateRenderer;"],"l":{"15":1,"17":1,"19":1,"21":1,"23":4,"36":1,"37":1,"39":1,"40":0,"42":0,"44":0,"47":0,"50":1,"51":0,"62":1,"63":0,"64":0,"65":0,"67":0,"68":0,"69":0,"70":0,"72":0,"73":0,"75":0,"78":1,"79":0,"80":0,"82":0,"86":0,"87":0,"88":0,"96":0,"97":0,"99":0,"101":0,"103":0,"104":0,"105":0,"107":0,"114":1,"117":1,"123":1,"124":0,"125":0,"127":0,"128":0,"129":0,"131":0,"132":0,"134":0,"135":0,"139":1,"140":0,"143":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayRenderer.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayRenderer.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":4,"7":1,"8":1,"9":1,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":1,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":1,"61":0,"62":0,"63":0,"64":1,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":1,"72":0,"73":0,"74":1,"75":1,"76":1,"77":1},"b":{"1":[4,0],"2":[4,4],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0,0,0,0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0]},"f":{"1":4,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":37}}},"2":{"name":"(anonymous_2)","line":96,"loc":{"start":{"line":96,"column":20},"end":{"line":96,"column":48}}},"3":{"name":"RelayRenderer","line":99,"loc":{"start":{"line":99,"column":2},"end":{"line":99,"column":41}}},"4":{"name":"componentDidMount","line":116,"loc":{"start":{"line":116,"column":46},"end":{"line":116,"column":75}}},"5":{"name":"_runQueries","line":125,"loc":{"start":{"line":125,"column":40},"end":{"line":125,"column":67}}},"6":{"name":"onReadyStateChange","line":140,"loc":{"start":{"line":140,"column":29},"end":{"line":140,"column":69}}},"7":{"name":"_retry","line":174,"loc":{"start":{"line":174,"column":35},"end":{"line":174,"column":53}}},"8":{"name":"componentWillReceiveProps","line":183,"loc":{"start":{"line":183,"column":54},"end":{"line":183,"column":100}}},"9":{"name":"componentDidUpdate","line":197,"loc":{"start":{"line":197,"column":47},"end":{"line":197,"column":97}}},"10":{"name":"_handleReadyStateChange","line":213,"loc":{"start":{"line":213,"column":52},"end":{"line":213,"column":97}}},"11":{"name":"componentWillUnmount","line":221,"loc":{"start":{"line":221,"column":49},"end":{"line":221,"column":81}}},"12":{"name":"render","line":232,"loc":{"start":{"line":232,"column":35},"end":{"line":232,"column":53}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":81}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":95}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":117}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":83}},"5":{"start":{"line":23,"column":0},"end":{"line":23,"column":97}},"6":{"start":{"line":23,"column":39},"end":{"line":23,"column":95}},"7":{"start":{"line":25,"column":0},"end":{"line":25,"column":43}},"8":{"start":{"line":27,"column":0},"end":{"line":34,"column":2}},"9":{"start":{"line":96,"column":0},"end":{"line":246,"column":30}},"10":{"start":{"line":97,"column":2},"end":{"line":97,"column":62}},"11":{"start":{"line":99,"column":2},"end":{"line":114,"column":3}},"12":{"start":{"line":100,"column":4},"end":{"line":100,"column":58}},"13":{"start":{"line":102,"column":4},"end":{"line":102,"column":111}},"14":{"start":{"line":104,"column":4},"end":{"line":104,"column":88}},"15":{"start":{"line":105,"column":4},"end":{"line":105,"column":70}},"16":{"start":{"line":106,"column":4},"end":{"line":106,"column":25}},"17":{"start":{"line":107,"column":4},"end":{"line":107,"column":32}},"18":{"start":{"line":108,"column":4},"end":{"line":112,"column":6}},"19":{"start":{"line":113,"column":4},"end":{"line":113,"column":17}},"20":{"start":{"line":116,"column":2},"end":{"line":118,"column":4}},"21":{"start":{"line":117,"column":4},"end":{"line":117,"column":33}},"22":{"start":{"line":125,"column":2},"end":{"line":167,"column":4}},"23":{"start":{"line":126,"column":4},"end":{"line":126,"column":22}},"24":{"start":{"line":128,"column":4},"end":{"line":134,"column":39}},"25":{"start":{"line":136,"column":4},"end":{"line":138,"column":5}},"26":{"start":{"line":137,"column":6},"end":{"line":137,"column":13}},"27":{"start":{"line":140,"column":4},"end":{"line":158,"column":6}},"28":{"start":{"line":141,"column":6},"end":{"line":144,"column":7}},"29":{"start":{"line":142,"column":8},"end":{"line":142,"column":102}},"30":{"start":{"line":143,"column":8},"end":{"line":143,"column":15}},"31":{"start":{"line":145,"column":6},"end":{"line":148,"column":7}},"32":{"start":{"line":147,"column":8},"end":{"line":147,"column":15}},"33":{"start":{"line":149,"column":6},"end":{"line":151,"column":7}},"34":{"start":{"line":150,"column":8},"end":{"line":150,"column":37}},"35":{"start":{"line":152,"column":6},"end":{"line":157,"column":9}},"36":{"start":{"line":160,"column":4},"end":{"line":162,"column":5}},"37":{"start":{"line":161,"column":6},"end":{"line":161,"column":34}},"38":{"start":{"line":164,"column":4},"end":{"line":164,"column":72}},"39":{"start":{"line":165,"column":4},"end":{"line":165,"column":281}},"40":{"start":{"line":166,"column":4},"end":{"line":166,"column":31}},"41":{"start":{"line":174,"column":2},"end":{"line":181,"column":4}},"42":{"start":{"line":175,"column":4},"end":{"line":175,"column":43}},"43":{"start":{"line":177,"column":4},"end":{"line":180,"column":5}},"44":{"start":{"line":178,"column":6},"end":{"line":178,"column":35}},"45":{"start":{"line":179,"column":6},"end":{"line":179,"column":42}},"46":{"start":{"line":183,"column":2},"end":{"line":195,"column":4}},"47":{"start":{"line":184,"column":4},"end":{"line":194,"column":5}},"48":{"start":{"line":185,"column":6},"end":{"line":191,"column":7}},"49":{"start":{"line":186,"column":8},"end":{"line":188,"column":9}},"50":{"start":{"line":187,"column":10},"end":{"line":187,"column":32}},"51":{"start":{"line":189,"column":8},"end":{"line":189,"column":90}},"52":{"start":{"line":190,"column":8},"end":{"line":190,"column":73}},"53":{"start":{"line":192,"column":6},"end":{"line":192,"column":34}},"54":{"start":{"line":193,"column":6},"end":{"line":193,"column":42}},"55":{"start":{"line":197,"column":2},"end":{"line":206,"column":4}},"56":{"start":{"line":199,"column":4},"end":{"line":199,"column":43}},"57":{"start":{"line":201,"column":4},"end":{"line":205,"column":5}},"58":{"start":{"line":202,"column":6},"end":{"line":204,"column":7}},"59":{"start":{"line":203,"column":8},"end":{"line":203,"column":49}},"60":{"start":{"line":213,"column":2},"end":{"line":219,"column":4}},"61":{"start":{"line":214,"column":4},"end":{"line":214,"column":59}},"62":{"start":{"line":216,"column":4},"end":{"line":218,"column":5}},"63":{"start":{"line":217,"column":6},"end":{"line":217,"column":37}},"64":{"start":{"line":221,"column":2},"end":{"line":230,"column":4}},"65":{"start":{"line":222,"column":4},"end":{"line":224,"column":5}},"66":{"start":{"line":223,"column":6},"end":{"line":223,"column":34}},"67":{"start":{"line":225,"column":4},"end":{"line":227,"column":5}},"68":{"start":{"line":226,"column":6},"end":{"line":226,"column":28}},"69":{"start":{"line":228,"column":4},"end":{"line":228,"column":23}},"70":{"start":{"line":229,"column":4},"end":{"line":229,"column":25}},"71":{"start":{"line":232,"column":2},"end":{"line":243,"column":4}},"72":{"start":{"line":233,"column":4},"end":{"line":233,"column":86}},"73":{"start":{"line":235,"column":4},"end":{"line":242,"column":7}},"74":{"start":{"line":245,"column":2},"end":{"line":245,"column":23}},"75":{"start":{"line":248,"column":0},"end":{"line":256,"column":2}},"76":{"start":{"line":257,"column":0},"end":{"line":259,"column":2}},"77":{"start":{"line":262,"column":0},"end":{"line":262,"column":31}}},"branchMap":{"1":{"line":23,"type":"cond-expr","locations":[{"start":{"line":23,"column":70},"end":{"line":23,"column":73}},{"start":{"line":23,"column":76},"end":{"line":23,"column":94}}]},"2":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":46},"end":{"line":23,"column":49}},{"start":{"line":23,"column":53},"end":{"line":23,"column":67}}]},"3":{"line":105,"type":"binary-expr","locations":[{"start":{"line":105,"column":19},"end":{"line":105,"column":35}},{"start":{"line":105,"column":39},"end":{"line":105,"column":69}}]},"4":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":4},"end":{"line":136,"column":4}},{"start":{"line":136,"column":4},"end":{"line":136,"column":4}}]},"5":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":6},"end":{"line":141,"column":6}},{"start":{"line":141,"column":6},"end":{"line":141,"column":6}}]},"6":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":6},"end":{"line":145,"column":6}},{"start":{"line":145,"column":6},"end":{"line":145,"column":6}}]},"7":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":6},"end":{"line":149,"column":6}},{"start":{"line":149,"column":6},"end":{"line":149,"column":6}}]},"8":{"line":149,"type":"binary-expr","locations":[{"start":{"line":149,"column":10},"end":{"line":149,"column":28}},{"start":{"line":149,"column":32},"end":{"line":149,"column":47}},{"start":{"line":149,"column":51},"end":{"line":149,"column":67}}]},"9":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":4},"end":{"line":160,"column":4}},{"start":{"line":160,"column":4},"end":{"line":160,"column":4}}]},"10":{"line":165,"type":"cond-expr","locations":[{"start":{"line":165,"column":53},"end":{"line":165,"column":165}},{"start":{"line":165,"column":168},"end":{"line":165,"column":280}}]},"11":{"line":165,"type":"cond-expr","locations":[{"start":{"line":165,"column":68},"end":{"line":165,"column":110}},{"start":{"line":165,"column":113},"end":{"line":165,"column":165}}]},"12":{"line":165,"type":"cond-expr","locations":[{"start":{"line":165,"column":183},"end":{"line":165,"column":225}},{"start":{"line":165,"column":228},"end":{"line":165,"column":280}}]},"13":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":4},"end":{"line":177,"column":4}},{"start":{"line":177,"column":4},"end":{"line":177,"column":4}}]},"14":{"line":177,"type":"binary-expr","locations":[{"start":{"line":177,"column":8},"end":{"line":177,"column":18}},{"start":{"line":177,"column":22},"end":{"line":177,"column":38}}]},"15":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":4},"end":{"line":184,"column":4}},{"start":{"line":184,"column":4},"end":{"line":184,"column":4}}]},"16":{"line":184,"type":"binary-expr","locations":[{"start":{"line":184,"column":8},"end":{"line":184,"column":52}},{"start":{"line":184,"column":56},"end":{"line":184,"column":104}},{"start":{"line":184,"column":108},"end":{"line":184,"column":156}},{"start":{"line":184,"column":160},"end":{"line":184,"column":208}},{"start":{"line":184,"column":212},"end":{"line":184,"column":232}},{"start":{"line":184,"column":236},"end":{"line":184,"column":258}}]},"17":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":6},"end":{"line":185,"column":6}},{"start":{"line":185,"column":6},"end":{"line":185,"column":6}}]},"18":{"line":186,"type":"if","locations":[{"start":{"line":186,"column":8},"end":{"line":186,"column":8}},{"start":{"line":186,"column":8},"end":{"line":186,"column":8}}]},"19":{"line":190,"type":"binary-expr","locations":[{"start":{"line":190,"column":22},"end":{"line":190,"column":38}},{"start":{"line":190,"column":42},"end":{"line":190,"column":72}}]},"20":{"line":201,"type":"if","locations":[{"start":{"line":201,"column":4},"end":{"line":201,"column":4}},{"start":{"line":201,"column":4},"end":{"line":201,"column":4}}]},"21":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":6},"end":{"line":202,"column":6}},{"start":{"line":202,"column":6},"end":{"line":202,"column":6}}]},"22":{"line":202,"type":"binary-expr","locations":[{"start":{"line":202,"column":10},"end":{"line":202,"column":20}},{"start":{"line":202,"column":24},"end":{"line":202,"column":59}}]},"23":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":4},"end":{"line":216,"column":4}},{"start":{"line":216,"column":4},"end":{"line":216,"column":4}}]},"24":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":4},"end":{"line":222,"column":4}},{"start":{"line":222,"column":4},"end":{"line":222,"column":4}}]},"25":{"line":225,"type":"if","locations":[{"start":{"line":225,"column":4},"end":{"line":225,"column":4}},{"start":{"line":225,"column":4},"end":{"line":225,"column":4}}]},"26":{"line":233,"type":"cond-expr","locations":[{"start":{"line":233,"column":41},"end":{"line":233,"column":62}},{"start":{"line":233,"column":65},"end":{"line":233,"column":85}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayRenderer"," * "," */","","'use strict';","","var _extends3 = _interopRequireDefault(require('babel-runtime/helpers/extends'));","","var _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));","","var _possibleConstructorReturn3 = _interopRequireDefault(require('babel-runtime/helpers/possibleConstructorReturn'));","","var _inherits3 = _interopRequireDefault(require('babel-runtime/helpers/inherits'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","var PropTypes = require('react').PropTypes;","","var INACTIVE_READY_STATE = {","  aborted: false,","  done: false,","  error: null,","  events: [],","  ready: false,","  stale: false","};","","/**"," * @public"," *"," * RelayRenderer renders a container and query config after fulfilling its data"," * dependencies. Precise rendering behavior is configured via the `render` prop"," * which takes a callback."," *"," * The container created using `Relay.createContainer` must be supplied via the"," * `Container` prop, and the query configuration that conforms to the shape of a"," * `RelayQueryConfig` must be supplied via the `queryConfig` prop."," *"," * === Render Callback ==="," *"," * The `render` callback is called with an object with the following properties:"," *"," *   props: ?{[propName: string]: mixed}"," *     If present, sufficient data is ready to render the container. This object"," *     must be spread into the container using the spread attribute operator. If"," *     absent, there is insufficient data to render the container."," *"," *   done: boolean"," *     Whether all data dependencies have been fulfilled. If `props` is present"," *     but `done` is false, then sufficient data is ready to render, but some"," *     data dependencies have not yet been fulfilled."," *"," *   error: ?Error"," *     If present, an error occurred while fulfilling data dependencies. If"," *     `props` and `error` are both present, then sufficient data is ready to"," *     render, but an error occurred while fulfilling deferred dependencies."," *"," *   retry: ?Function"," *     A function that can be called to re-attempt to fulfill data dependencies."," *     This property is only present if an `error` has occurred."," *"," *   stale: boolean"," *     When `forceFetch` is enabled, a request is always made to fetch updated"," *     data. However, if all data dependencies can be immediately fulfilled, the"," *     `props` property will be present. In this case, `stale` will be true."," *"," * The `render` callback can return `undefined` to continue rendering the last"," * view rendered (e.g. when transitioning from one `queryConfig` to another)."," *"," * If a `render` callback is not supplied, the default behavior is to render the"," * container if data is available, the existing view if one exists, or nothing."," *"," * === Refs ==="," *"," * References to elements rendered by the `render` callback can be obtained by"," * using the React `ref` prop. For example:"," *"," *   <FooComponent {...props} ref={handleFooRef} />"," *"," *   function handleFooRef(component) {"," *     // Invoked when `<FooComponent>` is mounted or unmounted. When mounted,"," *     // `component` will be the component. When unmounted, `component` will"," *     // be null."," *   }"," *"," */","","var RelayRenderer = function (_React$Component) {","  (0, _inherits3['default'])(RelayRenderer, _React$Component);","","  function RelayRenderer(props, context) {","    (0, _classCallCheck3['default'])(this, RelayRenderer);","","    var _this = (0, _possibleConstructorReturn3['default'])(this, _React$Component.call(this, props, context));","","    var garbageCollector = _this.props.environment.getStoreData().getGarbageCollector();","    _this.gcHold = garbageCollector && garbageCollector.acquireHold();","    _this.mounted = true;","    _this.pendingRequest = null;","    _this.state = {","      active: false,","      readyState: null,","      retry: _this._retry.bind(_this)","    };","    return _this;","  }","","  RelayRenderer.prototype.componentDidMount = function componentDidMount() {","    this._runQueries(this.props);","  };","","  /**","   * @private","   */","","","  RelayRenderer.prototype._runQueries = function _runQueries(_ref) {","    var _this2 = this;","","    var Container = _ref.Container,","        forceFetch = _ref.forceFetch,","        onForceFetch = _ref.onForceFetch,","        onPrimeCache = _ref.onPrimeCache,","        queryConfig = _ref.queryConfig,","        environment = _ref.environment,","        shouldFetch = _ref.shouldFetch;","","    if (!shouldFetch) {","      return;","    }","","    var onReadyStateChange = function onReadyStateChange(readyState) {","      if (!_this2.mounted) {","        _this2._handleReadyStateChange((0, _extends3['default'])({}, readyState, { mounted: false }));","        return;","      }","      if (request !== _this2.lastRequest) {","        // Ignore (abort) ready state if we have a new pending request.","        return;","      }","      if (readyState.aborted || readyState.done || readyState.error) {","        _this2.pendingRequest = null;","      }","      _this2.setState({","        active: true,","        readyState: (0, _extends3['default'])({}, readyState, {","          mounted: true","        })","      });","    };","","    if (this.pendingRequest) {","      this.pendingRequest.abort();","    }","","    var querySet = require('./getRelayQueries')(Container, queryConfig);","    var request = this.pendingRequest = forceFetch ? onForceFetch ? onForceFetch(querySet, onReadyStateChange) : environment.forceFetch(querySet, onReadyStateChange) : onPrimeCache ? onPrimeCache(querySet, onReadyStateChange) : environment.primeCache(querySet, onReadyStateChange);","    this.lastRequest = request;","  };","","  /**","   * @private","   */","","","  RelayRenderer.prototype._retry = function _retry() {","    var readyState = this.state.readyState;","","    if (readyState && readyState.error) {","      this._runQueries(this.props);","      this.setState({ readyState: null });","    }","  };","","  RelayRenderer.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {","    if (nextProps.Container !== this.props.Container || nextProps.environment !== this.props.environment || nextProps.queryConfig !== this.props.queryConfig || nextProps.shouldFetch !== this.props.shouldFetch || nextProps.forceFetch && !this.props.forceFetch) {","      if (nextProps.environment !== this.props.environment) {","        if (this.gcHold) {","          this.gcHold.release();","        }","        var garbageCollector = nextProps.environment.getStoreData().getGarbageCollector();","        this.gcHold = garbageCollector && garbageCollector.acquireHold();","      }","      this._runQueries(nextProps);","      this.setState({ readyState: null });","    }","  };","","  RelayRenderer.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {","    // `prevState` should exist; the truthy check is for Flow soundness.","    var readyState = this.state.readyState;","","    if (readyState) {","      if (!prevState || readyState !== prevState.readyState) {","        this._handleReadyStateChange(readyState);","      }","    }","  };","","  /**","   * @private","   */","","","  RelayRenderer.prototype._handleReadyStateChange = function _handleReadyStateChange(readyState) {","    var onReadyStateChange = this.props.onReadyStateChange;","","    if (onReadyStateChange) {","      onReadyStateChange(readyState);","    }","  };","","  RelayRenderer.prototype.componentWillUnmount = function componentWillUnmount() {","    if (this.pendingRequest) {","      this.pendingRequest.abort();","    }","    if (this.gcHold) {","      this.gcHold.release();","    }","    this.gcHold = null;","    this.mounted = false;","  };","","  RelayRenderer.prototype.render = function render() {","    var readyState = this.state.active ? this.state.readyState : INACTIVE_READY_STATE;","","    return require('react').createElement(require('./RelayReadyStateRenderer'), {","      Container: this.props.Container,","      environment: this.props.environment,","      queryConfig: this.props.queryConfig,","      readyState: readyState,","      render: this.props.render,","      retry: this.state.retry","    });","  };","","  return RelayRenderer;","}(require('react').Component);","","RelayRenderer.propTypes = {","  Container: require('./RelayPropTypes').Container,","  forceFetch: PropTypes.bool,","  onReadyStateChange: PropTypes.func,","  queryConfig: require('./RelayPropTypes').QueryConfig.isRequired,","  environment: require('./RelayPropTypes').Environment,","  render: PropTypes.func,","  shouldFetch: PropTypes.bool","};","RelayRenderer.defaultProps = {","  shouldFetch: true","};","","","module.exports = RelayRenderer;"],"l":{"15":1,"17":1,"19":1,"21":1,"23":4,"25":1,"27":1,"96":1,"97":1,"99":1,"100":0,"102":0,"104":0,"105":0,"106":0,"107":0,"108":0,"113":0,"116":1,"117":0,"125":1,"126":0,"128":0,"136":0,"137":0,"140":0,"141":0,"142":0,"143":0,"145":0,"147":0,"149":0,"150":0,"152":0,"160":0,"161":0,"164":0,"165":0,"166":0,"174":1,"175":0,"177":0,"178":0,"179":0,"183":1,"184":0,"185":0,"186":0,"187":0,"189":0,"190":0,"192":0,"193":0,"197":1,"199":0,"201":0,"202":0,"203":0,"213":1,"214":0,"216":0,"217":0,"221":1,"222":0,"223":0,"225":0,"226":0,"228":0,"229":0,"232":1,"233":0,"235":0,"245":1,"248":1,"257":1,"262":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayRootContainer.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayRootContainer.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"RelayRootContainer","line":75,"loc":{"start":{"line":75,"column":0},"end":{"line":75,"column":34}}},"2":{"name":"render","line":92,"loc":{"start":{"line":92,"column":12},"end":{"line":92,"column":35}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":43}},"2":{"start":{"line":75,"column":0},"end":{"line":117,"column":1}},"3":{"start":{"line":76,"column":2},"end":{"line":83,"column":37}},"4":{"start":{"line":85,"column":2},"end":{"line":116,"column":5}},"5":{"start":{"line":93,"column":6},"end":{"line":97,"column":30}},"6":{"start":{"line":99,"column":6},"end":{"line":113,"column":7}},"7":{"start":{"line":100,"column":8},"end":{"line":102,"column":9}},"8":{"start":{"line":101,"column":10},"end":{"line":101,"column":45}},"9":{"start":{"line":103,"column":13},"end":{"line":113,"column":7}},"10":{"start":{"line":104,"column":8},"end":{"line":108,"column":9}},"11":{"start":{"line":105,"column":10},"end":{"line":105,"column":68}},"12":{"start":{"line":107,"column":10},"end":{"line":107,"column":66}},"13":{"start":{"line":110,"column":8},"end":{"line":112,"column":9}},"14":{"start":{"line":111,"column":10},"end":{"line":111,"column":33}},"15":{"start":{"line":114,"column":6},"end":{"line":114,"column":23}},"16":{"start":{"line":119,"column":0},"end":{"line":128,"column":2}},"17":{"start":{"line":130,"column":0},"end":{"line":130,"column":36}}},"branchMap":{"1":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":6},"end":{"line":99,"column":6}},{"start":{"line":99,"column":6},"end":{"line":99,"column":6}}]},"2":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":8},"end":{"line":100,"column":8}},{"start":{"line":100,"column":8},"end":{"line":100,"column":8}}]},"3":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":13},"end":{"line":103,"column":13}},{"start":{"line":103,"column":13},"end":{"line":103,"column":13}}]},"4":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":8},"end":{"line":104,"column":8}},{"start":{"line":104,"column":8},"end":{"line":104,"column":8}}]},"5":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":8},"end":{"line":110,"column":8}},{"start":{"line":110,"column":8},"end":{"line":110,"column":8}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayRootContainer"," * "," */","","'use strict';","","var PropTypes = require('react').PropTypes;","","/**"," * @public"," *"," * RelayRootContainer sends requests for data required to render the supplied"," * `Component` and `route`. The `Component` must be a container created using"," * `Relay.createContainer`."," *"," * === Render Callbacks ==="," *"," * Whenever the RelayRootContainer renders, one of three render callback props"," * are invoked depending on whether data is being loaded, can be resolved, or if"," * an error is incurred."," *"," *  ReactDOM.render("," *    <RelayRootContainer"," *      Component={FooComponent}"," *      route={fooRoute}"," *      renderLoading={function() {"," *        return <View>Loading...</View>;"," *      }}"," *      renderFetched={function(data) {"," *        // Must spread `data` into <FooComponent>."," *        return <FooComponent {...data} />;"," *      }}"," *      renderFailure={function(error) {"," *        return <View>Error: {error.message}</View>;"," *      }}"," *    />,"," *    ..."," *  );"," *"," * If a callback is not supplied, it has a default behavior:"," *"," *  - Without `renderFetched`, `Component` will be rendered with fetched data."," *  - Without `renderFailure`, an error will render to null."," *  - Without `renderLoading`, the existing view will continue to render. If"," *    this is the initial mount (with no existing view), renders to null."," *"," * In addition, supplying a `renderLoading` that returns undefined has the same"," * effect as not supplying the callback. (Usually, an undefined return value is"," * an error in React)."," *"," * === Refs ==="," *"," * References to elements rendered by any of these callbacks can be obtained by"," * using the React `ref` prop. For example:"," *"," *   <FooComponent {...data} ref={handleFooRef} />"," *"," *   function handleFooRef(component) {"," *     // Invoked when `<FooComponent>` is mounted or unmounted. When mounted,"," *     // `component` will be the component. When unmounted, `component` will"," *     // be null."," *   }"," *"," */","","","function RelayRootContainer(_ref) {","  var Component = _ref.Component,","      forceFetch = _ref.forceFetch,","      onReadyStateChange = _ref.onReadyStateChange,","      renderFailure = _ref.renderFailure,","      renderFetched = _ref.renderFetched,","      renderLoading = _ref.renderLoading,","      route = _ref.route,","      shouldFetch = _ref.shouldFetch;","","  return require('react').createElement(require('./RelayRenderer'), {","    Container: Component,","    forceFetch: forceFetch,","    onReadyStateChange: onReadyStateChange,","    queryConfig: route,","    environment: require('./RelayStore'),","    shouldFetch: shouldFetch,","    render: function render(_ref2) {","      var done = _ref2.done,","          error = _ref2.error,","          props = _ref2.props,","          retry = _ref2.retry,","          stale = _ref2.stale;","","      if (error) {","        if (renderFailure) {","          return renderFailure(error, retry);","        }","      } else if (props) {","        if (renderFetched) {","          return renderFetched(props, { done: done, stale: stale });","        } else {","          return require('react').createElement(Component, props);","        }","      } else {","        if (renderLoading) {","          return renderLoading();","        }","      }","      return undefined;","    }","  });","}","","RelayRootContainer.propTypes = {","  Component: require('./RelayPropTypes').Container,","  forceFetch: PropTypes.bool,","  onReadyStateChange: PropTypes.func,","  renderFailure: PropTypes.func,","  renderFetched: PropTypes.func,","  renderLoading: PropTypes.func,","  route: require('./RelayPropTypes').QueryConfig.isRequired,","  shouldFetch: PropTypes.bool","};","","module.exports = RelayRootContainer;"],"l":{"15":1,"75":1,"76":0,"85":0,"93":0,"99":0,"100":0,"101":0,"103":0,"104":0,"105":0,"107":0,"110":0,"111":0,"114":0,"119":1,"130":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayRoute.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayRoute.js","s":{"1":1,"2":1,"3":1,"4":1,"5":3,"6":1,"7":0,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":0,"36":1,"37":1},"b":{"1":[3,0],"2":[3,3],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":3,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":37}}},"2":{"name":"createURI","line":23,"loc":{"start":{"line":23,"column":16},"end":{"line":23,"column":37}}},"3":{"name":"(anonymous_3)","line":32,"loc":{"start":{"line":32,"column":17},"end":{"line":32,"column":46}}},"4":{"name":"RelayRoute","line":35,"loc":{"start":{"line":35,"column":2},"end":{"line":35,"column":45}}},"5":{"name":"get","line":51,"loc":{"start":{"line":51,"column":11},"end":{"line":51,"column":26}}},"6":{"name":"prepareVariables","line":61,"loc":{"start":{"line":61,"column":42},"end":{"line":61,"column":83}}},"7":{"name":"(anonymous_7)","line":72,"loc":{"start":{"line":72,"column":56},"end":{"line":72,"column":94}}},"8":{"name":"injectURICreator","line":86,"loc":{"start":{"line":86,"column":32},"end":{"line":86,"column":67}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":117}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":83}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":97}},"5":{"start":{"line":21,"column":39},"end":{"line":21,"column":95}},"6":{"start":{"line":23,"column":0},"end":{"line":25,"column":2}},"7":{"start":{"line":24,"column":2},"end":{"line":24,"column":14}},"8":{"start":{"line":32,"column":0},"end":{"line":91,"column":33}},"9":{"start":{"line":33,"column":2},"end":{"line":33,"column":60}},"10":{"start":{"line":35,"column":2},"end":{"line":59,"column":3}},"11":{"start":{"line":36,"column":4},"end":{"line":36,"column":55}},"12":{"start":{"line":38,"column":4},"end":{"line":38,"column":114}},"13":{"start":{"line":40,"column":4},"end":{"line":40,"column":40}},"14":{"start":{"line":41,"column":4},"end":{"line":42,"column":32}},"15":{"start":{"line":45,"column":4},"end":{"line":45,"column":116}},"16":{"start":{"line":46,"column":4},"end":{"line":46,"column":141}},"17":{"start":{"line":49,"column":4},"end":{"line":57,"column":7}},"18":{"start":{"line":52,"column":8},"end":{"line":54,"column":9}},"19":{"start":{"line":53,"column":10},"end":{"line":53,"column":52}},"20":{"start":{"line":55,"column":8},"end":{"line":55,"column":19}},"21":{"start":{"line":58,"column":4},"end":{"line":58,"column":17}},"22":{"start":{"line":61,"column":2},"end":{"line":84,"column":4}},"23":{"start":{"line":62,"column":4},"end":{"line":65,"column":43}},"24":{"start":{"line":67,"column":4},"end":{"line":67,"column":31}},"25":{"start":{"line":68,"column":4},"end":{"line":71,"column":5}},"26":{"start":{"line":70,"column":6},"end":{"line":70,"column":37}},"27":{"start":{"line":72,"column":4},"end":{"line":82,"column":7}},"28":{"start":{"line":73,"column":6},"end":{"line":80,"column":7}},"29":{"start":{"line":74,"column":8},"end":{"line":79,"column":9}},"30":{"start":{"line":75,"column":10},"end":{"line":75,"column":17}},"31":{"start":{"line":78,"column":10},"end":{"line":78,"column":40}},"32":{"start":{"line":81,"column":6},"end":{"line":81,"column":180}},"33":{"start":{"line":83,"column":4},"end":{"line":83,"column":18}},"34":{"start":{"line":86,"column":2},"end":{"line":88,"column":4}},"35":{"start":{"line":87,"column":4},"end":{"line":87,"column":24}},"36":{"start":{"line":90,"column":2},"end":{"line":90,"column":20}},"37":{"start":{"line":93,"column":0},"end":{"line":93,"column":28}}},"branchMap":{"1":{"line":21,"type":"cond-expr","locations":[{"start":{"line":21,"column":70},"end":{"line":21,"column":73}},{"start":{"line":21,"column":76},"end":{"line":21,"column":94}}]},"2":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":46},"end":{"line":21,"column":49}},{"start":{"line":21,"column":53},"end":{"line":21,"column":67}}]},"3":{"line":46,"type":"binary-expr","locations":[{"start":{"line":46,"column":104},"end":{"line":46,"column":120}},{"start":{"line":46,"column":124},"end":{"line":46,"column":139}}]},"4":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":8},"end":{"line":52,"column":8}},{"start":{"line":52,"column":8},"end":{"line":52,"column":8}}]},"5":{"line":52,"type":"binary-expr","locations":[{"start":{"line":52,"column":12},"end":{"line":52,"column":16}},{"start":{"line":52,"column":20},"end":{"line":52,"column":24}}]},"6":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":4},"end":{"line":68,"column":4}},{"start":{"line":68,"column":4},"end":{"line":68,"column":4}}]},"7":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":6},"end":{"line":73,"column":6}},{"start":{"line":73,"column":6},"end":{"line":73,"column":6}}]},"8":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":8},"end":{"line":74,"column":8}},{"start":{"line":74,"column":8},"end":{"line":74,"column":8}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayRoute"," * "," */","","'use strict';","","var _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));","","var _possibleConstructorReturn3 = _interopRequireDefault(require('babel-runtime/helpers/possibleConstructorReturn'));","","var _inherits3 = _interopRequireDefault(require('babel-runtime/helpers/inherits'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","var createURI = function createURI() {","  return null;","};","","/**"," * Describes the root queries, param definitions and other metadata for a given"," * path (URI)."," */","","var RelayRoute = function (_RelayQueryConfig) {","  (0, _inherits3['default'])(RelayRoute, _RelayQueryConfig);","","  function RelayRoute(initialVariables, uri) {","    (0, _classCallCheck3['default'])(this, RelayRoute);","","    var _this = (0, _possibleConstructorReturn3['default'])(this, _RelayQueryConfig.call(this, initialVariables));","","    var constructor = _this.constructor;","    var routeName = constructor.routeName,","        path = constructor.path;","","","    require('fbjs/lib/invariant')(constructor !== RelayRoute, 'RelayRoute: Abstract class cannot be instantiated.');","    require('fbjs/lib/invariant')(routeName, '%s: Subclasses of RelayRoute must define a `routeName`.', constructor.name || '<<anonymous>>');","","    // $FlowIssue #9905535 - Object.defineProperty doesn't understand getters","    Object.defineProperty(_this, 'uri', {","      enumerable: true,","      get: function get() {","        if (!uri && path) {","          uri = createURI(constructor, this.params);","        }","        return uri;","      }","    });","    return _this;","  }","","  RelayRoute.prototype.prepareVariables = function prepareVariables(prevVariables) {","    var _constructor = this.constructor,","        paramDefinitions = _constructor.paramDefinitions,","        prepareParams = _constructor.prepareParams,","        routeName = _constructor.routeName;","","    var params = prevVariables;","    if (prepareParams) {","      /* $FlowFixMe(>=0.17.0) - params is ?Tv but prepareParams expects Tv */","      params = prepareParams(params);","    }","    require('fbjs/lib/forEachObject')(paramDefinitions, function (paramDefinition, paramName) {","      if (params) {","        if (params.hasOwnProperty(paramName)) {","          return;","        } else {","          // Backfill param so that a call variable is created for it.","          params[paramName] = undefined;","        }","      }","      require('fbjs/lib/invariant')(!paramDefinition.required, 'RelayRoute: Missing required parameter `%s` in `%s`. Check the ' + 'supplied params or URI.', paramName, routeName);","    });","    return params;","  };","","  RelayRoute.injectURICreator = function injectURICreator(creator) {","    createURI = creator;","  };","","  return RelayRoute;","}(require('./RelayQueryConfig'));","","module.exports = RelayRoute;"],"l":{"15":1,"17":1,"19":1,"21":3,"23":1,"24":0,"32":1,"33":1,"35":1,"36":0,"38":0,"40":0,"41":0,"45":0,"46":0,"49":0,"52":0,"53":0,"55":0,"58":0,"61":1,"62":0,"67":0,"68":0,"70":0,"72":0,"73":0,"74":0,"75":0,"78":0,"81":0,"83":0,"86":1,"87":0,"90":1,"93":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayQL_GENERATED.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayQL_GENERATED.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":21,"column":0},"end":{"line":21,"column":38}}},"branchMap":{},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayQL_GENERATED"," * "," */","","'use strict';","","/**"," * @internal"," *"," * This is a tag function solely for use in automated tooling that outputs Relay"," * queries."," */","module.exports = require('./RelayQL');"],"l":{"21":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayQueryCaching.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayQueryCaching.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"disable","line":25,"loc":{"start":{"line":25,"column":11},"end":{"line":25,"column":30}}},"2":{"name":"getEnabled","line":33,"loc":{"start":{"line":33,"column":14},"end":{"line":33,"column":36}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":31}},"2":{"start":{"line":20,"column":0},"end":{"line":36,"column":2}},"3":{"start":{"line":26,"column":4},"end":{"line":26,"column":32}},"4":{"start":{"line":34,"column":4},"end":{"line":34,"column":31}},"5":{"start":{"line":38,"column":0},"end":{"line":38,"column":35}}},"branchMap":{},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayQueryCaching"," * "," */","","'use strict';","","var queryCachingEnabled = true;","","/**"," * Methods for configuring caching of Relay queries."," */","var RelayQueryCaching = {","  /**","   * `disable` turns off caching of queries for `getRelayQueries` and","   * `buildRQL`.","   */","  disable: function disable() {","    queryCachingEnabled = false;","  },","","","  /**","   * @internal","   */","  getEnabled: function getEnabled() {","    return queryCachingEnabled;","  }","};","","module.exports = RelayQueryCaching;"],"l":{"15":1,"20":1,"26":0,"34":0,"38":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayQueryPath.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayQueryPath.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":0,"56":1,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"createForID","line":41,"loc":{"start":{"line":41,"column":15},"end":{"line":41,"column":61}}},"2":{"name":"create","line":50,"loc":{"start":{"line":50,"column":10},"end":{"line":50,"column":32}}},"3":{"name":"getPath","line":67,"loc":{"start":{"line":67,"column":11},"end":{"line":67,"column":50}}},"4":{"name":"isRootPath","line":85,"loc":{"start":{"line":85,"column":14},"end":{"line":85,"column":40}}},"5":{"name":"getParent","line":88,"loc":{"start":{"line":88,"column":13},"end":{"line":88,"column":38}}},"6":{"name":"getName","line":92,"loc":{"start":{"line":92,"column":11},"end":{"line":92,"column":34}}},"7":{"name":"getRouteName","line":104,"loc":{"start":{"line":104,"column":16},"end":{"line":104,"column":44}}},"8":{"name":"getQuery","line":116,"loc":{"start":{"line":116,"column":12},"end":{"line":116,"column":55}}},"9":{"name":"createRootQueryFromNodePath","line":144,"loc":{"start":{"line":144,"column":0},"end":{"line":144,"column":47}}},"10":{"name":"getRootFragmentForQuery","line":154,"loc":{"start":{"line":154,"column":0},"end":{"line":154,"column":56}}},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":19},"end":{"line":158,"column":36}}},"12":{"name":"(anonymous_12)","line":168,"loc":{"start":{"line":168,"column":40},"end":{"line":168,"column":56}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":16,"column":27}},"2":{"start":{"line":18,"column":0},"end":{"line":22,"column":56}},"3":{"start":{"line":24,"column":0},"end":{"line":27,"column":3}},"4":{"start":{"line":28,"column":0},"end":{"line":31,"column":3}},"5":{"start":{"line":40,"column":0},"end":{"line":142,"column":2}},"6":{"start":{"line":42,"column":4},"end":{"line":42,"column":169}},"7":{"start":{"line":43,"column":4},"end":{"line":48,"column":6}},"8":{"start":{"line":51,"column":4},"end":{"line":61,"column":5}},"9":{"start":{"line":52,"column":6},"end":{"line":52,"column":52}},"10":{"start":{"line":53,"column":6},"end":{"line":60,"column":7}},"11":{"start":{"line":54,"column":8},"end":{"line":59,"column":10}},"12":{"start":{"line":62,"column":4},"end":{"line":65,"column":6}},"13":{"start":{"line":68,"column":4},"end":{"line":83,"column":5}},"14":{"start":{"line":69,"column":6},"end":{"line":73,"column":8}},"15":{"start":{"line":74,"column":11},"end":{"line":83,"column":5}},"16":{"start":{"line":75,"column":6},"end":{"line":75,"column":20}},"17":{"start":{"line":77,"column":6},"end":{"line":82,"column":8}},"18":{"start":{"line":86,"column":4},"end":{"line":86,"column":56}},"19":{"start":{"line":89,"column":4},"end":{"line":89,"column":115}},"20":{"start":{"line":90,"column":4},"end":{"line":90,"column":23}},"21":{"start":{"line":93,"column":4},"end":{"line":95,"column":5}},"22":{"start":{"line":94,"column":6},"end":{"line":94,"column":25}},"23":{"start":{"line":96,"column":4},"end":{"line":102,"column":5}},"24":{"start":{"line":97,"column":6},"end":{"line":97,"column":33}},"25":{"start":{"line":98,"column":11},"end":{"line":102,"column":5}},"26":{"start":{"line":99,"column":6},"end":{"line":99,"column":23}},"27":{"start":{"line":101,"column":6},"end":{"line":101,"column":97}},"28":{"start":{"line":105,"column":4},"end":{"line":107,"column":5}},"29":{"start":{"line":106,"column":6},"end":{"line":106,"column":25}},"30":{"start":{"line":108,"column":4},"end":{"line":114,"column":5}},"31":{"start":{"line":109,"column":6},"end":{"line":109,"column":39}},"32":{"start":{"line":110,"column":11},"end":{"line":114,"column":5}},"33":{"start":{"line":111,"column":6},"end":{"line":111,"column":28}},"34":{"start":{"line":113,"column":6},"end":{"line":113,"column":102}},"35":{"start":{"line":117,"column":4},"end":{"line":117,"column":27}},"36":{"start":{"line":118,"column":4},"end":{"line":118,"column":27}},"37":{"start":{"line":119,"column":4},"end":{"line":133,"column":5}},"38":{"start":{"line":120,"column":6},"end":{"line":120,"column":28}},"39":{"start":{"line":121,"column":6},"end":{"line":125,"column":7}},"40":{"start":{"line":122,"column":8},"end":{"line":122,"column":47}},"41":{"start":{"line":123,"column":8},"end":{"line":123,"column":281}},"42":{"start":{"line":124,"column":8},"end":{"line":124,"column":31}},"43":{"start":{"line":126,"column":6},"end":{"line":126,"column":108}},"44":{"start":{"line":127,"column":6},"end":{"line":131,"column":7}},"45":{"start":{"line":128,"column":8},"end":{"line":128,"column":116}},"46":{"start":{"line":130,"column":8},"end":{"line":130,"column":37}},"47":{"start":{"line":132,"column":6},"end":{"line":132,"column":25}},"48":{"start":{"line":134,"column":4},"end":{"line":134,"column":84}},"49":{"start":{"line":135,"column":4},"end":{"line":135,"column":95}},"50":{"start":{"line":136,"column":4},"end":{"line":136,"column":70}},"51":{"start":{"line":137,"column":4},"end":{"line":137,"column":77}},"52":{"start":{"line":139,"column":4},"end":{"line":139,"column":180}},"53":{"start":{"line":140,"column":4},"end":{"line":140,"column":21}},"54":{"start":{"line":144,"column":0},"end":{"line":152,"column":1}},"55":{"start":{"line":145,"column":2},"end":{"line":151,"column":36}},"56":{"start":{"line":154,"column":0},"end":{"line":184,"column":1}},"57":{"start":{"line":155,"column":2},"end":{"line":155,"column":24}},"58":{"start":{"line":158,"column":2},"end":{"line":162,"column":5}},"59":{"start":{"line":159,"column":4},"end":{"line":161,"column":5}},"60":{"start":{"line":160,"column":6},"end":{"line":160,"column":31}},"61":{"start":{"line":163,"column":2},"end":{"line":166,"column":3}},"62":{"start":{"line":165,"column":4},"end":{"line":165,"column":24}},"63":{"start":{"line":167,"column":2},"end":{"line":167,"column":30}},"64":{"start":{"line":168,"column":2},"end":{"line":172,"column":5}},"65":{"start":{"line":169,"column":4},"end":{"line":169,"column":51}},"66":{"start":{"line":171,"column":4},"end":{"line":171,"column":47}},"67":{"start":{"line":173,"column":2},"end":{"line":173,"column":48}},"68":{"start":{"line":174,"column":2},"end":{"line":174,"column":72}},"69":{"start":{"line":175,"column":2},"end":{"line":175,"column":49}},"70":{"start":{"line":177,"column":2},"end":{"line":183,"column":3}},"71":{"start":{"line":178,"column":4},"end":{"line":178,"column":92}},"72":{"start":{"line":180,"column":4},"end":{"line":180,"column":106}},"73":{"start":{"line":181,"column":4},"end":{"line":181,"column":171}},"74":{"start":{"line":182,"column":4},"end":{"line":182,"column":24}},"75":{"start":{"line":186,"column":0},"end":{"line":186,"column":32}}},"branchMap":{"1":{"line":46,"type":"binary-expr","locations":[{"start":{"line":46,"column":17},"end":{"line":46,"column":26}},{"start":{"line":46,"column":30},"end":{"line":46,"column":43}}]},"2":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":4},"end":{"line":51,"column":4}},{"start":{"line":51,"column":4},"end":{"line":51,"column":4}}]},"3":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":6},"end":{"line":53,"column":6}},{"start":{"line":53,"column":6},"end":{"line":53,"column":6}}]},"4":{"line":53,"type":"binary-expr","locations":[{"start":{"line":53,"column":10},"end":{"line":53,"column":24}},{"start":{"line":53,"column":28},"end":{"line":53,"column":68}}]},"5":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":4},"end":{"line":68,"column":4}},{"start":{"line":68,"column":4},"end":{"line":68,"column":4}}]},"6":{"line":68,"type":"binary-expr","locations":[{"start":{"line":68,"column":8},"end":{"line":68,"column":22}},{"start":{"line":68,"column":26},"end":{"line":68,"column":69}}]},"7":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":11},"end":{"line":74,"column":11}},{"start":{"line":74,"column":11},"end":{"line":74,"column":11}}]},"8":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":15},"end":{"line":74,"column":37}},{"start":{"line":74,"column":41},"end":{"line":74,"column":65}}]},"9":{"line":86,"type":"binary-expr","locations":[{"start":{"line":86,"column":11},"end":{"line":86,"column":31}},{"start":{"line":86,"column":35},"end":{"line":86,"column":55}}]},"10":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":4},"end":{"line":96,"column":4}},{"start":{"line":96,"column":4},"end":{"line":96,"column":4}}]},"11":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":11},"end":{"line":98,"column":11}},{"start":{"line":98,"column":11},"end":{"line":98,"column":11}}]},"12":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":4},"end":{"line":108,"column":4}},{"start":{"line":108,"column":4},"end":{"line":108,"column":4}}]},"13":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":11},"end":{"line":110,"column":11}},{"start":{"line":110,"column":11},"end":{"line":110,"column":11}}]},"14":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":6},"end":{"line":121,"column":6}},{"start":{"line":121,"column":6},"end":{"line":121,"column":6}}]},"15":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":36},"end":{"line":123,"column":46}},{"start":{"line":123,"column":50},"end":{"line":123,"column":69}},{"start":{"line":123,"column":73},"end":{"line":123,"column":94}}]},"16":{"line":126,"type":"cond-expr","locations":[{"start":{"line":126,"column":73},"end":{"line":126,"column":102}},{"start":{"line":126,"column":105},"end":{"line":126,"column":107}}]},"17":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":6},"end":{"line":127,"column":6}},{"start":{"line":127,"column":6},"end":{"line":127,"column":6}}]},"18":{"line":134,"type":"cond-expr","locations":[{"start":{"line":134,"column":38},"end":{"line":134,"column":47}},{"start":{"line":134,"column":50},"end":{"line":134,"column":83}}]},"19":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":4},"end":{"line":159,"column":4}},{"start":{"line":159,"column":4},"end":{"line":159,"column":4}}]},"20":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":2},"end":{"line":163,"column":2}},{"start":{"line":163,"column":2},"end":{"line":163,"column":2}}]},"21":{"line":175,"type":"binary-expr","locations":[{"start":{"line":175,"column":17},"end":{"line":175,"column":23}},{"start":{"line":175,"column":27},"end":{"line":175,"column":48}}]},"22":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":2},"end":{"line":177,"column":2}},{"start":{"line":177,"column":2},"end":{"line":177,"column":2}}]},"23":{"line":180,"type":"cond-expr","locations":[{"start":{"line":180,"column":37},"end":{"line":180,"column":65}},{"start":{"line":180,"column":68},"end":{"line":180,"column":105}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayQueryPath"," * "," */","","'use strict';","","var _require = require('./RelayConnectionInterface'),","    EDGES = _require.EDGES;","","var ID = require('./RelayNodeInterface').ID,","    ID_TYPE = require('./RelayNodeInterface').ID_TYPE,","    NODE = require('./RelayNodeInterface').NODE,","    NODE_TYPE = require('./RelayNodeInterface').NODE_TYPE,","    TYPENAME = require('./RelayNodeInterface').TYPENAME;","","var idField = require('./RelayQuery').Field.build({","  fieldName: ID,","  type: 'String'","});","var typeField = require('./RelayQuery').Field.build({","  fieldName: TYPENAME,","  type: 'String'","});","","/**"," * @internal"," *"," * Represents the path (root plus fields) within a query that fetched a"," * particular node. Each step of the path may represent a root query (for"," * refetchable nodes) or the field path from the nearest refetchable node."," */","var RelayQueryPath = {","  createForID: function createForID(dataID, name, routeName) {","    require('fbjs/lib/invariant')(!require('./RelayRecord').isClientID(dataID), 'RelayQueryPath.createForID: Expected dataID to be a server id, got ' + '`%s`.', dataID);","    return {","      dataID: dataID,","      name: name,","      routeName: routeName || '$RelayQuery',","      type: 'node'","    };","  },","  create: function create(root) {","    if (root.getFieldName() === NODE) {","      var identifyingArg = root.getIdentifyingArg();","      if (identifyingArg && typeof identifyingArg.value === 'string') {","        return {","          dataID: identifyingArg.value,","          name: root.getName(),","          routeName: root.getRoute().name,","          type: 'node'","        };","      }","    }","    return {","      root: root,","      type: 'root'","    };","  },","  getPath: function getPath(parent, node, dataID) {","    if (dataID == null || require('./RelayRecord').isClientID(dataID)) {","      return {","        node: node,","        parent: parent,","        type: 'client'","      };","    } else if (parent.type === 'node' && parent.dataID === dataID) {","      return parent;","    } else {","      return {","        dataID: dataID,","        name: RelayQueryPath.getName(parent),","        routeName: RelayQueryPath.getRouteName(parent),","        type: 'node'","      };","    }","  },","  isRootPath: function isRootPath(path) {","    return path.type === 'node' || path.type === 'root';","  },","  getParent: function getParent(path) {","    require('fbjs/lib/invariant')(path.type === 'client', 'RelayQueryPath: Cannot get the parent of a root path.');","    return path.parent;","  },","  getName: function getName(path) {","    while (path.type === 'client') {","      path = path.parent;","    }","    if (path.type === 'root') {","      return path.root.getName();","    } else if (path.type === 'node') {","      return path.name;","    } else {","      require('fbjs/lib/invariant')(false, 'RelayQueryPath.getName(): Invalid path `%s`.', path);","    }","  },","  getRouteName: function getRouteName(path) {","    while (path.type === 'client') {","      path = path.parent;","    }","    if (path.type === 'root') {","      return path.root.getRoute().name;","    } else if (path.type === 'node') {","      return path.routeName;","    } else {","      require('fbjs/lib/invariant')(false, 'RelayQueryPath.getRouteName(): Invalid path `%s`.', path);","    }","  },","  getQuery: function getQuery(store, path, appendNode) {","    var child = appendNode;","    var prevField = void 0;","    while (path.type === 'client') {","      var _node = path.node;","      if (_node instanceof require('./RelayQuery').Field) {","        var schemaName = _node.getSchemaName();","        require('fbjs/lib/warning')(!prevField || prevField !== EDGES || !_node.isConnection(), 'RelayQueryPath.getQuery(): Cannot generate accurate query for ' + 'path with connection `%s`. Consider adding an `id` field to each ' + '`node` to make them refetchable.', schemaName);","        prevField = schemaName;","      }","      var idFieldName = _node instanceof require('./RelayQuery').Field ? _node.getInferredPrimaryKey() : ID;","      if (idFieldName) {","        child = _node.clone([child, _node.getFieldByStorageKey(idFieldName), _node.getFieldByStorageKey(TYPENAME)]);","      } else {","        child = _node.clone([child]);","      }","      path = path.parent;","    }","    var root = path.type === 'root' ? path.root : createRootQueryFromNodePath(path);","    var children = [child, root.getFieldByStorageKey(ID), root.getFieldByStorageKey(TYPENAME)];","    var rootChildren = getRootFragmentForQuery(store, root, children);","    var pathQuery = root.cloneWithRoute(rootChildren, appendNode.getRoute());","    // for flow","    require('fbjs/lib/invariant')(pathQuery instanceof require('./RelayQuery').Root, 'RelayQueryPath: Expected the root of path `%s` to be a query.', RelayQueryPath.getName(path));","    return pathQuery;","  }","};","","function createRootQueryFromNodePath(nodePath) {","  return require('./RelayQuery').Root.build(nodePath.name, NODE, nodePath.dataID, [idField, typeField], {","    identifyingArgName: ID,","    identifyingArgType: ID_TYPE,","    isAbstract: true,","    isDeferred: false,","    isPlural: false","  }, NODE_TYPE, nodePath.routeName);","}","","function getRootFragmentForQuery(store, root, children) {","  var nextChildren = [];","  // $FlowIssue: Flow isn't recognizing that `filter(x => !!x)` returns a list","  // of non-null values.","  children.forEach(function (child) {","    if (child) {","      nextChildren.push(child);","    }","  });","  if (!root.isAbstract()) {","    // No need to wrap child nodes of a known concrete type.","    return nextChildren;","  }","  var identifyingArgKeys = [];","  require('./forEachRootCallArg')(root, function (_ref) {","    var identifyingArgKey = _ref.identifyingArgKey;","","    identifyingArgKeys.push(identifyingArgKey);","  });","  var identifyingArgKey = identifyingArgKeys[0];","  var rootID = store.getDataID(root.getStorageKey(), identifyingArgKey);","  var rootType = rootID && store.getType(rootID);","","  if (rootType != null) {","    return [require('./RelayQuery').Fragment.build(root.getName(), rootType, nextChildren)];","  } else {","    var rootState = rootID != null ? store.getRecordState(rootID) : require('./RelayRecordState').UNKNOWN;","    require('fbjs/lib/warning')(false, 'RelayQueryPath: No typename found for %s record `%s`. Generating a ' + 'possibly invalid query.', rootState.toLowerCase(), rootID);","    return nextChildren;","  }","}","","module.exports = RelayQueryPath;"],"l":{"15":1,"18":1,"24":1,"28":1,"40":1,"42":0,"43":0,"51":0,"52":0,"53":0,"54":0,"62":0,"68":0,"69":0,"74":0,"75":0,"77":0,"86":0,"89":0,"90":0,"93":0,"94":0,"96":0,"97":0,"98":0,"99":0,"101":0,"105":0,"106":0,"108":0,"109":0,"110":0,"111":0,"113":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"126":0,"127":0,"128":0,"130":0,"132":0,"134":0,"135":0,"136":0,"137":0,"139":0,"140":0,"144":1,"145":0,"154":1,"155":0,"158":0,"159":0,"160":0,"163":0,"165":0,"167":0,"168":0,"169":0,"171":0,"173":0,"174":0,"175":0,"177":0,"178":0,"180":0,"181":0,"182":0,"186":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayQueryRequest.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayQueryRequest.js","s":{"1":1,"2":1,"3":1,"4":1,"5":3,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":1,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":1,"34":1},"b":{"1":[3,0],"2":[3,3],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":3,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":37}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":24},"end":{"line":28,"column":45}}},"3":{"name":"RelayQueryRequest","line":31,"loc":{"start":{"line":31,"column":2},"end":{"line":31,"column":36}}},"4":{"name":"getDebugName","line":48,"loc":{"start":{"line":48,"column":45},"end":{"line":48,"column":69}}},"5":{"name":"getID","line":62,"loc":{"start":{"line":62,"column":38},"end":{"line":62,"column":55}}},"6":{"name":"getVariables","line":74,"loc":{"start":{"line":74,"column":45},"end":{"line":74,"column":69}}},"7":{"name":"getQueryString","line":90,"loc":{"start":{"line":90,"column":47},"end":{"line":90,"column":73}}},"8":{"name":"getQuery","line":105,"loc":{"start":{"line":105,"column":41},"end":{"line":105,"column":61}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":117}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":83}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":97}},"5":{"start":{"line":21,"column":39},"end":{"line":21,"column":95}},"6":{"start":{"line":28,"column":0},"end":{"line":110,"column":32}},"7":{"start":{"line":29,"column":2},"end":{"line":29,"column":59}},"8":{"start":{"line":31,"column":2},"end":{"line":39,"column":3}},"9":{"start":{"line":32,"column":4},"end":{"line":32,"column":62}},"10":{"start":{"line":34,"column":4},"end":{"line":34,"column":88}},"11":{"start":{"line":36,"column":4},"end":{"line":36,"column":31}},"12":{"start":{"line":37,"column":4},"end":{"line":37,"column":25}},"13":{"start":{"line":38,"column":4},"end":{"line":38,"column":17}},"14":{"start":{"line":48,"column":2},"end":{"line":51,"column":4}},"15":{"start":{"line":49,"column":4},"end":{"line":49,"column":37}},"16":{"start":{"line":50,"column":4},"end":{"line":50,"column":66}},"17":{"start":{"line":62,"column":2},"end":{"line":64,"column":4}},"18":{"start":{"line":63,"column":4},"end":{"line":63,"column":31}},"19":{"start":{"line":74,"column":2},"end":{"line":81,"column":4}},"20":{"start":{"line":75,"column":4},"end":{"line":75,"column":42}},"21":{"start":{"line":76,"column":4},"end":{"line":79,"column":5}},"22":{"start":{"line":77,"column":6},"end":{"line":77,"column":63}},"23":{"start":{"line":78,"column":6},"end":{"line":78,"column":40}},"24":{"start":{"line":80,"column":4},"end":{"line":80,"column":34}},"25":{"start":{"line":90,"column":2},"end":{"line":97,"column":4}},"26":{"start":{"line":91,"column":4},"end":{"line":91,"column":42}},"27":{"start":{"line":92,"column":4},"end":{"line":95,"column":5}},"28":{"start":{"line":93,"column":6},"end":{"line":93,"column":63}},"29":{"start":{"line":94,"column":6},"end":{"line":94,"column":40}},"30":{"start":{"line":96,"column":4},"end":{"line":96,"column":29}},"31":{"start":{"line":105,"column":2},"end":{"line":107,"column":4}},"32":{"start":{"line":106,"column":4},"end":{"line":106,"column":23}},"33":{"start":{"line":109,"column":2},"end":{"line":109,"column":27}},"34":{"start":{"line":112,"column":0},"end":{"line":112,"column":35}}},"branchMap":{"1":{"line":21,"type":"cond-expr","locations":[{"start":{"line":21,"column":70},"end":{"line":21,"column":73}},{"start":{"line":21,"column":76},"end":{"line":21,"column":94}}]},"2":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":46},"end":{"line":21,"column":49}},{"start":{"line":21,"column":53},"end":{"line":21,"column":67}}]},"3":{"line":50,"type":"cond-expr","locations":[{"start":{"line":50,"column":38},"end":{"line":50,"column":58}},{"start":{"line":50,"column":61},"end":{"line":50,"column":65}}]},"4":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":4},"end":{"line":76,"column":4}},{"start":{"line":76,"column":4},"end":{"line":76,"column":4}}]},"5":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":4},"end":{"line":92,"column":4}},{"start":{"line":92,"column":4},"end":{"line":92,"column":4}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayQueryRequest"," * "," */","","'use strict';","","var _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));","","var _possibleConstructorReturn3 = _interopRequireDefault(require('babel-runtime/helpers/possibleConstructorReturn'));","","var _inherits3 = _interopRequireDefault(require('babel-runtime/helpers/inherits'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","/**"," * @internal"," *"," * Instances of these are made available via `RelayNetworkLayer.sendQueries`."," */","var RelayQueryRequest = function (_Deferred) {","  (0, _inherits3['default'])(RelayQueryRequest, _Deferred);","","  function RelayQueryRequest(query) {","    (0, _classCallCheck3['default'])(this, RelayQueryRequest);","","    var _this = (0, _possibleConstructorReturn3['default'])(this, _Deferred.call(this));","","    _this._printedQuery = null;","    _this._query = query;","    return _this;","  }","","  /**","   * @public","   *","   * Gets a string name used to refer to this request for printing debug output.","   */","","","  RelayQueryRequest.prototype.getDebugName = function getDebugName() {","    var name = this._query.getName();","    return this._query.isDeferred() ? name + ' (DEFERRED)' : name;","  };","","  /**","   * @public","   *","   * Gets a unique identifier for this query. These identifiers are useful for","   * assigning response payloads to their corresponding queries when sent in a","   * single GraphQL request.","   */","","","  RelayQueryRequest.prototype.getID = function getID() {","    return this._query.getID();","  };","","  /**","   * @public","   *","   * Gets the variables used by the query. These variables should be serialized","   * and sent in the GraphQL request.","   */","","","  RelayQueryRequest.prototype.getVariables = function getVariables() {","    var printedQuery = this._printedQuery;","    if (!printedQuery) {","      printedQuery = require('./printRelayQuery')(this._query);","      this._printedQuery = printedQuery;","    }","    return printedQuery.variables;","  };","","  /**","   * @public","   *","   * Gets a string representation of the GraphQL query.","   */","","","  RelayQueryRequest.prototype.getQueryString = function getQueryString() {","    var printedQuery = this._printedQuery;","    if (!printedQuery) {","      printedQuery = require('./printRelayQuery')(this._query);","      this._printedQuery = printedQuery;","    }","    return printedQuery.text;","  };","","  /**","   * @public","   * @unstable","   */","","","  RelayQueryRequest.prototype.getQuery = function getQuery() {","    return this._query;","  };","","  return RelayQueryRequest;","}(require('fbjs/lib/Deferred'));","","module.exports = RelayQueryRequest;"],"l":{"15":1,"17":1,"19":1,"21":3,"28":1,"29":1,"31":1,"32":0,"34":0,"36":0,"37":0,"38":0,"48":1,"49":0,"50":0,"62":1,"63":0,"74":1,"75":0,"76":0,"77":0,"78":0,"80":0,"90":1,"91":0,"92":0,"93":0,"94":0,"96":0,"105":1,"106":0,"109":1,"112":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayQueryResultObservable.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayQueryResultObservable.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":1,"47":0,"48":1,"49":0,"50":0,"51":0,"52":1,"53":1},"b":{"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":37}}},"2":{"name":"(anonymous_2)","line":39,"loc":{"start":{"line":39,"column":33},"end":{"line":39,"column":45}}},"3":{"name":"RelayQueryResultObservable","line":40,"loc":{"start":{"line":40,"column":2},"end":{"line":40,"column":67}}},"4":{"name":"subscribe","line":52,"loc":{"start":{"line":52,"column":51},"end":{"line":52,"column":81}}},"5":{"name":"dispose","line":58,"loc":{"start":{"line":58,"column":15},"end":{"line":58,"column":34}}},"6":{"name":"_observe","line":77,"loc":{"start":{"line":77,"column":50},"end":{"line":77,"column":70}}},"7":{"name":"(anonymous_7)","line":81,"loc":{"start":{"line":81,"column":105},"end":{"line":81,"column":117}}},"8":{"name":"_unobserve","line":88,"loc":{"start":{"line":88,"column":52},"end":{"line":88,"column":74}}},"9":{"name":"_onUpdate","line":96,"loc":{"start":{"line":96,"column":51},"end":{"line":96,"column":88}}},"10":{"name":"(anonymous_10)","line":100,"loc":{"start":{"line":100,"column":40},"end":{"line":100,"column":61}}},"11":{"name":"_fire","line":105,"loc":{"start":{"line":105,"column":47},"end":{"line":105,"column":73}}},"12":{"name":"_resolveData","line":109,"loc":{"start":{"line":109,"column":54},"end":{"line":109,"column":94}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":97}},"3":{"start":{"line":17,"column":39},"end":{"line":17,"column":95}},"4":{"start":{"line":39,"column":0},"end":{"line":116,"column":4}},"5":{"start":{"line":40,"column":2},"end":{"line":50,"column":3}},"6":{"start":{"line":41,"column":4},"end":{"line":41,"column":71}},"7":{"start":{"line":43,"column":4},"end":{"line":43,"column":27}},"8":{"start":{"line":44,"column":4},"end":{"line":44,"column":26}},"9":{"start":{"line":45,"column":4},"end":{"line":45,"column":30}},"10":{"start":{"line":46,"column":4},"end":{"line":46,"column":34}},"11":{"start":{"line":47,"column":4},"end":{"line":47,"column":32}},"12":{"start":{"line":48,"column":4},"end":{"line":48,"column":37}},"13":{"start":{"line":49,"column":4},"end":{"line":49,"column":32}},"14":{"start":{"line":52,"column":2},"end":{"line":75,"column":4}},"15":{"start":{"line":53,"column":4},"end":{"line":53,"column":21}},"16":{"start":{"line":55,"column":4},"end":{"line":55,"column":30}},"17":{"start":{"line":56,"column":4},"end":{"line":56,"column":63}},"18":{"start":{"line":57,"column":4},"end":{"line":66,"column":6}},"19":{"start":{"line":59,"column":8},"end":{"line":59,"column":159}},"20":{"start":{"line":60,"column":8},"end":{"line":60,"column":63}},"21":{"start":{"line":61,"column":8},"end":{"line":61,"column":35}},"22":{"start":{"line":62,"column":8},"end":{"line":64,"column":9}},"23":{"start":{"line":63,"column":10},"end":{"line":63,"column":29}},"24":{"start":{"line":67,"column":4},"end":{"line":67,"column":48}},"25":{"start":{"line":69,"column":4},"end":{"line":71,"column":5}},"26":{"start":{"line":70,"column":6},"end":{"line":70,"column":41}},"27":{"start":{"line":72,"column":4},"end":{"line":72,"column":26}},"28":{"start":{"line":74,"column":4},"end":{"line":74,"column":24}},"29":{"start":{"line":77,"column":2},"end":{"line":86,"column":4}},"30":{"start":{"line":78,"column":4},"end":{"line":78,"column":22}},"31":{"start":{"line":80,"column":4},"end":{"line":80,"column":109}},"32":{"start":{"line":81,"column":4},"end":{"line":83,"column":7}},"33":{"start":{"line":82,"column":6},"end":{"line":82,"column":48}},"34":{"start":{"line":84,"column":4},"end":{"line":84,"column":46}},"35":{"start":{"line":85,"column":4},"end":{"line":85,"column":28}},"36":{"start":{"line":88,"column":2},"end":{"line":94,"column":4}},"37":{"start":{"line":89,"column":4},"end":{"line":93,"column":5}},"38":{"start":{"line":90,"column":6},"end":{"line":90,"column":29}},"39":{"start":{"line":91,"column":6},"end":{"line":91,"column":39}},"40":{"start":{"line":92,"column":6},"end":{"line":92,"column":36}},"41":{"start":{"line":96,"column":2},"end":{"line":103,"column":4}},"42":{"start":{"line":97,"column":4},"end":{"line":97,"column":22}},"43":{"start":{"line":99,"column":4},"end":{"line":99,"column":40}},"44":{"start":{"line":100,"column":4},"end":{"line":102,"column":7}},"45":{"start":{"line":101,"column":6},"end":{"line":101,"column":37}},"46":{"start":{"line":105,"column":2},"end":{"line":107,"column":4}},"47":{"start":{"line":106,"column":4},"end":{"line":106,"column":53}},"48":{"start":{"line":109,"column":2},"end":{"line":113,"column":4}},"49":{"start":{"line":110,"column":4},"end":{"line":110,"column":70}},"50":{"start":{"line":111,"column":4},"end":{"line":111,"column":123}},"51":{"start":{"line":112,"column":4},"end":{"line":112,"column":22}},"52":{"start":{"line":115,"column":2},"end":{"line":115,"column":36}},"53":{"start":{"line":118,"column":0},"end":{"line":118,"column":44}}},"branchMap":{"1":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":70},"end":{"line":17,"column":73}},{"start":{"line":17,"column":76},"end":{"line":17,"column":94}}]},"2":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":46},"end":{"line":17,"column":49}},{"start":{"line":17,"column":53},"end":{"line":17,"column":67}}]},"3":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":8},"end":{"line":62,"column":8}},{"start":{"line":62,"column":8},"end":{"line":62,"column":8}}]},"4":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":4},"end":{"line":69,"column":4}},{"start":{"line":69,"column":4},"end":{"line":69,"column":4}}]},"5":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":4},"end":{"line":89,"column":4}},{"start":{"line":89,"column":4},"end":{"line":89,"column":4}}]},"6":{"line":106,"type":"binary-expr","locations":[{"start":{"line":106,"column":4},"end":{"line":106,"column":20}},{"start":{"line":106,"column":24},"end":{"line":106,"column":52}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayQueryResultObservable"," * "," */","","'use strict';","","var _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","/**"," * An Rx Observable representing the results of a fragment in the local cache."," * Subscribers are notified as follows:"," *"," * `onNext`: Called with the latest results of a fragment. Results may be `null`"," * if the data was marked as deleted or `undefined` if the fragment was either"," * not fetched or evicted from the cache. Note that required fields may be"," * missing if the fragment was not fetched with `Relay.Store.primeCache` or"," * `Relay.Store.forceFetch` before creating a subscription."," * - Called synchronously on `subscribe()`."," * - Called whenever the results of the fragment change."," *"," * `onError`: Currently not called. In the future this may be used to indicate"," * that required data for the fragment has not been fetched or was evicted"," * from the cache."," *"," * `onCompleted`: Not called."," *"," * @see http://reactivex.io/documentation/observable.html"," */","var RelayQueryResultObservable = function () {","  function RelayQueryResultObservable(storeData, fragment, dataID) {","    (0, _classCallCheck3['default'])(this, RelayQueryResultObservable);","","    this._data = undefined;","    this._dataID = dataID;","    this._fragment = fragment;","    this._fragmentResolver = null;","    this._storeData = storeData;","    this._subscriptionCallbacks = [];","    this._subscriptionCount = 0;","  }","","  RelayQueryResultObservable.prototype.subscribe = function subscribe(callbacks) {","    var _this = this;","","    this._subscriptionCount++;","    var subscriptionIndex = this._subscriptionCallbacks.length;","    var subscription = {","      dispose: function dispose() {","        require('fbjs/lib/invariant')(_this._subscriptionCallbacks[subscriptionIndex], 'RelayQueryResultObservable: Subscriptions may only be disposed once.');","        delete _this._subscriptionCallbacks[subscriptionIndex];","        _this._subscriptionCount--;","        if (_this._subscriptionCount === 0) {","          _this._unobserve();","        }","      }","    };","    this._subscriptionCallbacks.push(callbacks);","","    if (this._subscriptionCount === 1) {","      this._resolveData(this._observe());","    }","    this._fire(callbacks);","","    return subscription;","  };","","  RelayQueryResultObservable.prototype._observe = function _observe() {","    var _this2 = this;","","    require('fbjs/lib/invariant')(!this._fragmentResolver, 'RelayQueryResultObservable: Initialized twice.');","    var fragmentResolver = new (require('./GraphQLStoreQueryResolver'))(this._storeData, this._fragment, function () {","      return _this2._onUpdate(fragmentResolver);","    });","    this._fragmentResolver = fragmentResolver;","    return fragmentResolver;","  };","","  RelayQueryResultObservable.prototype._unobserve = function _unobserve() {","    if (this._fragmentResolver) {","      this._data = undefined;","      this._fragmentResolver.dispose();","      this._fragmentResolver = null;","    }","  };","","  RelayQueryResultObservable.prototype._onUpdate = function _onUpdate(fragmentResolver) {","    var _this3 = this;","","    this._resolveData(fragmentResolver);","    this._subscriptionCallbacks.forEach(function (callbacks) {","      return _this3._fire(callbacks);","    });","  };","","  RelayQueryResultObservable.prototype._fire = function _fire(callbacks) {","    callbacks.onNext && callbacks.onNext(this._data);","  };","","  RelayQueryResultObservable.prototype._resolveData = function _resolveData(fragmentResolver) {","    var data = fragmentResolver.resolve(this._fragment, this._dataID);","    require('fbjs/lib/invariant')(!Array.isArray(data), 'RelayQueryResultObservable: Plural fragments are not supported.');","    this._data = data;","  };","","  return RelayQueryResultObservable;","}();","","module.exports = RelayQueryResultObservable;"],"l":{"15":1,"17":1,"39":1,"40":1,"41":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"52":1,"53":0,"55":0,"56":0,"57":0,"59":0,"60":0,"61":0,"62":0,"63":0,"67":0,"69":0,"70":0,"72":0,"74":0,"77":1,"78":0,"80":0,"81":0,"82":0,"84":0,"85":0,"88":1,"89":0,"90":0,"91":0,"92":0,"96":1,"97":0,"99":0,"100":0,"101":0,"105":1,"106":0,"109":1,"110":0,"111":0,"112":0,"115":1,"118":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayQueryWriter.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayQueryWriter.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":4,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":1,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":0,"47":1,"48":0,"49":1,"50":0,"51":1,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":1,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":1,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":1,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":1,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":1,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":1,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":1,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":1,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":1,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":1,"222":1},"b":{"1":[4,0],"2":[4,4],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0,0,0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0,0,0],"38":[0,0],"39":[0,0],"40":[0,0,0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0,0,0,0],"54":[0,0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0,0],"65":[0,0],"66":[0,0,0,0,0],"67":[0,0]},"f":{"1":4,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":37}}},"2":{"name":"(anonymous_2)","line":43,"loc":{"start":{"line":43,"column":23},"end":{"line":43,"column":53}}},"3":{"name":"RelayQueryWriter","line":46,"loc":{"start":{"line":46,"column":2},"end":{"line":46,"column":81}}},"4":{"name":"getRecordStore","line":61,"loc":{"start":{"line":61,"column":46},"end":{"line":61,"column":72}}},"5":{"name":"getRecordWriter","line":65,"loc":{"start":{"line":65,"column":47},"end":{"line":65,"column":74}}},"6":{"name":"getRecordTypeName","line":69,"loc":{"start":{"line":69,"column":49},"end":{"line":69,"column":101}}},"7":{"name":"writePayload","line":92,"loc":{"start":{"line":92,"column":44},"end":{"line":92,"column":102}}},"8":{"name":"(anonymous_8)","line":104,"loc":{"start":{"line":104,"column":33},"end":{"line":104,"column":50}}},"9":{"name":"recordCreate","line":119,"loc":{"start":{"line":119,"column":44},"end":{"line":119,"column":76}}},"10":{"name":"recordUpdate","line":129,"loc":{"start":{"line":129,"column":44},"end":{"line":129,"column":76}}},"11":{"name":"isNewRecord","line":138,"loc":{"start":{"line":138,"column":43},"end":{"line":138,"column":74}}},"12":{"name":"createRecordIfMissing","line":147,"loc":{"start":{"line":147,"column":53},"end":{"line":147,"column":115}}},"13":{"name":"visitRoot","line":159,"loc":{"start":{"line":159,"column":41},"end":{"line":159,"column":73}}},"14":{"name":"visitFragment","line":180,"loc":{"start":{"line":180,"column":45},"end":{"line":180,"column":85}}},"15":{"name":"visitField","line":204,"loc":{"start":{"line":204,"column":42},"end":{"line":204,"column":76}}},"16":{"name":"_writeScalar","line":252,"loc":{"start":{"line":252,"column":44},"end":{"line":252,"column":101}}},"17":{"name":"(anonymous_17)","line":262,"loc":{"start":{"line":262,"column":121},"end":{"line":262,"column":141}}},"18":{"name":"_writeConnection","line":278,"loc":{"start":{"line":278,"column":48},"end":{"line":278,"column":114}}},"19":{"name":"_traverseConnection","line":326,"loc":{"start":{"line":326,"column":51},"end":{"line":328,"column":9}}},"20":{"name":"(anonymous_20)","line":331,"loc":{"start":{"line":331,"column":31},"end":{"line":331,"column":48}}},"21":{"name":"_writeEdges","line":352,"loc":{"start":{"line":352,"column":43},"end":{"line":352,"column":90}}},"22":{"name":"(anonymous_22)","line":377,"loc":{"start":{"line":377,"column":22},"end":{"line":377,"column":42}}},"23":{"name":"_writePluralLink","line":434,"loc":{"start":{"line":434,"column":48},"end":{"line":434,"column":109}}},"24":{"name":"(anonymous_24)","line":445,"loc":{"start":{"line":445,"column":22},"end":{"line":445,"column":44}}},"25":{"name":"(anonymous_25)","line":470,"loc":{"start":{"line":470,"column":26},"end":{"line":470,"column":50}}},"26":{"name":"_writeLink","line":495,"loc":{"start":{"line":495,"column":42},"end":{"line":495,"column":97}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":81}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":95}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":117}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":83}},"5":{"start":{"line":23,"column":0},"end":{"line":23,"column":97}},"6":{"start":{"line":23,"column":39},"end":{"line":23,"column":95}},"7":{"start":{"line":25,"column":0},"end":{"line":27,"column":56}},"8":{"start":{"line":29,"column":0},"end":{"line":31,"column":64}},"9":{"start":{"line":33,"column":0},"end":{"line":33,"column":54}},"10":{"start":{"line":43,"column":0},"end":{"line":531,"column":34}},"11":{"start":{"line":44,"column":2},"end":{"line":44,"column":67}},"12":{"start":{"line":46,"column":2},"end":{"line":59,"column":3}},"13":{"start":{"line":47,"column":4},"end":{"line":47,"column":61}},"14":{"start":{"line":49,"column":4},"end":{"line":49,"column":97}},"15":{"start":{"line":51,"column":4},"end":{"line":51,"column":41}},"16":{"start":{"line":52,"column":4},"end":{"line":52,"column":79}},"17":{"start":{"line":53,"column":4},"end":{"line":53,"column":74}},"18":{"start":{"line":54,"column":4},"end":{"line":54,"column":25}},"19":{"start":{"line":55,"column":4},"end":{"line":55,"column":39}},"20":{"start":{"line":56,"column":4},"end":{"line":56,"column":78}},"21":{"start":{"line":57,"column":4},"end":{"line":57,"column":27}},"22":{"start":{"line":58,"column":4},"end":{"line":58,"column":17}},"23":{"start":{"line":61,"column":2},"end":{"line":63,"column":4}},"24":{"start":{"line":62,"column":4},"end":{"line":62,"column":23}},"25":{"start":{"line":65,"column":2},"end":{"line":67,"column":4}},"26":{"start":{"line":66,"column":4},"end":{"line":66,"column":24}},"27":{"start":{"line":69,"column":2},"end":{"line":84,"column":4}},"28":{"start":{"line":70,"column":4},"end":{"line":73,"column":5}},"29":{"start":{"line":72,"column":6},"end":{"line":72,"column":43}},"30":{"start":{"line":74,"column":4},"end":{"line":74,"column":37}},"31":{"start":{"line":75,"column":4},"end":{"line":81,"column":5}},"32":{"start":{"line":76,"column":6},"end":{"line":80,"column":7}},"33":{"start":{"line":77,"column":8},"end":{"line":77,"column":34}},"34":{"start":{"line":79,"column":8},"end":{"line":79,"column":49}},"35":{"start":{"line":82,"column":4},"end":{"line":82,"column":142}},"36":{"start":{"line":83,"column":4},"end":{"line":83,"column":28}},"37":{"start":{"line":92,"column":2},"end":{"line":111,"column":4}},"38":{"start":{"line":93,"column":4},"end":{"line":93,"column":22}},"39":{"start":{"line":95,"column":4},"end":{"line":100,"column":6}},"40":{"start":{"line":102,"column":4},"end":{"line":108,"column":5}},"41":{"start":{"line":104,"column":6},"end":{"line":106,"column":9}},"42":{"start":{"line":105,"column":8},"end":{"line":105,"column":35}},"43":{"start":{"line":107,"column":6},"end":{"line":107,"column":13}},"44":{"start":{"line":110,"column":4},"end":{"line":110,"column":28}},"45":{"start":{"line":119,"column":2},"end":{"line":121,"column":4}},"46":{"start":{"line":120,"column":4},"end":{"line":120,"column":43}},"47":{"start":{"line":129,"column":2},"end":{"line":131,"column":4}},"48":{"start":{"line":130,"column":4},"end":{"line":130,"column":43}},"49":{"start":{"line":138,"column":2},"end":{"line":140,"column":4}},"50":{"start":{"line":139,"column":4},"end":{"line":139,"column":53}},"51":{"start":{"line":147,"column":2},"end":{"line":157,"column":4}},"52":{"start":{"line":148,"column":4},"end":{"line":148,"column":59}},"53":{"start":{"line":149,"column":4},"end":{"line":149,"column":78}},"54":{"start":{"line":150,"column":4},"end":{"line":150,"column":53}},"55":{"start":{"line":151,"column":4},"end":{"line":153,"column":5}},"56":{"start":{"line":152,"column":6},"end":{"line":152,"column":34}},"57":{"start":{"line":154,"column":4},"end":{"line":156,"column":5}},"58":{"start":{"line":155,"column":6},"end":{"line":155,"column":56}},"59":{"start":{"line":159,"column":2},"end":{"line":178,"column":4}},"60":{"start":{"line":160,"column":4},"end":{"line":162,"column":42}},"61":{"start":{"line":164,"column":4},"end":{"line":164,"column":59}},"62":{"start":{"line":167,"column":4},"end":{"line":174,"column":5}},"63":{"start":{"line":168,"column":6},"end":{"line":168,"column":191}},"64":{"start":{"line":169,"column":6},"end":{"line":169,"column":42}},"65":{"start":{"line":170,"column":6},"end":{"line":172,"column":7}},"66":{"start":{"line":171,"column":8},"end":{"line":171,"column":36}},"67":{"start":{"line":173,"column":6},"end":{"line":173,"column":13}},"68":{"start":{"line":175,"column":4},"end":{"line":175,"column":200}},"69":{"start":{"line":176,"column":4},"end":{"line":176,"column":67}},"70":{"start":{"line":177,"column":4},"end":{"line":177,"column":31}},"71":{"start":{"line":180,"column":2},"end":{"line":202,"column":4}},"72":{"start":{"line":181,"column":4},"end":{"line":181,"column":34}},"73":{"start":{"line":183,"column":4},"end":{"line":189,"column":5}},"74":{"start":{"line":184,"column":6},"end":{"line":184,"column":82}},"75":{"start":{"line":186,"column":6},"end":{"line":186,"column":62}},"76":{"start":{"line":188,"column":6},"end":{"line":188,"column":34}},"77":{"start":{"line":193,"column":4},"end":{"line":201,"column":5}},"78":{"start":{"line":194,"column":6},"end":{"line":196,"column":7}},"79":{"start":{"line":195,"column":8},"end":{"line":195,"column":79}},"80":{"start":{"line":197,"column":6},"end":{"line":197,"column":86}},"81":{"start":{"line":198,"column":6},"end":{"line":200,"column":10}},"82":{"start":{"line":204,"column":2},"end":{"line":244,"column":4}},"83":{"start":{"line":205,"column":4},"end":{"line":206,"column":42}},"84":{"start":{"line":208,"column":4},"end":{"line":208,"column":160}},"85":{"start":{"line":209,"column":4},"end":{"line":209,"column":191}},"86":{"start":{"line":210,"column":4},"end":{"line":210,"column":55}},"87":{"start":{"line":212,"column":4},"end":{"line":212,"column":51}},"88":{"start":{"line":214,"column":4},"end":{"line":233,"column":5}},"89":{"start":{"line":215,"column":6},"end":{"line":223,"column":7}},"90":{"start":{"line":216,"column":8},"end":{"line":222,"column":9}},"91":{"start":{"line":217,"column":10},"end":{"line":217,"column":212}},"92":{"start":{"line":218,"column":10},"end":{"line":218,"column":17}},"93":{"start":{"line":219,"column":15},"end":{"line":222,"column":9}},"94":{"start":{"line":221,"column":10},"end":{"line":221,"column":17}},"95":{"start":{"line":225,"column":6},"end":{"line":225,"column":45}},"96":{"start":{"line":226,"column":6},"end":{"line":226,"column":65}},"97":{"start":{"line":228,"column":6},"end":{"line":228,"column":53}},"98":{"start":{"line":229,"column":6},"end":{"line":231,"column":7}},"99":{"start":{"line":230,"column":8},"end":{"line":230,"column":36}},"100":{"start":{"line":232,"column":6},"end":{"line":232,"column":13}},"101":{"start":{"line":235,"column":4},"end":{"line":243,"column":5}},"102":{"start":{"line":236,"column":6},"end":{"line":236,"column":59}},"103":{"start":{"line":237,"column":11},"end":{"line":243,"column":5}},"104":{"start":{"line":238,"column":6},"end":{"line":238,"column":63}},"105":{"start":{"line":239,"column":11},"end":{"line":243,"column":5}},"106":{"start":{"line":240,"column":6},"end":{"line":240,"column":63}},"107":{"start":{"line":242,"column":6},"end":{"line":242,"column":57}},"108":{"start":{"line":252,"column":2},"end":{"line":270,"column":4}},"109":{"start":{"line":253,"column":4},"end":{"line":253,"column":43}},"110":{"start":{"line":254,"column":4},"end":{"line":254,"column":63}},"111":{"start":{"line":259,"column":4},"end":{"line":259,"column":59}},"112":{"start":{"line":262,"column":4},"end":{"line":268,"column":5}},"113":{"start":{"line":263,"column":6},"end":{"line":263,"column":36}},"114":{"start":{"line":265,"column":6},"end":{"line":265,"column":13}},"115":{"start":{"line":266,"column":11},"end":{"line":268,"column":5}},"116":{"start":{"line":267,"column":6},"end":{"line":267,"column":13}},"117":{"start":{"line":269,"column":4},"end":{"line":269,"column":32}},"118":{"start":{"line":278,"column":2},"end":{"line":317,"column":4}},"119":{"start":{"line":282,"column":4},"end":{"line":282,"column":43}},"120":{"start":{"line":283,"column":4},"end":{"line":283,"column":110}},"121":{"start":{"line":285,"column":4},"end":{"line":285,"column":73}},"122":{"start":{"line":286,"column":4},"end":{"line":286,"column":146}},"123":{"start":{"line":287,"column":4},"end":{"line":287,"column":84}},"124":{"start":{"line":291,"column":4},"end":{"line":291,"column":53}},"125":{"start":{"line":292,"column":4},"end":{"line":292,"column":71}},"126":{"start":{"line":294,"column":4},"end":{"line":297,"column":5}},"127":{"start":{"line":295,"column":6},"end":{"line":295,"column":34}},"128":{"start":{"line":296,"column":6},"end":{"line":296,"column":38}},"129":{"start":{"line":299,"column":4},"end":{"line":308,"column":5}},"130":{"start":{"line":302,"column":6},"end":{"line":304,"column":7}},"131":{"start":{"line":303,"column":8},"end":{"line":303,"column":90}},"132":{"start":{"line":307,"column":6},"end":{"line":307,"column":38}},"133":{"start":{"line":310,"column":4},"end":{"line":315,"column":6}},"134":{"start":{"line":316,"column":4},"end":{"line":316,"column":60}},"135":{"start":{"line":326,"column":2},"end":{"line":345,"column":4}},"136":{"start":{"line":329,"column":4},"end":{"line":329,"column":22}},"137":{"start":{"line":331,"column":4},"end":{"line":344,"column":7}},"138":{"start":{"line":332,"column":6},"end":{"line":343,"column":7}},"139":{"start":{"line":333,"column":8},"end":{"line":339,"column":9}},"140":{"start":{"line":334,"column":10},"end":{"line":334,"column":55}},"141":{"start":{"line":335,"column":15},"end":{"line":339,"column":9}},"142":{"start":{"line":338,"column":10},"end":{"line":338,"column":37}},"143":{"start":{"line":342,"column":8},"end":{"line":342,"column":61}},"144":{"start":{"line":352,"column":2},"end":{"line":425,"column":4}},"145":{"start":{"line":353,"column":4},"end":{"line":353,"column":22}},"146":{"start":{"line":355,"column":4},"end":{"line":356,"column":44}},"147":{"start":{"line":358,"column":4},"end":{"line":358,"column":268}},"148":{"start":{"line":359,"column":4},"end":{"line":359,"column":42}},"149":{"start":{"line":362,"column":4},"end":{"line":365,"column":5}},"150":{"start":{"line":363,"column":6},"end":{"line":363,"column":202}},"151":{"start":{"line":364,"column":6},"end":{"line":364,"column":13}},"152":{"start":{"line":366,"column":4},"end":{"line":366,"column":215}},"153":{"start":{"line":368,"column":4},"end":{"line":368,"column":53}},"154":{"start":{"line":369,"column":4},"end":{"line":369,"column":233}},"155":{"start":{"line":370,"column":4},"end":{"line":370,"column":75}},"156":{"start":{"line":371,"column":4},"end":{"line":371,"column":180}},"157":{"start":{"line":372,"column":4},"end":{"line":372,"column":28}},"158":{"start":{"line":373,"column":4},"end":{"line":373,"column":48}},"159":{"start":{"line":374,"column":4},"end":{"line":374,"column":25}},"160":{"start":{"line":375,"column":4},"end":{"line":375,"column":22}},"161":{"start":{"line":377,"column":4},"end":{"line":415,"column":7}},"162":{"start":{"line":379,"column":6},"end":{"line":381,"column":7}},"163":{"start":{"line":380,"column":8},"end":{"line":380,"column":15}},"164":{"start":{"line":382,"column":6},"end":{"line":382,"column":225}},"165":{"start":{"line":384,"column":6},"end":{"line":384,"column":36}},"166":{"start":{"line":385,"column":6},"end":{"line":387,"column":7}},"167":{"start":{"line":386,"column":8},"end":{"line":386,"column":15}},"168":{"start":{"line":389,"column":6},"end":{"line":389,"column":194}},"169":{"start":{"line":394,"column":6},"end":{"line":394,"column":48}},"170":{"start":{"line":395,"column":6},"end":{"line":395,"column":149}},"171":{"start":{"line":398,"column":6},"end":{"line":398,"column":75}},"172":{"start":{"line":399,"column":6},"end":{"line":399,"column":80}},"173":{"start":{"line":400,"column":6},"end":{"line":400,"column":62}},"174":{"start":{"line":401,"column":6},"end":{"line":401,"column":34}},"175":{"start":{"line":407,"column":6},"end":{"line":413,"column":9}},"176":{"start":{"line":414,"column":6},"end":{"line":414,"column":69}},"177":{"start":{"line":417,"column":4},"end":{"line":417,"column":107}},"178":{"start":{"line":418,"column":4},"end":{"line":418,"column":83}},"179":{"start":{"line":422,"column":4},"end":{"line":424,"column":5}},"180":{"start":{"line":423,"column":6},"end":{"line":423,"column":38}},"181":{"start":{"line":434,"column":2},"end":{"line":486,"column":4}},"182":{"start":{"line":435,"column":4},"end":{"line":435,"column":22}},"183":{"start":{"line":437,"column":4},"end":{"line":437,"column":43}},"184":{"start":{"line":438,"column":4},"end":{"line":438,"column":164}},"185":{"start":{"line":440,"column":4},"end":{"line":440,"column":77}},"186":{"start":{"line":441,"column":4},"end":{"line":441,"column":27}},"187":{"start":{"line":442,"column":4},"end":{"line":442,"column":25}},"188":{"start":{"line":443,"column":4},"end":{"line":443,"column":25}},"189":{"start":{"line":444,"column":4},"end":{"line":444,"column":22}},"190":{"start":{"line":445,"column":4},"end":{"line":466,"column":7}},"191":{"start":{"line":447,"column":6},"end":{"line":449,"column":7}},"192":{"start":{"line":448,"column":8},"end":{"line":448,"column":15}},"193":{"start":{"line":450,"column":6},"end":{"line":450,"column":175}},"194":{"start":{"line":453,"column":6},"end":{"line":453,"column":67}},"195":{"start":{"line":454,"column":6},"end":{"line":454,"column":91}},"196":{"start":{"line":456,"column":6},"end":{"line":456,"column":39}},"197":{"start":{"line":459,"column":6},"end":{"line":459,"column":86}},"198":{"start":{"line":461,"column":6},"end":{"line":461,"column":74}},"199":{"start":{"line":463,"column":6},"end":{"line":463,"column":69}},"200":{"start":{"line":464,"column":6},"end":{"line":464,"column":59}},"201":{"start":{"line":465,"column":6},"end":{"line":465,"column":18}},"202":{"start":{"line":469,"column":4},"end":{"line":469,"column":73}},"203":{"start":{"line":470,"column":4},"end":{"line":481,"column":7}},"204":{"start":{"line":472,"column":6},"end":{"line":472,"column":47}},"205":{"start":{"line":473,"column":6},"end":{"line":480,"column":7}},"206":{"start":{"line":474,"column":8},"end":{"line":479,"column":11}},"207":{"start":{"line":483,"column":4},"end":{"line":485,"column":5}},"208":{"start":{"line":484,"column":6},"end":{"line":484,"column":34}},"209":{"start":{"line":495,"column":2},"end":{"line":528,"column":4}},"210":{"start":{"line":496,"column":4},"end":{"line":496,"column":30}},"211":{"start":{"line":498,"column":4},"end":{"line":498,"column":43}},"212":{"start":{"line":499,"column":4},"end":{"line":499,"column":217}},"213":{"start":{"line":505,"column":4},"end":{"line":505,"column":75}},"214":{"start":{"line":506,"column":4},"end":{"line":506,"column":132}},"215":{"start":{"line":509,"column":4},"end":{"line":509,"column":84}},"216":{"start":{"line":511,"column":4},"end":{"line":511,"column":69}},"217":{"start":{"line":516,"column":4},"end":{"line":516,"column":71}},"218":{"start":{"line":517,"column":4},"end":{"line":519,"column":5}},"219":{"start":{"line":518,"column":6},"end":{"line":518,"column":34}},"220":{"start":{"line":521,"column":4},"end":{"line":527,"column":7}},"221":{"start":{"line":530,"column":2},"end":{"line":530,"column":26}},"222":{"start":{"line":533,"column":0},"end":{"line":533,"column":34}}},"branchMap":{"1":{"line":23,"type":"cond-expr","locations":[{"start":{"line":23,"column":70},"end":{"line":23,"column":73}},{"start":{"line":23,"column":76},"end":{"line":23,"column":94}}]},"2":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":46},"end":{"line":23,"column":49}},{"start":{"line":23,"column":53},"end":{"line":23,"column":67}}]},"3":{"line":52,"type":"cond-expr","locations":[{"start":{"line":52,"column":56},"end":{"line":52,"column":74}},{"start":{"line":52,"column":77},"end":{"line":52,"column":78}}]},"4":{"line":52,"type":"binary-expr","locations":[{"start":{"line":52,"column":24},"end":{"line":52,"column":31}},{"start":{"line":52,"column":35},"end":{"line":52,"column":53}}]},"5":{"line":53,"type":"binary-expr","locations":[{"start":{"line":53,"column":35},"end":{"line":53,"column":42}},{"start":{"line":53,"column":46},"end":{"line":53,"column":72}}]},"6":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":37},"end":{"line":56,"column":44}},{"start":{"line":56,"column":48},"end":{"line":56,"column":76}}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":4},"end":{"line":70,"column":4}},{"start":{"line":70,"column":4},"end":{"line":70,"column":4}}]},"8":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":4},"end":{"line":75,"column":4}},{"start":{"line":75,"column":4},"end":{"line":75,"column":4}}]},"9":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":6},"end":{"line":76,"column":6}},{"start":{"line":76,"column":6},"end":{"line":76,"column":6}}]},"10":{"line":82,"type":"binary-expr","locations":[{"start":{"line":82,"column":32},"end":{"line":82,"column":40}},{"start":{"line":82,"column":44},"end":{"line":82,"column":65}}]},"11":{"line":83,"type":"binary-expr","locations":[{"start":{"line":83,"column":11},"end":{"line":83,"column":19}},{"start":{"line":83,"column":23},"end":{"line":83,"column":27}}]},"12":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":4},"end":{"line":102,"column":4}},{"start":{"line":102,"column":4},"end":{"line":102,"column":4}}]},"13":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":8},"end":{"line":102,"column":53}},{"start":{"line":102,"column":57},"end":{"line":102,"column":84}}]},"14":{"line":149,"type":"binary-expr","locations":[{"start":{"line":149,"column":19},"end":{"line":149,"column":26}},{"start":{"line":149,"column":30},"end":{"line":149,"column":77}}]},"15":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":4},"end":{"line":151,"column":4}},{"start":{"line":151,"column":4},"end":{"line":151,"column":4}}]},"16":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":4},"end":{"line":154,"column":4}},{"start":{"line":154,"column":4},"end":{"line":154,"column":4}}]},"17":{"line":154,"type":"binary-expr","locations":[{"start":{"line":154,"column":8},"end":{"line":154,"column":26}},{"start":{"line":154,"column":31},"end":{"line":154,"column":57}},{"start":{"line":154,"column":61},"end":{"line":154,"column":87}},{"start":{"line":154,"column":93},"end":{"line":154,"column":139}},{"start":{"line":154,"column":143},"end":{"line":154,"column":187}}]},"18":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":4},"end":{"line":167,"column":4}},{"start":{"line":167,"column":4},"end":{"line":167,"column":4}}]},"19":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":6},"end":{"line":170,"column":6}},{"start":{"line":170,"column":6},"end":{"line":170,"column":6}}]},"20":{"line":175,"type":"binary-expr","locations":[{"start":{"line":175,"column":34},"end":{"line":175,"column":66}},{"start":{"line":175,"column":70},"end":{"line":175,"column":91}}]},"21":{"line":183,"type":"if","locations":[{"start":{"line":183,"column":4},"end":{"line":183,"column":4}},{"start":{"line":183,"column":4},"end":{"line":183,"column":4}}]},"22":{"line":184,"type":"binary-expr","locations":[{"start":{"line":184,"column":17},"end":{"line":184,"column":50}},{"start":{"line":184,"column":54},"end":{"line":184,"column":81}}]},"23":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":4},"end":{"line":193,"column":4}},{"start":{"line":193,"column":4},"end":{"line":193,"column":4}}]},"24":{"line":193,"type":"binary-expr","locations":[{"start":{"line":193,"column":8},"end":{"line":193,"column":32}},{"start":{"line":193,"column":36},"end":{"line":193,"column":119}}]},"25":{"line":194,"type":"if","locations":[{"start":{"line":194,"column":6},"end":{"line":194,"column":6}},{"start":{"line":194,"column":6},"end":{"line":194,"column":6}}]},"26":{"line":194,"type":"binary-expr","locations":[{"start":{"line":194,"column":10},"end":{"line":194,"column":35}},{"start":{"line":194,"column":39},"end":{"line":194,"column":67}}]},"27":{"line":209,"type":"binary-expr","locations":[{"start":{"line":209,"column":34},"end":{"line":209,"column":66}},{"start":{"line":209,"column":70},"end":{"line":209,"column":91}}]},"28":{"line":214,"type":"if","locations":[{"start":{"line":214,"column":4},"end":{"line":214,"column":4}},{"start":{"line":214,"column":4},"end":{"line":214,"column":4}}]},"29":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":6},"end":{"line":215,"column":6}},{"start":{"line":215,"column":6},"end":{"line":215,"column":6}}]},"30":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":8},"end":{"line":216,"column":8}},{"start":{"line":216,"column":8},"end":{"line":216,"column":8}}]},"31":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":15},"end":{"line":219,"column":15}},{"start":{"line":219,"column":15},"end":{"line":219,"column":15}}]},"32":{"line":229,"type":"if","locations":[{"start":{"line":229,"column":6},"end":{"line":229,"column":6}},{"start":{"line":229,"column":6},"end":{"line":229,"column":6}}]},"33":{"line":235,"type":"if","locations":[{"start":{"line":235,"column":4},"end":{"line":235,"column":4}},{"start":{"line":235,"column":4},"end":{"line":235,"column":4}}]},"34":{"line":237,"type":"if","locations":[{"start":{"line":237,"column":11},"end":{"line":237,"column":11}},{"start":{"line":237,"column":11},"end":{"line":237,"column":11}}]},"35":{"line":239,"type":"if","locations":[{"start":{"line":239,"column":11},"end":{"line":239,"column":11}},{"start":{"line":239,"column":11},"end":{"line":239,"column":11}}]},"36":{"line":262,"type":"if","locations":[{"start":{"line":262,"column":4},"end":{"line":262,"column":4}},{"start":{"line":262,"column":4},"end":{"line":262,"column":4}}]},"37":{"line":262,"type":"binary-expr","locations":[{"start":{"line":262,"column":8},"end":{"line":262,"column":32}},{"start":{"line":262,"column":36},"end":{"line":262,"column":60}},{"start":{"line":262,"column":64},"end":{"line":262,"column":101}},{"start":{"line":262,"column":105},"end":{"line":264,"column":6}}]},"38":{"line":266,"type":"if","locations":[{"start":{"line":266,"column":11},"end":{"line":266,"column":11}},{"start":{"line":266,"column":11},"end":{"line":266,"column":11}}]},"39":{"line":283,"type":"binary-expr","locations":[{"start":{"line":283,"column":23},"end":{"line":283,"column":74}},{"start":{"line":283,"column":78},"end":{"line":283,"column":109}}]},"40":{"line":286,"type":"binary-expr","locations":[{"start":{"line":286,"column":22},"end":{"line":286,"column":55}},{"start":{"line":286,"column":59},"end":{"line":286,"column":81}},{"start":{"line":286,"column":85},"end":{"line":286,"column":119}},{"start":{"line":286,"column":123},"end":{"line":286,"column":144}}]},"41":{"line":294,"type":"if","locations":[{"start":{"line":294,"column":4},"end":{"line":294,"column":4}},{"start":{"line":294,"column":4},"end":{"line":294,"column":4}}]},"42":{"line":299,"type":"if","locations":[{"start":{"line":299,"column":4},"end":{"line":299,"column":4}},{"start":{"line":299,"column":4},"end":{"line":299,"column":4}}]},"43":{"line":302,"type":"if","locations":[{"start":{"line":302,"column":6},"end":{"line":302,"column":6}},{"start":{"line":302,"column":6},"end":{"line":302,"column":6}}]},"44":{"line":302,"type":"binary-expr","locations":[{"start":{"line":302,"column":10},"end":{"line":302,"column":46}},{"start":{"line":302,"column":50},"end":{"line":302,"column":66}},{"start":{"line":302,"column":70},"end":{"line":302,"column":133}}]},"45":{"line":332,"type":"if","locations":[{"start":{"line":332,"column":6},"end":{"line":332,"column":6}},{"start":{"line":332,"column":6},"end":{"line":332,"column":6}}]},"46":{"line":333,"type":"if","locations":[{"start":{"line":333,"column":8},"end":{"line":333,"column":8}},{"start":{"line":333,"column":8},"end":{"line":333,"column":8}}]},"47":{"line":335,"type":"if","locations":[{"start":{"line":335,"column":15},"end":{"line":335,"column":15}},{"start":{"line":335,"column":15},"end":{"line":335,"column":15}}]},"48":{"line":358,"type":"binary-expr","locations":[{"start":{"line":358,"column":34},"end":{"line":358,"column":68}},{"start":{"line":358,"column":72},"end":{"line":358,"column":95}}]},"49":{"line":362,"type":"if","locations":[{"start":{"line":362,"column":4},"end":{"line":362,"column":4}},{"start":{"line":362,"column":4},"end":{"line":362,"column":4}}]},"50":{"line":379,"type":"if","locations":[{"start":{"line":379,"column":6},"end":{"line":379,"column":6}},{"start":{"line":379,"column":6},"end":{"line":379,"column":6}}]},"51":{"line":382,"type":"binary-expr","locations":[{"start":{"line":382,"column":36},"end":{"line":382,"column":64}},{"start":{"line":382,"column":68},"end":{"line":382,"column":76}}]},"52":{"line":385,"type":"if","locations":[{"start":{"line":385,"column":6},"end":{"line":385,"column":6}},{"start":{"line":385,"column":6},"end":{"line":385,"column":6}}]},"53":{"line":395,"type":"binary-expr","locations":[{"start":{"line":395,"column":19},"end":{"line":395,"column":27}},{"start":{"line":395,"column":31},"end":{"line":395,"column":43}},{"start":{"line":395,"column":47},"end":{"line":395,"column":55}},{"start":{"line":395,"column":59},"end":{"line":395,"column":113}},{"start":{"line":395,"column":117},"end":{"line":395,"column":148}}]},"54":{"line":414,"type":"binary-expr","locations":[{"start":{"line":414,"column":17},"end":{"line":414,"column":25}},{"start":{"line":414,"column":29},"end":{"line":414,"column":38}},{"start":{"line":414,"column":42},"end":{"line":414,"column":68}}]},"55":{"line":417,"type":"binary-expr","locations":[{"start":{"line":417,"column":19},"end":{"line":417,"column":44}},{"start":{"line":417,"column":48},"end":{"line":417,"column":106}}]},"56":{"line":422,"type":"if","locations":[{"start":{"line":422,"column":4},"end":{"line":422,"column":4}},{"start":{"line":422,"column":4},"end":{"line":422,"column":4}}]},"57":{"line":447,"type":"if","locations":[{"start":{"line":447,"column":6},"end":{"line":447,"column":6}},{"start":{"line":447,"column":6},"end":{"line":447,"column":6}}]},"58":{"line":450,"type":"binary-expr","locations":[{"start":{"line":450,"column":36},"end":{"line":450,"column":66}},{"start":{"line":450,"column":70},"end":{"line":450,"column":80}}]},"59":{"line":453,"type":"binary-expr","locations":[{"start":{"line":453,"column":25},"end":{"line":453,"column":38}},{"start":{"line":453,"column":42},"end":{"line":453,"column":66}}]},"60":{"line":454,"type":"binary-expr","locations":[{"start":{"line":454,"column":25},"end":{"line":454,"column":39}},{"start":{"line":454,"column":43},"end":{"line":454,"column":55}},{"start":{"line":454,"column":59},"end":{"line":454,"column":90}}]},"61":{"line":464,"type":"binary-expr","locations":[{"start":{"line":464,"column":17},"end":{"line":464,"column":25}},{"start":{"line":464,"column":29},"end":{"line":464,"column":58}}]},"62":{"line":473,"type":"if","locations":[{"start":{"line":473,"column":6},"end":{"line":473,"column":6}},{"start":{"line":473,"column":6},"end":{"line":473,"column":6}}]},"63":{"line":483,"type":"if","locations":[{"start":{"line":483,"column":4},"end":{"line":483,"column":4}},{"start":{"line":483,"column":4},"end":{"line":483,"column":4}}]},"64":{"line":483,"type":"binary-expr","locations":[{"start":{"line":483,"column":8},"end":{"line":483,"column":16}},{"start":{"line":483,"column":20},"end":{"line":483,"column":34}},{"start":{"line":483,"column":38},"end":{"line":483,"column":83}}]},"65":{"line":499,"type":"binary-expr","locations":[{"start":{"line":499,"column":34},"end":{"line":499,"column":63}},{"start":{"line":499,"column":67},"end":{"line":499,"column":85}}]},"66":{"line":506,"type":"binary-expr","locations":[{"start":{"line":506,"column":23},"end":{"line":506,"column":53}},{"start":{"line":506,"column":57},"end":{"line":506,"column":63}},{"start":{"line":506,"column":67},"end":{"line":506,"column":80}},{"start":{"line":506,"column":84},"end":{"line":506,"column":96}},{"start":{"line":506,"column":100},"end":{"line":506,"column":131}}]},"67":{"line":517,"type":"if","locations":[{"start":{"line":517,"column":4},"end":{"line":517,"column":4}},{"start":{"line":517,"column":4},"end":{"line":517,"column":4}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayQueryWriter"," * "," */","","'use strict';","","var _extends3 = _interopRequireDefault(require('babel-runtime/helpers/extends'));","","var _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));","","var _possibleConstructorReturn3 = _interopRequireDefault(require('babel-runtime/helpers/possibleConstructorReturn'));","","var _inherits3 = _interopRequireDefault(require('babel-runtime/helpers/inherits'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","var ANY_TYPE = require('./RelayNodeInterface').ANY_TYPE,","    ID = require('./RelayNodeInterface').ID,","    TYPENAME = require('./RelayNodeInterface').TYPENAME;","","var EDGES = require('./RelayConnectionInterface').EDGES,","    NODE = require('./RelayConnectionInterface').NODE,","    PAGE_INFO = require('./RelayConnectionInterface').PAGE_INFO;","","var EXISTENT = require('./RelayRecordState').EXISTENT;","","/**"," * @internal"," *"," * Helper for writing the result of one or more queries/operations into the"," * store, updating tracked queries, and recording changed record IDs."," */","","","var RelayQueryWriter = function (_RelayQueryVisitor) {","  (0, _inherits3['default'])(RelayQueryWriter, _RelayQueryVisitor);","","  function RelayQueryWriter(store, writer, queryTracker, changeTracker, options) {","    (0, _classCallCheck3['default'])(this, RelayQueryWriter);","","    var _this = (0, _possibleConstructorReturn3['default'])(this, _RelayQueryVisitor.call(this));","","    _this._changeTracker = changeTracker;","    _this._forceIndex = options && options.forceIndex ? options.forceIndex : 0;","    _this._isOptimisticUpdate = !!(options && options.isOptimisticUpdate);","    _this._store = store;","    _this._queryTracker = queryTracker;","    _this._updateTrackedQueries = !!(options && options.updateTrackedQueries);","    _this._writer = writer;","    return _this;","  }","","  RelayQueryWriter.prototype.getRecordStore = function getRecordStore() {","    return this._store;","  };","","  RelayQueryWriter.prototype.getRecordWriter = function getRecordWriter() {","    return this._writer;","  };","","  RelayQueryWriter.prototype.getRecordTypeName = function getRecordTypeName(node, recordID, payload) {","    if (this._isOptimisticUpdate) {","      // Optimistic queries are inferred. Reuse existing type if available.","      return this._store.getType(recordID);","    }","    var typeName = payload[TYPENAME];","    if (typeName == null) {","      if (!node.isAbstract()) {","        typeName = node.getType();","      } else {","        typeName = this._store.getType(recordID);","      }","    }","    require('fbjs/lib/warning')(typeName && typeName !== ANY_TYPE, 'RelayQueryWriter: Could not find a type name for record `%s`.', recordID);","    return typeName || null;","  };","","  /**","   * Traverses a query and payload in parallel, writing the results into the","   * store.","   */","","","  RelayQueryWriter.prototype.writePayload = function writePayload(node, recordID, responseData, path) {","    var _this2 = this;","","    var state = {","      nodeID: null,","      path: path,","      recordID: recordID,","      responseData: responseData","    };","","    if (node instanceof require('./RelayQuery').Field && node.canHaveSubselections()) {","      // for non-scalar fields, the recordID is the parent","      node.getChildren().forEach(function (child) {","        _this2.visit(child, state);","      });","      return;","    }","","    this.visit(node, state);","  };","","  /**","   * Records are \"created\" whenever an entry did not previously exist for the","   * `recordID`, including cases when a `recordID` is created with a null value.","   */","","","  RelayQueryWriter.prototype.recordCreate = function recordCreate(recordID) {","    this._changeTracker.createID(recordID);","  };","","  /**","   * Records are \"updated\" if any field changes (including being set to null).","   * Updates are not recorded for newly created records.","   */","","","  RelayQueryWriter.prototype.recordUpdate = function recordUpdate(recordID) {","    this._changeTracker.updateID(recordID);","  };","","  /**","   * Determine if the record was created by this write operation.","   */","","","  RelayQueryWriter.prototype.isNewRecord = function isNewRecord(recordID) {","    return this._changeTracker.isNewRecord(recordID);","  };","","  /**","   * Helper to create a record and the corresponding notification.","   */","","","  RelayQueryWriter.prototype.createRecordIfMissing = function createRecordIfMissing(node, recordID, path, payload) {","    var recordState = this._store.getRecordState(recordID);","    var typeName = payload && this.getRecordTypeName(node, recordID, payload);","    this._writer.putRecord(recordID, typeName, path);","    if (recordState !== EXISTENT) {","      this.recordCreate(recordID);","    }","    if (this._queryTracker && (this.isNewRecord(recordID) || this._updateTrackedQueries) && (!require('./RelayRecord').isClientID(recordID) || require('./RelayQueryPath').isRootPath(path))) {","      this._queryTracker.trackNodeForID(node, recordID);","    }","  };","","  RelayQueryWriter.prototype.visitRoot = function visitRoot(root, state) {","    var path = state.path,","        recordID = state.recordID,","        responseData = state.responseData;","","    var recordState = this._store.getRecordState(recordID);","","    // GraphQL should never return undefined for a field","    if (responseData == null) {","      require('fbjs/lib/invariant')(responseData !== undefined, 'RelayQueryWriter: Unexpectedly encountered `undefined` in payload. ' + 'Cannot set root record `%s` to undefined.', recordID);","      this._writer.deleteRecord(recordID);","      if (recordState === EXISTENT) {","        this.recordUpdate(recordID);","      }","      return;","    }","    require('fbjs/lib/invariant')(typeof responseData === 'object' && responseData !== null, 'RelayQueryWriter: Cannot update record `%s`, expected response to be ' + 'an array or object.', recordID);","    this.createRecordIfMissing(root, recordID, path, responseData);","    this.traverse(root, state);","  };","","  RelayQueryWriter.prototype.visitFragment = function visitFragment(fragment, state) {","    var recordID = state.recordID;","","    if (fragment.isDeferred()) {","      var hash = fragment.getSourceCompositeHash() || fragment.getCompositeHash();","","      this._writer.setHasDeferredFragmentData(recordID, hash);","","      this.recordUpdate(recordID);","    }","    // Skip fragments that do not match the record's concrete type. Fragments","    // cannot be skipped for optimistic writes because optimistically created","    // records *may* have a default `Node` type.","    if (this._isOptimisticUpdate || require('./isCompatibleRelayFragmentType')(fragment, this._store.getType(recordID))) {","      if (!this._isOptimisticUpdate && fragment.isTrackingEnabled()) {","        this._writer.setHasFragmentData(recordID, fragment.getCompositeHash());","      }","      var _path = require('./RelayQueryPath').getPath(state.path, fragment, recordID);","      this.traverse(fragment, (0, _extends3['default'])({}, state, {","        path: _path","      }));","    }","  };","","  RelayQueryWriter.prototype.visitField = function visitField(field, state) {","    var recordID = state.recordID,","        responseData = state.responseData;","","    require('fbjs/lib/invariant')(this._writer.getRecordState(recordID) === EXISTENT, 'RelayQueryWriter: Cannot update a non-existent record, `%s`.', recordID);","    require('fbjs/lib/invariant')(typeof responseData === 'object' && responseData !== null, 'RelayQueryWriter: Cannot update record `%s`, expected response to be ' + 'an object.', recordID);","    var serializationKey = field.getSerializationKey();","","    var fieldData = responseData[serializationKey];","    // Queried fields that are `undefined` are stored as nulls.","    if (fieldData == null) {","      if (fieldData === undefined) {","        if (responseData.hasOwnProperty(serializationKey)) {","          require('fbjs/lib/warning')(false, 'RelayQueryWriter: Encountered an explicit `undefined` field `%s` ' + 'on record `%s`, expected response to not contain `undefined`.', field.getDebugName(), recordID);","          return;","        } else if (this._isOptimisticUpdate) {","","          return;","        }","      }","","      var storageKey = field.getStorageKey();","      var prevValue = this._store.getField(recordID, storageKey);","      // Always write to ensure data is stored in the correct recordStore.","      this._writer.deleteField(recordID, storageKey);","      if (prevValue !== null) {","        this.recordUpdate(recordID);","      }","      return;","    }","","    if (!field.canHaveSubselections()) {","      this._writeScalar(field, state, recordID, fieldData);","    } else if (field.isConnection()) {","      this._writeConnection(field, state, recordID, fieldData);","    } else if (field.isPlural()) {","      this._writePluralLink(field, state, recordID, fieldData);","    } else {","      this._writeLink(field, state, recordID, fieldData);","    }","  };","","  /**","   * Writes the value for a 'scalar' field such as `id` or `name`. The response","   * data is expected to be scalar values or arrays of scalar values.","   */","","","  RelayQueryWriter.prototype._writeScalar = function _writeScalar(field, state, recordID, nextValue) {","    var storageKey = field.getStorageKey();","    var prevValue = this._store.getField(recordID, storageKey);","","    // always update the store to ensure the value is present in the appropriate","    // data sink (records/queuedRecords), but only record an update if the value","    // changed.","    this._writer.putField(recordID, storageKey, nextValue);","","    // TODO: Flow: `nextValue` is an array, array indexing should work","    if (Array.isArray(prevValue) && Array.isArray(nextValue) && prevValue.length === nextValue.length && prevValue.every(function (prev, ii) {","      return prev === nextValue[ii];","    })) {","      return;","    } else if (prevValue === nextValue) {","      return;","    }","    this.recordUpdate(recordID);","  };","","  /**","   * Writes data for connection fields such as `news_feed` or `friends`. The","   * response data is expected to be array of edge objects.","   */","","","  RelayQueryWriter.prototype._writeConnection = function _writeConnection(field, state, recordID, connectionData) {","    // Each unique combination of filter calls is stored in its own","    // generated record (ex: `field.orderby(x)` results are separate from","    // `field.orderby(y)` results).","    var storageKey = field.getStorageKey();","    var connectionID = this._store.getLinkedRecordID(recordID, storageKey) || require('./generateClientID')();","","    var connectionRecordState = this._store.getRecordState(connectionID);","    var hasEdges = !!(field.getFieldByStorageKey(EDGES) || connectionData != null && typeof connectionData === 'object' && connectionData[EDGES]);","    var path = require('./RelayQueryPath').getPath(state.path, field, connectionID);","    // always update the store to ensure the value is present in the appropriate","    // data sink (records/queuedRecords), but only record an update if the value","    // changed.","    this._writer.putRecord(connectionID, null, path);","    this._writer.putLinkedRecordID(recordID, storageKey, connectionID);","    // record the create/update only if something changed","    if (connectionRecordState !== EXISTENT) {","      this.recordUpdate(recordID);","      this.recordCreate(connectionID);","    }","","    if (hasEdges) {","      // Only create a range if `edges` field is present","      // Overwrite an existing range only if the new force index is greater","      if (!this._writer.hasRange(connectionID) || this._forceIndex && this._forceIndex > this._store.getRangeForceIndex(connectionID)) {","        this._writer.putRange(connectionID, field.getCallsWithValues(), this._forceIndex);","      }","      // Update the connection record regardless of whether a range was written","      // to also handle cases like an empty edge range or updated page_info.","      this.recordUpdate(connectionID);","    }","","    var connectionState = {","      nodeID: null,","      path: path,","      recordID: connectionID,","      responseData: connectionData","    };","    this._traverseConnection(field, field, connectionState);","  };","","  /**","   * Recurse through connection subfields and write their results. This is","   * necessary because handling an `edges` field also requires information about","   * the parent connection field (see `_writeEdges`).","   */","","","  RelayQueryWriter.prototype._traverseConnection = function _traverseConnection(connection, // the parent connection","  node, // the parent connection or an intermediary fragment","  state) {","    var _this3 = this;","","    node.getChildren().forEach(function (child) {","      if (child instanceof require('./RelayQuery').Field) {","        if (child.getSchemaName() === EDGES) {","          _this3._writeEdges(connection, child, state);","        } else if (child.getSchemaName() !== PAGE_INFO) {","          // Page info is handled by the range","          // Otherwise, write metadata fields normally (ex: `count`)","          _this3.visit(child, state);","        }","      } else {","        // Fragment case, recurse keeping track of parent connection","        _this3._traverseConnection(connection, child, state);","      }","    });","  };","","  /**","   * Update a connection with newly fetched edges.","   */","","","  RelayQueryWriter.prototype._writeEdges = function _writeEdges(connection, edges, state) {","    var _this4 = this;","","    var connectionID = state.recordID,","        connectionData = state.responseData;","","    require('fbjs/lib/invariant')(typeof connectionData === 'object' && connectionData !== null, 'RelayQueryWriter: Cannot write edges for malformed connection `%s` on ' + 'record `%s`, expected the response to be an object.', connection.getDebugName(), connectionID);","    var edgesData = connectionData[EDGES];","","    // Validate response data.","    if (edgesData == null) {","      require('fbjs/lib/warning')(false, 'RelayQueryWriter: Cannot write edges for connection `%s` on record ' + '`%s`, expected a response for field `edges`.', connection.getDebugName(), connectionID);","      return;","    }","    require('fbjs/lib/invariant')(Array.isArray(edgesData), 'RelayQueryWriter: Cannot write edges for connection `%s` on record ' + '`%s`, expected `edges` to be an array.', connection.getDebugName(), connectionID);","","    var rangeCalls = connection.getCallsWithValues();","    require('fbjs/lib/invariant')(require('./RelayConnectionInterface').hasRangeCalls(rangeCalls), 'RelayQueryWriter: Cannot write edges for connection on record ' + '`%s` without `first`, `last`, or `find` argument.', connectionID);","    var rangeInfo = this._store.getRangeMetadata(connectionID, rangeCalls);","    require('fbjs/lib/invariant')(rangeInfo, 'RelayQueryWriter: Expected a range to exist for connection field `%s` ' + 'on record `%s`.', connection.getDebugName(), connectionID);","    var fetchedEdgeIDs = [];","    var filteredEdges = rangeInfo.filteredEdges;","    var isUpdate = false;","    var nextIndex = 0;","    // Traverse connection edges, reusing existing edges if they exist","    edgesData.forEach(function (edgeData) {","      // validate response data","      if (edgeData == null) {","        return;","      }","      require('fbjs/lib/invariant')(typeof edgeData === 'object' && edgeData, 'RelayQueryWriter: Cannot write edge for connection field `%s` on ' + 'record `%s`, expected an object.', connection.getDebugName(), connectionID);","","      var nodeData = edgeData[NODE];","      if (nodeData == null) {","        return;","      }","","      require('fbjs/lib/invariant')(typeof nodeData === 'object', 'RelayQueryWriter: Expected node to be an object for field `%s` on ' + 'record `%s`.', connection.getDebugName(), connectionID);","","      // For consistency, edge IDs are calculated from the connection & node ID.","      // A node ID is only generated if the node does not have an id and","      // there is no existing edge.","      var prevEdge = filteredEdges[nextIndex++];","      var nodeID = nodeData && nodeData[ID] || prevEdge && _this4._store.getLinkedRecordID(prevEdge.edgeID, NODE) || require('./generateClientID')();","      // TODO: Flow: `nodeID` is `string`","      // $FlowFixMe(>=0.33.0)","      var edgeID = require('./generateClientEdgeID')(connectionID, nodeID);","      var path = require('./RelayQueryPath').getPath(state.path, edges, edgeID);","      _this4.createRecordIfMissing(edges, edgeID, path, null);","      fetchedEdgeIDs.push(edgeID);","","      // Write data for the edge, using `nodeID` as the id for direct descendant","      // `node` fields. This is necessary for `node`s that do not have an `id`,","      // which would cause the generated ID here to not match the ID generated","      // in `_writeLink`.","      _this4.traverse(edges, {","        // $FlowFixMe(>=0.33.0)","        nodeID: nodeID,","        path: path,","        recordID: edgeID,","        responseData: edgeData","      });","      isUpdate = isUpdate || !prevEdge || edgeID !== prevEdge.edgeID;","    });","","    var pageInfo = connectionData[PAGE_INFO] || require('./RelayConnectionInterface').getDefaultPageInfo();","    this._writer.putRangeEdges(connectionID, rangeCalls, pageInfo, fetchedEdgeIDs);","","    // Only broadcast an update to the range if an edge was added/changed.","    // Node-level changes will broadcast at the node ID.","    if (isUpdate) {","      this.recordUpdate(connectionID);","    }","  };","","  /**","   * Writes a plural linked field such as `actors`. The response data is","   * expected to be an array of item objects. These fields are similar to","   * connections, but do not support range calls such as `first` or `after`.","   */","","","  RelayQueryWriter.prototype._writePluralLink = function _writePluralLink(field, state, recordID, fieldData) {","    var _this5 = this;","","    var storageKey = field.getStorageKey();","    require('fbjs/lib/invariant')(Array.isArray(fieldData), 'RelayQueryWriter: Expected array data for field `%s` on record `%s`.', field.getDebugName(), recordID);","","    var prevLinkedIDs = this._store.getLinkedRecordIDs(recordID, storageKey);","    var nextLinkedIDs = [];","    var nextRecords = {};","    var isUpdate = false;","    var nextIndex = 0;","    fieldData.forEach(function (nextRecord) {","      // validate response data","      if (nextRecord == null) {","        return;","      }","      require('fbjs/lib/invariant')(typeof nextRecord === 'object' && nextRecord, 'RelayQueryWriter: Expected elements for plural field `%s` to be ' + 'objects.', storageKey);","","      // Reuse existing generated IDs if the node does not have its own `id`.","      var prevLinkedID = prevLinkedIDs && prevLinkedIDs[nextIndex];","      var nextLinkedID = nextRecord[ID] || prevLinkedID || require('./generateClientID')();","      // $FlowFixMe(>=0.33.0)","      nextLinkedIDs.push(nextLinkedID);","","      // $FlowFixMe(>=0.33.0)","      var path = require('./RelayQueryPath').getPath(state.path, field, nextLinkedID);","      // $FlowFixMe(>=0.33.0)","      _this5.createRecordIfMissing(field, nextLinkedID, path, nextRecord);","      // $FlowFixMe(>=0.33.0)","      nextRecords[nextLinkedID] = { record: nextRecord, path: path };","      isUpdate = isUpdate || nextLinkedID !== prevLinkedID;","      nextIndex++;","    });","    // Write the linked records before traverse to prevent generating extraneous","    // client ids.","    this._writer.putLinkedRecordIDs(recordID, storageKey, nextLinkedIDs);","    nextLinkedIDs.forEach(function (nextLinkedID) {","      // $FlowFixMe(>=0.33.0)","      var itemData = nextRecords[nextLinkedID];","      if (itemData) {","        _this5.traverse(field, {","          nodeID: null, // never propagate `nodeID` past the first linked field","          path: itemData.path,","          recordID: nextLinkedID,","          responseData: itemData.record","        });","      }","    });","    // Only broadcast a list-level change if a record was changed/added/removed","    if (isUpdate || !prevLinkedIDs || prevLinkedIDs.length !== nextLinkedIDs.length) {","      this.recordUpdate(recordID);","    }","  };","","  /**","   * Writes a link from one record to another, for example linking the `viewer`","   * record to the `actor` record in the query `viewer { actor }`. The `field`","   * variable is the field being linked (`actor` in the example).","   */","","","  RelayQueryWriter.prototype._writeLink = function _writeLink(field, state, recordID, fieldData) {","    var nodeID = state.nodeID;","","    var storageKey = field.getStorageKey();","    require('fbjs/lib/invariant')(typeof fieldData === 'object' && fieldData !== null, 'RelayQueryWriter: Expected data for non-scalar field `%s` on record ' + '`%s` to be an object.', field.getDebugName(), recordID);","","    // Prefer the actual `id` if present, otherwise generate one (if an id","    // was already generated it is reused). `node`s within a connection are","    // a special case as the ID used here must match the one generated prior to","    // storing the parent `edge`.","    var prevLinkedID = this._store.getLinkedRecordID(recordID, storageKey);","    var nextLinkedID = field.getSchemaName() === NODE && nodeID || fieldData[ID] || prevLinkedID || require('./generateClientID')();","","    // $FlowFixMe(>=0.33.0)","    var path = require('./RelayQueryPath').getPath(state.path, field, nextLinkedID);","    // $FlowFixMe(>=0.33.0)","    this.createRecordIfMissing(field, nextLinkedID, path, fieldData);","    // always update the store to ensure the value is present in the appropriate","    // data sink (record/queuedRecords), but only record an update if the value","    // changed.","    // $FlowFixMe(>=0.33.0)","    this._writer.putLinkedRecordID(recordID, storageKey, nextLinkedID);","    if (prevLinkedID !== nextLinkedID) {","      this.recordUpdate(recordID);","    }","","    this.traverse(field, {","      nodeID: null,","      path: path,","      // $FlowFixMe(>=0.33.0)","      recordID: nextLinkedID,","      responseData: fieldData","    });","  };","","  return RelayQueryWriter;","}(require('./RelayQueryVisitor'));","","module.exports = RelayQueryWriter;"],"l":{"15":1,"17":1,"19":1,"21":1,"23":4,"25":1,"29":1,"33":1,"43":1,"44":1,"46":1,"47":0,"49":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"61":1,"62":0,"65":1,"66":0,"69":1,"70":0,"72":0,"74":0,"75":0,"76":0,"77":0,"79":0,"82":0,"83":0,"92":1,"93":0,"95":0,"102":0,"104":0,"105":0,"107":0,"110":0,"119":1,"120":0,"129":1,"130":0,"138":1,"139":0,"147":1,"148":0,"149":0,"150":0,"151":0,"152":0,"154":0,"155":0,"159":1,"160":0,"164":0,"167":0,"168":0,"169":0,"170":0,"171":0,"173":0,"175":0,"176":0,"177":0,"180":1,"181":0,"183":0,"184":0,"186":0,"188":0,"193":0,"194":0,"195":0,"197":0,"198":0,"204":1,"205":0,"208":0,"209":0,"210":0,"212":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"221":0,"225":0,"226":0,"228":0,"229":0,"230":0,"232":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"242":0,"252":1,"253":0,"254":0,"259":0,"262":0,"263":0,"265":0,"266":0,"267":0,"269":0,"278":1,"282":0,"283":0,"285":0,"286":0,"287":0,"291":0,"292":0,"294":0,"295":0,"296":0,"299":0,"302":0,"303":0,"307":0,"310":0,"316":0,"326":1,"329":0,"331":0,"332":0,"333":0,"334":0,"335":0,"338":0,"342":0,"352":1,"353":0,"355":0,"358":0,"359":0,"362":0,"363":0,"364":0,"366":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"377":0,"379":0,"380":0,"382":0,"384":0,"385":0,"386":0,"389":0,"394":0,"395":0,"398":0,"399":0,"400":0,"401":0,"407":0,"414":0,"417":0,"418":0,"422":0,"423":0,"434":1,"435":0,"437":0,"438":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"447":0,"448":0,"450":0,"453":0,"454":0,"456":0,"459":0,"461":0,"463":0,"464":0,"465":0,"469":0,"470":0,"472":0,"473":0,"474":0,"483":0,"484":0,"495":1,"496":0,"498":0,"499":0,"505":0,"506":0,"509":0,"511":0,"516":0,"517":0,"518":0,"521":0,"530":1,"533":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayRecordState.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayRecordState.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":33,"column":2}},"2":{"start":{"line":35,"column":0},"end":{"line":35,"column":34}}},"branchMap":{},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayRecordState"," * "," */","","'use strict';","","var RelayRecordState = {","  /**","   * Record exists (either fetched from the server or produced by a local,","   * optimistic update).","   */","  EXISTENT: 'EXISTENT',","","  /**","   * Record is known not to exist (either as the result of a mutation, or","   * because the server returned `null` when queried for the record).","   */","  NONEXISTENT: 'NONEXISTENT',","","  /**","   * Record State is unknown because it has not yet been fetched from the","   * server.","   */","  UNKNOWN: 'UNKNOWN'","};","","module.exports = RelayRecordState;"],"l":{"15":1,"35":1}},"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayReadyState.js":{"path":"/home/travis/build/npmtest/node-npmtest-react-relay/node_modules/react-relay/lib/RelayReadyState.js","s":{"1":1,"2":1,"3":1,"4":1,"5":3,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":1},"b":{"1":[3,0],"2":[3,3],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":3,"2":1,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":37}}},"2":{"name":"(anonymous_2)","line":26,"loc":{"start":{"line":26,"column":22},"end":{"line":26,"column":34}}},"3":{"name":"RelayReadyState","line":27,"loc":{"start":{"line":27,"column":2},"end":{"line":27,"column":47}}},"4":{"name":"update","line":42,"loc":{"start":{"line":42,"column":37},"end":{"line":42,"column":80}}},"5":{"name":"_mergeState","line":61,"loc":{"start":{"line":61,"column":42},"end":{"line":61,"column":90}}},"6":{"name":"(anonymous_6)","line":71,"loc":{"start":{"line":71,"column":41},"end":{"line":71,"column":53}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":81}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":95}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":90}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":97}},"5":{"start":{"line":21,"column":39},"end":{"line":21,"column":95}},"6":{"start":{"line":26,"column":0},"end":{"line":78,"column":4}},"7":{"start":{"line":27,"column":2},"end":{"line":40,"column":3}},"8":{"start":{"line":28,"column":4},"end":{"line":28,"column":60}},"9":{"start":{"line":30,"column":4},"end":{"line":30,"column":50}},"10":{"start":{"line":31,"column":4},"end":{"line":38,"column":6}},"11":{"start":{"line":39,"column":4},"end":{"line":39,"column":28}},"12":{"start":{"line":42,"column":2},"end":{"line":59,"column":4}},"13":{"start":{"line":43,"column":4},"end":{"line":43,"column":42}},"14":{"start":{"line":44,"column":4},"end":{"line":46,"column":5}},"15":{"start":{"line":45,"column":6},"end":{"line":45,"column":13}},"16":{"start":{"line":47,"column":4},"end":{"line":57,"column":5}},"17":{"start":{"line":48,"column":6},"end":{"line":55,"column":7}},"18":{"start":{"line":49,"column":8},"end":{"line":51,"column":9}},"19":{"start":{"line":50,"column":10},"end":{"line":50,"column":54}},"20":{"start":{"line":53,"column":13},"end":{"line":55,"column":7}},"21":{"start":{"line":54,"column":8},"end":{"line":54,"column":193}},"22":{"start":{"line":56,"column":6},"end":{"line":56,"column":13}},"23":{"start":{"line":58,"column":4},"end":{"line":58,"column":48}},"24":{"start":{"line":61,"column":2},"end":{"line":75,"column":4}},"25":{"start":{"line":62,"column":4},"end":{"line":62,"column":21}},"26":{"start":{"line":64,"column":4},"end":{"line":66,"column":7}},"27":{"start":{"line":67,"column":4},"end":{"line":69,"column":5}},"28":{"start":{"line":68,"column":6},"end":{"line":68,"column":13}},"29":{"start":{"line":70,"column":4},"end":{"line":70,"column":27}},"30":{"start":{"line":71,"column":4},"end":{"line":74,"column":7}},"31":{"start":{"line":72,"column":6},"end":{"line":72,"column":31}},"32":{"start":{"line":73,"column":6},"end":{"line":73,"column":51}},"33":{"start":{"line":77,"column":2},"end":{"line":77,"column":25}},"34":{"start":{"line":80,"column":0},"end":{"line":80,"column":33}}},"branchMap":{"1":{"line":21,"type":"cond-expr","locations":[{"start":{"line":21,"column":70},"end":{"line":21,"column":73}},{"start":{"line":21,"column":76},"end":{"line":21,"column":94}}]},"2":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":46},"end":{"line":21,"column":49}},{"start":{"line":21,"column":53},"end":{"line":21,"column":67}}]},"3":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":4},"end":{"line":44,"column":4}},{"start":{"line":44,"column":4},"end":{"line":44,"column":4}}]},"4":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":4},"end":{"line":47,"column":4}},{"start":{"line":47,"column":4},"end":{"line":47,"column":4}}]},"5":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":8},"end":{"line":47,"column":27}},{"start":{"line":47,"column":31},"end":{"line":47,"column":51}}]},"6":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":6},"end":{"line":48,"column":6}},{"start":{"line":48,"column":6},"end":{"line":48,"column":6}}]},"7":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":8},"end":{"line":49,"column":8}},{"start":{"line":49,"column":8},"end":{"line":49,"column":8}}]},"8":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":13},"end":{"line":53,"column":13}},{"start":{"line":53,"column":13},"end":{"line":53,"column":13}}]},"9":{"line":65,"type":"cond-expr","locations":[{"start":{"line":65,"column":46},"end":{"line":65,"column":91}},{"start":{"line":65,"column":94},"end":{"line":65,"column":117}}]},"10":{"line":65,"type":"binary-expr","locations":[{"start":{"line":65,"column":14},"end":{"line":65,"column":23}},{"start":{"line":65,"column":27},"end":{"line":65,"column":43}}]},"11":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":4},"end":{"line":67,"column":4}},{"start":{"line":67,"column":4},"end":{"line":67,"column":4}}]}},"code":["/**"," * Copyright (c) 2013-present, Facebook, Inc."," * All rights reserved."," *"," * This source code is licensed under the BSD-style license found in the"," * LICENSE file in the root directory of this source tree. An additional grant"," * of patent rights can be found in the PATENTS file in the same directory."," *"," * @providesModule RelayReadyState"," * "," */","","'use strict';","","var _extends3 = _interopRequireDefault(require('babel-runtime/helpers/extends'));","","var _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));","","var _stringify2 = _interopRequireDefault(require('babel-runtime/core-js/json/stringify'));","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }","","/**"," * @internal"," */","var RelayReadyState = function () {","  function RelayReadyState(onReadyStateChange) {","    (0, _classCallCheck3['default'])(this, RelayReadyState);","","    this._onReadyStateChange = onReadyStateChange;","    this._readyState = {","      aborted: false,","      done: false,","      error: null,","      events: [],","      ready: false,","      stale: false","    };","    this._scheduled = false;","  }","","  RelayReadyState.prototype.update = function update(nextReadyState, newEvents) {","    var prevReadyState = this._readyState;","    if (prevReadyState.aborted) {","      return;","    }","    if (prevReadyState.done || prevReadyState.error) {","      if (nextReadyState.stale) {","        if (prevReadyState.error) {","          this._mergeState(nextReadyState, newEvents);","        }","        // Do nothing if stale data comes after server data.","      } else if (!nextReadyState.aborted) {","        require('fbjs/lib/warning')(false, 'RelayReadyState: Invalid state change from `%s` to `%s`.', (0, _stringify2['default'])(prevReadyState), (0, _stringify2['default'])(nextReadyState));","      }","      return;","    }","    this._mergeState(nextReadyState, newEvents);","  };","","  RelayReadyState.prototype._mergeState = function _mergeState(nextReadyState, newEvents) {","    var _this = this;","","    this._readyState = (0, _extends3['default'])({}, this._readyState, nextReadyState, {","      events: newEvents && newEvents.length ? [].concat(this._readyState.events, newEvents) : this._readyState.events","    });","    if (this._scheduled) {","      return;","    }","    this._scheduled = true;","    require('fbjs/lib/resolveImmediate')(function () {","      _this._scheduled = false;","      _this._onReadyStateChange(_this._readyState);","    });","  };","","  return RelayReadyState;","}();","","module.exports = RelayReadyState;"],"l":{"15":1,"17":1,"19":1,"21":3,"26":1,"27":1,"28":0,"30":0,"31":0,"39":0,"42":1,"43":0,"44":0,"45":0,"47":0,"48":0,"49":0,"50":0,"53":0,"54":0,"56":0,"58":0,"61":1,"62":0,"64":0,"67":0,"68":0,"70":0,"71":0,"72":0,"73":0,"77":1,"80":1}}}